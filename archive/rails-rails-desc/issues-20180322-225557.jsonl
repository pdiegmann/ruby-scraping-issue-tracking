{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nGiven the following MiniTest which implements a Sinatra app using ActiveRecord:\r\n\r\n```ruby\r\nrequire 'minitest'\r\nrequire 'minitest/autorun'\r\nrequire 'active_record'\r\nrequire 'sinatra/base'\r\nrequire 'rack/test'\r\n\r\nclass CachedQueryTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n\r\n  class ApplicationRecord < ActiveRecord::Base\r\n    self.abstract_class = true\r\n  end\r\n\r\n  class Article < ApplicationRecord\r\n  end\r\n\r\n  class ActiveRecordTestApp < Sinatra::Application\r\n    post '/cached_request' do\r\n      Article.cache do\r\n        # Do two queries (second should cache.)\r\n        Article.count\r\n        Article.count\r\n      end\r\n    end\r\n  end\r\n\r\n  def app\r\n    ActiveRecordTestApp\r\n  end\r\n\r\n  def setup\r\n    ActiveRecord::Base.establish_connection( adapter: 'sqlite3',\r\n                                             database: ':memory:')\r\n    migrate_db\r\n  end\r\n\r\n  def migrate_db\r\n    Article.exists?\r\n  rescue ActiveRecord::StatementInvalid\r\n    ActiveRecord::Schema.define(version: 20180101000000) do\r\n      create_table 'articles', force: :cascade do |t|\r\n        t.string   'title'\r\n        t.datetime 'created_at', null: false\r\n        t.datetime 'updated_at', null: false\r\n      end\r\n    end\r\n  end\r\n\r\n  def test_cached_query\r\n    # Make sure Article table exists\r\n    migrate_db\r\n\r\n    ActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\n    # Do query with cached query\r\n    post '/cached_request'\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nI expect the output to look like:\r\n\r\n```\r\n-- create_table(\"articles\", {:force=>:cascade})\r\n   -> 0.0023s\r\nD, [2018-02-16T12:38:07.046295 #18646] DEBUG -- :    (0.2ms)  SELECT COUNT(*) FROM \"articles\"\r\nD, [2018-02-16T12:38:07.046709 #18646] DEBUG -- :   CACHE  (0.0ms)  SELECT COUNT(*) FROM \"articles\"\r\n.\r\n```\r\n\r\n### Actual behavior\r\n\r\nInstead it looks like:\r\n\r\n```\r\n-- create_table(\"articles\", {:force=>:cascade})\r\n   -> 0.0024s\r\nD, [2018-02-16T12:41:06.446559 #19878] DEBUG -- :    (0.2ms)  SELECT COUNT(*) FROM \"articles\"\r\nD, [2018-02-16T12:41:06.447383 #19878] DEBUG -- :    (0.2ms)  SELECT COUNT(*) FROM \"articles\"\r\n.\r\n```\r\n\r\n### System configuration\r\n**Rails version**: ActiveRecord `5.1.5` only.\r\n\r\n**Ruby version**: 2.3.4\r\n\r\nThe expected behavior is produced on version `5.1.4` correctly. Is this a regression in version `5.1.5`? Related to https://github.com/rails/rails/pull/29609 perhaps?", "labels": ["activerecord"], "number": 32021, "updated_at": "2018-02-18 22:16:54", "user": 3237131, "closed_at": "2018-02-18 22:16:54", "id": 297867298, "title": "ActiveRecord 5.1.5 query cache not working", "url": "https://api.github.com/repos/rails/rails/issues/32021", "created_at": "2018-02-16 17:46:47", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366399419", "text": "Your point is correct. \r\nBecause of the PR pointed out, if do not have `ActiveRecord::Base.configurations`, cache is no longer used.   \r\n\r\n@rafaelfranca Is this intentional?\r\n", "created_at": "2018-02-17 00:46:03", "user": 987638, "id": 366399419}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366408098", "text": "Kind of. But I think if it is already connected we should also use the query cache. Mind to open a PR to check if it is connected or have configuration?", "created_at": "2018-02-17 02:14:49", "user": 47848, "id": 366408098}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"+1": [2192462]}, "text": "The type of the `_before_type_cast` value of a PosgreSQL array-valued attribute on an ActiveRecord model is `ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Array::Data` after a save. This is a behaviour change since AR 4. We noticed it because we have a validation for array-valued fields that asserts that `attribute_before_type_cast.instance_of? [].class`. The validation fails after this change.\r\n\r\n### Steps to reproduce\r\n\r\nOld AR4 behaviour:\r\n\r\n```\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  ruby \"2.3.3\"\r\n  gem \"activerecord\", \"4.2.7.1\"\r\n  gem \"pg\", \"0.21.0\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"postgresql\", username: \"rails\", password: \"password\", database: \"scratch\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :waveforms do |t|\r\n    t.integer :samples, array: true, null: false\r\n  end\r\nend\r\n\r\nclass Waveform < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_array_type_before_type_cast\r\n    w = Waveform.new\r\n    w.samples = [1, 2, 3]\r\n    w.save\r\n    assert(w.samples_before_type_cast.is_a?([].class))\r\n  end\r\nend\r\n```\r\n\r\nNew AR5 behaviour (this one breaks):\r\n\r\n```\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  ruby \"2.3.3\"\r\n  gem \"activerecord\", \"5.0.6\"\r\n  gem \"pg\", \"0.21.0\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"postgresql\", username: \"rails\", password: \"password\", database: \"scratch\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :waveforms do |t|\r\n    t.integer :samples, array: true, null: false\r\n  end\r\nend\r\n\r\nclass Waveform < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_array_type_before_type_cast\r\n    w = Waveform.new\r\n    w.samples = [1, 2, 3]\r\n    w.save\r\n    assert(w.samples_before_type_cast.is_a?([].class))\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nI expected `w.samples_before_type_cast.is_a?([].class)` to be true in AR5\r\n\r\n### Actual behavior\r\nIt is false\r\n\r\n### System configuration\r\n**Rails version**: 5.0.6\r\n\r\n**Ruby version**: MRI Ruby 2.3.3\r\n", "labels": [], "number": 32020, "updated_at": "2018-02-16 15:48:55", "user": 4484927, "closed_at": "None", "id": 297829156, "title": "PostgreSQL Array type exposed in _before_type_cast", "url": "https://api.github.com/repos/rails/rails/issues/32020", "created_at": "2018-02-16 15:48:55", "comments": [], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n(Guidelines for creating a bug report are [available\r\nhere](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report))\r\n\r\n### Expected behavior\r\nTell us what should happen\r\n\r\n### Actual behavior\r\nTell us what happens instead\r\n\r\n### System configuration\r\n**Rails version**:\r\n\r\n**Ruby version**:\r\n\r\n", "labels": [], "number": 32019, "updated_at": "2018-02-16 15:27:42", "user": 7414307, "closed_at": "2018-02-16 15:27:42", "id": 297821423, "title": "pixeltrix great solution ", "url": "https://api.github.com/repos/rails/rails/issues/32019", "created_at": "2018-02-16 15:26:25", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366266526", "text": "irb>> RbConfig::CONFIG['host_os']=> \"linux-gnu\" rails new --skip-spring --skip-listen", "created_at": "2018-02-16 15:27:39", "user": 7414307, "id": 366266526}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"hooray": [4083992, 1034, 6443532], "+1": [522375]}, "text": "Because the UJS library creates a script tag to process responses it normally requires the script-src attribute of the content security policy to include 'unsafe-inline'.\r\n\r\nTo work around this we generate a per-request nonce value that is embedded in a meta tag in a similar fashion to how CSRF protection embeds its token in a meta tag. The UJS library can then read the nonce value and set it on the dynamically generated script tag to enable it to execute without needing 'unsafe-inline' enabled.\r\n\r\nNonce generation isn't 100% safe - if your script tag is including user generated content in someway then it may be possible to exploit an XSS vulnerability which can take advantage of the nonce. It is however an improvement on a blanket permission for inline scripts.\r\n\r\nIt is also possible to use the nonce within your own script tags by using `nonce: true` to set the nonce value on the tag, e.g\r\n\r\n``` erb\r\n<%= javascript_tag nonce: true do %>\r\n  alert('Hello, World!');\r\n<% end %>\r\n```\r\n\r\nFixes #31689.\r\n", "labels": [], "number": 32018, "updated_at": "2018-02-27 18:09:58", "user": 6321, "closed_at": "2018-02-22 15:32:23", "id": 297784083, "title": "Add support for automatic nonce generation for Rails UJS", "url": "https://api.github.com/repos/rails/rails/issues/32018", "created_at": "2018-02-16 13:25:34", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366234472", "text": "An example of how nonce can be abused is in this blog post:\r\nhttps://www.troyhunt.com/locking-down-your-website-scripts-with-csp-hashes-nonces-and-report-uri/#usingnonces", "created_at": "2018-02-16 13:26:26", "user": 6321, "id": 366234472}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/367720087", "text": "Backported to 5-2-stable in b2f0a89", "created_at": "2018-02-22 15:38:06", "user": 6321, "id": 367720087}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368694276", "text": "Do we also need to update the Rails-UJS lib to automatically use this when the server is returning JS that's meant to be eval'ed, ala SJR?", "created_at": "2018-02-26 23:55:02", "user": 2741, "id": 368694276}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368758499", "text": "@dhh this PR does that - see the bit where the nonce on the script tag gets set: \r\n\r\n``` coffeescript\r\nscript.nonce = cspNonce()\r\n```\r\n\r\nIt also changes the UJS tests to run with a CSP policy that disables unsafe-inline", "created_at": "2018-02-27 06:08:42", "user": 6321, "id": 368758499}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368972137", "text": "My mistake. I missed that bit 👍", "created_at": "2018-02-27 18:09:58", "user": 2741, "id": 368972137}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\nRelated to:\r\nhttps://github.com/rails/rails/pull/32004\r\n\r\nMake pull request to master branch", "labels": [], "number": 32017, "updated_at": "2018-02-18 12:30:53", "user": 1659018, "closed_at": "None", "id": 297747332, "title": "Add code and reason parameters to websocket close method", "url": "https://api.github.com/repos/rails/rails/issues/32017", "created_at": "2018-02-16 10:57:23", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366204979", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-16 10:57:35", "user": 7468109, "id": 366204979}], "assignees": [12642, 12642], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "Before:\r\n\r\nTotal allocated: 209050523 bytes (2219202 objects)\r\nTotal retained:  36580305 bytes (323462 objects)\r\n\r\nAfter:\r\n\r\nTotal allocated: 209180253 bytes (2222455 objects)\r\nTotal retained:  36515599 bytes (321850 objects)\r\n\r\n---\r\n\r\nModest saving of 1612 RVALUEs in the heap on Discourse boot\r\n", "labels": [], "number": 32016, "updated_at": "2018-02-23 20:30:06", "user": 5213, "closed_at": "2018-02-16 16:18:58", "id": 297665892, "title": "PERF: reduce retained objects in Journey", "url": "https://api.github.com/repos/rails/rails/issues/32016", "created_at": "2018-02-16 02:34:04", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366128802", "text": "r? @eileencodes\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-16 02:34:07", "user": 7468109, "id": 366128802}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "[ci skip]\r\n\r\n### Summary\r\n\r\nDocuments ActiveStorage file cleanup in Integration Tests which is\r\nsimilar but slightly different than the existing docs for System Tests.\r\n", "labels": [], "number": 32015, "updated_at": "2018-02-16 16:18:12", "user": 1386650, "closed_at": "2018-02-16 16:17:52", "id": 297604347, "title": "ActiveStorage file cleanup in Integration Tests", "url": "https://api.github.com/repos/rails/rails/issues/32015", "created_at": "2018-02-15 21:34:49", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366069101", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @sgrif (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-15 21:34:51", "user": 7468109, "id": 366069101}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366281939", "text": "Thanks @JPrevost! Congrats on your first contribution and welcome to Rails 😄 ", "created_at": "2018-02-16 16:18:12", "user": 1080678, "id": 366281939}], "assignees": [1529387, 1529387], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "It is able to handle invalid values for custom types like for example\r\ninvalid dates:\r\n\r\n    <table>\r\n      <field type=\"date\">a invalid date</field>\r\n    </table>\r\n\r\nI understand that this is not a valid XML but it is a real case anyway that\r\ncould be parsed with `Hash.from_xml`\r\n\r\n", "labels": [], "number": 32014, "updated_at": "2018-02-15 21:08:28", "user": 16633, "closed_at": "2018-02-15 20:45:57", "id": 297588193, "title": "Hash.from_xml handle argument errors", "url": "https://api.github.com/repos/rails/rails/issues/32014", "created_at": "2018-02-15 20:37:15", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366053904", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @eileencodes (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-15 20:37:18", "user": 7468109, "id": 366053904}, {"reactions": {"+1": [16633]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366056133", "text": "This is a change in the behavior and may break a lot of applications. I feel like you are better of writing a less restrict parser for your application.", "created_at": "2018-02-15 20:45:57", "user": 47848, "id": 366056133}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nWhen I have this routing code:\r\n\r\n```ruby\r\nRails.application.routes.draw do\r\n  scope '/(:locale)', constraints: { locale: %w[en de es fr dk] } do\r\n    root to: 'home#index'\r\n  end\r\nend\r\n```\r\n\r\nAnd I make the request: `GET /de` then I get an error: \r\n```\r\nRouting Error\r\nNo route matches [GET] \"/de\"\r\n```\r\n\r\nHowever if I change the constraint to be a regex like this:\r\n```ruby\r\nRails.application.routes.draw do\r\n  scope '/(:locale)', constraints: { locale: /(en|de|es|fr|dk)/ } do\r\n    root to: 'home#index'\r\n  end\r\nend\r\n```\r\n\r\nThen my `GET /de` request works fine and routes to `home#index`\r\n\r\nI believe this feature was originally added here: https://github.com/rails/rails/commit/90d2802b71a6e89aedfe40564a37bd35f777e541\r\n\r\n### System configuration\r\n**Rails version**: 5.2.0.rc1\r\n\r\n**Ruby version**: 2.4.3\r\n", "labels": ["actionpack", "attached PR"], "number": 32013, "updated_at": "2018-02-17 03:03:40", "user": 92044, "closed_at": "2018-02-17 03:03:40", "id": 297567746, "title": "Array routing constraints do not work", "url": "https://api.github.com/repos/rails/rails/issues/32013", "created_at": "2018-02-15 19:28:04", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366258239", "text": "@jcoyne I wasn't able to reproduce the expected behavior that you describe.\r\n\r\nIn which version of Rails was `locale: %w[en de es fr dk]` working?\r\n\r\nThe commit you pointed to (90d2802) might not be the one that changed the behavior, since the comment says:\r\n\r\n> Note that this only applies to constraints on the request - path constraints still need to be specified as Regexps as the various constraints are compiled into a single Regexp.", "created_at": "2018-02-16 14:58:42", "user": 10076, "id": 366258239}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366271483", "text": "I've never seen this working before, I just saw this while reading the code that @pixeltrix added and was going to test it out and add some documentation about it.  Maybe @pixeltrix could explain how it's supposed to work?  If it's not supported, maybe something should be added to warn about the expected format for the constraints parameter.", "created_at": "2018-02-16 15:44:14", "user": 92044, "id": 366271483}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366296497", "text": "Reproduced this issue and looks like have found the problem, so preparing a PR.", "created_at": "2018-02-16 17:06:32", "user": 5657035, "id": 366296497}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Skip versions 0.4.8 and 0.4.9, which had [Compilation failures against MariaDB Connector/C 3.0.2](https://github.com/brianmario/mysql2/releases/tag/0.4.10) and gave some of us this:\r\n```\r\nactiverecord]$ mysql --version mysql  Ver 15.1 Distrib 10.2.12-MariaDB, for Linux (x86_64) using readline 5.1\r\n\r\nactiverecord]$ bundle show mysql2\r\n/.rbenv/versions/2.4.0/lib/ruby/gems/2.4.0/gems/mysql2-0.4.9\r\n\r\nactiverecord]$ bundle exec rake test:mysql2\r\n~/.rbenv/versions/2.4.0/bin/ruby -w -I\"lib:test\" -I\"/home/oz/.rbenv/versions/2.4.0/lib/ruby/gems/2.4.0/gems/rake-12.2.1/lib\" \"/home/oz/.rbenv/versions/2.4.0/lib/ruby/gems/2.4.0/gems/rake-12.2.1/lib/rake/rake_test_loader.rb\" \"test/cases/fixtures_test.rb\" \"test/cases/column_alias_test.rb\" \"test/cases/quoting_test.rb\" \"test/cases/defaults_test.rb\" \"test/cases/unsafe_raw_sql_test.rb\" \"test/cases/schema_loading_test.rb\" \"test/cases/inheritance_test.rb\" \"test/cases/integration_test.rb\" \"test/cases/transactions_test.rb\" \"test/cases/attribute_methods/read_test.rb\" \"test/cases/finder_test.rb\" \"test/cases/mixin_test.rb\" \"test/cases/date_test.rb\" \"test/cases/forbidden_attributes_protection_test.rb\" \"test/cases/multiparameter_attributes_test.rb\" \"test/cases/yaml_serialization_test.rb\" \"test/cases/date_time_precision_test.rb\" \"test/cases/persistence_test.rb\" \"test/cases/migration/foreign_key_test.rb\" \"test/cases/migration/column_attributes_test.rb\" \"test/cases/migration/create_join_table_test.rb\" \"test/cases/migration/references_index_test.rb\" \"test/cases/migration/references_foreign_key_test.rb\" \"test/cases/migration/index_test.rb\" \"test/cases/migration/pending_migrations_test.rb\" \"test/cases/migration/references_statements_test.rb\" \"test/cases/migration/columns_test.rb\" \"test/cases/migration/logger_test.rb\" \"test/cases/migration/rename_table_test.rb\" \"test/cases/migration/compatibility_test.rb\" \"test/cases/migration/column_positioning_test.rb\" \"test/cases/migration/change_table_test.rb\" \"test/cases/migration/command_recorder_test.rb\" \"test/cases/migration/change_schema_test.rb\" \"test/cases/dirty_test.rb\" \"test/cases/query_cache_test.rb\" \"test/cases/ar_schema_test.rb\" \"test/cases/connection_pool_test.rb\" \"test/cases/relation/where_chain_test.rb\" \"test/cases/relation/record_fetch_warning_test.rb\" \"test/cases/relation/predicate_builder_test.rb\" \"test/cases/relation/or_test.rb\" \"test/cases/relation/where_clause_test.rb\" \"test/cases/relation/merging_test.rb\" \"test/cases/relation/mutation_test.rb\" \"test/cases/relation/select_test.rb\" \"test/cases/relation/delegation_test.rb\" \"test/cases/relation/where_test.rb\" \"test/cases/relations_test.rb\" \"test/cases/transaction_isolation_test.rb\" \"test/cases/scoping/named_scoping_test.rb\" \"test/cases/scoping/relation_scoping_test.rb\" \"test/cases/scoping/default_scoping_test.rb\" \"test/cases/connection_management_test.rb\" \"test/cases/reserved_word_test.rb\" \"test/cases/timestamp_test.rb\" \"test/cases/validations/absence_validation_test.rb\" \"test/cases/validations/association_validation_test.rb\" \"test/cases/validations/i18n_validation_test.rb\" \"test/cases/validations/uniqueness_validation_test.rb\" \"test/cases/validations/i18n_generate_message_validation_test.rb\" \"test/cases/validations/presence_validation_test.rb\" \"test/cases/validations/length_validation_test.rb\" \"test/cases/locking_test.rb\" \"test/cases/types_test.rb\" \"test/cases/migrator_test.rb\" \"test/cases/collection_cache_key_test.rb\" \"test/cases/hot_compatibility_test.rb\" \"test/cases/numeric_data_test.rb\" \"test/cases/instrumentation_test.rb\" \"test/cases/nested_attributes_test.rb\" \"test/cases/tasks/mysql_rake_test.rb\" \"test/cases/tasks/sqlite_rake_test.rb\" \"test/cases/tasks/postgresql_rake_test.rb\" \"test/cases/tasks/database_tasks_test.rb\" \"test/cases/type_test.rb\" \"test/cases/relation_test.rb\" \"test/cases/autosave_association_test.rb\" \"test/cases/pooled_connections_test.rb\" \"test/cases/migration_test.rb\" \"test/cases/binary_test.rb\" \"test/cases/counter_cache_test.rb\" \"test/cases/explain_test.rb\" \"test/cases/adapter_test.rb\" \"test/cases/core_test.rb\" \"test/cases/coders/yaml_column_test.rb\" \"test/cases/coders/json_test.rb\" \"test/cases/dup_test.rb\" \"test/cases/null_relation_test.rb\" \"test/cases/i18n_test.rb\" \"test/cases/enum_test.rb\" \"test/cases/transaction_callbacks_test.rb\" \"test/cases/touch_later_test.rb\" \"test/cases/multiple_db_test.rb\" \"test/cases/invertible_migration_test.rb\" \"test/cases/invalid_connection_test.rb\" \"test/cases/explain_subscriber_test.rb\" \"test/cases/schema_dumper_test.rb\" \"test/cases/json_serialization_test.rb\" \"test/cases/associations/inverse_associations_test.rb\" \"test/cases/associations/eager_load_nested_include_test.rb\" \"test/cases/associations/has_many_through_associations_test.rb\" \"test/cases/associations/belongs_to_associations_test.rb\" \"test/cases/associations/cascaded_eager_loading_test.rb\" \"test/cases/associations/has_many_associations_test.rb\" \"test/cases/associations/bidirectional_destroy_dependencies_test.rb\" \"test/cases/associations/required_test.rb\" \"test/cases/associations/eager_load_includes_full_sti_class_test.rb\" \"test/cases/associations/has_one_through_associations_test.rb\" \"test/cases/associations/eager_test.rb\" \"test/cases/associations/join_model_test.rb\" \"test/cases/associations/nested_through_associations_test.rb\" \"test/cases/associations/has_one_associations_test.rb\" \"test/cases/associations/left_outer_join_association_test.rb\" \"test/cases/associations/eager_singularization_test.rb\" \"test/cases/associations/inner_join_association_test.rb\" \"test/cases/associations/has_and_belongs_to_many_associations_test.rb\" \"test/cases/associations/callbacks_test.rb\" \"test/cases/associations/extension_test.rb\" \"test/cases/attribute_methods_test.rb\" \"test/cases/finder_respond_to_test.rb\" \"test/cases/store_test.rb\" \"test/cases/result_test.rb\" \"test/cases/primary_keys_test.rb\" \"test/cases/serialization_test.rb\" \"test/cases/test_fixtures_test.rb\" \"test/cases/connection_specification/resolver_test.rb\" \"test/cases/calculations_test.rb\" \"test/cases/validations_test.rb\" \"test/cases/column_definition_test.rb\" \"test/cases/connection_adapters/adapter_leasing_test.rb\" \"test/cases/connection_adapters/merge_and_resolve_default_url_config_test.rb\" \"test/cases/connection_adapters/schema_cache_test.rb\" \"test/cases/connection_adapters/mysql_type_lookup_test.rb\" \"test/cases/connection_adapters/connection_handler_test.rb\" \"test/cases/connection_adapters/connection_specification_test.rb\" \"test/cases/connection_adapters/type_lookup_test.rb\" \"test/cases/errors_test.rb\" \"test/cases/disconnected_test.rb\" \"test/cases/time_precision_test.rb\" \"test/cases/fixture_set/file_test.rb\" \"test/cases/log_subscriber_test.rb\" \"test/cases/comment_test.rb\" \"test/cases/readonly_test.rb\" \"test/cases/bind_parameter_test.rb\" \"test/cases/serialized_attribute_test.rb\" \"test/cases/json_attribute_test.rb\" \"test/cases/clone_test.rb\" \"test/cases/batches_test.rb\" \"test/cases/nested_attributes_with_callbacks_test.rb\" \"test/cases/view_test.rb\" \"test/cases/date_time_test.rb\" \"test/cases/secure_token_test.rb\" \"test/cases/habtm_destroy_order_test.rb\" \"test/cases/unconnected_test.rb\" \"test/cases/custom_locking_test.rb\" \"test/cases/suppressor_test.rb\" \"test/cases/modules_test.rb\" \"test/cases/base_test.rb\" \"test/cases/associations_test.rb\" \"test/cases/database_statements_test.rb\" \"test/cases/sanitize_test.rb\" \"test/cases/reaper_test.rb\" \"test/cases/reflection_test.rb\" \"test/cases/attribute_decorators_test.rb\" \"test/cases/attributes_test.rb\" \"test/cases/callbacks_test.rb\" \"test/cases/type/integer_test.rb\" \"test/cases/type/adapter_specific_registry_test.rb\" \"test/cases/type/unsigned_integer_test.rb\" \"test/cases/type/type_map_test.rb\" \"test/cases/type/date_time_test.rb\" \"test/cases/type/string_test.rb\" \"test/cases/reload_models_test.rb\" \"test/cases/cache_key_test.rb\" \"test/cases/aggregations_test.rb\" \"test/cases/statement_cache_test.rb\" \"test/cases/adapters/mysql2/auto_increment_test.rb\" \"test/cases/adapters/mysql2/unsigned_type_test.rb\" \"test/cases/adapters/mysql2/table_options_test.rb\" \"test/cases/adapters/mysql2/virtual_column_test.rb\" \"test/cases/adapters/mysql2/case_sensitivity_test.rb\" \"test/cases/adapters/mysql2/boolean_test.rb\" \"test/cases/adapters/mysql2/sql_types_test.rb\" \"test/cases/adapters/mysql2/mysql2_adapter_test.rb\" \"test/cases/adapters/mysql2/explain_test.rb\" \"test/cases/adapters/mysql2/enum_test.rb\" \"test/cases/adapters/mysql2/transaction_test.rb\" \"test/cases/adapters/mysql2/schema_test.rb\" \"test/cases/adapters/mysql2/datetime_precision_quoting_test.rb\" \"test/cases/adapters/mysql2/active_schema_test.rb\" \"test/cases/adapters/mysql2/sp_test.rb\" \"test/cases/adapters/mysql2/charset_collation_test.rb\" \"test/cases/adapters/mysql2/connection_test.rb\" \"test/cases/adapters/mysql2/bind_parameter_test.rb\" \"test/cases/adapters/mysql2/json_test.rb\" \"test/cases/adapters/mysql2/schema_migrations_test.rb\" \r\n\r\nFile does not exist: \r\n\r\nUsing mysql2\r\nrake aborted!\r\nCommand failed with status (1): [ruby -w -I\"lib:test\" -I\"~/.rbenv/versions/2.4.0/lib/ruby/gems/2.4.0/gems/rake-12.2.1/lib\" \"/home/oz/.rbenv/versions/2.4.0/lib/ruby/gems/2.4.0/gems/rake-12.2.1/lib/rake/rake_test_loader.rb\" \"test/cases/fixtures_test.rb\" \"test/cases/column_alias_test.rb\" \"test/cases/quoting_test.rb\" \"test/cases/defaults_test.rb\" \"test/cases/unsafe_raw_sql_test.rb\" \"test/cases/schema_loading_test.rb\" \"test/cases/inheritance_test.rb\" \"test/cases/integration_test.rb\" \"test/cases/transactions_test.rb\" \"test/cases/attribute_methods/read_test.rb\" \"test/cases/finder_test.rb\" \"test/cases/mixin_test.rb\" \"test/cases/date_test.rb\" \"test/cases/forbidden_attributes_protection_test.rb\" \"test/cases/multiparameter_attributes_test.rb\" \"test/cases/yaml_serialization_test.rb\" \"test/cases/date_time_precision_test.rb\" \"test/cases/persistence_test.rb\" \"test/cases/migration/foreign_key_test.rb\" \"test/cases/migration/column_attributes_test.rb\" \"test/cases/migration/create_join_table_test.rb\" \"test/cases/migration/references_index_test.rb\" \"test/cases/migration/references_foreign_key_test.rb\" \"test/cases/migration/index_test.rb\" \"test/cases/migration/pending_migrations_test.rb\" \"test/cases/migration/references_statements_test.rb\" \"test/cases/migration/columns_test.rb\" \"test/cases/migration/logger_test.rb\" \"test/cases/migration/rename_table_test.rb\" \"test/cases/migration/compatibility_test.rb\" \"test/cases/migration/column_positioning_test.rb\" \"test/cases/migration/change_table_test.rb\" \"test/cases/migration/command_recorder_test.rb\" \"test/cases/migration/change_schema_test.rb\" \"test/cases/dirty_test.rb\" \"test/cases/query_cache_test.rb\" \"test/cases/ar_schema_test.rb\" \"test/cases/connection_pool_test.rb\" \"test/cases/relation/where_chain_test.rb\" \"test/cases/relation/record_fetch_warning_test.rb\" \"test/cases/relation/predicate_builder_test.rb\" \"test/cases/relation/or_test.rb\" \"test/cases/relation/where_clause_test.rb\" \"test/cases/relation/merging_test.rb\" \"test/cases/relation/mutation_test.rb\" \"test/cases/relation/select_test.rb\" \"test/cases/relation/delegation_test.rb\" \"test/cases/relation/where_test.rb\" \"test/cases/relations_test.rb\" \"test/cases/transaction_isolation_test.rb\" \"test/cases/scoping/named_scoping_test.rb\" \"test/cases/scoping/relation_scoping_test.rb\" \"test/cases/scoping/default_scoping_test.rb\" \"test/cases/connection_management_test.rb\" \"test/cases/reserved_word_test.rb\" \"test/cases/timestamp_test.rb\" \"test/cases/validations/absence_validation_test.rb\" \"test/cases/validations/association_validation_test.rb\" \"test/cases/validations/i18n_validation_test.rb\" \"test/cases/validations/uniqueness_validation_test.rb\" \"test/cases/validations/i18n_generate_message_validation_test.rb\" \"test/cases/validations/presence_validation_test.rb\" \"test/cases/validations/length_validation_test.rb\" \"test/cases/locking_test.rb\" \"test/cases/types_test.rb\" \"test/cases/migrator_test.rb\" \"test/cases/collection_cache_key_test.rb\" \"test/cases/hot_compatibility_test.rb\" \"test/cases/numeric_data_test.rb\" \"test/cases/instrumentation_test.rb\" \"test/cases/nested_attributes_test.rb\" \"test/cases/tasks/mysql_rake_test.rb\" \"test/cases/tasks/sqlite_rake_test.rb\" \"test/cases/tasks/postgresql_rake_test.rb\" \"test/cases/tasks/database_tasks_test.rb\" \"test/cases/type_test.rb\" \"test/cases/relation_test.rb\" \"test/cases/autosave_association_test.rb\" \"test/cases/pooled_connections_test.rb\" \"test/cases/migration_test.rb\" \"test/cases/binary_test.rb\" \"test/cases/counter_cache_test.rb\" \"test/cases/explain_test.rb\" \"test/cases/adapter_test.rb\" \"test/cases/core_test.rb\" \"test/cases/coders/yaml_column_test.rb\" \"test/cases/coders/json_test.rb\" \"test/cases/dup_test.rb\" \"test/cases/null_relation_test.rb\" \"test/cases/i18n_test.rb\" \"test/cases/enum_test.rb\" \"test/cases/transaction_callbacks_test.rb\" \"test/cases/touch_later_test.rb\" \"test/cases/multiple_db_test.rb\" \"test/cases/invertible_migration_test.rb\" \"test/cases/invalid_connection_test.rb\" \"test/cases/explain_subscriber_test.rb\" \"test/cases/schema_dumper_test.rb\" \"test/cases/json_serialization_test.rb\" \"test/cases/associations/inverse_associations_test.rb\" \"test/cases/associations/eager_load_nested_include_test.rb\" \"test/cases/associations/has_many_through_associations_test.rb\" \"test/cases/associations/belongs_to_associations_test.rb\" \"test/cases/associations/cascaded_eager_loading_test.rb\" \"test/cases/associations/has_many_associations_test.rb\" \"test/cases/associations/bidirectional_destroy_dependencies_test.rb\" \"test/cases/associations/required_test.rb\" \"test/cases/associations/eager_load_includes_full_sti_class_test.rb\" \"test/cases/associations/has_one_through_associations_test.rb\" \"test/cases/associations/eager_test.rb\" \"test/cases/associations/join_model_test.rb\" \"test/cases/associations/nested_through_associations_test.rb\" \"test/cases/associations/has_one_associations_test.rb\" \"test/cases/associations/left_outer_join_association_test.rb\" \"test/cases/associations/eager_singularization_test.rb\" \"test/cases/associations/inner_join_association_test.rb\" \"test/cases/associations/has_and_belongs_to_many_associations_test.rb\" \"test/cases/associations/callbacks_test.rb\" \"test/cases/associations/extension_test.rb\" \"test/cases/attribute_methods_test.rb\" \"test/cases/finder_respond_to_test.rb\" \"test/cases/store_test.rb\" \"test/cases/result_test.rb\" \"test/cases/primary_keys_test.rb\" \"test/cases/serialization_test.rb\" \"test/cases/test_fixtures_test.rb\" \"test/cases/connection_specification/resolver_test.rb\" \"test/cases/calculations_test.rb\" \"test/cases/validations_test.rb\" \"test/cases/column_definition_test.rb\" \"test/cases/connection_adapters/adapter_leasing_test.rb\" \"test/cases/connection_adapters/merge_and_resolve_default_url_config_test.rb\" \"test/cases/connection_adapters/schema_cache_test.rb\" \"test/cases/connection_adapters/mysql_type_lookup_test.rb\" \"test/cases/connection_adapters/connection_handler_test.rb\" \"test/cases/connection_adapters/connection_specification_test.rb\" \"test/cases/connection_adapters/type_lookup_test.rb\" \"test/cases/errors_test.rb\" \"test/cases/disconnected_test.rb\" \"test/cases/time_precision_test.rb\" \"test/cases/fixture_set/file_test.rb\" \"test/cases/log_subscriber_test.rb\" \"test/cases/comment_test.rb\" \"test/cases/readonly_test.rb\" \"test/cases/bind_parameter_test.rb\" \"test/cases/serialized_attribute_test.rb\" \"test/cases/json_attribute_test.rb\" \"test/cases/clone_test.rb\" \"test/cases/batches_test.rb\" \"test/cases/nested_attributes_with_callbacks_test.rb\" \"test/cases/view_test.rb\" \"test/cases/date_time_test.rb\" \"test/cases/secure_token_test.rb\" \"test/cases/habtm_destroy_order_test.rb\" \"test/cases/unconnected_test.rb\" \"test/cases/custom_locking_test.rb\" \"test/cases/suppressor_test.rb\" \"test/cases/modules_test.rb\" \"test/cases/base_test.rb\" \"test/cases/associations_test.rb\" \"test/cases/database_statements_test.rb\" \"test/cases/sanitize_test.rb\" \"test/cases/reaper_test.rb\" \"test/cases/reflection_test.rb\" \"test/cases/attribute_decorators_test.rb\" \"test/cases/attributes_test.rb\" \"test/cases/callbacks_test.rb\" \"test/cases/type/integer_test.rb\" \"test/cases/type/adapter_specific_registry_test.rb\" \"test/cases/type/unsigned_integer_test.rb\" \"test/cases/type/type_map_test.rb\" \"test/cases/type/date_time_test.rb\" \"test/cases/type/string_test.rb\" \"test/cases/reload_models_test.rb\" \"test/cases/cache_key_test.rb\" \"test/cases/aggregations_test.rb\" \"test/cases/statement_cache_test.rb\" \"test/cases/adapters/mysql2/auto_increment_test.rb\" \"test/cases/adapters/mysql2/unsigned_type_test.rb\" \"test/cases/adapters/mysql2/table_options_test.rb\" \"test/cases/adapters/mysql2/virtual_column_test.rb\" \"test/cases/adapters/mysql2/case_sensitivity_test.rb\" \"test/cases/adapters/mysql2/boolean_test.rb\" \"test/cases/adapters/mysql2/sql_types_test.rb\" \"test/cases/adapters/mysql2/mysql2_adapter_test.rb\" \"test/cases/adapters/mysql2/explain_test.rb\" \"test/cases/adapters/mysql2/enum_test.rb\" \"test/cases/adapters/mysql2/transaction_test.rb\" \"test/cases/adapters/mysql2/schema_test.rb\" \"test/cases/adapters/mysql2/datetime_precision_quoting_test.rb\" \"test/cases/adapters/mysql2/active_schema_test.rb\" \"test/cases/adapters/mysql2/sp_test.rb\" \"test/cases/adapters/mysql2/charset_collation_test.rb\" \"test/cases/adapters/mysql2/connection_test.rb\" \"test/cases/adapters/mysql2/bind_parameter_test.rb\" \"test/cases/adapters/mysql2/json_test.rb\" \"test/cases/adapters/mysql2/schema_migrations_test.rb\" ]\r\n~/.rbenv/versions/2.4.0/bin/bundle:23:in `load'\r\n~/.rbenv/versions/2.4.0/bin/bundle:23:in `<main>'\r\nTasks: TOP => test:mysql2\r\n(See full trace by running task with --trace)\r\n```\r\n\r\nAfter: \r\n```\r\nactiverecord]$ bundle show mysql2\r\n~/.rbenv/versions/2.4.0/lib/ruby/gems/2.4.0/gems/mysql2-0.4.10\r\n\r\nactiverecord]$ bundle exec rake test:mysql2\r\n...\r\nFinished in 121.326361s, 44.4586 runs/s, 125.7270 assertions/s.\r\n5394 runs, 15254 assertions, 0 failures, 0 errors, 8 skips\r\n```", "labels": [], "number": 32012, "updated_at": "2018-02-15 20:43:56", "user": 6261109, "closed_at": "2018-02-15 20:40:07", "id": 297554243, "title": "Bump mysql2 version", "url": "https://api.github.com/repos/rails/rails/issues/32012", "created_at": "2018-02-15 18:43:49", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366022692", "text": "r? @eileencodes\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-15 18:43:53", "user": 7468109, "id": 366022692}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Rails: 5.2.0.rc1\r\nRuby: 2.5.0\r\n\r\nI'm getting a deprecation warning for sql pass through on the order method.\r\n\r\nDEPRECATION WARNING: Dangerous query method (method whose arguments are used as raw SQL) called with non-attribute argument(s): \"NULLIF(regexp_replace(penalty_reports.item_no, E'\\\\D', '', 'g'), '')::int ?, penalty_reports.created_at DESC\". Non-attribute arguments will be disallowed in Rails 6.0. This method should not be called with user-provided values, such as request parameters or model attributes. Known-safe values can be passed by wrapping them in Arel.sql(). \r\n\r\nThe offending method is:\r\n\r\n`order(\"NULLIF(regexp_replace(penalty_reports.item_no, E'\\\\D', '', 'g'), '')::int #{direction}, penalty_reports.created_at DESC\")`\r\n\r\nIt seems it doesn't like the insertion of the direction parameter. ", "labels": [], "number": 32011, "updated_at": "2018-02-15 18:36:17", "user": 45881, "closed_at": "2018-02-15 18:35:53", "id": 297545065, "title": "Rails 5.2 Dangerous query method called with non-attribute arguments", "url": "https://api.github.com/repos/rails/rails/issues/32011", "created_at": "2018-02-15 18:13:00", "comments": [{"reactions": {"+1": [45881]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366020329", "text": "If you know `direction` to be safe, wrap the order clause in `Arel.sql()` as the warning instructs:\r\n\r\n```ruby\r\norder(Arel.sql(\"NULLIF(regexp_replace(penalty_reports.item_no, E'\\\\D', '', 'g'), '')::int #{direction}, penalty_reports.created_at DESC\"))\r\n```", "created_at": "2018-02-15 18:35:53", "user": 94129, "id": 366020329}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\nIt seems to me that if an object validation fails, callback for after validation should not be run. Is this not the case?\r\n\r\n```ruby\r\nclass Test < ApplicationRecord\r\n  # Database Columns\r\n  # station_id: integer\r\n  # data: jsonb\r\n  store_accessor :data, :station\r\n\r\n  after_validation :initialize_station\r\n\r\n  validates_presence_of :station\r\n\r\n  private\r\n\r\n  def initialize_station\r\n    self.station_id = station[:id]\r\n  end\r\nend\r\n```\r\n(Guidelines for creating a bug report are [available\r\nhere](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report))\r\n\r\n### Expected behavior\r\nTell us what should happen\r\n\r\n```ruby\r\nuser = Test.new(station: { id: 1, name: 'Some name' })\r\nuser.valid? #=> true\r\nuser = Test.new()\r\nuser.valid? #=> false because station is missing\r\n```\r\n\r\n### Actual behavior\r\nTell us what happens instead\r\n\r\n```ruby\r\nuser = Test.new(station: { id: 1, name: 'Some name' })\r\nuser.valid? #=> true\r\nuser = Test.new()\r\nuser.valid? \r\n#=> NoMethodError: undefined method `[]' for nil:NilClass\r\n#=> app/models/user.rb:14:in `initialize_station'\r\n```\r\n\r\n### System configuration\r\n**Rails version**:\r\n5.1.4\r\n**Ruby version**:\r\n2.5.0", "labels": [], "number": 32010, "updated_at": "2018-02-16 12:47:28", "user": 259633, "closed_at": "2018-02-16 12:47:27", "id": 297524652, "title": "store_accessor fields callback/validations run in wrong order", "url": "https://api.github.com/repos/rails/rails/issues/32010", "created_at": "2018-02-15 17:08:47", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366226578", "text": "This is intended behavior. `after_validation` is called regardless of the result of validation. \r\nIf you do not want to process if validation fails, please check whether `errors` is an empty inside method. \r\nRef: http://api.rubyonrails.org/classes/ActiveModel/Validations/Callbacks/ClassMethods.html#method-i-after_validation\r\n", "created_at": "2018-02-16 12:47:27", "user": 987638, "id": 366226578}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"+1": [3830636, 1259399]}, "text": "I was just wondering if there was any support for aliasing `Object#presence` to `Object#if_present`. The code sample reads a lot better to me using that name:\r\n\r\n```ruby\r\nregion = params[:state].if_present || params[:country].if_present || 'US'\r\n```\r\n\r\nIt reads like \"use this if it's present, or this if it's present, or 'US'\".", "labels": [], "number": 32009, "updated_at": "2018-02-18 12:35:09", "user": 22904, "closed_at": "2018-02-15 20:47:21", "id": 297463727, "title": "Very minor suggestion - method alias on Object#presence", "url": "https://api.github.com/repos/rails/rails/issues/32009", "created_at": "2018-02-15 14:24:39", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365953585", "text": "Hi @andyjeffries!\r\nI also think that the name `presence` isn't too self explanatory and that your example at least reads better than using `presence`.\r\n\r\n+1 for this", "created_at": "2018-02-15 15:03:08", "user": 1259399, "id": 365953585}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366056459", "text": "Thank you so much for the issue but we don't take feature request on the issue tracker. We recommend you to try to implement the feature and send us a pull request or if you are in doubt if the feature will be accepts ask in Rails Core mailing list for feedback.", "created_at": "2018-02-15 20:47:21", "user": 47848, "id": 366056459}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366512945", "text": "Thanks @rafaelfranca - I thought it was more polite to ask first, but I guess code speaks. Pull request created - https://github.com/rails/rails/pull/32043", "created_at": "2018-02-18 12:35:09", "user": 22904, "id": 366512945}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "This is a possible regression from `5.1.4` to `5.2.0.rc1`. It seems to have been caused by 3acc5d6.\r\n\r\n### Steps to reproduce\r\n\r\n```\r\n# frozen_string_literal: true\r\n\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"5.2.0.rc1\" # works with \"5.1.4\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# Ensure backward compatibility with Minitest 4\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :comments, force: true do |t|\r\n    t.integer :post_id\r\n    t.string :content\r\n  end\r\n\r\n  create_table :tags, force: true do |t|\r\n    t.integer :comment_id\r\n    t.string :name\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments, -> { order :content }\r\n  has_many :tags, -> { order :name }, through: :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\n  has_many :tags\r\nend\r\n\r\nclass Tag < ActiveRecord::Base\r\n  belongs_to :comment\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = Post.create!\r\n    comment2 = post.comments.create! content: \"bad\"\r\n    comment1 = post.comments.create! content: \"awesome\"\r\n    comment3 = post.comments.create! content: \"good\"\r\n\r\n    assert_equal [comment1, comment2, comment3], post.reload.comments.to_a\r\n\r\n    tag3 = comment1.tags.create! name: \"c\"\r\n    tag2 = comment1.tags.create! name: \"b\"\r\n    tag1 = comment2.tags.create! name: \"a\"\r\n\r\n    assert_equal [tag1, tag2, tag3], post.reload.tags.to_a\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\n`SELECT \"tags\".* FROM \"tags\" INNER JOIN \"comments\" ON \"tags\".\"comment_id\" = \"comments\".\"id\" WHERE \"comments\".\"post_id\" = ? ORDER BY \"tags\".\"name\" ASC, \"comments\".\"content\" ASC`\r\n\r\n### Actual behavior\r\n\r\n`SELECT \"tags\".* FROM \"tags\" INNER JOIN \"comments\" ON \"tags\".\"comment_id\" = \"comments\".\"id\" WHERE \"comments\".\"post_id\" = ? ORDER BY \"comments\".\"content\" ASC, \"tags\".\"name\" ASC`\r\n\r\n### System configuration\r\n**Rails version**: 5.2.0.rc1\r\n\r\n**Ruby version**: 2.3.0\r\n", "labels": ["activerecord"], "number": 32008, "updated_at": "2018-02-19 00:21:39", "user": 1685896, "closed_at": "2018-02-18 14:29:10", "id": 297455409, "title": "Possible regression of has_many :through in 5.2.0.rc1", "url": "https://api.github.com/repos/rails/rails/issues/32008", "created_at": "2018-02-15 13:59:43", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366441113", "text": "Seems like to me this is an intentional change - the new behaviour IMHO more 'correct', in that you're ordering by the through association first and then the has_many. If you need to remove the through association ordering in the has_many you'd use `reorder`.\r\n\r\nHowever it's isn't great to have such a change not be flagged in some way and I suspect that the change of order is required to fix the bugs mentioned in the breaking commit. Is this the case @kamipo?", "created_at": "2018-02-17 13:21:34", "user": 6321, "id": 366441113}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366445047", "text": "Exactly, I wasn't sure if it was intentional or not. A CHANGELOG entry could help.", "created_at": "2018-02-17 14:30:44", "user": 1685896, "id": 366445047}, {"reactions": {"heart": [6321]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366520166", "text": "Thanks for the report.\r\nChanging the order of scope evaluation is required to fix unscoping through scope, but we can keep the sorting order as before. I've fixed in 5c6d6fd30af2208a86f97ce0ca303c6c59700246.", "created_at": "2018-02-18 14:31:31", "user": 12642, "id": 366520166}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366562254", "text": "@kamipo thanks! ❤️ ", "created_at": "2018-02-19 00:21:39", "user": 1685896, "id": 366562254}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n1. Use ruby 2.5.0\r\n1. Create an instance of `HashWithIndifferentAccess`\r\n1. Convert keys to `Symbol`\r\n\r\n```\r\nhsh = {a: 1}.with_indifferent_access\r\nhsh = hsh.transform_keys { |_| :b }\r\n```\r\n\r\n### Expected behavior\r\n\r\nReturn some value if given key exists in `String` and `Symbol`. In example above, `hsh['b']` and `hsh[:b]` should return `1`.\r\n\r\n\r\n### Actual behavior\r\n\r\nReturn `nil`\r\n\r\nI think than since [this commit](https://github.com/rails/rails/commit/de9e3238a008f8f20c5beedefb8787b6e51359d0#diff-9f4b3d7342097a6f22290f147a09b77b), `HWIA#transform_keys` returns a `HWIA`, but it uses ruby's `Hash#transform_keys!` on ruby 2.5.0.\r\n\r\n### System configuration\r\n**Rails version**: Rails 5.2.0.rc1\r\n\r\n**Ruby version**: ruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-darwin15]\r\n", "labels": [], "number": 32007, "updated_at": "2018-02-17 03:00:37", "user": 34205, "closed_at": "2018-02-17 03:00:37", "id": 297434033, "title": "Possible regression of HWIA#transform_keys in rails 5.2.0.rc1", "url": "https://api.github.com/repos/rails/rails/issues/32007", "created_at": "2018-02-15 12:48:26", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366060090", "text": "This feel more like an issue with Ruby 2.5.0 than with Rails. Can you report to Ruby? It looks like that their `transform_keys =` don't use the `[]=` method to set the value.", "created_at": "2018-02-15 21:00:46", "user": 47848, "id": 366060090}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366150528", "text": "> Can you report to Ruby? It looks like that their transform_keys = don't use the []= method to set the value.\r\n\r\nI will report it ruby-core. But I don't think that it is necessary to use `[]=` to convert keys. ", "created_at": "2018-02-16 05:52:57", "user": 34205, "id": 366150528}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "I want to know the details of height and width from my image for css purpose.\r\nSo i got this package: https://github.com/sdsykes/fastimage. \r\nTo use this package i must know the url but i dont know to get the url.\r\nSo, how to get the absolute url in active storage? thanks. \r\n\r\n### Expected behavior\r\ni want to know the url of the image.\r\n\r\n### Actual behavior\r\n--\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 5.2.0.rc1\r\n\r\n**Ruby version**:\r\n2.5.0\r\n", "labels": [], "number": 32006, "updated_at": "2018-02-15 15:25:29", "user": 10692611, "closed_at": "2018-02-15 15:25:29", "id": 297409466, "title": "how to get url image in active storage", "url": "https://api.github.com/repos/rails/rails/issues/32006", "created_at": "2018-02-15 11:16:21", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365903984", "text": "Oh the problem is solved. \r\n\r\ni just code in my views\r\n```\r\nrails_blob_url(model.image)\r\n```\r\n\r\n:smile: :sweat_smile: \r\n", "created_at": "2018-02-15 11:47:23", "user": 10692611, "id": 365903984}, {"reactions": {"+1": [10692611]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365960659", "text": "Please use [Stack Overflow](https://stackoverflow.com/questions/tagged/ruby-on-rails) or the [rubyonrails-talk](https://groups.google.com/forum/#!forum/rubyonrails-talk) mailing list for questions, where a wider community will be able to help you. We reserve the issue tracker for bugs.", "created_at": "2018-02-15 15:25:29", "user": 94129, "id": 365960659}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nebc09ed9ad9a04338138739226a1a92c7a2707ee Broke `#count` for ordered queries with eager loaded tables. 4ada273 shows the break; 6fa0d79 shows the fix. I'm unsure what the clause `&& !distinct_value` was supposed to guard against @kamipo ? ", "labels": [], "number": 32005, "updated_at": "2018-02-27 13:25:35", "user": 1264305, "closed_at": "2018-02-27 13:25:35", "id": 297386325, "title": "Active Record distinct & order #count regression", "url": "https://api.github.com/repos/rails/rails/issues/32005", "created_at": "2018-02-15 09:58:41", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365878191", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kaspth (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-15 09:58:44", "user": 7468109, "id": 365878191}, {"reactions": {"+1": [1264305]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366503506", "text": "I supposed it was the user's responsibility to guarantee the query would work if the query had DISTINCT originally since `Post.joins(:comments).order(\"comments.id\").distinct.count` and `Post.left_joins(:comments).order(\"comments.id\").distinct.count` doesn't work from the beginning.\r\n\r\nBut `relation.count(:all)` need to work as long as `relation.to_a` works regardless of having DISTINCT because `count(:all)` is used in unleaded `relation.size`, `relation.size` should work regardless of whether the relation is loaded or not.\r\n\r\nSo can you add extra test to ensure to work `relation.size` regardless of the relation is loaded or not like below?\r\n\r\nhttps://github.com/rails/rails/blob/099a28bbecb5b6fdabcae261d22c424f67a21601/activerecord/test/cases/relations_test.rb#L973-L977", "created_at": "2018-02-18 09:36:16", "user": 12642, "id": 366503506}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366602022", "text": "When I look at it now, this query is really quite meaningless because the distinct clause will include all the columns of both `Post` and `Comment` and therefore 99% of the time, `distinct.count` will equal `count` 🤷‍♂️ . Anyone relying on this code before should probably re-write it because it's probably not doing what they expect it to?", "created_at": "2018-02-19 06:49:06", "user": 1264305, "id": 366602022}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368349958", "text": "I agree with DISTINCT without explicit SELECT is meaningless.\r\nBut I think that the fix should be backported since the following usage was worked in 5.1.4, but now broken in 5.1.5.\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # gem \"activerecord\", \"5.1.5\"\r\n  gem \"activerecord\", \"5.1.4\"\r\n  # gem \"sqlite3\"\r\n  gem \"pg\", \"< 1.0\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# Ensure backward compatibility with Minitest 4\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# ActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.establish_connection(adapter: \"postgresql\", database: \"test\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :comments, force: true do |t|\r\n    t.references :post\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_size_with_eager_loading_and_custom_order_and_distinct\r\n    post1 = Post.create!\r\n    post2 = Post.create!\r\n    post3 = Post.create!\r\n\r\n    post1.comments.create!([{}, {}, {}])\r\n    post2.comments.create!([{}, {}, {}])\r\n    post3.comments.create!([{}, {}, {}])\r\n\r\n    posts = Post.includes(:comments).order(\"comments.id DESC\").distinct.limit(10)\r\n\r\n    puts \"#{posts.size} posts\"\r\n    posts.each do |post|\r\n      puts \"post #{post.id}: #{post.comments.size} comments\"\r\n    end\r\n  end\r\nend\r\n```", "created_at": "2018-02-25 22:13:02", "user": 12642, "id": 368349958}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368378463", "text": "@kamipo So should I just change base branch to 5.1? Then you can decide if you want to have this functionality at all in 5.2?", "created_at": "2018-02-26 03:14:05", "user": 1264305, "id": 368378463}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368380813", "text": "Basically we accept any PRs to master. Then we'll backport it to stable branches.", "created_at": "2018-02-26 03:34:37", "user": 12642, "id": 368380813}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\nActionCable::Connection::ClientSocket supports providing custom close code and reason string.\r\nHowever classes that use it do not allow passing these parameters.\r\nCould be useful when you need to provide a custom code for closing the socket.\r\n", "labels": [], "number": 32004, "updated_at": "2018-02-18 07:10:58", "user": 1659018, "closed_at": "2018-02-18 07:10:58", "id": 297374404, "title": "Add code and reason parameters to websocket close method", "url": "https://api.github.com/repos/rails/rails/issues/32004", "created_at": "2018-02-15 09:17:00", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365867628", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @georgeclaghorn (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-15 09:17:03", "user": 7468109, "id": 365867628}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365867631", "text": "<img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20> **Warning** <img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20>\n\n* Pull requests are usually filed against the master branch for this repo, but this one is against 5-2-stable. Please double check that you specified the right target!", "created_at": "2018-02-15 09:17:03", "user": 7468109, "id": 365867631}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365949008", "text": "Please open new pull requests on master. Whoever merges them will backport them as needed.\r\n\r\nYou’ll also need to rebase your changes against master.", "created_at": "2018-02-15 14:48:19", "user": 94129, "id": 365949008}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "I noticed this in my memory profiler report.\r\n\r\n```\r\n 153  \"@default_url_options\"\r\n       152  /home/sam/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activesupport-5.1.4/lib/active_support/core_ext/class/attribute.rb:84\r\n```\r\n\r\n152 copies of the string `@default_url_options` are retained on the heap in Discourse post boot. \r\n\r\nSince this is just used for ivar lookups there is no need to use a string.\r\n", "labels": [], "number": 32003, "updated_at": "2018-02-15 19:39:31", "user": 5213, "closed_at": "2018-02-15 19:39:31", "id": 297349045, "title": "PERF: symbolize ivar, to reduce dupes", "url": "https://api.github.com/repos/rails/rails/issues/32003", "created_at": "2018-02-15 07:15:05", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365843609", "text": "r? @kamipo\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-15 07:15:07", "user": 7468109, "id": 365843609}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365843678", "text": "cc @tenderlove ", "created_at": "2018-02-15 07:15:38", "user": 5213, "id": 365843678}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "The serializer should be set up in `after_initialize` so that it work properly even if the user specifies serializer with initializers.\r\n\r\nAlso, since `custom_serializers` is `Array`, it needs to be flattened before setting the value.\r\n", "labels": [], "number": 32002, "updated_at": "2018-03-10 08:11:08", "user": 987638, "closed_at": "2018-02-17 05:09:24", "id": 297346826, "title": "Fix custome serializer setting", "url": "https://api.github.com/repos/rails/rails/issues/32002", "created_at": "2018-02-15 07:03:46", "comments": [], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "", "labels": [], "number": 32001, "updated_at": "2018-02-15 05:06:33", "user": 10832262, "closed_at": "2018-02-15 05:06:13", "id": 297329193, "title": "Missing backquote, extra end keyword [ci skip]", "url": "https://api.github.com/repos/rails/rails/issues/32001", "created_at": "2018-02-15 04:55:43", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365825402", "text": "r? @kaspth\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-15 04:55:44", "user": 7468109, "id": 365825402}, {"reactions": {"+1": [10832262]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365826600", "text": "Thank you.", "created_at": "2018-02-15 05:06:31", "user": 3948, "id": 365826600}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nI made a quick app here: https://github.com/jeffblake/fixture-regression\r\n\r\n(Guidelines for creating a bug report are [available\r\nhere](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report))\r\n\r\n### Expected behavior\r\n\r\nRunning `rails test` should fail immediately if fixtures fail database constraints\r\n\r\n### Actual behavior\r\n\r\nAll tests are run, and fail due to database constraints\r\n\r\n<img width=\"1267\" alt=\"screen shot 2018-02-14 at 8 42 30 pm\" src=\"https://user-images.githubusercontent.com/620564/36240579-9e9b5562-11c7-11e8-9793-7ad38cefcf61.png\">\r\n\r\n\r\n### System configuration\r\n**Rails version**:\r\n\r\n5.1.5\r\n\r\n**Ruby version**:\r\n\r\n2.5.0\r\n", "labels": [], "number": 32000, "updated_at": "2018-02-15 23:49:39", "user": 620564, "closed_at": "2018-02-15 23:49:39", "id": 297326799, "title": "All tests are run (and fail) if fixtures fail database constraints (regression from 5.1.4)", "url": "https://api.github.com/repos/rails/rails/issues/32000", "created_at": "2018-02-15 04:35:24", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365823955", "text": "Running it on rails 5.1.4 I get:\r\n\r\n<img width=\"1261\" alt=\"screen shot 2018-02-14 at 8 39 33 pm\" src=\"https://user-images.githubusercontent.com/620564/36240528-4535dd30-11c7-11e8-8707-6fadf37c75ed.png\">\r\n\r\nMaybe this is actually due to the minitest bug that was fixed. What is expected behavior here? It would sure be nice if the suite fails immediately... I don't see a point in running a whole test suite if the fixtures are bad.", "created_at": "2018-02-15 04:42:06", "user": 620564, "id": 365823955}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366101106", "text": "Fixture's insert is done at the time of each test run, so this is the expected behavior for now.\r\nIf you want to stop the test immediately if something goes wrong, use the `--fail-fast` option.\r\n", "created_at": "2018-02-15 23:49:39", "user": 987638, "id": 366101106}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Per: https://bugs.ruby-lang.org/issues/13077 String @- will dedupe strings. \r\n\r\nThis takes advantage of this by deduping route fragments that are full of duplication usually. \r\n\r\nFor Discourse:\r\n\r\nBefore:\r\n\r\nTotal allocated: 207574305 bytes (2214916 objects)\r\nTotal retained:  36470010 bytes (322194 objects)\r\n\r\nAfter \r\n\r\nTotal allocated: 207556847 bytes (2214711 objects)\r\nTotal retained:  36327973 bytes (318627 objects) <- object that GC can not collect\r\n\r\n\r\nSo we save 3500 or so RVALUEs this way, not the largest saving in the world, but worth it especially for large route files.\r\n", "labels": [], "number": 31999, "updated_at": "2018-02-16 06:09:12", "user": 5213, "closed_at": "2018-02-15 19:40:15", "id": 297323242, "title": "PERF: dedupe scanned route fragments", "url": "https://api.github.com/repos/rails/rails/issues/31999", "created_at": "2018-02-15 04:03:55", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365819835", "text": "r? @eileencodes\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-15 04:03:57", "user": 7468109, "id": 365819835}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365819856", "text": "cc @matthewd  @tenderlove  ", "created_at": "2018-02-15 04:04:12", "user": 5213, "id": 365819856}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366055243", "text": "This PR broke a lot of tests. Reverting", "created_at": "2018-02-15 20:42:26", "user": 47848, "id": 366055243}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366067406", "text": "Sorry about that, will have a careful look and correct it.\n\nOn Fri, Feb 16, 2018 at 7:43 AM, Rafael França <notifications@github.com>\nwrote:\n\n> This PR broke a lot of tests. Reverting\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/rails/rails/pull/31999#issuecomment-366055243>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAAUXX9dNi59kwCGMSpog6_Ie4imFcE4ks5tVJbigaJpZM4SGUBN>\n> .\n>\n", "created_at": "2018-02-15 21:28:10", "user": 5213, "id": 366067406}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366081659", "text": "@rafaelfranca  I fixed it in \r\n\r\nhttps://github.com/SamSaffron/rails/commit/67c874209698e5ecdbfb61d803894de274373f83\r\n\r\nConfirmed tests are running in local, can you merge it in or do you want me to redo the PR? ", "created_at": "2018-02-15 22:22:52", "user": 5213, "id": 366081659}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366083579", "text": "I can manually apply the two patches. Doing", "created_at": "2018-02-15 22:30:35", "user": 47848, "id": 366083579}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366084663", "text": "done!", "created_at": "2018-02-15 22:34:42", "user": 47848, "id": 366084663}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366086040", "text": "thanks heaps, and apologies!\n\nOn Fri, Feb 16, 2018 at 9:35 AM, Rafael França <notifications@github.com>\nwrote:\n\n> done!\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/rails/rails/pull/31999#issuecomment-366084663>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAAUXZrbBx-Bs65npHGxGLBc37YJ26Wzks5tVLE1gaJpZM4SGUBN>\n> .\n>\n", "created_at": "2018-02-15 22:40:20", "user": 5213, "id": 366086040}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366152111", "text": "`String#-@` was added in Ruby 2.3. Therefore, there is no method in 2.2.x, the build is broken. \r\nhttps://travis-ci.org/rails/rails/jobs/342103442#L1180 \r\n\r\nSince master is already 6.0, will we stop supporting for 2.2.x?", "created_at": "2018-02-16 06:05:55", "user": 987638, "id": 366152111}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366152518", "text": "Oh ... I think we should otherwise, just monkey patch in `-` conditionally on 2.2? \r\n\r\n2.2 is EOL in March 31, 2018, I would drop it for master. \r\n\r\n\r\n", "created_at": "2018-02-16 06:09:11", "user": 5213, "id": 366152518}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {"heart": [3800237, 13086902, 160941, 21287564]}, "text": "`update_attributes` and `update_attributes!` have been aliases for `update` and `update!` since https://github.com/rails/rails/pull/8705 in 2013. That PR says it was a \"soft deprecation\" and that the longer method names would be removed in the future.\r\n\r\nThis would be a desirable change because:\r\n  1. It makes application code easier to read by reducing confusion with `update_attribute`/`update_attribute!`, and\r\n  1. The more direct names help new users understand that these are the \"normal\" ways to modify attributes of an Active Record object.\r\n\r\nIs this still the intention? `update_attributes` is still used in a few tests and one place in `ActiveRecord::InternalMetadata`, and mentioned in the AR Callbacks guide; I can change them to the newer forms in this PR if that is the goal.", "labels": [], "number": 31998, "updated_at": "2018-02-17 22:35:05", "user": 7873686, "closed_at": "2018-02-17 22:01:34", "id": 297317009, "title": "Deprecate `update_attributes` and `update_attributes!`", "url": "https://api.github.com/repos/rails/rails/issues/31998", "created_at": "2018-02-15 03:07:29", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365813944", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @schneems (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-15 03:07:31", "user": 7468109, "id": 365813944}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365818981", "text": "5 years ago, wow ... \r\n\r\nr? @guilleiguaran", "created_at": "2018-02-15 03:56:01", "user": 4912, "id": 365818981}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366416160", "text": "Yeah, I think it is time to deprecate them. Can you remove all the usages and add tests to check if those methods are deprecated?", "created_at": "2018-02-17 04:39:36", "user": 47848, "id": 366416160}, {"reactions": {"+1": [7873686, 21287564]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366474756", "text": "Thanks @elebow!", "created_at": "2018-02-17 22:04:13", "user": 199, "id": 366474756}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366476428", "text": "Are these aliases causing some sort of maintenance burden? If we actually fully deprecate/remove these methods we are breaking a *lot* of code for virtually no reason. I'm all for keeping them soft-deprecated, but if they aren't causing a maintenance burden I see no reason to actually remove them.", "created_at": "2018-02-17 22:35:05", "user": 1529387, "id": 366476428}], "assignees": [160941, 160941], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [12427222, 68931]}, "text": "### Summary\r\n\r\nThis updates the template for `config/environments/test.rb` so that the default ActiveJob adapter in the test environment is the test driver.\r\n\r\nI noticed that [Rails 5.2.0 now sets the `async` adapter as the default adapter in development](https://github.com/rails/rails/commit/625baa69d14881ac49ba2e5c7d9cac4b222d7022) but am curious as to why this would apply in the test environment.\r\n\r\nIf the test adapter exists, I imagine that it should be the default adapter for when tests are running.", "labels": [], "number": 31997, "updated_at": "2018-02-15 02:27:20", "user": 1100408, "closed_at": "None", "id": 297302024, "title": "Make test queue adapter the default for testing", "url": "https://api.github.com/repos/rails/rails/issues/31997", "created_at": "2018-02-15 01:18:36", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365798476", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-15 01:18:39", "user": 7468109, "id": 365798476}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365800465", "text": "I actually just noticed that my test suite (which makes ActiveJob expectations) doesn't even run if any adapter other than `test` is selected. Here's some failing output from my suite.\r\n\r\n```\r\n  1) Photos::ProcessJob#perform queues Photos::CacheJob\r\n     Failure/Error:\r\n       expect {\r\n         Photos::ProcessJob.new.perform\r\n       }.to_not have_enqueued_job(Photos::CacheJob).with(photo)\r\n     StandardError:\r\n       To use ActiveJob matchers set `ActiveJob::Base.queue_adapter = :test`\r\n     # ./spec/jobs/photos/process_job_spec.rb:45:in `block (4 levels) in <top (required)>'\r\n```\r\n\r\nSo it really seems to make sense to me that the default ActiveJob adapter for the test environment should be test. I don't know if there's somewhere else we can configure this at a higher level (so it doesn't need to be in the environment configuration file template) or if you are happy for it to be here.", "created_at": "2018-02-15 01:31:23", "user": 1100408, "id": 365800465}, {"reactions": {"+1": [1100408, 12427222]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365801257", "text": "Agreed on this. I ran into this last week. This fix makes sense. 👍 ", "created_at": "2018-02-15 01:36:44", "user": 68931, "id": 365801257}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365808798", "text": "The default behaviour is to run the jobs as they are enqueued. `ActiveJob::TestHelper` overrides that behaviour when you just want to assert the job was queued without running it, but that seems like it would be a surprising default.", "created_at": "2018-02-15 02:27:20", "user": 1034, "id": 365808798}], "assignees": [12642, 12642], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "# Steps to reproduce\r\n\r\nOkay so recently my company wanted to start using the collection cache key before rails 5 (we're just about to upgrade from 4.2 to rails 5 on one of our services), so I was tasked with backporting it by hand. I feel like I did a *pretty good* job, but we encountered something that I believe still exists in the current live implementation.\r\n\r\nLet's go through a scenario to get a scope of things:\r\n\r\n  1. First you have a table with some data, I've shortened the 'updated-at' to relative for human consumption.\r\n\r\n  ``` sql\r\n  SELECT * FROM records ORDER BY id ASC\r\n  ```\r\n\r\n  id|position|valid|updated_at\r\n  -|-|-|-\r\n  a|2|t|2018-03-08 01:59:18.944702\r\n  b|3|t|2018-03-08 01:59:45.332233\r\n  c|1|t|2018-03-08 01:59:43.751097\r\n  d|4|t|2018-03-08 01:59:45.332233\r\n\r\n  2. Now we make a sufficiently complex query involving a `WHERE`, `ORDER BY`, and `LIMIT`:\r\n\r\n  ``` sql\r\n  SELECT * FROM records WHERE valid is true ORDER BY position DESC LIMIT 3\r\n  ```\r\n\r\n  id | position | valid | updated_at\r\n  -|-|-|-\r\n  c | 1 | t | 2018-03-08 01:59:43.751097\r\n  a | 2 | t | 2018-03-08 01:59:18.944702\r\n  b | 3 | t | 2018-03-08 01:59:45.332233\r\n\r\n  3. So lets create our cache key:\r\n\r\n  ``` ruby\r\n  relation.cache_key\r\n  ```\r\n\r\n  ``` sql\r\n  SELECT COUNT(*), MAX(updated_at) FROM (SELECT updated_at FROM records WHERE valid is true ORDER BY position DESC LIMIT 3)\r\n  ```\r\n\r\n\r\n  updated_at\r\n  -|\r\n  2018-03-08 01:59:43.751097\r\n  2018-03-08 01:59:18.944702\r\n  2018-03-08 01:59:45.332233\r\n\r\n  size|max\r\n  -|-\r\n  3|2018-03-08 01:59:43.751097\r\n\r\n  ``` ruby\r\n  [\"records\", \"collection\", checksum, 3, 2018-03-08 01:59:45.332233]\r\n  ```\r\n\r\n  4. Now let's do a mutation:\r\n\r\n  ``` ruby\r\n  Record.find(id: \"b\").update(position: 5)\r\n  ```\r\n\r\n  ``` sql\r\n  UPDATE position=5, updated_at=2018-03-08 02:01:58.519036 WHERE id = b\r\n  ```\r\n\r\n  id|position|valid|updated_at\r\n  -|-|-|-\r\n  a|2|t|2018-03-08 01:59:18.944702\r\n  b|5|t|2018-03-08 02:01:58.519036\r\n  c|1|t|2018-03-08 01:59:43.751097\r\n  d|4|t|2018-03-08 01:59:45.332233\r\n\r\n  5. And our query (where `b` no longer exists):\r\n\r\n  ``` sql\r\n  SELECT * FROM records WHERE valid is true ORDER BY position DESC LIMIT 3\r\n  ```\r\n\r\n  id|position|valid|updated_at\r\n  -|-|-|-\r\n  c|1|t|2018-03-08 01:59:43.751097\r\n  a|2|t|2018-03-08 01:59:18.944702\r\n  d|4|t|2018-03-08 01:59:45.332233\r\n\r\n  6. And our collection cache key query:\r\n\r\n  ``` ruby\r\n  relation.cache_key\r\n  ```\r\n\r\n  ``` sql\r\n  SELECT COUNT(*), MAX(updated_at) FROM (SELECT updated_at FROM records WHERE valid is true ORDER BY position DESC LIMIT 3)\r\n  ```\r\n\r\n  updated_at\r\n  -|\r\n  2018-03-08 01:59:43.751097\r\n  2018-03-08 01:59:18.944702\r\n  2018-03-08 01:59:45.332233\r\n\r\n  size|max\r\n  -|-\r\n  3|2018-03-08 01:59:45.332233\r\n\r\n  ``` ruby\r\n  [\"records\", \"collection\", checksum, 3, 2018-03-08 01:59:45.332233]\r\n  ```\r\n\r\nAs you can see from above, our query cache key has *not changed*, but our set of data absolutely has changed. Am I missing something? For what it's worth, I've compared *my implementation* to Rails 5.1 and they produce semantically the same queries and the exact same results (both the query and the collection cache query).\r\n\r\n## Expected behavior\r\n\r\nIt should create a cache key that changes since the items have changed.\r\n\r\n## Actual behavior\r\nThe cache key is exactly the same.\r\n\r\n## System configuration\r\n**Rails version**: 4.2 .. 5.1 (Maybe 5.2)\r\n\r\n**Ruby version**: Agnostic\r\n", "labels": [], "number": 31996, "updated_at": "2018-03-08 19:06:59", "user": 334809, "closed_at": "None", "id": 297294550, "title": "ActiveRecord::Relation.cache_key produces same key on different results when using limit", "url": "https://api.github.com/repos/rails/rails/issues/31996", "created_at": "2018-02-15 00:32:55", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365798089", "text": "The [documentation for `ActiveRecord::Relation#cache_key`](https://github.com/rails/rails/blob/6ccd2b0efdfb8e9ef41764ee60dfac9731338608/activerecord/lib/active_record/relation.rb#L299-L303) says:\r\n\r\n> The cache key is built with a fingerprint of the sql query, the number of records matched by the query **and a timestamp of the last updated record**.\r\n\r\nMoving `updated_at` back in time, or even updating a record without touching `updated_at`, means the cache key won't change. Maybe we need to document that restriction, but I don't think it's a bug; it's optimising for the common case where all updates will move the maximum `updated_at` forward.", "created_at": "2018-02-15 01:16:31", "user": 432189, "id": 365798089}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365802325", "text": "> back in time, or even updating a record without touching updated_at\r\n\r\n@eugeneius: I want to be clear, this is *not happening in my example*. Maybe I shouldn't have used \"relative time\", but I figured it would be easier to read.", "created_at": "2018-02-15 01:44:13", "user": 334809, "id": 365802325}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365804284", "text": "I've updated the ticket with tables, some corrections to the generated SQL, and some clarifications.", "created_at": "2018-02-15 01:55:29", "user": 334809, "id": 365804284}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365806321", "text": "I've removed some typos and made the case example a lot easier to understand, thanks @7sun", "created_at": "2018-02-15 02:08:59", "user": 334809, "id": 365806321}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365809929", "text": "Related: #21503 #27570 #28075", "created_at": "2018-02-15 02:36:23", "user": 1034, "id": 365809929}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365812641", "text": "For what it's worth I wrote an implementation that works in postgres and might work in other databases.", "created_at": "2018-02-15 02:57:13", "user": 334809, "id": 365812641}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365812818", "text": "To be clear, unlike the other PR's it uses a checksum of the primary keys at the database level rather than the ActiveRecord level.", "created_at": "2018-02-15 02:58:37", "user": 334809, "id": 365812818}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365822856", "text": "I can see that this is happening though.\r\n\r\nThere are two parts of the problem:\r\n\r\n1. The relation result is being cached since step 2, and an update to the database won't reflect the result in the relation object — I think that's a common pitfall, but it's pretty much how it works (since we don't have identity map 😅)\r\n\r\n2. I actually found something interesting for `#cache_key`. Looking at source code, it seems like it's being [memoized](https://github.com/rails/rails/blob/0e8d4edd56f44b27f33bd214aa03af60cc5d39ae/activerecord/lib/active_record/relation.rb#L320-L323) after it's being calculated the first time. It [also does not get reset](https://github.com/rails/rails/blob/0e8d4edd56f44b27f33bd214aa03af60cc5d39ae/activerecord/lib/active_record/relation.rb#L557) in `relation.reset` method either.\r\n\r\nI think the obvious fix is to make it unset `@cache_keys` when `relation.reset` got called. While this won't fix the scenario described in this PR (as `relation` result would still get cached so any update in the database doesn't reflect on the result), it will work as expected when user explicitly calling `relation.reset` before trying another `relation.cache_key`.\r\n\r\nHere's some example on what I mean, with SQL logging to STDOUT on:\r\n\r\n```\r\n> users = User.all.select(:id).limit(5); false # false is here so it won't call #inspect on relation\r\n#=> false\r\n> users.cache_key\r\n  [slave/1] (0.5ms)  SELECT COUNT(*) AS `size`, MAX(subquery_for_cache_key.updated_at) AS timestamp FROM (SELECT  `users`.`updated_at` FROM `users` LIMIT 5) subquery_for_cache_key\r\n#=> \"users/query-e91b2169cd0011244de33facd07a4a62-5-20180207064812000000\"\r\n> users.cache_key\r\n#=> \"users/query-e91b2169cd0011244de33facd07a4a62-5-20180207064812000000\"\r\n# *** no SQL before this line = no reload ***\r\n\r\n> users.reset; false\r\n#=> false\r\n> users.cache_key\r\n#=> \"users/query-e91b2169cd0011244de33facd07a4a62-5-20180207064812000000\"\r\n# *** Still no reload ***\r\n\r\n> users.instance_variable_set(:\"@cache_keys\", nil)\r\n#=> nil\r\n> users.cache_key\r\n  [slave/1] (0.4ms)  SELECT COUNT(*) AS `size`, MAX(subquery_for_cache_key.updated_at) AS timestamp FROM (SELECT  `users`.`updated_at` FROM `users` LIMIT 5) subquery_for_cache_key\r\n#=> \"users/query-e91b2169cd0011244de33facd07a4a62-5-20180207064812000000\"\r\n# *** It reloaded ***\r\n```\r\n\r\nPlease let me know if you plan to submit a patch to fix this.", "created_at": "2018-02-15 04:31:59", "user": 4912, "id": 365822856}, {"reactions": {"+1": [540762]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365829842", "text": "The described issue is not a memoization issue, but faulty cache key logic.", "created_at": "2018-02-15 05:32:20", "user": 334809, "id": 365829842}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/371590208", "text": "Updated the example.", "created_at": "2018-03-08 19:06:59", "user": 334809, "id": 371590208}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {"+1": [94129]}, "text": "Followup to https://github.com/rails/rails/pull/31968; see https://github.com/rails/rails/pull/31968#issuecomment-365618034.\r\n\r\nActive Storage is an engine which means its models, jobs and controllers are autoloaded by Rails rather than Ruby. Unfortunately this means it's subject to the same gotchas as applications, including this one:\r\n\r\nhttp://guides.rubyonrails.org/v5.1.4/autoloading_and_reloading_constants.html#when-constants-aren-t-missed-qualified-references\r\n\r\nOn Ruby < 2.5, constants nested under classes can't be autoloaded by Rails if a top level constant already exists with the same name.\r\n\r\nTo avoid clashing with constants defined in users' applications or gems, we can use `require_dependency` to ensure that the nested constants are loaded before they're used.\r\n\r\nr? @rafaelfranca ", "labels": ["activestorage"], "number": 31995, "updated_at": "2018-02-15 00:32:11", "user": 432189, "closed_at": "2018-02-15 00:32:10", "id": 297280816, "title": "Use require_dependency inside Active Storage", "url": "https://api.github.com/repos/rails/rails/issues/31995", "created_at": "2018-02-14 23:20:26", "comments": [], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Previously, calling `params.each` gave me an array of the key strings. In Rails 5.2.0rc1, calling params.each gives me an array of [key, value] arrays. This might be expected (the new behavior actually makes more sense IMO), but I didn't see this change documented in the release notes.\r\n\r\n### Steps to reproduce\r\nMake a request with parameters, then:\r\n```\r\nparams.each do |p|\r\n  next unless p.match /some_regexp/\r\nend\r\n```\r\n\r\n### Expected behavior\r\nApply `.match` method to each params key string.\r\n\r\n### Actual behavior\r\n```NoMethodError: undefined method `match' for [\"utf8\", \"✓\"]:Array```\r\n\r\nNow, `params.keys.each` gives the same result that `params.each` did previously.\r\n\r\n### System configuration\r\n**Rails version**: 5.2.0rc1\r\n\r\n**Ruby version**: 2.5.0\r\n", "labels": [], "number": 31994, "updated_at": "2018-02-14 23:00:16", "user": 21235090, "closed_at": "2018-02-14 23:00:16", "id": 297274638, "title": "Possible regression regarding params.each in Rails 5.2.0rc1", "url": "https://api.github.com/repos/rails/rails/issues/31994", "created_at": "2018-02-14 22:53:48", "comments": [{"reactions": {"+1": [21235090]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365773701", "text": "See d7a121a0d624dd8180556521f0611d4c8e2c648f. It is missing the changelog entry but this behavior was always the expected. I'll add the changelog entry", "created_at": "2018-02-14 23:00:16", "user": 47848, "id": 365773701}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Asterisks to bold are Markdown; Rdoc uses `<b>` tags.", "labels": [], "number": 31993, "updated_at": "2018-02-14 19:21:08", "user": 308724, "closed_at": "2018-02-14 17:24:37", "id": 297173744, "title": "Rdoc formatting fix: <b> instead of MD-style asterisks", "url": "https://api.github.com/repos/rails/rails/issues/31993", "created_at": "2018-02-14 17:06:11", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365675788", "text": "r? @pixeltrix\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-14 17:06:13", "user": 7468109, "id": 365675788}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nInstall [Fish Shell](http://fishshell.com) on macOS.\r\n\r\nSet a value for $EDITOR globally, similar to:\r\n`> set -U EDITOR \"/usr/local/bin/mate -w\"`\r\n\r\nIn a Rails project, run `bin/rails secrets:setup` if necessary, then run:\r\n`> bin/rails secrets:edit`\r\n\r\n### Expected behavior\r\nThe decrypted file should open in my chosen command-line editor (in this case, TextMate).\r\n\r\n### Actual behavior\r\nInstead, I get an error that $EDITOR is not set:\r\n\r\n    No $EDITOR to open decrypted secrets in. Assign one like this:\r\n    \r\n    EDITOR=\"mate --wait\" bin/rails secrets:edit\r\n    \r\n    For editors that fork and exit immediately, it's important to pass a wait flag,\r\n    otherwise the secrets will be saved immediately with no chance to edit.\r\n\r\nMy shell definitely sees it, though:\r\n\r\n    > echo $EDITOR\r\n    /usr/local/bin/mate -w\r\n\r\nI've tried adding a similar EDITOR specification to my `.bashrc` and that definitely shows up when I open a bash shell. I'm unclear where else it might need to be set, though— it *ought* to pick up the environment from the shell process executing the original `bin/rails` command.\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 5.1.4\r\n\r\n**Ruby version**:\r\nruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-darwin16]", "labels": [], "number": 31992, "updated_at": "2018-02-14 03:17:39", "user": 11450, "closed_at": "2018-02-14 03:17:39", "id": 296962635, "title": "Fish shell's $EDITOR setting doesn't appear to be recognized by `secrets:edit` command", "url": "https://api.github.com/repos/rails/rails/issues/31992", "created_at": "2018-02-14 03:15:06", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365483384", "text": "Of course, after much searching, I find the PEBKAC answer thirty seconds after filing a bug. I needed the -x flag to have my EDITOR exported to child processes. Sigh.", "created_at": "2018-02-14 03:17:39", "user": 11450, "id": 365483384}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"heart": [248174, 4912, 157134]}, "text": "### Summary\r\n\r\nHi Rails maintainers :wave:\r\n\r\nI've released i18n 1.0 today. There's been a number of bugs fixed since the 0.7.x branches, as well as some performance improvements. The changelogs can give you more info.\r\n\r\n1.0 tagging is due to i18n now having a minimum Ruby version requirement of 2.0. I bumped the major (finally) because I didn't want to break backwards compatibility with those on earlier Rails versions which still had this `i18n ~> 0.7` dependency, but were on a version of Rails that _did not_ have the Ruby 2.0 minimum requirement.\r\n\r\nThis should probably be included in a future 5.x release of Rails. It's intended to be backwards compatible with any Rails version. We're testing on all Rails versions since 3.0.x, and our tests pass... so I believe that means it will continue to work for those versions too.\r\n\r\n:heart:\r\n\r\n", "labels": [], "number": 31991, "updated_at": "2018-02-14 16:54:20", "user": 2687, "closed_at": "2018-02-14 06:45:50", "id": 296950727, "title": "Bump i18n to 1.0", "url": "https://api.github.com/repos/rails/rails/issues/31991", "created_at": "2018-02-14 01:55:35", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365470239", "text": "r? @kaspth\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-14 01:55:37", "user": 7468109, "id": 365470239}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365511921", "text": "Thanks! I'll backport to all supported versions", "created_at": "2018-02-14 06:46:02", "user": 47848, "id": 365511921}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365591006", "text": "@rafaelfranca at least the back branches should be `>= 0.7, < 2`, I think... we don't want to force people to upgrade a dependency. Considering https://github.com/svenfuchs/rails-i18n/issues/766, maybe 5.2 too.", "created_at": "2018-02-14 12:20:49", "user": 1034, "id": 365591006}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365609927", "text": "@matthewd I just released new `rails-i18n` that depends on `i18n >= 0.7, < 2`.", "created_at": "2018-02-14 13:40:25", "user": 5565, "id": 365609927}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365671794", "text": "Good point. I'll change it", "created_at": "2018-02-14 16:54:20", "user": 47848, "id": 365671794}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {"heart": [24900392, 389262, 547653, 4928594], "+1": [1174604]}, "text": "### Steps to reproduce\r\nDelete an associated object via `_destroy` in nested attributes, on a `has_one` association. That association is still non-null on the parent object until you call `reload`.\r\n\r\nrunnable test case: https://gist.github.com/12eh/8dff5d9a1ad4b173f4e5c40a405d1d38\r\n\r\n### Expected behavior\r\nThe association should return `nil`, consistent with other modifications made by `update` and how nested attributes behave with `has_many`.\r\n\r\n### Actual behavior\r\nThe deleted object is still present.\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.5.0p0\r\n", "labels": [], "number": 31990, "updated_at": "2018-03-04 05:49:18", "user": 2467799, "closed_at": "None", "id": 296947898, "title": "Destroying via nested attributes on has_one does not clear in-memory association", "url": "https://api.github.com/repos/rails/rails/issues/31990", "created_at": "2018-02-14 01:37:38", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/370204138", "text": "Can you please test of the latest stable version of Rails? I'm interested in making a fix if needed on the latest stable version (today).", "created_at": "2018-03-04 05:49:18", "user": 1174604, "id": 370204138}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {"+1": [25447, 160941, 6288426, 4688776, 1635820, 351958, 1742357]}, "text": "Attempts to create a record with the given attributes in a table that has a unique constraint\r\non one or several of its columns. If a row already exists with one or several of these\r\nunique constraints, the exception such an insertion would normally raise is caught, \r\nand the existing record with those attributes is sought found using #find_by.\r\n\r\nThis is similar to #find_or_create_by, but avoids the problem of stale reads, as that methods needs\r\nto first query the table, then attempt to insert a row if none is found. That leaves a timing gap\r\nbetween the SELECT and the INSERT statements that can cause problems in high throughput applications.\r\n\r\nThere are several drawbacks to #create_or_find_by, though:\r\n\r\n* The underlying table must have the relevant columns defined with unique constraints.\r\n* A unique constraint violation may be triggered by only one, or at least less than all, \r\n  of the given attributes. This means that the subsequent #find_by may fail to find a\r\n  matching record, which will then return nil, rather than a record will the given attributes.\r\n* It relies on exception handling to handle control flow, which may be marginally slower. And\r\n\r\nThis method will always returns a record if all given attributes are covered by unique constraints,\r\nbut if creation was attempted and failed due to validation errors it won't be persisted, you get what\r\n#create returns in such situation.", "labels": [], "number": 31989, "updated_at": "2018-02-21 23:57:17", "user": 2741, "closed_at": "2018-02-15 00:51:15", "id": 296927422, "title": "Add #create_or_find_by to lean on unique constraints", "url": "https://api.github.com/repos/rails/rails/issues/31989", "created_at": "2018-02-13 23:47:21", "comments": [{"reactions": {"+1": [18376110]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365445545", "text": "This is really good.  I have multiple use cases for this.  👍 ", "created_at": "2018-02-13 23:49:48", "user": 13086902, "id": 365445545}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365458500", "text": "TIL! Do you have an idea for a good test for that?\n\nOn Tue, Feb 13, 2018 at 4:49 PM, Matthew Draper <notifications@github.com>\nwrote:\n\n> *@matthewd* commented on this pull request.\n> ------------------------------\n>\n> In activerecord/lib/active_record/relation.rb\n> <https://github.com/rails/rails/pull/31989#discussion_r168049957>:\n>\n> > +    #\n> +    # There are several drawbacks to #create_or_find_by, though:\n> +    #\n> +    # * The underlying table must have the relevant columns defined with unique constraints.\n> +    # * A unique constraint violation may be triggered by only one, or at least less than all,\n> +    #   of the given attributes. This means that the subsequent #find_by may fail to find a\n> +    #   matching record, which will then raise an `ActiveRecord::NotFound` exception,\n> +    #   rather than a record will the given attributes.\n> +    # * It relies on exception handling to handle control flow, which may be marginally slower. And\n> +    #\n> +    # This method will always returns a record if all given attributes are covered by unique constraints,\n> +    # but if creation was attempted and failed due to validation errors it won't be persisted, you get what\n> +    # #create returns in such situation.\n> +    def create_or_find_by(attributes, &block)\n> +      create(attributes, &block)\n> +    rescue ActiveRecord::RecordNotUnique\n>\n> Because it doesn't cause an SQL error and then attempt to recover.\n> PostgreSQL remembers when an error has occurred inside a transaction, and\n> disallows all further operations until that transaction has been rolled\n> back.\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/rails/rails/pull/31989#discussion_r168049957>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAAKtbTMH-JrUyizELV10shNLxOgesnAks5tUi2lgaJpZM4SElV8>\n> .\n>\n", "created_at": "2018-02-14 00:54:13", "user": 2741, "id": 365458500}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365463831", "text": "I think this should do it:\r\n\r\n```ruby\r\ndef test_create_or_find_by_within_transaction\r\n  assert_nil Subscriber.find_by(nick: \"bob\")\r\n\r\n  subscriber = Subscriber.create!(nick: \"bob\")\r\n\r\n  Subscriber.transaction do\r\n    assert_equal subscriber, Subscriber.create_or_find_by(nick: \"bob\")\r\n    assert_not_equal subscriber, Subscriber.create_or_find_by(nick: \"cat\")\r\n  end\r\nend\r\n```", "created_at": "2018-02-14 01:21:25", "user": 1034, "id": 365463831}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366471040", "text": "Awesome!", "created_at": "2018-02-17 21:00:35", "user": 18376110, "id": 366471040}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366534957", "text": "Good stuff.", "created_at": "2018-02-18 18:09:38", "user": 9843667, "id": 366534957}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/367511089", "text": "Happy to explore that as a PG 9.5 level-up somehow. But the whole feature shouldn’t depend on it imo.\n\n> On Feb 21, 2018, at 12:47, Sean Griffin <notifications@github.com> wrote:\n> \n> @sgrif commented on this pull request.\n> \n> In activerecord/lib/active_record/relation.rb:\n> \n> > +    #\n> +    # There are several drawbacks to #create_or_find_by, though:\n> +    #\n> +    # * The underlying table must have the relevant columns defined with unique constraints.\n> +    # * A unique constraint violation may be triggered by only one, or at least less than all, \n> +    #   of the given attributes. This means that the subsequent #find_by may fail to find a\n> +    #   matching record, which will then raise an `ActiveRecord::NotFound` exception,\n> +    #   rather than a record will the given attributes.\n> +    # * It relies on exception handling to handle control flow, which may be marginally slower. And\n> +    #\n> +    # This method will always returns a record if all given attributes are covered by unique constraints,\n> +    # but if creation was attempted and failed due to validation errors it won't be persisted, you get what\n> +    # #create returns in such situation.\n> +    def create_or_find_by(attributes, &block)\n> +      create(attributes, &block)\n> +    rescue ActiveRecord::RecordNotUnique\n> If we are willing to require PG 9.5 or later for this (when using the PG adapter), we could just stick ON CONFLICT DO NOTHING on the end instead. This would let us wrap the whole thing in a transaction instead of just the create, which eliminates any possibility of race conditions.\n> \n> —\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n> \n", "created_at": "2018-02-21 23:15:31", "user": 2741, "id": 367511089}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/367519672", "text": "(Hmm, @sgrif's comment was gone?)\r\n\r\n@sgrif I'm 👍 on expanding this feature for PG 9.5+ in PG adapter. Other RDBMS can fallback to unique-key-constaint-exception-then-find.", "created_at": "2018-02-21 23:57:17", "user": 4912, "id": 367519672}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Description [ActiveRecord][SQLite]\r\n\r\nHi. I try to add a not null constraint to varchar(string in active record) field to table called categories but at some point of code execution I get a *DROP TABLE* error.\r\n\r\n### Steps to reproduce\r\n\r\n* Create a project: `rails new blog`\r\n* Create a model: `rails g model Category name:string`\r\n* Create another model: `rails g model Entry name:string category:references`\r\n* Do migrate: `rails db:migrate` \r\n* Add some code to seeds:\r\n```ruby\r\ncategories = [\r\n    { id: 1, name: 'Category 1' }\r\n]\r\nCategory.create! categories\r\n\r\nentries = [\r\n    { id: 1, name: 'Entry 1', category_id: 1 }\r\n]\r\nEntry.create! entries\r\n\r\n```\r\n* Do seeds: `rails bd:seed`\r\n* Generate a new empty migration: `rails g migration AddNotNullToCategories`\r\n* Try to use change_column_null with name attribute in categories table:\r\n```ruby\r\nclass AddNotNullToCategories < ActiveRecord::Migration[5.1]\r\n  def change\r\n    change_column_null :categories, :name, false\r\n  end\r\nend\r\n```\r\n* Do migrate to get the error: `rails db:migrate` \r\n\r\n### Expected behavior\r\n\r\nThe not null constraint must be added to the field name in the table categories.\r\n\r\n### Actual behavior\r\n\r\nAn error for try to delete the categories table:\r\n\r\n```\r\n== 20180213223453 AddNotNullToCategories: migrating ===========================\r\n-- change_column_null(:categories, :name, false)\r\nrails aborted!\r\nStandardError: An error has occurred, this and all later migrations canceled:\r\n\r\nSQLite3::ConstraintException: FOREIGN KEY constraint failed: DROP TABLE \"categories\"\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/statement.rb:108:in `step'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/statement.rb:108:in `block in each'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/statement.rb:107:in `loop'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/statement.rb:107:in `each'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/database.rb:152:in `map'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/database.rb:152:in `block in execute'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/database.rb:95:in `prepare'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/database.rb:137:in `execute'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:251:in `block (2 levels) in execute'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activesupport-5.1.4/lib/active_support/dependencies/interlock.rb:46:in `block in permit_concurrent_loads'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activesupport-5.1.4/lib/active_support/concurrency/share_lock.rb:185:in `yield_shares'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activesupport-5.1.4/lib/active_support/dependencies/interlock.rb:45:in `permit_concurrent_loads'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:250:in `block in execute'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract_adapter.rb:612:in `block (2 levels) in log'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract_adapter.rb:611:in `block in log'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activesupport-5.1.4/lib/active_support/notifications/instrumenter.rb:21:in `instrument'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract_adapter.rb:603:in `log'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:249:in `execute'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/schema_statements.rb:471:in `drop_table'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:435:in `move_table'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:427:in `block in alter_table'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/database_statements.rb:233:in `transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:426:in `alter_table'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:370:in `change_column_null'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:849:in `block in method_missing'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:818:in `block in say_with_time'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:818:in `say_with_time'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:838:in `method_missing'\r\n/Users/rowend/Projects/rails-bug-report/blog/db/migrate/20180213223453_add_not_null_to_categories.rb:3:in `change'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:792:in `exec_migration'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:776:in `block (2 levels) in migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:775:in `block in migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/connection_pool.rb:408:in `with_connection'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:774:in `migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:953:in `migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1230:in `block in execute_migration_in_transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1298:in `block in ddl_transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/database_statements.rb:235:in `block in transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/transaction.rb:194:in `block in within_new_transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/transaction.rb:191:in `within_new_transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/database_statements.rb:235:in `transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/transactions.rb:210:in `transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1298:in `ddl_transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1229:in `execute_migration_in_transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1201:in `block in migrate_without_lock'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1200:in `each'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1200:in `migrate_without_lock'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1150:in `migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1007:in `up'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:985:in `migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/tasks/database_tasks.rb:171:in `migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/railties/databases.rake:58:in `block (2 levels) in <top (required)>'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/railties-5.1.4/lib/rails/commands/rake/rake_command.rb:21:in `block in perform'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/railties-5.1.4/lib/rails/commands/rake/rake_command.rb:18:in `perform'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/railties-5.1.4/lib/rails/command.rb:46:in `invoke'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/railties-5.1.4/lib/rails/commands.rb:16:in `<top (required)>'\r\nbin/rails:4:in `require'\r\nbin/rails:4:in `<main>'\r\n\r\nCaused by:\r\nActiveRecord::InvalidForeignKey: SQLite3::ConstraintException: FOREIGN KEY constraint failed: DROP TABLE \"categories\"\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/statement.rb:108:in `step'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/statement.rb:108:in `block in each'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/statement.rb:107:in `loop'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/statement.rb:107:in `each'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/database.rb:152:in `map'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/database.rb:152:in `block in execute'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/database.rb:95:in `prepare'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/database.rb:137:in `execute'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:251:in `block (2 levels) in execute'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activesupport-5.1.4/lib/active_support/dependencies/interlock.rb:46:in `block in permit_concurrent_loads'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activesupport-5.1.4/lib/active_support/concurrency/share_lock.rb:185:in `yield_shares'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activesupport-5.1.4/lib/active_support/dependencies/interlock.rb:45:in `permit_concurrent_loads'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:250:in `block in execute'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract_adapter.rb:612:in `block (2 levels) in log'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract_adapter.rb:611:in `block in log'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activesupport-5.1.4/lib/active_support/notifications/instrumenter.rb:21:in `instrument'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract_adapter.rb:603:in `log'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:249:in `execute'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/schema_statements.rb:471:in `drop_table'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:435:in `move_table'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:427:in `block in alter_table'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/database_statements.rb:233:in `transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:426:in `alter_table'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:370:in `change_column_null'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:849:in `block in method_missing'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:818:in `block in say_with_time'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:818:in `say_with_time'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:838:in `method_missing'\r\n/Users/rowend/Projects/rails-bug-report/blog/db/migrate/20180213223453_add_not_null_to_categories.rb:3:in `change'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:792:in `exec_migration'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:776:in `block (2 levels) in migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:775:in `block in migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/connection_pool.rb:408:in `with_connection'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:774:in `migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:953:in `migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1230:in `block in execute_migration_in_transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1298:in `block in ddl_transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/database_statements.rb:235:in `block in transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/transaction.rb:194:in `block in within_new_transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/transaction.rb:191:in `within_new_transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/database_statements.rb:235:in `transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/transactions.rb:210:in `transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1298:in `ddl_transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1229:in `execute_migration_in_transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1201:in `block in migrate_without_lock'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1200:in `each'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1200:in `migrate_without_lock'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1150:in `migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1007:in `up'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:985:in `migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/tasks/database_tasks.rb:171:in `migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/railties/databases.rake:58:in `block (2 levels) in <top (required)>'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/railties-5.1.4/lib/rails/commands/rake/rake_command.rb:21:in `block in perform'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/railties-5.1.4/lib/rails/commands/rake/rake_command.rb:18:in `perform'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/railties-5.1.4/lib/rails/command.rb:46:in `invoke'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/railties-5.1.4/lib/rails/commands.rb:16:in `<top (required)>'\r\nbin/rails:4:in `require'\r\nbin/rails:4:in `<main>'\r\n\r\nCaused by:\r\nSQLite3::ConstraintException: FOREIGN KEY constraint failed\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/statement.rb:108:in `step'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/statement.rb:108:in `block in each'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/statement.rb:107:in `loop'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/statement.rb:107:in `each'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/database.rb:152:in `map'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/database.rb:152:in `block in execute'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/database.rb:95:in `prepare'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/sqlite3-1.3.13/lib/sqlite3/database.rb:137:in `execute'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:251:in `block (2 levels) in execute'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activesupport-5.1.4/lib/active_support/dependencies/interlock.rb:46:in `block in permit_concurrent_loads'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activesupport-5.1.4/lib/active_support/concurrency/share_lock.rb:185:in `yield_shares'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activesupport-5.1.4/lib/active_support/dependencies/interlock.rb:45:in `permit_concurrent_loads'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:250:in `block in execute'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract_adapter.rb:612:in `block (2 levels) in log'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract_adapter.rb:611:in `block in log'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activesupport-5.1.4/lib/active_support/notifications/instrumenter.rb:21:in `instrument'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract_adapter.rb:603:in `log'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:249:in `execute'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/schema_statements.rb:471:in `drop_table'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:435:in `move_table'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:427:in `block in alter_table'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/database_statements.rb:233:in `transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:426:in `alter_table'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/sqlite3_adapter.rb:370:in `change_column_null'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:849:in `block in method_missing'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:818:in `block in say_with_time'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:818:in `say_with_time'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:838:in `method_missing'\r\n/Users/rowend/Projects/rails-bug-report/blog/db/migrate/20180213223453_add_not_null_to_categories.rb:3:in `change'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:792:in `exec_migration'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:776:in `block (2 levels) in migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:775:in `block in migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/connection_pool.rb:408:in `with_connection'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:774:in `migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:953:in `migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1230:in `block in execute_migration_in_transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1298:in `block in ddl_transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/database_statements.rb:235:in `block in transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/transaction.rb:194:in `block in within_new_transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/transaction.rb:191:in `within_new_transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/database_statements.rb:235:in `transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/transactions.rb:210:in `transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1298:in `ddl_transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1229:in `execute_migration_in_transaction'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1201:in `block in migrate_without_lock'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1200:in `each'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1200:in `migrate_without_lock'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1150:in `migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:1007:in `up'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/migration.rb:985:in `migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/tasks/database_tasks.rb:171:in `migrate'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/activerecord-5.1.4/lib/active_record/railties/databases.rake:58:in `block (2 levels) in <top (required)>'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/railties-5.1.4/lib/rails/commands/rake/rake_command.rb:21:in `block in perform'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/railties-5.1.4/lib/rails/commands/rake/rake_command.rb:18:in `perform'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/railties-5.1.4/lib/rails/command.rb:46:in `invoke'\r\n/Users/rowend/Projects/rails-bug-report/blog/vendor/ruby/2.4.0/gems/railties-5.1.4/lib/rails/commands.rb:16:in `<top (required)>'\r\nbin/rails:4:in `require'\r\nbin/rails:4:in `<main>'\r\nTasks: TOP => db:migrate\r\n(See full trace by running task with --trace)\r\n```\r\n\r\n### System configuration\r\n**OS version**: macos High Sierra 10.13.2\r\n\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.4.1\r\n\r\n**Sqlite version**: 3.19.3\r\n\r\nThank you for the support and all the work you do.", "labels": ["activerecord"], "number": 31988, "updated_at": "2018-02-13 23:31:29", "user": 669939, "closed_at": "None", "id": 296920926, "title": "change_column_null tries to drop table [ActiveRecord][SQLite][Mac]", "url": "https://api.github.com/repos/rails/rails/issues/31988", "created_at": "2018-02-13 23:16:30", "comments": [{"reactions": {"+1": [669939, 974295]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365441798", "text": "This is the expected behavior, when changing a table in sqlite3 we need to copy the content of a table to a temporary table and delete the original. See https://www.sqlite.org/lang_altertable.html.\r\n\r\nAlthough we should disable foreign keys in order to that succeed.", "created_at": "2018-02-13 23:31:21", "user": 47848, "id": 365441798}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "This is a failing test for `has_one_attached` with `dependent: false`. When executed, it fails with:\r\n\r\n```\r\nActiveRecord::RecordNotSaved: Failed to remove the existing associated \r\nother_avatar_attachment. The record failed to save after its foreign key was\r\nset to nil.\r\n```\r\n\r\nThis error occurs because the generated `has_one :other_avatar_attachment` association does not specify a value for `dependent`, causing the code [here](https://github.com/rails/rails/blob/master/activestorage/lib/active_storage/attached/one.rb#L26) to set the association which attempts to nullify `record_id` on the old `Attachment`.\r\n\r\nAdding `dependent: :destroy` to the definition of the association seems to solve the problem, but I'm not confident it doesn't have other unexpected consequences - will investigate further.\r\n\r\nThis test fails on 5-2-stable as well as master.", "labels": ["activestorage"], "number": 31987, "updated_at": "2018-03-05 21:04:48", "user": 1191, "closed_at": "2018-03-05 21:04:48", "id": 296914519, "title": "WIP - failing test for dependent: false", "url": "https://api.github.com/repos/rails/rails/issues/31987", "created_at": "2018-02-13 22:49:38", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365432243", "text": "r? @pixeltrix\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-13 22:49:40", "user": 7468109, "id": 365432243}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/370565098", "text": "Thanks! Merged and fixed in 8228d12a43927a22d0ac9bd351d18f473d6a49ae. Backported to `5-2-stable`.", "created_at": "2018-03-05 21:04:47", "user": 94129, "id": 370565098}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "It's a suggestion to edit the topics for the Rails repository.\r\n\r\n![rails-repsoitory](https://user-images.githubusercontent.com/1139813/36108893-98f8cd3c-0ffc-11e8-81a2-1bf0b03d8fd9.png)\r\n\r\nRails doesn't turn up in this list: [https://github.com/topics/framework]( https://github.com/topics/framework?o=desc&s=stars), but others polular frameworks like Laravel and Django does.\r\n\r\nMy suggestion is to add the \"framework\" topic and make it more discoverable.\r\n", "labels": [], "number": 31986, "updated_at": "2018-02-13 19:48:55", "user": 1139813, "closed_at": "2018-02-13 19:48:53", "id": 296857442, "title": "Add 'framework' topic to better categorize rails repository", "url": "https://api.github.com/repos/rails/rails/issues/31986", "created_at": "2018-02-13 19:29:36", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365382742", "text": "Thanks", "created_at": "2018-02-13 19:48:55", "user": 47848, "id": 365382742}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "I am trying to handle the case where the last step of a direct upload fails (the `PATCH` call to my model), and I have noticed an odd behaviour. Here goes:\r\n\r\n### Steps to reproduce\r\n- Set up the `Profile` model with `has_one_attached :document`.\r\n- Create an instance of `Profile` (referred to as `profile`)\r\n- Use a direct upload form to attach a document to `profile` (controller and view code below)\r\n- Everything works fine so far, I can see the image and its filename.\r\n- Force a failure in the `PATCH` call to `/profile/document`: intentionally modify a validation in the Profile model so that any call to Profile#update fails\r\n- Upload another document for the same Profile, and watch the `PATCH` fail.\r\n\r\n### Expected behavior\r\nWhen this last step fails, I'd expect the whole state of my app to go back to its state from before the beginning of the upload process (the `POST` call to `rails/active_storage/direct_uploads`).\r\n\r\nI'd also expect the former file to still be there on the storage, and the new one to not be there.\r\n\r\n### Actual behavior\r\nThe Attachment record for my Profile is still the same, but the original Blob was destroyed, and replaced by a new one (created by the first `POST` to `rails/active_storage/direct_uploads`). The Attachment points to the destroyed Blob.\r\n\r\n`profile.document.attached?` returns `true`, but other methods, e.g. `filename` or `service_url` are undefined. This breaks my views: the if passes, the statements inside break.\r\n\r\nS3/Disk contains the new file, and does not contain the former one.\r\n\r\nThe logs tell me that the first call from the client to `/rails/active_storage/direct_uploads` creates a Blob. Then, after the upload to S3 is done, the `PATCH` call to `/profile/document` destroys the former Attachment and creates a new one, but this is all rolled back when my validation fails. However, it also enqueues a job that purges the former Blob, instead of purging the newly created one.\r\n\r\nFrom my understanding, what this job does should depend upon the success of the `PATCH` call. Is this an actual bug, or am I supposed to handle this manually? Or maybe there's just another way to write things and make it work automagically?\r\n\r\nOne workaround I found is to call purge or detach on the document when the update fails. From a user's point of view it removes the former document, which isn't so nice, but at least my views don't break. The Attachment is destroyed, the Blob remains, the former file is destroyed, the new one is stored. This fix is commented out in the code sample.\r\n\r\n### System configuration\r\nI get the bug on my local environment, both with S3 and Disk as targets.\r\n\r\n**Rails version**:\r\nRails 5.2.0.rc1\r\n\r\n**Ruby version**:\r\nruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-darwin17]\r\n\r\n### Code samples\r\nAdapted for better readability.\r\n```\r\nclass ProfilesController < ApplicationController\r\n  def update\r\n    if current_user.profile.update(document_params)\r\n      flash[:notice] = \"Your document was successfully uploaded\"\r\n    else\r\n      # current_profile.reload.identity_document.purge # The fix\r\n      flash[:alert] = \"Something went wrong.\"\r\n    end\r\n    redirect_to my_form_url\r\n  end\r\n\r\n  private\r\n\r\n  def document_params\r\n    params.require(:profile).permit(:document)\r\n  end\r\nend\r\n```\r\n\r\n```\r\n<% if @profile.document.attached? %>\r\n    <%= @profile.document.filename %>\r\n    <%= image_tag @profile.document %>\r\n<% else %>\r\n    No document yet\r\n<% end %>\r\n\r\n<%= form_for @profile do |f| %>\r\n    <%= f.file_field :document, direct_upload: true %>\r\n    <%= f.submit %>\r\n<% end %>\r\n```\r\nThanks in advance for your help!", "labels": ["activestorage"], "number": 31985, "updated_at": "2018-03-05 12:13:04", "user": 3263575, "closed_at": "None", "id": 296830494, "title": "ActiveStorage: invalid Attachment when last step of direct upload fails", "url": "https://api.github.com/repos/rails/rails/issues/31985", "created_at": "2018-02-13 17:56:05", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/370383313", "text": "Hello @SimonFrr, I'm currently dealing with a very similar issue, were you able to find any other info regarding this?\r\n\r\nCheers.-", "created_at": "2018-03-05 10:56:47", "user": 3136890, "id": 370383313}, {"reactions": {"+1": [3136890]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/370400874", "text": "Hi @JoseMPena, I haven't investigated further. Will keep you posted if I find something.", "created_at": "2018-03-05 12:13:04", "user": 3263575, "id": 370400874}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "I am using turbolinks-android and I need upload files to rails.. Upload with web form doesnt works very well... How to upload to activestorage using JSON api?", "labels": [], "number": 31984, "updated_at": "2018-02-13 16:47:52", "user": 2651240, "closed_at": "2018-02-13 16:47:52", "id": 296793330, "title": "How use activestorage thought api?", "url": "https://api.github.com/repos/rails/rails/issues/31984", "created_at": "2018-02-13 16:08:51", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365327692", "text": " Please use the mailing list or StackOverflow for questions/help, where a wider community will be able to help you. We reserve the issues tracker for issues only.", "created_at": "2018-02-13 16:47:52", "user": 47848, "id": 365327692}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\nrails new Hello\r\nrails generate controller say goodbye\r\nvisit URL: http://localhost:3000/say/goodbye\r\n\r\n### Expected behavior\r\nWeb page should display properly.\r\n\r\n### Actual behavior\r\nConsole Error:\r\nStarted GET \"/say/goodbye\" for 127.0.0.1 at 2018-02-13 10:52:02 -0500\r\nProcessing by SayController#goodbye as HTML\r\n  Rendering say/goodbye.html.erb within layouts/application\r\n  Rendered say/goodbye.html.erb within layouts/application (0.0ms)\r\nCompleted 500 Internal Server Error in 1202ms\r\nActionView::Template::Error (TypeError: Object doesn't support this property or method):\r\n    4:     <title>Hello</title>\r\n    5:     <%= csrf_meta_tags %>\r\n    6:\r\n    7:     <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>\r\n    8:     <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>\r\n    9:   </head>\r\n   10:\r\napp/views/layouts/application.html.erb:7:in `_app_views_layouts_application_html_erb__1475447606_69117360'\r\n\r\n### System configuration\r\nWindows 10\r\n=> Booting Puma\r\n=> Rails 5.1.4 application starting in development\r\n=> Run `rails server -h` for more startup options\r\n*** SIGUSR2 not implemented, signal based restart unavailable!\r\n*** SIGUSR1 not implemented, signal based restart unavailable!\r\n*** SIGHUP not implemented, signal based logs reopening unavailable!\r\nPuma starting in single mode...\r\n* Version 3.11.2 (ruby 2.4.3-p205), codename: Love Song\r\n* Min threads: 5, max threads: 5\r\n* Environment: development\r\n* Listening on tcp://0.0.0.0:3000\r\nUse Ctrl-C to stop\r\n\r\n### Extra\r\nThis problem has been discussed on stackoverflow and elsewhere:\r\nhttps://stackoverflow.com/questions/28421547/rails-execjsprogramerror-in-pageshome\r\nThe workaround suggested down the page by MK McKenzie worked for me but these posts are 3 years and it is hard to believe that they are still happening for such a basic use case.\r\n", "labels": [], "number": 31983, "updated_at": "2018-02-13 16:51:57", "user": 6454972, "closed_at": "None", "id": 296791541, "title": "ExecJS::ProgramError in Say#goodbye, ActionView::Template::Error (TypeError: Object doesn't support this property or method):", "url": "https://api.github.com/repos/rails/rails/issues/31983", "created_at": "2018-02-13 16:04:20", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365329114", "text": "This is a problem with CoffeeScript in Windows machine, since nobody in the Rails team uses windows we have no interest of fixing this issue.\r\n\r\nYou can generate the application without CoffeeScript or you could try to investigate yourself and try to fix this issue.", "created_at": "2018-02-13 16:51:57", "user": 47848, "id": 365329114}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nUpload a valid pdf file and ask for a preview in a view\r\n\r\n### Expected behavior\r\nShould display the previewed version\r\n\r\n### Actual behavior\r\na broken image is displayed, error logs contain misleading information\r\n\r\n### System configuration\r\nrails 5.2rc1 and 5.2 freeze\r\nrecent debian derived os's (discovered on google app engine flex env)\r\n\r\n**Ruby version**:\r\nn/a\r\n\r\n### Notes\r\n\r\non debian and derived distros (and probably upstream) they changed the command for accessing the \"generate image preview of pdf file\" feature. While \"mutool draw ...\" used to work, apparently until 1.8, newer versions use the command \"mudraw\". Also, you can't invoke as \"mudraw draw\", something along:\r\n\r\n```\r\n$ mudraw draw  -F png -o - report.pdf 1 \r\nnothing to do.. \r\n```\r\n\r\nbut returns a zero exit status (so cannot simply configure the command to use)\r\n\r\nOn a related note, I believe pdf_previewer.rb  could use something along:\r\n```ruby\r\n    def preview\r\n      download_blob_to_tempfile do |input|\r\n        draw_first_page_from input do |output|\r\n          raise(\"size of preview is zero, no good!\") if output.size == 0\r\n          yield io: output, filename: \"#{blob.filename.base}.png\", content_type: \"image/png\"\r\n        end\r\n      end\r\n    end\r\n```\r\n\r\ngiven mutools tendency to pretend all is well even when it itsn't at all.", "labels": [], "number": 31982, "updated_at": "2018-02-13 15:54:30", "user": 137305, "closed_at": "2018-02-13 15:44:53", "id": 296762969, "title": "ActiveStorage - pdf previews not working on some environments", "url": "https://api.github.com/repos/rails/rails/issues/31982", "created_at": "2018-02-13 14:48:29", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365293279", "text": "> While \"mutool draw ...\" used to work, apparently until 1.8, newer versions use the command \"mudraw\".\r\n\r\nWhat version of MuPDF are you running? My recollection is the opposite: `mudraw` was folded into `mutool` in 1.8.", "created_at": "2018-02-13 15:03:36", "user": 94129, "id": 365293279}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365304348", "text": "exact version is 1.5-1+deb8u3, deb package on google app engine base image, seems to come from debian jessie.. a bit old but not prehistoric!", "created_at": "2018-02-13 15:38:50", "user": 137305, "id": 365304348}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365306368", "text": "You’ll need to upgrade to at least 1.8.", "created_at": "2018-02-13 15:44:53", "user": 94129, "id": 365306368}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365309196", "text": "unfortunately it isn't that easy in my environment - On google cloud (at least if you want to use app engine) you have to use a given base image to build your container upon. Or at least all of the documentation seems to point to that. So if/until the image is based on debian jessie I'm stuck on 1.5 for mupdf. I probably could force a newer version by either compiling from source or looking for a updated .deb in some repo during container build.. but I'd rather be able to (fully) configure the command the previewer uses, wouldn't you? ;)\r\nOtherwise.. could it be possible to swap the pdf previewer for my own version with my custom command?", "created_at": "2018-02-13 15:53:06", "user": 137305, "id": 365309196}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365309668", "text": "> could it be possible to swap the pdf previewer for my own version with my custom command?\r\n\r\nYes, you can trivially do that by replacing `ActiveStorage::Previewer::PDFPreviewer` in `config.active_storage.previewers`.", "created_at": "2018-02-13 15:54:30", "user": 94129, "id": 365309668}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nUpload a zero bytes file, no errors are raised. This is almost always a (end)user error, maybe for some particular apps they make sense, but not in general.\r\nAlso, if zero bytes user uploads are questionable, zero bytes generated previews are even worse, as they generally point out to some issue with the previewer class\r\n\r\n### Expected behavior\r\nI would expect an exception being raised", "labels": [], "number": 31981, "updated_at": "2018-02-15 08:44:48", "user": 137305, "closed_at": "2018-02-15 00:53:06", "id": 296757329, "title": "ActiveStorage - should zero bytes attachments be allowed?", "url": "https://api.github.com/repos/rails/rails/issues/31981", "created_at": "2018-02-13 14:32:26", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365668296", "text": "You can handle that in your own application via validation. I don't think default behavior should be to raise an exception because, for some cases, a zero byte file will be valid.", "created_at": "2018-02-14 16:44:02", "user": 4249414, "id": 365668296}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365794315", "text": "Yep, zero byte file is considered valid. You should consider adding a validation for size or content type as that will prevent user from uploading a bad data.", "created_at": "2018-02-15 00:53:06", "user": 4912, "id": 365794315}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365860056", "text": "You mean monkey patching the engine model?", "created_at": "2018-02-15 08:44:48", "user": 137305, "id": 365860056}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\nI have three models looking like this: \r\n\r\n```ruby\r\nclass City < ActiveRecord::Base\r\n  has_many :buildings\r\n  has_many :managers, :through => :buildings\r\nend\r\nclass Building < ActiveRecord::Base\r\n  belongs_to :city\r\n  belongs_to :manager\r\nend\r\nclass Manager < ActiveRecord::Base\r\n  has_many :buildings\r\nend\r\n```\r\n\r\nI try to destroy all managers in a city using `city.managers.destroy_all`. I've also created a test case using one of the templates: [https://gist.github.com/skyfmmf/83d18f81fd06b5ec0e52809c468e6292](https://gist.github.com/skyfmmf/83d18f81fd06b5ec0e52809c468e6292)\r\n\r\n### Expected behavior\r\nI would have expected that all the managers in the city would be gone afterwards but everything else is still there. \r\n\r\n### Actual behavior\r\nInstead the buildings are deleted and the managers keep existing\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n**Ruby version**: 2.3.6\r\n", "labels": [], "number": 31980, "updated_at": "2018-02-13 14:37:05", "user": 1775352, "closed_at": "2018-02-13 14:37:04", "id": 296754344, "title": "Destroying all objects in through-association only destroys join table ", "url": "https://api.github.com/repos/rails/rails/issues/31980", "created_at": "2018-02-13 14:23:40", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365285046", "text": "This is the [documented behavior](http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html#module-ActiveRecord::Associations::ClassMethods-label-What+gets+deleted-3F) of `destroy_all` on `has_many ..., through: ...` associations.", "created_at": "2018-02-13 14:37:04", "user": 94129, "id": 365285046}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Expected behavior\r\nDefault renderer (configured in config/initializers/application_controller_renderer.rb) should be used when rendering pages outside a controller.\r\n\r\n### Actual behavior\r\nHard-coded default renderer is used (host : example.org).\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4 (last stable)\r\n**Ruby version**: 2.4.1\r\n\r\n### Steps to reproduce\r\n\r\n1.  Install missing packages if necessary :\r\n\r\n```\r\n# debian instructions\r\nsudo apt-get install autoconf\r\nsudo apt-get install automake\r\nsudo apt-get install libtool\r\nsudo apt-get install libffi-dev\r\n```\r\n\r\n2. New app :\r\n\r\n```\r\nrails new test_default_renderer\r\nrails -v\r\n=> 5.1.4\r\n```\r\n\r\n3. Enable the default JS runtime :\r\n\r\n```\r\nvi Gemfile\r\n# uncomment gem 'therubyracer', platforms: :ruby\r\nbundle install # to install the gem\r\n```\r\n\r\n4. Check the default renderer :\r\n\r\n```\r\ncd test_default_renderer\r\ncat config/initializers/application_controller_renderer.rb\r\n# Be sure to restart your server when you modify this file.\r\n\r\n# ActiveSupport::Reloader.to_prepare do\r\n#   ApplicationController.renderer.defaults.merge!(\r\n#     http_host: 'example.org',\r\n#     https: false\r\n#   )\r\n# end\r\n\r\nrails c\r\nirb(main):001:0> ApplicationController.renderer.defaults\r\n=> {:http_host=>\"example.org\", :https=>false, :method=>\"get\", :script_name=>\"\", :input=>\"\"}`\r\n```\r\n\r\n5. Generate a scaffold :\r\n\r\n`rails generate scaffold page title: string`\r\n\r\n6. Check the Pages Controller renderer :\r\n\r\n```\r\nrails c\r\nirb(main):001:0>  PagesController.renderer.defaults\r\n=> {:http_host=>\"example.org\", :https=>false, :method=>\"get\", :script_name=>\"\", :input=>\"\"}\r\n```\r\n\r\n7. Change default renderer :\r\n\r\n```\r\ncat config/initializers/application_controller_renderer.rb\r\n# Be sure to restart your server when you modify this file.\r\n\r\nActiveSupport::Reloader.to_prepare do\r\n  ApplicationController.renderer.defaults.merge!(\r\n    http_host: 'genuinedomain.org',\r\n    https: false\r\n  )\r\nend\r\n```\r\n\r\n8. Recreate Page scaffold :\r\n\r\n```\r\nrails destroy scaffold Page\r\nrails generate scaffold page title: string\r\n```\r\n\r\n9. Re-check the Pages Controller renderer :\r\n\r\n```\r\nrails c\r\nirb(main):001:0>  PagesController.renderer.defaults\r\n=> {:http_host=>\"example.org\", :https=>false, :method=>\"get\", :script_name=>\"\", :input=>\"\"}\r\n```\r\n\r\n10. Conclusion :\r\n\r\n- **the default renderer is not used**\r\n- It is an issue when rendering pages outside a controller, within Channels for example", "labels": [], "number": 31979, "updated_at": "2018-02-27 23:24:32", "user": 134126, "closed_at": "None", "id": 296738214, "title": "Default renderer not used when rendering outside of controllers", "url": "https://api.github.com/repos/rails/rails/issues/31979", "created_at": "2018-02-13 13:33:31", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365411358", "text": "Related to #22975", "created_at": "2018-02-13 21:32:40", "user": 134126, "id": 365411358}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366708500", "text": "With Rails 5.0.0.beta2, **rails generate scaffold page title: string** trigger an error :\r\n\r\n`config/initializers/application_controller_renderer.rb:3:in `merge!': can't modify frozen Hash (RuntimeError)`", "created_at": "2018-02-19 14:27:36", "user": 134126, "id": 366708500}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/369063846", "text": "Anyone having an idea on how to workaround this issue ?", "created_at": "2018-02-27 23:24:32", "user": 134126, "id": 369063846}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {"heart": [350807]}, "text": "See https://github.com/rails/rails/pull/31957#issuecomment-364817423\r\n\r\nThe purpose of `--force` is not to have any prompt whether a file should\r\nbe kept or overwritten. In general, all existing files should be overwritten.\r\nHowever, `config/master.key` is special because it is git-ignored, and\r\noverwriting it will cause the app not to run (since there won't be a way\r\nto decrypt the credentials).\r\n\r\nAs a result, it's probably better to keep the existing config/master.key.\r\n\r\n@y-yagi Is this what you had in mind?", "labels": [], "number": 31978, "updated_at": "2018-02-13 14:37:17", "user": 10076, "closed_at": "2018-02-13 12:18:40", "id": 296622464, "title": "Don't overwrite config/master.key even on --force", "url": "https://api.github.com/repos/rails/rails/issues/31978", "created_at": "2018-02-13 05:56:10", "comments": [{"reactions": {"heart": [350807]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365250565", "text": "This is exactly what I had in mind. Thanks!", "created_at": "2018-02-13 12:18:57", "user": 987638, "id": 365250565}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\nGo to console, find existing project and generate a model:\r\n``` rails g model ProductVariation asin:string{null:false} data:jsonb{null:false} parent_asin:string{null:false} ```\r\n\r\n### Expected behavior\r\nI was expecting that i would have a database migration, that would create a product_variations table\r\n\r\nwith following structure:\r\n```\r\nt.string :asin, null: false\r\nt.jsonb :data, null: false\r\nt.string :parent_asin, null: false\r\n```\r\n\r\n+ plus created_at and updated_at columns\r\n### Actual behavior\r\nI got this in a migration:\r\n\r\n```\r\ncreate_table :product_variations do |t|\r\n      t.string :asin\r\n      t.stringa :asin\r\n      t.stringe :asin\r\n      t.stringf :asin\r\n      t.stringl :asin\r\n      t.stringn :asin\r\n      t.strings :asin\r\n      t.stringu :asin\r\n      t.jsonb :data\r\n      t.jsonba :data\r\n      t.jsonbe :data\r\n      t.jsonbf :data\r\n      t.jsonbl :data\r\n      t.jsonbn :data\r\n      t.jsonbs :data\r\n      t.jsonbu :data\r\n      t.string :parent_asin\r\n      t.stringa :parent_asin\r\n      t.stringe :parent_asin\r\n      t.stringf :parent_asin\r\n      t.stringl :parent_asin\r\n      t.stringn :parent_asin\r\n      t.strings :parent_asin\r\n      t.stringu :parent_asin\r\n\r\n      t.timestamps\r\n    end\r\n```\r\n\r\nModel looked as expected.\r\n### System configuration\r\n**Rails version**:\r\nRails 5.2.0.rc1\r\n**Ruby version**:\r\nruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-darwin15]\r\n", "labels": [], "number": 31977, "updated_at": "2018-02-13 04:58:34", "user": 544377, "closed_at": "2018-02-13 04:58:34", "id": 296612630, "title": "Model generator creates database migration with awkward columns types.", "url": "https://api.github.com/repos/rails/rails/issues/31977", "created_at": "2018-02-13 04:45:51", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365151315", "text": "It looks like the same issue as https://github.com/rails/rails/issues/31963#issuecomment-364902124.\r\nPlease try to wrap field definition inside double quote. Thanks.", "created_at": "2018-02-13 04:58:34", "user": 987638, "id": 365151315}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Due to the ease of environmental setup at CI and the short execution time of tests, I think that headless driver is appropriate as default.\r\n\r\n", "labels": [], "number": 31976, "updated_at": "2018-02-12 23:42:16", "user": 987638, "closed_at": "2018-02-12 23:31:26", "id": 296561386, "title": "Change the system test default driver to Headless Chrome", "url": "https://api.github.com/repos/rails/rails/issues/31976", "created_at": "2018-02-12 23:26:57", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365098621", "text": "@eileencodes What do you think?", "created_at": "2018-02-12 23:27:15", "user": 987638, "id": 365098621}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365099489", "text": "Hey @y-yagi my opinion is that Chrome with Selenium is the best default for beginners, and for new apps trying out system tests. You can see your tests actually run rather than in headless you can't see them. Once users are comfortable with the defaults they can easily change the driver later.", "created_at": "2018-02-12 23:31:25", "user": 1080678, "id": 365099489}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365101579", "text": "I understood the intention. Thanks!", "created_at": "2018-02-12 23:42:13", "user": 987638, "id": 365101579}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Note: I believe the way that this works is by associating with post_id, so if that's the case it makes sense that this would be the behavior, and I suppose this becomes an enhancement request.\r\n\r\n`Comment` knows that it has a `Post` associated with it as evidenced by the passed assertion on L66, so is it possible to leverage that relationship to make the `through` association work?\r\n\r\n### Steps to reproduce\r\n\r\nScript to reproduce: https://gist.github.com/zachwalton/395412f5b7e97837e6273981dbb7faf3\r\n\r\n### Expected behavior\r\n\r\n`owner` should be not be nil when accessed through the `has_one through` association\r\n\r\n### Actual behavior\r\n\r\n`owner` is nil when accessed through the `has_one through` association\r\n\r\n### System configuration\r\n**Rails version**: 5.1.2\r\n\r\n**Ruby version**: 2.4.2\r\n", "labels": [], "number": 31975, "updated_at": "2018-02-26 14:12:04", "user": 303729, "closed_at": "None", "id": 296547134, "title": "has_one through not available on unpersisted instances", "url": "https://api.github.com/repos/rails/rails/issues/31975", "created_at": "2018-02-12 22:27:43", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368515553", "text": "This may have to do with https://github.com/rails/rails/pull/31575.", "created_at": "2018-02-26 14:12:04", "user": 1748736, "id": 368515553}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {"+1": [199]}, "text": "cherry-pick c01c38e", "labels": [], "number": 31974, "updated_at": "2018-02-12 22:32:45", "user": 6443532, "closed_at": "2018-02-12 22:30:35", "id": 296545230, "title": "Doc: fixes typo `cache:` -> `compress:`", "url": "https://api.github.com/repos/rails/rails/issues/31974", "created_at": "2018-02-12 22:20:39", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365082791", "text": "r? @georgeclaghorn\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-12 22:20:40", "user": 7468109, "id": 365082791}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365082794", "text": "<img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20> **Warning** <img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20>\n\n* Pull requests are usually filed against the master branch for this repo, but this one is against 5-2-stable. Please double check that you specified the right target!", "created_at": "2018-02-12 22:20:41", "user": 7468109, "id": 365082794}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n1. setup test environment and db. In my setup I have copied the db from development to test\r\n```rails db:drop RAILS_ENV='test'\r\nrails db:create RAILS_ENV='test'\r\nrails db:schema:load RAILS_ENV='test'\r\ncp db/development.sqlite3 db/test.sqlite3\r\n```\r\n2. create new system test\r\n`rails g system_test system_test_xyz`\r\nHere the simple test I am using (in the page I printed all database table element in css selector span):\r\n```require \"application_system_test_case\"\r\nclass SystemTestXyz < ApplicationSystemTestCase\r\n  test \"visiting the welcome index page\" do\r\n    visit root_path\r\n    assert_selector \"span\", {text: \"Table element 1\"}\r\n  end\r\nend\r\n```\r\n3. Check the test db data\r\n`rails s -e test`\r\nBrowsing inside the local website I can see all data (so, it means test.sqlite3 is populated)\r\n4. Close rails server and start rails test\r\n`rails test test/system/system_test_xyz.rb`\r\n\r\n### Expected behavior\r\n- Test have to pass\r\n\r\n### Actual behavior\r\n- Test fails due to missing data. Also found \"MyString\" instead\r\nTest data have been erased and there are only \"MyString\" string data in test DB\r\nAlso, If I reopen the rails server in test env, I can see \"MyString\" data instead of my data.\r\nIf I replace again the test.sqlite3 with development.sqlite3 and I restart the server, I can see again my data correctly.\r\nCurrently I am not able to run any test because each time I run a test I have my db test.sqlite3 erased.\r\nThe magic point is that, after the test run the test.sqlite3 seem unchanged: the memory size of test.sqlite file is the same, so it seems it contains all data, but when I run the server I see only \"MyString\" value.\r\nLooking at console, if I check the table content, I can see all filed to nil value except for the \"name\" field which contain \"MyString\" (instead of \"Table element 1\").\r\n\r\n### System configuration\r\nI am using rails 5.1.1\r\n", "labels": [], "number": 31973, "updated_at": "2018-02-12 22:25:23", "user": 13976756, "closed_at": "2018-02-12 22:25:22", "id": 296540661, "title": "In test environment, data of sqlite db are erased after system test execution", "url": "https://api.github.com/repos/rails/rails/issues/31973", "created_at": "2018-02-12 22:03:48", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365083996", "text": "Perhaps I think there is fixtures in the test directory. \r\n\r\nFixtures remove any existing data from the table corresponding to the fixture and load the fixture data into the table.\r\nPlease see: http://guides.rubyonrails.org/testing.html#fixtures-in-action for details.\r\n", "created_at": "2018-02-12 22:25:22", "user": 987638, "id": 365083996}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "@@ -30,7 +30,7 @@\r\n  - Change \"`<form>` tag\" to \"form tag\"\r\n  - Change \"`/home/index`\" to \"a home page\"\r\n  - Remove \"(some line breaks added for readability)\" since\r\n    there aren't broken lines below.\r\n\r\n@@ -40,9 +40,11 @@\r\n  - Change \"an `input` element\" to \"input elements\" since there are\r\n    two hidden elements.\r\n  - Put the sentence \"This `input` is important, because non-GET\r\n    form cannot be successfully submitted without it.\" to paragraph\r\n    about `authenticity_token`.\r\n  - Change title of the link to `security.html#cross-site-request-forgery-csrf`\r\n    from \"Security Guide\" to \"Securing Rails Application\"(full name of the guide)\r\n    and append the word \"guide\".\r\n\r\n@@ -76,10 +78,6 @@\r\n  - Remove useless sentence \"Besides `text_field_tag` and `submit_tag`,\r\n    there is a similar helper for _every_ form control in HTML.\" since\r\n    user is able to get this info from the guide below.\r\n  - Remove useless suggestion \"IMPORTANT: Always use \"GET\" as the method\r\n    for search forms. This allows users to bookmark a specific search\r\n    and get back to it. More generally Rails encourages you to use\r\n    the right HTTP verb for an action\".\r\n\r\n@@ -110,7 +108,7 @@\r\n  - Change \"in chapter 7 of this guide\" to \"in chapter\r\n    Understanding Parameter Naming Conventions of this guide\".\r\n\r\n@@ -142,7 +140,7 @@\r\n@@ -151,7 +149,7 @@\r\n  - `<%= label_tag(:age_adult, \"I'm over 21\") %>` outputs\r\n    `<label for=\"age_adult\">I&#39;m over 21</label>`\r\n    I changed \"I'm\" to \"I am\" in input/output for consistency with example\r\n    in order to correct output.\r\n\r\n@@ -215,7 +213,7 @@\r\n  - Change title of the link to `security.html#logging`\r\n    from \"Security Guide\" to \"Securing Rails Application\"(full name of the guide)\r\n    and append the word \"guide\".\r\n\r\n@@ -233,10 +231,10 @@\r\n  - Change `\"<input/>\"` to `\"<input />\"` for consistency with other examples\r\n    in the guide and readability.\r\n  - Remove useless sentence \"The `params[:person]` hash is suitable for\r\n    passing to `Person.new` or, if `@person` is an instance of Person,\r\n    `@person.update`. While the name of an attribute is the most common\r\n    second parameter to these helpers this is not compulsory.\r\n    In the example above, as long as person objects have a\r\n    `name` and a `name=` method Rails will be happy.\"\r\n\r\n@@ -283,7 +281,7 @@\r\n  - Change \"in the parameter_names section\" to \"in chapter Understanding\r\n    Parameter Naming Conventions of this guide\".\r\n\r\n@@ -292,7 +290,7 @@\r\n  - Fix the example of using `fields_for` with `:contact_detail`\r\n    argument to ensure that this will work if `@person.contact_detail`\r\n    is  `nil`.\r\n\r\n@@ -309,7 +307,9 @@\r\n  - Remove useless and probably incorrect sentence\r\n    \"(in fact `form_for` calls `fields_for` internally)\"\r\n    We shouldn't express internals same as private API.\r\n  - Add note about (and link to) existing method `form_with`.\r\n\r\n@@ -319,7 +319,7 @@\r\n  - Downcase the word \"Form\" in \"Rails Routing From the Outside In\"\r\n    (in order to consistency with the name of the guide) and\r\n    append the word \"guide\".\r\n\r\n@@ -327,21 +327,21 @@\r\n  - Change \"same thing, short-style (record identification gets used):\" to\r\n    \"short-style:\" for consistency and removing useless info.\r\n  - Change passing of `method:` argument in the example of using `form_for`\r\n    from `html: { method: \"patch\"}` to `method: \"patch\"` since it is\r\n    more correct and preferable.\r\n  - Remove useless and incorrect sentence \"Record identification is smart\r\n    enough to figure out if the record is new by asking `record.new_record?`\"\r\n    We shouldn't express internals same as private API.\r\n  - Add missing comma.\r\n  - Remove incorrect sentence \"These attributes will be omitted for brevity in\r\n    the rest of this guide.\" since our examples show all attributes.\r\n  - Fix warning about using `form_for` with STI:\r\n    Change the sentence \"You will have to specify the model name, `:url`,\r\n    and `:method` explicitly.\" to \"You will have to specify `:url`,\r\n    and `:as` (the model name) explicitly.\" since you'll have to specify\r\n    only `:url` and `:as` when use STI and `form_for`.\r\n\r\n@@ -357,11 +357,11 @@\r\n  - Change \"the routing guide\" to \"Rails Routing From the Outside In guide\"\r\n\r\n@@ -369,7 +369,7 @@\r\n  - Change \"output:\" to \"Output:\"\r\n  - Fix example by removing \"...\" in order for it works.\r\n\r\n@@ -405,74 +404,84 @@\r\n  - Fix example by removing \"...\" in order for it works.\r\n  - Change \"output:\" to \"Output:\"\r\n  - Express output as HTML and remove `redundant` dots.\r\n  - Remove useless sentence \"Often this will be the id of a corresponding\r\n    database object but this does not have to be the case.\" and\r\n    useless example of \"`select_tag` and `options_for_select`\"\r\n  - Remove complicated and incorrect sentence \"When `:include_blank` or `:prompt`\r\n    are not present, `:include_blank` is forced true if the select attribute\r\n    `required` is true, display `size` is one and `multiple` is not true.\"\r\n  - Change \"Models\" to \"Model Objects\" for consistency.\r\n  - Change \"database model\" to \"model\" since form_for can work with model\r\n    that doesn't related to database.\r\n  - Improve the example by adding output.\r\n\r\n@@ -480,21 +489,24 @@\r\n  - Fix example by removing \"...\" in order for it works.\r\n  - Clarify example\r\n  - Make warning about using `select` with an association more clear to express\r\n    what is important to remember. Remove useless and complicated explanation\r\n    what would happen if you do wrong in this case.\r\n\r\n@@ -511,7 +523,7 @@\r\n  - Make the sentence more clear.\r\n\r\n@@ -520,16 +532,16 @@\r\n  - Improve the example\r\n  - Make the sentence more clear.\r\n  - Change \"TimeZone\" to \"`ActiveSupport::TimeZone`\" and express it as a link\r\n\r\n@@ -537,21 +549,21 @@\r\n  - Make the sentence more clear.\r\n  - Add missing comma after \"Instead\"\r\n  - Add Oxford comma\r\n  - Clear the example by removing \"...\"\r\n\r\n@@ -585,9 +600,12 @@\r\n  - Clear the example by removing \"...\"\r\n\r\n@@ -604,30 +622,28 @@\r\n  - Remove useless note \"In many cases the built-in date pickers are clumsy as\r\n    they do not aid the user in working out the relationship between\r\n    the date and the day of the week.\"\r\n  - Add Oxford comma\r\n  - Change \"Time.now\" to \"Time.new(2009)\" in the example to make\r\n    the explanation more clear by removing \"if the current year is 2009\"\r\n  - Change \"encoding **MUST**\" to \"enctype **must**\" since it is more\r\n    clear.\r\n\r\n@@ -631,38 +647,32 @@\r\n  - Pass `url: {action: :upload}` to clarify the example since\r\n    below we use `upload` action\r\n  - Remove useless sentence \"The only difference with other helpers is that you\r\n    cannot set a default value for file inputs as this would have no meaning.\"\r\n    in order to pay attention of a reader to main info in this paragraph.\r\n  - Fix and to simpify complicated sentence about instance that\r\n    represent uploaded file by refer to `ActionDispatch::Http::UploadedFile`.\r\n  - Remove useless \" (assuming the form was the one in the previous example)\".\r\n  - Change the name of the variable in the example from `uploaded_io` to `uploaded_file`.\r\n  - Add mention about and reference to  Active Storage.\r\n    Remove useless section \"Dealing with Ajax\" since we can rely on\r\n    \"Active Storage Overview\" guide.\r\n  - Remove beginning of the sentence \"As mentioned previously\".\r\n    Change `FormBuilder` to `ActionView::Helpers::FormBuilder` and\r\n    express it as a link.\r\n\r\n@@ -703,12 +713,12 @@\r\n  - Remove beginning of the sentence \"As you've seen in the previous sections\".\r\n  - Change `FormBuilder` to `ActionView::Helpers::FormBuilder`.\r\n\r\n@@ -756,16 +766,19 @@\r\n  - Change name of the input from \"addresses[][line1]\" to \"person[addresses][][line1]\"\r\n    for consistency.\r\n  - Remove useless sentences \"Rails decides to start accumulating values in a\r\n    new hash whenever it encounters an input name that\r\n    already exists in the current hash\" and \"When working with array\r\n    parameters this duplicate submission will confuse Rails since duplicate input\r\n    names are how it decides when to start a new array element.\r\n    It is preferable to either use `check_box_tag` or to use hashes instead of arrays.\".\r\n\r\n@@ -788,6 +801,7 @@\r\n  - Clarify the example by adding `\"<input name=\"_method\" type=\"hidden\" value=\"patch\" />\"`\r\n    since this example of edit form.\r\n\r\n@@ -812,7 +826,7 @@\r\n  - Fix the value of `:index` option, change `address` to `address.id`.\r\n\r\n@@ -820,12 +834,12 @@\r\n  - Capitalize the name of the city Bologna in the example.\r\n  - Fix the value of `:index` option, change `address` to `address.id`.\r\n\r\n@@ -862,7 +876,7 @@\r\n  - Downcase \"Or\" since this isn't beginning of a new sentence.\r\n\r\n@@ -948,7 +962,7 @@\r\n  - Remove useless sentence \"You may wish to do this if the autogenerated\r\n    input is placed in a location where an input tag is not valid HTML or when\r\n    using an ORM where children do not have an `id`\".\r\n\r\n@@ -979,9 +993,9 @@\r\n  - Explain more correctly the value of `_destroy`.\r\n\r\n@@ -1024,4 +1038,4 @@\r\n  - Change \"milliseconds after the epoch\" to \"milliseconds since the epoch\" and\r\n    express as link the word \"epoch\" that can help to get to know about the \"epoch\".\r\n\r\n[ci skip]", "labels": [], "number": 31972, "updated_at": "2018-02-17 05:25:42", "user": 6443532, "closed_at": "None", "id": 296534413, "title": "Update \"Action View Form Helpers\" guide", "url": "https://api.github.com/repos/rails/rails/issues/31972", "created_at": "2018-02-12 21:42:09", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365071948", "text": "r? @eileencodes\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-12 21:42:18", "user": 7468109, "id": 365071948}], "assignees": [1080678, 1080678], "state": "open", "is-pull-request": true}
{"reactions": {"+1": [199]}, "text": "### Summary\r\n\r\nFirst, we generate without a default value, and then with it.", "labels": [], "number": 31971, "updated_at": "2018-02-12 20:39:33", "user": 10832262, "closed_at": "2018-02-12 20:37:46", "id": 296514676, "title": "Change structure in the AS core extensions guide [ci skip]", "url": "https://api.github.com/repos/rails/rails/issues/31971", "created_at": "2018-02-12 20:33:33", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365052947", "text": "r? @rafaelfranca\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-12 20:33:36", "user": 7468109, "id": 365052947}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [6443532, 15371677]}, "text": "One blob can be attached to multiple records\r\n(with `has_(one/many)_attached :thingy, dependent: false`) so it is needed to manually do garbage collecting of orphaned blobs when\r\nall related records are destroyed. Also there is a possibility of orphaned records, when for example, user\r\nabandones to submit a form with attachments.\r\n\r\nSo it seems useful and convenient for me to have `unattached` scope on\r\n`Blob` to simplify said manual garbage collecting. So, GC of orphaned records within some rake task can be done:\r\n\r\n```ruby\r\nActiveStorage::Blob.unattached.find_each(&:purge_later)\r\n```\r\n\r\nr? @georgeclaghorn @dhh ", "labels": [], "number": 31970, "updated_at": "2018-02-13 01:55:24", "user": 5657035, "closed_at": "2018-02-13 01:55:24", "id": 296510852, "title": "Add ActiveStorage::Blob.unattached scope", "url": "https://api.github.com/repos/rails/rails/issues/31970", "created_at": "2018-02-12 20:19:46", "comments": [], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "When I `rails generate <app>` with `--skip-coffee`, it will cause \r\n\r\n```LoadError (cannot load such file -- coffee_script)``` \r\n\r\nwhen visiting the page if the following configuration is used\r\n\r\n```gem 'rails', :git => 'https://github.com/rails/rails.git', :branch => '5-2-stable'```\r\n\r\nin the Gemfile. However, **it works perfectly fine if I use `gem 'rails', '~> 5.2.0.rc1'`.**\r\n\r\n### Steps to reproduce\r\n\r\n1. `rails new testing --skip-coffee`\r\n2. `cd testing`\r\n3. Replace `gem 'rails', '~> 5.2.0.rc1'` with `gem 'rails', :git => 'https://github.com/rails/rails.git', :branch => '5-2-stable'` in the `Gemfile`\r\n4. `rails generate controller pages index`\r\n5. `rake test`\r\nor\r\n6. `rails s` and visit to [http://localhost:3000/pages/index](http://localhost:3000/pages/index)\r\n\r\n### Expected behavior\r\n- Test should pass.\r\n- Page should be render successfully.\r\n\r\n### Actual behavior\r\n- Test failed with following outputs:\r\n```\r\nError:\r\nPagesControllerTest#test_should_get_index:\r\nLoadError: cannot load such file -- coffee_script\r\n    app/views/layouts/application.html.erb:7:in `_app_views_layouts_application_html_erb__3959579703635133883_70287663479740'\r\n    test/controllers/pages_controller_test.rb:5:in `block in <class:PagesControllerTest>'\r\n```\r\n- Page is render with `LoadError (cannot load such file -- coffee_script)`.\r\n\r\n### System configuration\r\n**Ruby version**: `ruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-darwin17]`\r\n\r\n----\r\n#### So, I am just curious whether this is a bug or something wrong with my configuration?", "labels": [], "number": 31969, "updated_at": "2018-02-12 17:45:29", "user": 12683067, "closed_at": "2018-02-12 17:45:29", "id": 296436354, "title": "rails new <app> --skip-coffee cause LoadError when using gem 'rails', github: 'rails/rails'", "url": "https://api.github.com/repos/rails/rails/issues/31969", "created_at": "2018-02-12 16:23:43", "comments": [{"reactions": {"+1": [12683067]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364989539", "text": "CoffeeScript is a required dependency when using Rails directly from GitHub.\r\n\r\nSee https://github.com/rails/rails/issues/31616, https://github.com/rails/rails/issues/28965.", "created_at": "2018-02-12 17:00:59", "user": 432189, "id": 364989539}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "`Analyzable, Identifiable, Representable` constants can refer to other classes in the application, and thus the full name should be used.\r\n\r\nAs an example, when using the [representable gem](https://github.com/trailblazer/representable), the wrong module gets included and it's making some important ActiveStorage features not available:\r\n```ruby\r\nNoMethodError: undefined method `variant' for #<ActiveStorage::Attached::One:0x00007f86c578e508>\r\n```\r\n", "labels": [], "number": 31968, "updated_at": "2018-02-15 01:08:05", "user": 4521397, "closed_at": "2018-02-12 20:04:39", "id": 296424040, "title": "ActiveStorage: use full class names when including concerns to avoid collisions", "url": "https://api.github.com/repos/rails/rails/issues/31968", "created_at": "2018-02-12 15:51:36", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364964971", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @eileencodes (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-12 15:51:40", "user": 7468109, "id": 364964971}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365618034", "text": "Hi, the PR makes perfect sense, but on my environment i get:\r\n\r\n```term\r\n➜  securediet git:(BetterPreview) ✗ spring stop\r\nSpring is not running\r\n➜  securediet git:(BetterPreview) ✗ bundle exec rails c\r\nRunning via Spring preloader in process 86560\r\nLoading development environment (Rails 5.2.0.rc1)\r\n[1] pry(main)> reload!\r\nReloading...\r\n/Users/loop/.rbenv/versions/2.4.3/lib/ruby/gems/2.4.0/bundler/gems/rails-7df3d0d5ed69/activestorage/app/models/active_storage/blob.rb:19: warning: toplevel constant Representable referenced by ActiveStorage::Blob::Representable\r\n=> true\r\n```\r\nand during development the Blob#previewable? method disappears.\r\n\r\nIs it just me?\r\n", "created_at": "2018-02-14 14:10:28", "user": 137305, "id": 365618034}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365796725", "text": "It's not just you, @loop23; https://github.com/rails/rails/pull/31995 should resolve your issue.", "created_at": "2018-02-15 01:08:05", "user": 432189, "id": 365796725}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "In the edge documentation I found that the wrong keyword is used for this parameter.\r\nInstead of `cache: false`, it should be `compress: false`\r\n\r\nThanks !", "labels": [], "number": 31967, "updated_at": "2018-02-13 09:21:36", "user": 351958, "closed_at": "2018-02-12 20:50:52", "id": 296399341, "title": "Typo in new RedisCacheStore docs", "url": "https://api.github.com/repos/rails/rails/issues/31967", "created_at": "2018-02-12 14:45:15", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364943087", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kaspth (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-12 14:45:18", "user": 7468109, "id": 364943087}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364943088", "text": "<img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20> **Warning** <img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20>\n\n* Pull requests are usually filed against the master branch for this repo, but this one is against 5-2-stable. Please double check that you specified the right target!", "created_at": "2018-02-12 14:45:19", "user": 7468109, "id": 364943088}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365039570", "text": "Can you rebase against the master branch? All PRs should be to the master branch unless it is an issue only in the stable branch and this is not the case here.", "created_at": "2018-02-12 19:45:23", "user": 47848, "id": 365039570}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365057559", "text": "Cherry-picked c01c38efbda53b66a4a7d677af523ac8ac493321 ❤️  Thanks @josephpage !", "created_at": "2018-02-12 20:50:52", "user": 199, "id": 365057559}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365058185", "text": "Thanks @jeremy and @rafaelfranca !", "created_at": "2018-02-12 20:53:15", "user": 351958, "id": 365058185}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "ActiveRecord::FinderMethods#limited_ids_for adds order_values to select in some RDBMS, e.g., PostgreSQL, MySQL, and so on. If order_values include other table's primary key, wrong primary key values may be found because they are ambiguous.\r\n\r\nUsing unique column alias makes free from ambiguity.\r\n\r\nFixes #28364", "labels": [], "number": 31966, "updated_at": "2018-02-28 08:32:51", "user": 694547, "closed_at": "2018-02-27 15:51:23", "id": 296390366, "title": "Use column alias of primary_key in limited_ids_for", "url": "https://api.github.com/repos/rails/rails/issues/31966", "created_at": "2018-02-12 14:20:12", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364935697", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @georgeclaghorn (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-12 14:20:15", "user": 7468109, "id": 364935697}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366501540", "text": "I feel that this issue is not `limited_ids_for` but `columns_for_distinct`.\r\n`limited_ids_for` gives an alias to a string as being a single column.\r\n(e.g. order = \"authors.id, posts.id, comments.id\" -> \"#{order} AS alias_0\")\r\n\r\nSo using `.order(\"authors.id\", \"posts.id\", \"comments.id\")` instead works as expected in this case.", "created_at": "2018-02-18 08:56:06", "user": 12642, "id": 366501540}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366860660", "text": "@kamipo Thank you so much for your comment.😋\r\n\r\nI feel that this issue is not `columns_for_distinct` but `limited_ids_for` because it depends on `limited_ids_for` implementation whether primary key is used or not. So I think `limited_ids_for` should be care about primary key and `order_values`.\r\n\r\nIt is too hard to always separate `order_values` like `.order(\"authors.id\", \"posts.id\", \"comments.id\")`. Sometimes `ORDER BY` SQL is a `String` composed of multi columns due to various reasons. Parse the SQL? It may cause bugs...💀", "created_at": "2018-02-20 03:59:08", "user": 694547, "id": 366860660}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366863502", "text": "I don't think that this issue depends on `limited_ids_for` implementation since it doesn't happens for sqlite3 adapter, and at least this issue can be fixed without `limited_ids_for` is changed.\r\n\r\n```diff\r\ndiff --git a/activerecord/lib/active_record/connection_adapters/abstract_mysql_adapter.rb b/activerecord/lib/active_record/connection_adapters/abstract_mysql_adapter.rb\r\nindex 608258d05c..964e45d7bc 100644\r\n--- a/activerecord/lib/active_record/connection_adapters/abstract_mysql_adapter.rb\r\n+++ b/activerecord/lib/active_record/connection_adapters/abstract_mysql_adapter.rb\r\n@@ -513,7 +513,7 @@ def columns_for_distinct(columns, orders) # :nodoc:\r\n           s.gsub(/\\s+(?:ASC|DESC)\\b/i, \"\")\r\n         }.reject(&:blank?).map.with_index { |column, i| \"#{column} AS alias_#{i}\" }\r\n \r\n-        [super, *order_columns].join(\", \")\r\n+        (order_columns << columns).join(\", \")\r\n       end\r\n \r\n       def strict_mode?\r\ndiff --git a/activerecord/lib/active_record/connection_adapters/postgresql/schema_statements.rb b/activerecord/lib/active_record/connection_adapters/postgresql/schema_statements.rb\r\nindex 6f3db772cd..1a31deaaf9 100644\r\n--- a/activerecord/lib/active_record/connection_adapters/postgresql/schema_statements.rb\r\n+++ b/activerecord/lib/active_record/connection_adapters/postgresql/schema_statements.rb\r\n@@ -583,7 +583,7 @@ def columns_for_distinct(columns, orders) #:nodoc:\r\n                .gsub(/\\s+NULLS\\s+(?:FIRST|LAST)\\b/i, \"\")\r\n             }.reject(&:blank?).map.with_index { |column, i| \"#{column} AS alias_#{i}\" }\r\n \r\n-          [super, *order_columns].join(\", \")\r\n+          (order_columns << columns).join(\", \")\r\n         end\r\n \r\n         def update_table_definition(table_name, base) # :nodoc:\r\n```", "created_at": "2018-02-20 04:24:54", "user": 12642, "id": 366863502}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/367336597", "text": "r? @kamipo ", "created_at": "2018-02-21 14:06:52", "user": 94129, "id": 367336597}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/367336869", "text": "Sorry, my comment was wrong. This issue is `columns_for_distinct` as you say. I didn't have good idea to fix this issue by changing only `columns_for_distinct`, so I tried to fix `limited_ids_for`.\r\n\r\nYour idea looks good to me. I reverted `limited_ids_for` changes and added a commit changing `columns_for_distinct`s. Can you check them and give feedbacks?", "created_at": "2018-02-21 14:07:43", "user": 694547, "id": 367336869}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368343529", "text": "Can you add a CHANGELOG entry and squash your commits?", "created_at": "2018-02-25 20:52:42", "user": 12642, "id": 368343529}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368524532", "text": "So sorry, I took changes in `master` branch in... And I added a CHANGELOG entry @ 952f6421bdb5ffa24184577e8434a8ae0f4cc876 .", "created_at": "2018-02-26 14:41:34", "user": 694547, "id": 368524532}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368855759", "text": "I will squash my commits after your check. Or should I recreate a new PR?", "created_at": "2018-02-27 12:19:20", "user": 694547, "id": 368855759}, {"reactions": {"+1": [694547]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368867226", "text": "It is enough to squash your commits into one in this PR.", "created_at": "2018-02-27 13:07:05", "user": 12642, "id": 368867226}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368889988", "text": "I fixed the test and squashed my commits. Thank you for your advices.", "created_at": "2018-02-27 14:10:45", "user": 694547, "id": 368889988}, {"reactions": {"hooray": [694547], "+1": [694547]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368927416", "text": "Thanks!", "created_at": "2018-02-27 15:58:49", "user": 12642, "id": 368927416}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [2350, 279927]}, "text": "Probably not a bug but, is there any way to prevent prevent ActiveStorage's S3 URLs from expiring?\r\n\r\nOr ... does ActiveStorage provide a method for obtaining the true S3 bucket URL?\r\n\r\nI am using ActiveStorage and S3 to manage images used for HTML emails. It works great immediately after the email is created. However, the next day all of the image URLs in the email message are broken. \r\n\r\nI am using the service_url method to obtain the image, like this:\r\nart.related_image.variant(resize: \"500x500\").processed.service_url\r\n\r\n**Rails version**:\r\nRails 5.2\r\n**Ruby version**:\r\n", "labels": [], "number": 31965, "updated_at": "2018-03-06 07:45:21", "user": 28433, "closed_at": "2018-02-12 20:06:05", "id": 296360244, "title": "Expiring S3 URLs and HTML Emails", "url": "https://api.github.com/repos/rails/rails/issues/31965", "created_at": "2018-02-12 12:35:01", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365045511", "text": "Please use StackOverflow for questions/help, where a wider community will be able to help you. We reserve the issues tracker for issues only.", "created_at": "2018-02-12 20:06:05", "user": 47848, "id": 365045511}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/370692364", "text": "This seems to be a common theme with activestorage. I understand the notion and point of separating questions and issues, but this seems like it could be a recurring gap in functionality for many use cases - which could arguably/potentially belong here.", "created_at": "2018-03-06 07:45:21", "user": 279927, "id": 370692364}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "This changes the purge method in `attachment/many.rb` to\r\nallow it to take an array of IDs so that records can be selectively\r\ndeleted.\r\n\r\n### Summary\r\n\r\nFor the has_many relationship of attachments, I expected there to be a way to delete both the attachment and blob for a single record, even if there were multiple attachments. In the source, I see that `purge` and `purge_later` in both `one.rb` and `many.rb` remove all records. I changed the method to perform an additional check if the user passes an array of IDs to then selectively delete only these. If no arguments are passed, purge still works as before.\r\n\r\n### Other Information\r\n\r\nI made a small test where you can see the changes in action here: https://github.com/nicholasshirley/some-purge-test", "labels": ["activestorage"], "number": 31964, "updated_at": "2018-03-06 18:04:52", "user": 1556844, "closed_at": "2018-03-06 18:04:52", "id": 296349692, "title": "Allow some purge in many.rb", "url": "https://api.github.com/repos/rails/rails/issues/31964", "created_at": "2018-02-12 11:54:25", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364901670", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @schneems (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-12 11:54:28", "user": 7468109, "id": 364901670}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365044352", "text": "Can you add tests for this new behavior?\r\n\r\nr? @georgeclaghorn ", "created_at": "2018-02-12 20:01:49", "user": 47848, "id": 365044352}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365190509", "text": "I apologize, I'm not that familiar with Minitest. I thought that I could do something like this based on the other tests:\r\n\r\n```ruby\r\ntest \"selectively purge attached blob from has_many association\" do\r\n  @user.highlights.attach create_blob(filename: \"funky.jpg\"), create_blob(filename: \"wonky.jpg\")\r\n\r\n  @user.highlights.purge(1)\r\n\r\n  assert_equal 1, @user.highlights.attachments.count\r\nend\r\n```\r\nThis fails though because I'm not calling purge correctly. If I `assert_nothing_raised` I get: `LocalJumpError: no block given (yield)`. So it seems like it's just a syntax error, though I don't see what is different about this call from the way it's called in the test app. I thought maybe I accidented into something working because the [test controller action](https://github.com/nicholasshirley/some-purge-test/blob/master/app/controllers/posts_controller.rb#L69) is inside a `respnd_to` block, but it still works there even if I remove the block.\r\n\r\nIf it's at all helpful, this is the successful SQL that is generated by making the call in the controller of the test app:\r\n\r\n```\r\nStarted POST \"/posts/purge?attachment_id%5B%5D=7&post_id=1&remote=true\" for 127.0.0.1 at 2018-02-12 22:41:00 +0100\r\nProcessing by PostsController#purge as HTML\r\n  Parameters: {\"authenticity_token\"=>\"KlLlu4M4+THYs8xzCzh3hljh9YdXGaLCPTeh4VYZsKnyGPtP4o7wg3KXspgialgcwx6/jpSo5uO/eSqGGTCh4w==\", \"attachment_id\"=>[\"7\"], \"post_id\"=>\"1\", \"remote\"=>\"true\"}\r\n  Post Load (0.1ms)  SELECT  \"posts\".* FROM \"posts\" WHERE \"posts\".\"id\" = ? LIMIT ?  [[\"id\", 1], [\"LIMIT\", 1]]\r\n  ↳ app/controllers/posts_controller.rb:66\r\n  ActiveStorage::Attachment Exists (0.2ms)  SELECT  1 AS one FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?  [[\"record_id\", 1], [\"record_type\", \"Post\"], [\"name\", \"images\"], [\"LIMIT\", 1]]\r\n  ↳ app/controllers/posts_controller.rb:69\r\n  ActiveStorage::Attachment Load (0.2ms)  SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? AND \"active_storage_attachments\".\"id\" = ?  [[\"record_id\", 1], [\"record_type\", \"Post\"], [\"name\", \"images\"], [\"id\", 7]]\r\n  ↳ app/controllers/posts_controller.rb:69\r\n  ActiveStorage::Blob Load (0.1ms)  SELECT  \"active_storage_blobs\".* FROM \"active_storage_blobs\" WHERE \"active_storage_blobs\".\"id\" = ? LIMIT ?  [[\"id\", 7], [\"LIMIT\", 1]]\r\n  ↳ app/controllers/posts_controller.rb:69\r\n  Disk Storage (0.1ms) Deleted file from key: kPypWpUGgSg7YsYqiQxpWJd6\r\n   (0.1ms)  begin transaction\r\n  ↳ app/controllers/posts_controller.rb:69\r\n  ActiveStorage::Blob Destroy (0.4ms)  DELETE FROM \"active_storage_blobs\" WHERE \"active_storage_blobs\".\"id\" = ?  [[\"id\", 7]]\r\n  ↳ app/controllers/posts_controller.rb:69\r\n   (2.0ms)  commit transaction\r\n  ↳ app/controllers/posts_controller.rb:69\r\n  ActiveStorage::Attachment Load (0.2ms)  SELECT  \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?  [[\"record_id\", 7], [\"record_type\", \"ActiveStorage::Blob\"], [\"name\", \"preview_image\"], [\"LIMIT\", 1]]\r\n  ↳ app/controllers/posts_controller.rb:69\r\n   (0.0ms)  begin transaction\r\n  ↳ app/controllers/posts_controller.rb:69\r\n  ActiveStorage::Attachment Destroy (0.3ms)  DELETE FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"id\" = ?  [[\"id\", 7]]\r\n  ↳ app/controllers/posts_controller.rb:69\r\n  Post Update All (0.2ms)  UPDATE \"posts\" SET \"updated_at\" = '2018-02-12 21:41:00.982512' WHERE \"posts\".\"id\" = ?  [[\"id\", 1]]\r\n  ↳ app/controllers/posts_controller.rb:69\r\n   (0.7ms)  commit transaction\r\n  ↳ app/controllers/posts_controller.rb:69\r\nRedirected to http://localhost:3000/posts/1\r\nCompleted 302 Found in 20ms (ActiveRecord: 4.5ms)\r\n```", "created_at": "2018-02-13 08:48:49", "user": 1556844, "id": 365190509}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365253882", "text": "Isn't this already possible with `user.highlights.where(id: ids).purge`?\r\n\r\nDon't think this is right, especially since we removed passing ids to `exists?` and others last year. E.g. preferring `where(id: ids).exists?` over `exists?(ids)`.", "created_at": "2018-02-13 12:34:09", "user": 350807, "id": 365253882}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365256631", "text": "I agree with that. If we want to purge records selectively, the condition is not always `ids`.\r\n\r\nSeems preferable API is like here:\r\n\r\n```diff\r\ndiff --git a/activestorage/lib/active_storage/attached/macros.rb b/activestorage/lib/active_storage/attached/macros.rb\r\nindex c51efa9d6b..affd0cf1ef 100644\r\n--- a/activestorage/lib/active_storage/attached/macros.rb\r\n+++ b/activestorage/lib/active_storage/attached/macros.rb\r\n@@ -83,7 +83,21 @@ def #{name}=(attachables)\r\n         end\r\n       CODE\r\n \r\n-      has_many :\"#{name}_attachments\", -> { where(name: name) }, as: :record, class_name: \"ActiveStorage::Attachment\", inverse_of: :record\r\n+      has_many :\"#{name}_attachments\", -> { where(name: name) }, as: :record, class_name: \"ActiveStorage::Attachment\", inverse_of: :record do\r\n+        def purge\r\n+          if any?\r\n+            each(&:purge)\r\n+            reset\r\n+          end\r\n+        end\r\n+\r\n+        def purge_later\r\n+          if any?\r\n+            each(&:purge_later)\r\n+            reset\r\n+          end\r\n+        end\r\n+      end\r\n       has_many :\"#{name}_blobs\", through: :\"#{name}_attachments\", class_name: \"ActiveStorage::Blob\", source: :blob\r\n \r\n       scope :\"with_attached_#{name}\", -> { includes(\"#{name}_attachments\": :blob) }\r\n```", "created_at": "2018-02-13 12:46:39", "user": 12642, "id": 365256631}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365584514", "text": "@kaspth maybe I'm doing it wrong, but if I call it like this I get:\r\n\r\n```\r\nundefined method `purge' for #<ActiveStorage::Attachment::ActiveRecord_AssociationRelation:0x00007fa4f09c49f0>\r\n```", "created_at": "2018-02-14 11:57:42", "user": 1556844, "id": 365584514}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365616045", "text": "@nicholasshirley I thought it would work out of the box, but you need @kamipo's extension from here: https://github.com/rails/rails/pull/31964#issuecomment-365256631", "created_at": "2018-02-14 14:03:08", "user": 350807, "id": 365616045}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365661534", "text": "I update the code to match @kamipo's and the tests to make the call as written by @kaspth.\r\n\r\nIt might just be me, but it feels a little jarring to have `purge` and `purge_later` for `has_many` as the only method that gets defined on the macros while the others are all in their respective `many.rb` and `one.rb` files. But, it does work.", "created_at": "2018-02-14 16:25:02", "user": 1556844, "id": 365661534}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/370872898", "text": "Merged in f9a5839083e697f0d5aad6d9304cd5f26e2a7a11 and backported to `5-2-stable`. Thanks!", "created_at": "2018-03-06 18:04:52", "user": 94129, "id": 370872898}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n1) Create a new rails application. `rails new gen`\r\n2) Use an example from `rails g model` output. Which is `rails generate model product supplier:references{polymorphic}:index`\r\n\r\n### Expected behavior\r\n\r\nGenerated migration show have the following content:\r\n\r\n```ruby\r\nclass CreateProducts < ActiveRecord::Migration[5.2]\r\n  def change\r\n    create_table :products do |t|\r\n      t.references :supplier, polymorphic: true, index: true\r\n\r\n      t.timestamps\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Actual behavior\r\n\r\nGenerated migration has the following content:\r\n\r\n```ruby\r\nclass CreateProducts < ActiveRecord::Migration[5.2]\r\n  def change\r\n    create_table :products do |t|\r\n      t.referencesc :supplier\r\n      t.referencesh :supplier\r\n      t.referencesi :supplier\r\n      t.referencesl :supplier\r\n      t.referencesm :supplier\r\n      t.referenceso :supplier\r\n      t.referencesp :supplier\r\n      t.referencesr :supplier\r\n      t.referencesy :supplier\r\n\r\n      t.timestamps\r\n    end\r\n    add_index :products, :supplier\r\n    add_index :products, :supplier\r\n    add_index :products, :supplier\r\n    add_index :products, :supplier\r\n    add_index :products, :supplier\r\n    add_index :products, :supplier\r\n    add_index :products, :supplier\r\n    add_index :products, :supplier\r\n    add_index :products, :supplier\r\n  end\r\nend\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**: `5.2.0.rc1`\r\n**Ruby version**: `ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-darwin16]`\r\n", "labels": [], "number": 31963, "updated_at": "2018-02-12 11:56:43", "user": 211875, "closed_at": "2018-02-12 11:56:43", "id": 296321009, "title": "Model generator with polymorphic references creates invalid migration file", "url": "https://api.github.com/repos/rails/rails/issues/31963", "created_at": "2018-02-12 10:10:10", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364898653", "text": "Hi @choix. I can't reproduce this on `5.2.0.rc1`\r\n\r\nhere is my migration:\r\n```ruby\r\nclass CreateProducts < ActiveRecord::Migration[5.2]\r\n  def change\r\n    create_table :products do |t|\r\n      t.references :supplier, polymorphic: true\r\n\r\n      t.timestamps\r\n    end\r\n  end\r\nend\r\n```\r\ntip: using of `index` in \"the reproduction step 2\" and \"Generated migration\" you provided is redundant since\r\n ```ruby\r\nt.references :supplier, polymorphic: true\r\n```\r\nadds appropriate index\r\n```ruby\r\nt.index [\"supplier_type\", \"supplier_id\"], name: \"index_products_on_supplier_type_and_supplier_id\"\r\n```", "created_at": "2018-02-12 11:39:25", "user": 6443532, "id": 364898653}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364902124", "text": "@bogdanvlviv Thank you for looking into it.\r\n\r\nI've checked again. The issue was in the way `zsh` parses `supplier:references{polymorphic}`. For example, `printf '=%.0s' {1..100}` will turn into 100 `=` character.\r\n\r\nIt turned this shell command:\r\n```\r\nrails generate model product supplier:references{polymorphic}\r\n```\r\n\r\ninto:\r\n```\r\n/Users/choix/.rbenv/versions/2.4.1/bin/ruby bin/rails generate model product supplier:referencesc supplier:referencesh supplier:referencesi supplier:referencesl supplier:referencesm supplier:referenceso supplier:referencesp supplier:referencesr supplier:referencesy\r\n```\r\n\r\nIn case anyone will come here because of the same issue. Just wrap field definition inside double quote, like this:\r\n```\r\nrails generate model product \"supplier:references{polymorphic}\"\r\n```", "created_at": "2018-02-12 11:56:43", "user": 211875, "id": 364902124}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "", "labels": [], "number": 31962, "updated_at": "2018-02-12 06:38:35", "user": 10832262, "closed_at": "2018-02-12 06:35:52", "id": 296275796, "title": "Missing parentheses [ci skip]", "url": "https://api.github.com/repos/rails/rails/issues/31962", "created_at": "2018-02-12 06:15:27", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364836654", "text": "r? @sgrif\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-12 06:15:35", "user": 7468109, "id": 364836654}, {"reactions": {"+1": [10832262]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364837535", "text": "How about removing parentheses?\r\nLooks like the parentheses (`See also (Autoloading in the Test Environment).`) is meaningless.", "created_at": "2018-02-12 06:24:58", "user": 12642, "id": 364837535}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364838438", "text": "Whoops, fixed it.", "created_at": "2018-02-12 06:34:27", "user": 10832262, "id": 364838438}], "assignees": [1529387, 1529387], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\napplication.js\r\n//= require jquery3\r\n//= require jquery-ui\r\n//= require rails-ujs\r\n//= require turbolinks\r\n//= require foundation\r\n//= require wice_grid\r\n//= require select2\r\n//= require_tree .\r\n\r\n$(document).on('turbolinks:load', function() {\r\n  $(document).foundation();\r\n  $('[data-app-dashboard-toggle-shrink]').on('click', function(e) {\r\n    e.preventDefault();\r\n    $(this).parents('.app-dashboard').toggleClass('shrink-medium').toggleClass('shrink-large');\r\n  });\r\n});\r\n\r\n(Guidelines for creating a bug report are [available\r\nhere](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report))\r\n\r\n### Expected behavior\r\nTell us what should happen\r\non click of links with remote true should work properly without throwing any js errors.\r\n\r\n### Actual behavior\r\nTell us what happens instead\r\nOn click of links with remote: true it always throws missing component error in js\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n![missing-component](https://user-images.githubusercontent.com/16436134/36082679-8ea90930-0fd1-11e8-8a1d-537d55058945.png)\r\n\r\n\r\n**Ruby version**: 2.4.2\r\n", "labels": [], "number": 31961, "updated_at": "2018-02-12 11:30:41", "user": 16436134, "closed_at": "2018-02-12 11:30:41", "id": 296257024, "title": "Missing Component on links with remote true Rails-UJS", "url": "https://api.github.com/repos/rails/rails/issues/31961", "created_at": "2018-02-12 03:19:04", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364896832", "text": "Please use the [mailing list](https://groups.google.com/forum/#!forum/rubyonrails-talk) or StackOverflow for questions/help, where a wider community will be able to help you. We reserve the issues tracker for issues only. Thanks.", "created_at": "2018-02-12 11:30:41", "user": 987638, "id": 364896832}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nThis PR improves system test screenshots in ~two ways~ one way:\r\n\r\n* ~It prints the absolute path to the screenshots preceded by \"file://\". That way, we can directly click on it and open the image.~ Included in #32127, without the `file://` protocol.\r\n\r\n* It adds HTML captures of the page as well. Sometimes a capture of the HTML is more useful than an image screenshot.\r\n\r\n### Other Information\r\n\r\nThis is a sample output of the information printed before and after these changes. The \"after\" is much more useful because I can click on the HTML link and more easily see why the test failed.\r\n\r\n#### Before\r\n\r\n```console\r\n$ bundle exec rspec ./spec/system/decidim/gravity_forms/admin/admin_manages_gravity_forms_spec.rb\r\n\r\nRandomized with seed 29751\r\nF.\r\n\r\nFailures:\r\n\r\n  1) Admin manages gravity forms behaves like manage gravity forms creating a gravity form shows a success message and displays the new form on the index page\r\n     Failure/Error:\r\n       fill_in_i18n(\r\n         :gravity_form_title,\r\n         \"#gravity-form-title-tabs\",\r\n         en: \"My gravity form\",\r\n         es: \"Mi gravity form\",\r\n         ca: \"Meu gravity form\"\r\n       )\r\n     \r\n     Capybara::ElementNotFound:\r\n       Unable to find visible css \"#gravity-form-title-tabs\" within #<Capybara::Node::Element tag=\"form\" path=\"/html/body/main/div/div[2]/div[2]/form\">\r\n     \r\n     [Screenshot]: spec/decidim_dummy_app/tmp/screenshots/failures_r_spec_example_groups_admin_manages_gravity_forms_behaves_like_manage_gravity_forms_creating_a_gravity_form_shows_a_success_message_and_displays_the_new_form_on_the_index_page_957.png\r\n\r\n     \r\n     Shared Example Group: \"manage gravity forms\" called from ./spec/system/decidim/gravity_forms/admin/admin_manages_gravity_forms_spec.rb:12\r\n     # /home/deivid/Code/decidim/decidim-dev/lib/decidim/dev/test/rspec_support/translation_helpers.rb:86:in `block in fill_in_i18n_fields'\r\n     # /home/deivid/Code/decidim/decidim-dev/lib/decidim/dev/test/rspec_support/translation_helpers.rb:85:in `each'\r\n     # /home/deivid/Code/decidim/decidim-dev/lib/decidim/dev/test/rspec_support/translation_helpers.rb:85:in `fill_in_i18n_fields'\r\n     # /home/deivid/Code/decidim/decidim-dev/lib/decidim/dev/test/rspec_support/translation_helpers.rb:49:in `fill_in_i18n'\r\n     # ./spec/shared/manage_gravity_forms_examples.rb:15:in `block (4 levels) in <top (required)>'\r\n     # ./spec/shared/manage_gravity_forms_examples.rb:14:in `block (3 levels) in <top (required)>'\r\n\r\nFinished in 12.98 seconds (files took 4.66 seconds to load)\r\n2 examples, 1 failure\r\n\r\nFailed examples:\r\n\r\nrspec ./spec/system/decidim/gravity_forms/admin/admin_manages_gravity_forms_spec.rb[1:1:1:1] # Admin manages gravity forms behaves like manage gravity forms creating a gravity form shows a success message and displays the new form on the index page\r\n\r\nRandomized with seed 29751\r\n```\r\n\r\n#### After\r\n\r\n```console\r\n$ bundle exec rspec ./spec/system/decidim/gravity_forms/admin/admin_manages_gravity_forms_spec.rb\r\n\r\nRandomized with seed 47932\r\nF.\r\n\r\nFailures:\r\n\r\n  1) Admin manages gravity forms behaves like manage gravity forms creating a gravity form shows a success message and displays the new form on the index page\r\n     Failure/Error:\r\n       fill_in_i18n(\r\n         :gravity_form_title,\r\n         \"#gravity-form-title-tabs\",\r\n         en: \"My gravity form\",\r\n         es: \"Mi gravity form\",\r\n         ca: \"Meu gravity form\"\r\n       )\r\n     \r\n     Capybara::ElementNotFound:\r\n       Unable to find visible css \"#gravity-form-title-tabs\" within #<Capybara::Node::Element tag=\"form\" path=\"/html/body/main/div/div[2]/div[2]/form\">\r\n     \r\n     [Image screenshot]: file:///home/deivid/Code/decidim-module-gravity_forms/spec/decidim_dummy_app/tmp/screenshots/failures_r_spec_example_groups_admin_manages_gravity_forms_behaves_like_manage_gravity_forms_creating_a_gravity_form_shows_a_success_message_and_displays_the_new_form_on_the_index_page_564.png\r\n     [HTML screenshot]: file:///home/deivid/Code/decidim-module-gravity_forms/spec/decidim_dummy_app/tmp/screenshots/failures_r_spec_example_groups_admin_manages_gravity_forms_behaves_like_manage_gravity_forms_creating_a_gravity_form_shows_a_success_message_and_displays_the_new_form_on_the_index_page_564.html\r\n\r\n     \r\n     Shared Example Group: \"manage gravity forms\" called from ./spec/system/decidim/gravity_forms/admin/admin_manages_gravity_forms_spec.rb:12\r\n     # /home/deivid/Code/decidim/decidim-dev/lib/decidim/dev/test/rspec_support/translation_helpers.rb:86:in `block in fill_in_i18n_fields'\r\n     # /home/deivid/Code/decidim/decidim-dev/lib/decidim/dev/test/rspec_support/translation_helpers.rb:85:in `each'\r\n     # /home/deivid/Code/decidim/decidim-dev/lib/decidim/dev/test/rspec_support/translation_helpers.rb:85:in `fill_in_i18n_fields'\r\n     # /home/deivid/Code/decidim/decidim-dev/lib/decidim/dev/test/rspec_support/translation_helpers.rb:49:in `fill_in_i18n'\r\n     # ./spec/shared/manage_gravity_forms_examples.rb:15:in `block (4 levels) in <top (required)>'\r\n     # ./spec/shared/manage_gravity_forms_examples.rb:14:in `block (3 levels) in <top (required)>'\r\n\r\nFinished in 13.35 seconds (files took 4.62 seconds to load)\r\n2 examples, 1 failure\r\n\r\nFailed examples:\r\n\r\nrspec ./spec/system/decidim/gravity_forms/admin/admin_manages_gravity_forms_spec.rb[1:1:1:1] # Admin manages gravity forms behaves like manage gravity forms creating a gravity form shows a success message and displays the new form on the index page\r\n\r\nRandomized with seed 47932\r\n```", "labels": [], "number": 31960, "updated_at": "2018-03-01 11:54:54", "user": 2887858, "closed_at": "None", "id": 296229377, "title": "Improve system test screenshots", "url": "https://api.github.com/repos/rails/rails/issues/31960", "created_at": "2018-02-11 21:52:55", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364792523", "text": "r? @sgrif\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-11 21:52:57", "user": 7468109, "id": 364792523}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364931832", "text": "Hey @deivid-rodriguez thanks for working on this. What terminal are you using? I think if your terminal allows you to click the link that this should be optional or not the default because i use Terminal.app and printing the entire link isn't useful to me. I'd rather just `open tmp/screenshots/failures_test_creating_a_Post.png`. \r\n\r\nYou said that sometimes an HTML capture is more useful. What is the case where it's more useful? The capture from minitest that I opened in my browser is less useful to me because it has no CSS. \r\n\r\n![screen shot 2018-02-12 at 9 05 05 am](https://user-images.githubusercontent.com/1080678/36100314-d5256ec4-0fd3-11e8-9221-8a4e631e088e.png)\r\n\r\nWhen using system tests I personally wouldn't want both to be output, especially on CI where the screenshot is most useful. Maybe this would be better as a configurable option where you choose html or image? What do you think?", "created_at": "2018-02-12 14:06:05", "user": 1080678, "id": 364931832}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364937329", "text": "> Hey @deivid-rodriguez thanks for working on this. What terminal are you using? I think if your terminal allows you to click the link that this should be optional or not the default because i use Terminal.app and printing the entire link isn't useful to me. I'd rather just open tmp/screenshots/failures_test_creating_a_Post.png.\r\n\r\nI use the default ubuntu terminal, I thought that this was standard. Does the new output actually get in the middle for your usage or this is only about not cluttering the screen? In my case, `open path_to_file.png` does not work (I get the error \"Couldn't get a file descriptor referring to the console\"), but using `xdg-open` works for both relative and `file://` links.\r\n\r\n> You said that sometimes an HTML capture is more useful. What is the case where it's more useful? The capture from minitest that I opened in my browser is less useful to me because it has no CSS.\r\n\r\nFor example, if you see the sample output I included, we're actually asserting HTML and not actual text in the screen that can be seen in an image screenshot. Sometimes one needs to check for actual HTML, for example when clicking on an icon that has no text or things like that. Regarding the screenshot having no css, that's something you can configure in capybara (I usually point `Capybara.asset_host` to a running development server to get the styles applied). But even without that, being able to inspect the HTML when a failure happened seems useful.\r\n\r\nFor what it's worth, the reason for this patch is that prior to start using system tests I was using [capybara-screenshot](https://github.com/mattheworiordan/capybara-screenshot) and I really missed these two default features that gem provides.", "created_at": "2018-02-12 14:25:52", "user": 2887858, "id": 364937329}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364938396", "text": "> When using system tests I personally wouldn't want both to be output, especially on CI where the screenshot is most useful. Maybe this would be better as a configurable option where you choose html or image? What do you think?\r\n\r\nThe thing is I want both, sometimes one version is more useful than the other. I thought this could be added without a configuration option since it's a single line in the output, so I don't think users not using it will be very bothered by it.", "created_at": "2018-02-12 14:29:18", "user": 2887858, "id": 364938396}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364981987", "text": "@eileencodes Thanks for all your work on system tests by the way, it's awesome :heart: ", "created_at": "2018-02-12 16:40:32", "user": 2887858, "id": 364981987}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/367377007", "text": "Another usage for the \"html screenshots\":\r\n\r\nI just got a test failure when capybara can't find the option I'm trying to select from a select box:\r\n\r\n```\r\nUnable to find visible option \"passport\" within #<Capybara::Node::Element tag=\"select\" path=\"/html/body/div[2]/div/div[3]/div[1]/main/div/div/div[2]/div/div/div/form/div[3]/div[1]/div/label/select\">\r\n```\r\nIn the image screenshot, I can only see the select box and its default option, so I have no clue whether the problem is that the option is there but I'm using the wrong name, or that the option is not even there because of other problem. Being able to click on the html screenshot and inspect the page body when the failure happened allows troubleshooting this kind of stuff much quicker IMO.", "created_at": "2018-02-21 16:07:16", "user": 2887858, "id": 367377007}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/369029327", "text": "Part of these changes have been merged into master as #32127 :tada:, but without the `file://` that was not really necessary...\r\n\r\nSo I'll be descoping this PR now to only implement the second feature! ", "created_at": "2018-02-27 21:18:08", "user": 2887858, "id": 369029327}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/369033287", "text": "Done. PR and its description have been updated to only include the part of printing the HTML screenshot in addition to the image screenshot.", "created_at": "2018-02-27 21:31:57", "user": 2887858, "id": 369033287}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/369566353", "text": ":+1: I'm using HTML output very often when I'm debugging capybara failures. It is really useful even on CI when we hit random failures which are not easy to reproduce locally.", "created_at": "2018-03-01 11:43:11", "user": 193936, "id": 369566353}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/369567712", "text": "It turns out absolute paths are not openable by click on my terminal without the `file://` path so I restored it.\r\n\r\nI can split the features to separate PRs if needed, but for now this is handy for me since I'm using both patches and they affect the same region of the code.", "created_at": "2018-03-01 11:49:29", "user": 2887858, "id": 369567712}], "assignees": [1080678, 1080678], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n1. rails new testapp\r\n2. rails g scaffold user name\r\n3. rake db:migrate\r\n4. Add `validates :name, presence: true` to `app/models/user.rb`\r\n5. rails c\r\n\r\n\r\n```\r\nLoading development environment (Rails 5.1.4)\r\nirb(main):001:0> u = User.new\r\n=> #<User id: nil, name: nil, created_at: nil, updated_at: nil>\r\nirb(main):002:0> u.validate\r\n=> false\r\nirb(main):003:0> u.valid?\r\n=> false\r\nirb(main):004:0> u.save\r\n   (0.1ms)  begin transaction\r\n   (0.1ms)  rollback transaction\r\n=> false\r\nirb(main):005:0> u.save!\r\n   (0.1ms)  begin transaction\r\n   (0.3ms)  rollback transaction\r\nActiveRecord::RecordInvalid: Validation failed: Name can't be blank\r\n        from (irb):5\r\nirb(main):006:0> u.save!(validate: false)\r\n   (0.1ms)  begin transaction\r\n  SQL (0.9ms)  INSERT INTO \"users\" (\"created_at\", \"updated_at\") VALUES (?, ?)  [[\"created_at\", \"2018-02-11 21:01:38.955998\"], [\"updated_at\", \"2018-02-11 21:01:38.955998\"]]\r\n   (22.5ms)  commit transaction\r\n=> true\r\n\r\n```\r\n\r\n### Expected behavior\r\n1. Inform about incorrect usage\r\n2. Ignore silently\r\n\r\nAs per spec, there is no way to bypass validations. And I guess having it defeats the purpose of the method entirely.\r\n\r\nhttps://github.com/rails/rails/blob/v5.1.4/activerecord/lib/active_record/validations.rb#L49\r\n\r\n### Actual behavior\r\nSaves a record\r\n\r\n### System configuration\r\n5.1.4\r\n\r\n**Ruby version**:\r\nruby 2.2.7p470", "labels": [], "number": 31959, "updated_at": "2018-02-12 14:46:57", "user": 22315378, "closed_at": "2018-02-11 22:35:14", "id": 296226080, "title": "Validations can be bypassed when calling save!", "url": "https://api.github.com/repos/rails/rails/issues/31959", "created_at": "2018-02-11 21:12:37", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364796140", "text": "This is the expected behavior, save! is the same as save and allows users to bypass validation if they pass validate option as false ", "created_at": "2018-02-11 22:35:14", "user": 47848, "id": 364796140}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364796893", "text": "But isn't behaviour of `save!(validate: false)` confusing from developer's perceptive if the purpose of `save!` method is to\r\n> raise an ActiveRecord::RecordInvalid exception instead of returning +false+ if the record is not valid.\r\n\r\n? Perhaps it's still worth updating docs, explaining that if you still pass `validate: false` it will not throw an exception?", "created_at": "2018-02-11 22:43:15", "user": 22315378, "id": 364796893}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364800939", "text": "It is documented there:\r\n\r\n    # However, if you supply\r\n    # <tt>validate: false</tt>, validations are bypassed altogether. See\r\n    # ActiveRecord::Validations for more information.", "created_at": "2018-02-11 23:33:42", "user": 47848, "id": 364800939}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364943609", "text": "Thanks! Missed that entirely.", "created_at": "2018-02-12 14:46:57", "user": 22315378, "id": 364943609}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "This is a missing backport of https://github.com/rails/rails/pull/31934 into `5-2-stable`. ", "labels": [], "number": 31958, "updated_at": "2018-02-12 00:30:14", "user": 5657035, "closed_at": "2018-02-12 00:30:14", "id": 296220973, "title": "Fix marshaling of models with `has_many :through` associations", "url": "https://api.github.com/repos/rails/rails/issues/31958", "created_at": "2018-02-11 20:10:53", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364783552", "text": "r? @eileencodes\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-11 20:10:55", "user": 7468109, "id": 364783552}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364783553", "text": "<img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20> **Warning** <img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20>\n\n* Pull requests are usually filed against the master branch for this repo, but this one is against 5-2-stable. Please double check that you specified the right target!", "created_at": "2018-02-11 20:10:56", "user": 7468109, "id": 364783553}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [987638]}, "text": "This is similar to #30700 which ensures the `--quiet` option of `rails new` is respected by the `MasterKeyGenerator` (missing from #30067).\r\n\r\nBefore this commit, running `rails new app --force` would still prompt the user what to do with the conflict in `config/master.key`:\r\n\r\n```\r\n              …\r\n   identical  config/locales/en.yml\r\n    conflict  config/master.key\r\nOverwrite /Users/claudiob/Desktop/pizza/config/master.key? (enter \"h\" for help) [Ynaqdh]\r\n```\r\n\r\nAfter this commit, `config/master.key` is overwritten:\r\n\r\n```\r\n           …\r\nidentical  config/locales/en.yml\r\n    force  config/master.key\r\n   append  .gitignore\r\n```\r\n\r\nThe newly added test generates an app and then generates it again with `--force`. Without this commit, the test would just wait forever for user input.", "labels": [], "number": 31957, "updated_at": "2018-02-12 04:01:42", "user": 10076, "closed_at": "2018-02-11 22:49:38", "id": 296218258, "title": "Respect --force option for config/master.key", "url": "https://api.github.com/repos/rails/rails/issues/31957", "created_at": "2018-02-11 19:37:49", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364780784", "text": "My suggestion would be to backport this to 5.2 as well.", "created_at": "2018-02-11 19:40:10", "user": 10076, "id": 364780784}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364797551", "text": "Backported 74976e89195941d511ebfdc9ec30cbb55f0e3ab3", "created_at": "2018-02-11 22:51:14", "user": 987638, "id": 364797551}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364812479", "text": "Mmmh @y-yagi now that I think about it, I see another issue related to this code.\r\n\r\nOn one hand, it's true that `--force` should be respected.\r\nOn the other hand, if we replace the master key (which is not under git control), we won't be able to decrypt `config/credentials.yml.enc` anymore.\r\n\r\nI can see two solutions here:\r\n\r\n1) Using `--force` *does not* replace `config/master.key` if it's already present. Does not even *ask* for it, simply leaves it there\r\n\r\nor\r\n\r\n2) Using `--force` *also* regenerates `config/credentials.yml.enc`. Currently this does not happen because [this code](https://github.com/rails/rails/blob/cfcb92f9eaf78daefe21335bcabf813842c0ab07/railties/lib/rails/generators/rails/credentials/credentials_generator.rb#L30) introduced in f7e3c686 does not respect the `--force` option:\r\n\r\n```ruby\r\ndef add_credentials_file_silently(template = nil)\r\n  unless credentials.content_path.exist?\r\n    credentials.write(credentials_template)\r\n  end\r\nend\r\n```\r\n\r\nWhat's your opinion?", "created_at": "2018-02-12 01:51:32", "user": 10076, "id": 364812479}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364817423", "text": "Thanks. I think the first solution is good. \r\nIt seems to be sufficient if add a file existence check to `add_key_file_silently` like `add_key_file`, what about it?\r\nhttps://github.com/rails/rails/blob/cfcb92f9eaf78daefe21335bcabf813842c0ab07/railties/lib/rails/generators/rails/encryption_key_file/encryption_key_file_generator.rb#L28..L30", "created_at": "2018-02-12 02:47:20", "user": 987638, "id": 364817423}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364824020", "text": "@y-yagi That sounds good. Go for it! 🏃 ", "created_at": "2018-02-12 04:01:42", "user": 10076, "id": 364824020}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Convenient way to check attachments presence.\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  has_one_attached :avatar\r\n  has_many_attached :highlights\r\n\r\n  validates :avatar, presence: true\r\n  validates :highlights, presence: true \r\nend\r\n```\r\n\r\nr? @georgeclaghorn @matthewd ", "labels": [], "number": 31956, "updated_at": "2018-02-11 15:57:38", "user": 5657035, "closed_at": "None", "id": 296200512, "title": "has_(one/many)_attached presence validation", "url": "https://api.github.com/repos/rails/rails/issues/31956", "created_at": "2018-02-11 15:57:30", "comments": [], "assignees": [94129, 94129], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "Followup to https://github.com/rails/rails/pull/31853.\r\n\r\nThis conditional wasn't updated when we moved to Ruby 2.2.9 on Travis, which meant that the workaround was no longer active and we started to see spurious `IOError`s again:\r\n\r\nhttps://travis-ci.org/rails/rails/jobs/339518009", "labels": [], "number": 31955, "updated_at": "2018-02-18 06:19:29", "user": 432189, "closed_at": "2018-02-18 00:14:41", "id": 296137832, "title": "Use stopgap_13632 on Ruby 2.2 again", "url": "https://api.github.com/repos/rails/rails/issues/31955", "created_at": "2018-02-10 21:58:28", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364698108", "text": "r? @rafaelfranca\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-10 21:58:38", "user": 7468109, "id": 364698108}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364702787", "text": "Is stopgap_13632 used (missing it in Gemfile.lock)?\r\nThe `IOError` is still happening.\r\n\r\nhttps://travis-ci.org/rails/rails/jobs/339965301#L2065", "created_at": "2018-02-10 22:58:10", "user": 12642, "id": 364702787}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364704103", "text": "[Gemfile.lock is ignored on Travis](https://github.com/rails/rails/blob/d0192e0c2daa03048a8c4d0d3b94763dbbfec4c1/.travis.yml#L30).\r\n\r\nThe output of `bundle install` from the job you linked to shows the gem being installed:\r\nhttps://travis-ci.org/rails/rails/jobs/339965301#L994-L995\r\n\r\nIt doesn't appear in the output from the same job on master:\r\nhttps://travis-ci.org/rails/rails/jobs/339895769#L814-L1153\r\n\r\nSo this patch does result in the gem being installed again, but it doesn't fix the `IOError` problem.", "created_at": "2018-02-10 23:19:45", "user": 432189, "id": 364704103}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364708105", "text": "Here's a Travis job running on Ruby 2.2.8, with the gem installed, failing with the same error:\r\nhttps://travis-ci.org/rails/rails/jobs/335655716#L1908\r\n\r\nUpdating to 2.2.9 didn't cause this problem, and installing the gem again won't fix it. However, it _was_ being installed until https://github.com/rails/rails/pull/31853 was merged, and removing it there was unintentional.\r\n\r\n@matthewd, you added stopgap_13632 in https://github.com/rails/rails/commit/bb7775736c27a43a62e7e9c0183ffbd23eb33b2d - from the commit message it looks like it was an experiment. Do you know if it had any effect? Should we fix the version check, or just remove the gem?", "created_at": "2018-02-11 00:30:02", "user": 432189, "id": 364708105}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364720727", "text": "It did seem to substantially reduce failures, particularly in the ACa suite, at the time. I'm not sure why we've seen so few of them since it went away: I could only find [these](https://travis-ci.org/rails/rails/jobs/337683947#L1197) [two](https://travis-ci.org/rails/rails/jobs/336135673#L1657)... and that's the error it \"mostly\" fixed -- the more popular failure (same exception, but inside puma) is completely absent. Maybe there was a bad interaction with eventmachine or something, and we're now less affected?\r\n\r\nOn the other failures you've linked: unfortunately https://bugs.ruby-lang.org/issues/13239 hides the details, but it does sound like that is another instance of this same issue. My suspicion is that Puma is missing a necessary `purge_interrupt_queue`... https://github.com/puma/puma/blob/dc9fa77f855c5018a03430366ea8c8db17fbfeea/lib/puma/server.rb#L375 catches my eye, but I really don't understand the problem well enough to confidently point a finger. (@NickolasVashchenko 🙏🏻?)", "created_at": "2018-02-11 04:36:55", "user": 1034, "id": 364720727}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364748830", "text": "@matthewd yes, the #purge_interrupt_queue call should happen in all the places where the IOError could be raised, it definitely makes sense to try to add such line there.", "created_at": "2018-02-11 12:42:17", "user": 2265459, "id": 364748830}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366481672", "text": "Ruby 2.2 support has been dropped from master in https://github.com/rails/rails/commit/0ea8e7db1a0659efe87ed2a85cb6ade69a8fddad / https://github.com/rails/rails/pull/32028.\r\n\r\nIt does seem like there's still an issue in Puma, but considering that Ruby 2.2 will be EOL next month and my goal here (fixing the flakiness in the Rails test suite) has been achieved, I'm not inclined to chase it.", "created_at": "2018-02-18 00:14:41", "user": 432189, "id": 366481672}, {"reactions": {"+1": [199]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366495354", "text": "`5-2-stable` needs to keep working with 2.2 for the next several years, so I think it's worth finding some sort of solution.", "created_at": "2018-02-18 06:19:29", "user": 1034, "id": 366495354}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "When `EventedFileUpdateWatcher` is instructed to watch a directory which doesn't exist, it will find a parent directory which does and watch that.\r\n\r\nOne of the standard directories to be watched is `test/mailers/previews`. If there's no `test/` directory at all, it will watch the root of the project. This could also be caused by a missing `db`, `config`, or (admittedly unlikely) `app` directory.\r\n\r\nListen always watches recusrively, so this will watch **all** directories within the project. This will include directories with a lot of I/O (like `tmp`, `db`) as well as directories with tons of files (like `vendor/bundle` and `node_modules`).\r\n\r\nListen will filter out [some of these](https://github.com/guard/listen/blob/master/lib/listen/silencer.rb) and EventedFileUpdateChecker [filters the rest](https://github.com/rails/rails/blob/master/activesupport/lib/active_support/evented_file_update_checker.rb#L99-L123) but this is done in ruby, costs CPU, and still eats up OS limits (`fs.inotify.max_user_watches` on Linux)\r\n\r\n### Steps to reproduce\r\n\r\nAn easy way to reproduce is to make a new app **with no `test/` directory** and run anything which does file I/O within `Rails.root`.\r\n\r\n```\r\nrails new listen_issue_demo --skip-spring --skip-test\r\ncd listen_issue_demo\r\nLISTEN_GEM_DEBUGGING=2 rake assets:precompile\r\n```\r\n\r\n### Expected behavior\r\n\r\nNo wakeups (we aren't changing files in watched directories).\r\n\r\n### Actual behavior\r\n\r\nMany wakeups. ([full debug text](https://gist.github.com/b409673aeb67c4dcad32dd5c45c291d5))\r\n```\r\nD, [2018-02-10T00:06:55.737266 #2721] DEBUG -- : inotify: tmp/cache/assets/sprockets ([:create, :isdir])\r\nD, [2018-02-10T00:06:55.737426 #2721] DEBUG -- : (silenced): \"tmp/cache/assets/sprockets\"\r\nD, [2018-02-10T00:06:55.739134 #2721] DEBUG -- : inotify: tmp/cache/assets/sprockets/v3.0/De ([:create, :isdir])\r\nD, [2018-02-10T00:06:55.739249 #2721] DEBUG -- : (silenced): \"tmp/cache/assets/sprockets/v3.0/De\"\r\nD, [2018-02-10T00:06:55.739606 #2721] DEBUG -- : inotify: tmp/cache/assets/sprockets/v3.0/D2 ([:create, :isdir])\r\nD, [2018-02-10T00:06:55.739656 #2721] DEBUG -- : (silenced): \"tmp/cache/assets/sprockets/v3.0/D2\"\r\n(hundreds more)\r\n```\r\n\r\nThis is a nearly empty new app, in a large one this can add seconds to the asset build. [I gist'd an example here](https://gist.github.com/jhawthorn/12aac0dcf714399b3863e85824f27f94).\r\n\r\nThere are also potential issues due to symlinks (ex. in `vendor/bundle`) [making Listen unhappy](https://gist.github.com/jhawthorn/f5ab81dc32c5a8c02236225b3b6efedc), which are hard to avoid when Listen is set to watch everything.\r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.5.0\r\n", "labels": [], "number": 31954, "updated_at": "2018-02-13 03:59:16", "user": 131752, "closed_at": "2018-02-12 20:54:47", "id": 296088108, "title": "EventedFileUpdateChecker makes things slow when watching missing directories", "url": "https://api.github.com/repos/rails/rails/issues/31954", "created_at": "2018-02-10 09:37:28", "comments": [{"reactions": {"+1": [199]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364899732", "text": "Duplicated with #29750?", "created_at": "2018-02-12 11:44:53", "user": 987638, "id": 364899732}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365058593", "text": "Great diagnosis @jhawthorn. Unfortunately for this case, this is by design… to detect when the directory is created! Not much help if we never intend or expect it to exist. Perhaps the listen lib could offer an alternative, or we could selectively omit nonexistent watchable dirs ourselves. Merging with #29750.", "created_at": "2018-02-12 20:54:46", "user": 199, "id": 365058593}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365143942", "text": "Yeah, I think we need `listen` to offer an API that will watch a folder non-recursively. (Or more likely, \"in whatever manner is simplest for the platform\" -- if all watches are recursive it shouldn't filter things out, but if they're not, it shouldn't manually set up deep watches.)\r\n\r\nIt's intended behaviour that we stand ready in case the missing directory appears, but there's certainly no reason we need or want to watch everything else besides.", "created_at": "2018-02-13 03:59:16", "user": 1034, "id": 365143942}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\n* Updates some awkward wording about updating an article object \r\n* Adds missing Oxford commas\r\n* Updates several URLs to https\r\n* Upcase \"CSS\"\r\n", "labels": [], "number": 31953, "updated_at": "2018-02-12 19:12:05", "user": 302377, "closed_at": "2018-02-12 14:08:15", "id": 296078627, "title": "Improve wording in getting started guide", "url": "https://api.github.com/repos/rails/rails/issues/31953", "created_at": "2018-02-10 06:32:14", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364630376", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @eileencodes (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-10 06:32:26", "user": 7468109, "id": 364630376}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "When use `where!` with association, it sometimes seems to ignore `where!`.\r\n\r\nFor example, I prepare 3 models below.\r\n\r\n```\r\nclass User < ActiveRecord::Base\r\n  has_many :tasks\r\nend\r\n```\r\n\r\n```\r\nclass Task < ActiveRecord::Base\r\n  belongs_to :user\r\n  belongs_to :category\r\nend\r\n```\r\n\r\n```\r\nclass Category < ActiveRecord::Base\r\n  has_many :tasks\r\nend\r\n```\r\n\r\nWhen not use `where!`, it works correctly.\r\n\r\n```\r\n@tasks = User.first.tasks\r\n@tasks = @tasks.where(category_id: 1)\r\n@tasks.count # => correct data!\r\n\r\n@tasks.map(&:id) # => correct data!\r\n# Task Load (1.7ms)  SELECT \"tasks\".* FROM \"tasks\" WHERE \"tasks\".\"user_id\" = ? AND \"tasks\".\"category_id\" = ?  [[\"user_id\", 1], [\"category_id\", 1]]\r\n```\r\n\r\nBut, use with association\r\n\r\n```\r\n@tasks = User.first.tasks\r\n@tasks.where!(category_id: 1)\r\n@tasks.count # => correct data!\r\n\r\n@tasks.map(&:id) # => incorrect data!\r\n # Task Load (1.7ms)  SELECT \"tasks\".* FROM \"tasks\" WHERE \"tasks\".\"user_id\" = ?  [[\"user_id\", 1]]\r\n```\r\n\r\nIn above code, when use `map`, `where!` is ignored.\r\nIn 2 case, `to_sql` method returns same results. And `count` method returns expected SQL query. But `map` returns SQL query as if `where!` is ignored.", "labels": [], "number": 31952, "updated_at": "2018-02-10 04:44:47", "user": 8914541, "closed_at": "2018-02-10 04:44:47", "id": 296072849, "title": "[ActiveRecord] `where!` method dosen't work", "url": "https://api.github.com/repos/rails/rails/issues/31952", "created_at": "2018-02-10 04:31:39", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364625876", "text": "`where!` is an undocumented internal method. You need to use `where`.", "created_at": "2018-02-10 04:44:47", "user": 1034, "id": 364625876}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Incompatible settings are included in the settings set by `load_defaults`.\r\nSo, I think that target version should be updated by a user when becomes available, and should not be updated with `app:update`.\r\n", "labels": [], "number": 31951, "updated_at": "2018-02-12 22:13:42", "user": 987638, "closed_at": "2018-02-12 22:13:39", "id": 296063629, "title": "Do not update `load_defaults` version when running `app:update`", "url": "https://api.github.com/repos/rails/rails/issues/31951", "created_at": "2018-02-10 02:01:02", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364625587", "text": "The other option, instead of parsing the file, would be to remember the `target_version` inside `load_defaults`... I think the application is (or could be?) booted when we run the upgrade task. This does seem simpler, though. :+1:", "created_at": "2018-02-10 04:38:00", "user": 1034, "id": 364625587}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364648146", "text": "> The other option, instead of parsing the file, would be to remember the target_version inside load_defaults\r\n\r\n:+1: Yeah, that is a good approach. I updated.", "created_at": "2018-02-10 12:25:26", "user": 987638, "id": 364648146}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n### Expected behavior\r\n```    \r\n   location = Location.new.tap do |l|\r\n      l.locatable_type = 'Product'\r\n      l.locatable_id = product.id\r\n      ...\r\n   [19] pry(#<Resolvers::CreateProduct>)> location.locatable_type => \"Product\"\r\n\r\n```\r\n### Actual behavior\r\n```\r\n    location = Location.new.tap do |l|\r\n      l.locatable_type = 'Product'\r\n      l.locatable_id = product.id\r\n      ...\r\n   [21] pry(#<Resolvers::CreateProduct>)> location.locatable_type => \"[\\\"Product\\\", 16, 1, 1, 0.42667542e2, 0.21166191e2]\"\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 5.1.4\r\n\r\n**Ruby version**: ruby 2.4.0p0 (2016-12-24 revision 57164) [x86_64-darwin16]\r\n", "labels": [], "number": 31950, "updated_at": "2018-02-10 03:43:34", "user": 1556646, "closed_at": "2018-02-10 02:23:01", "id": 296057567, "title": "Polymorphism object with .tap ", "url": "https://api.github.com/repos/rails/rails/issues/31950", "created_at": "2018-02-10 00:57:39", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364612734", "text": "Try to delete extra commas in your example\r\n```ruby\r\nl.locatable_type = 'Product',  <-- here\r\nl.locatable_id = product.id,   <-- here\r\n```", "created_at": "2018-02-10 01:12:10", "user": 5657035, "id": 364612734}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364618768", "text": "Deleting the commas will help.", "created_at": "2018-02-10 02:23:01", "user": 94129, "id": 364618768}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364623225", "text": "@fatkodima @georgeclaghorn Ahh, no the problem is with `locatable_type` result. Using `.tap` method on new object returns `[\\\"Product\\\", 16, 1, 1, 0.42667542e2, 0.21166191e2]` instead of \"Product\".", "created_at": "2018-02-10 03:42:51", "user": 1556646, "id": 364623225}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"laugh": [199]}, "text": "`config/initializers/assets.rb` has been a part of Rails apps since Rails 4.2 (https://github.com/rails/rails/commit/f612c2b0526e326eb6c25a7bbf375ac3ac793a3c#diff-d8d3aae5c0da726d02fd2978256ff6a9R36). This comment is probably unnecessary by now.", "labels": [], "number": 31949, "updated_at": "2018-02-10 00:55:09", "user": 10076, "closed_at": "2018-02-10 00:55:06", "id": 296057214, "title": "Remove warning from 4 years ago [ci skip]", "url": "https://api.github.com/repos/rails/rails/issues/31949", "created_at": "2018-02-10 00:54:35", "comments": [], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "r? @y-yagi ", "labels": [], "number": 31948, "updated_at": "2018-02-09 22:09:14", "user": 15371677, "closed_at": "2018-02-09 22:09:09", "id": 296026533, "title": "Backport #31942 to 5-2-stable", "url": "https://api.github.com/repos/rails/rails/issues/31948", "created_at": "2018-02-09 22:04:19", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364582507", "text": "<img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20> **Warning** <img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20>\n\n* Pull requests are usually filed against the master branch for this repo, but this one is against 5-2-stable. Please double check that you specified the right target!", "created_at": "2018-02-09 22:04:21", "user": 7468109, "id": 364582507}], "assignees": [987638, 987638], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nI thought it's nice for us to be able to attach from url.\r\n\r\n```ruby\r\n# attach from url\r\nuser.avatar.attach \"http://rubyonrails.org/images/imagine.png\"\r\n\r\n# attach from URI::HTTP or URI::HTTPS\r\nuser.avatar.attach URI.parse(\"http://rubyonrails.org/images/imagine.png\")\r\n```", "labels": [], "number": 31947, "updated_at": "2018-02-09 14:26:11", "user": 15371677, "closed_at": "2018-02-09 13:50:19", "id": 295855327, "title": "Attachable from url or URI::HTTP or URI::HTTPS", "url": "https://api.github.com/repos/rails/rails/issues/31947", "created_at": "2018-02-09 12:29:33", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364421002", "text": "r? @schneems\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-09 12:29:35", "user": 7468109, "id": 364421002}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364438498", "text": "This was previously proposed in https://github.com/rails/rails/pull/30834 and rejected.", "created_at": "2018-02-09 13:50:19", "user": 94129, "id": 364438498}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364447784", "text": "Thanks for your comment. I understood it.", "created_at": "2018-02-09 14:26:08", "user": 15371677, "id": 364447784}], "assignees": [59744, 59744], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n```\r\nt = Teacher.create(name 'T1', students: [] )\r\n\r\nTeacher.find(t.id).students # ==> []\r\nTeacher.joins(:students).find(t.id).students # ==> ActiveRecord::RecordNotFound: Couldn't find Teacher with 'id'=5a7d8965df499c0b7234ec1d\r\n```\r\n\r\n### Expected behavior\r\n\r\nShould also return []\r\n\r\n### Actual behavior\r\n\r\nActiveRecord::RecordNotFound, with a bogus message, as the Teacher with that id actually exists!\r\n\r\nThe reason probably is that the join is an inner join, but most likely should be an outer join:\r\n\r\n```\r\nSELECT  \"teachers\".* FROM \"teachers\" INNER JOIN \"teachers_students\" ON \"teachers_students\".\"teacher_id\" = \"teachers\".\"id\" INNER JOIN \"students\" ON \"students\".\"id\" = \"teachers_students\".\"student_id\" WHERE \"teachers\".\"id\" = $1 LIMIT 1  [[\"id\", \"5a7d8965df499c0b7234ec1d\"]]\r\n```\r\n\r\n### System configuration\r\n**ActiveRecord**: 4.2.8\r\n**Ruby version**: 2.3.1\r\n", "labels": [], "number": 31946, "updated_at": "2018-02-09 19:09:34", "user": 1281218, "closed_at": "2018-02-09 19:09:34", "id": 295848967, "title": "Record not found if relation is empty on an M-N relation", "url": "https://api.github.com/repos/rails/rails/issues/31946", "created_at": "2018-02-09 12:04:27", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364421199", "text": "I'd expect `Teacher.joins(:students).find(t.id)` to raise `ActiveRecord::RecordNotFound` as that specific teacher is not part of the relation because of the inner join.", "created_at": "2018-02-09 12:30:22", "user": 77664, "id": 364421199}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364466773", "text": "Maybe you should use `Teacher.includes(:students).find(t.id).students`. And `Teacher.includes(:students).references(:students).find(t.id).students` will be LEFT OUTER JOIN.", "created_at": "2018-02-09 15:32:45", "user": 5738686, "id": 364466773}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364488749", "text": "@tbuehlmann @liukun-lk That may be true, but unless someone takes time to debug what is happening, they do not know that there is an inner join at play behind the scenes. Also the error message saying that the Teacher with the specific id does not exist is even worse, since it absolutely does. I'm not sure what \"relation\" the teacher would not be part of...", "created_at": "2018-02-09 16:45:30", "user": 1281218, "id": 364488749}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364529941", "text": "This is the correct behavior.", "created_at": "2018-02-09 19:09:34", "user": 94129, "id": 364529941}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\nCreate and migrate model with attr_accessor\r\n```ruby\r\nclass User < ApplicationRecord\r\n  attr_accessor :virtual\r\nend\r\n```\r\n(Guidelines for creating a bug report are [available\r\nhere](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report))\r\n\r\n### Expected behavior\r\nTell us what should happen\r\n```bash\r\nuser = User.create(virtual: 'bla')\r\nuser.virtual #=> 'blah'\r\nuser.reload  #<User id: 1>\r\nuser.virtual #=> nil\r\n```\r\n### Actual behavior\r\nTell us what happens instead\r\n```bash\r\nuser = User.create(virtual: 'bla')\r\nuser.virtual #=> 'blah'\r\nuser.reload  #<User id: 1>\r\nuser.virtual #=> 'blah'\r\n```\r\n### System configuration\r\n**Rails version**:\r\n'rails', '~> 5.1.4'\r\n\r\n**Ruby version**:\r\nruby:2.5.0", "labels": [], "number": 31945, "updated_at": "2018-02-09 12:58:56", "user": 259633, "closed_at": "2018-02-09 12:58:56", "id": 295848894, "title": "Reload does not refresh the object, only the data", "url": "https://api.github.com/repos/rails/rails/issues/31945", "created_at": "2018-02-09 12:04:11", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364427061", "text": "This is intentional behavior. \r\n`reload` method only reload `attributes` from database and clear cache. \r\nFor details, please see [API doc](http://api.rubyonrails.org/classes/ActiveRecord/Persistence.html#method-i-reload).\r\n", "created_at": "2018-02-09 12:58:56", "user": 987638, "id": 364427061}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "\r\n### Summary\r\n\r\nalternative version for PR https://github.com/rails/rails/pull/31933   (pls read description there) with `private: true` option\r\n\r\n```ruby\r\nclass Foo\r\n   # ...\r\n   delegate :foo, :bar, to: :baz\r\n   delegate :car, :dar, to: :daz, private: true\r\n   # ...\r\nend\r\n\r\nfoo = Foo.new\r\nfoo.foo\r\nfoo.bar\r\nfoo.car # => NoMethodError: private method `car' called for #<Foo:0x000000015e8b10>\r\nfoo.dar # => NoMethodError: private method `dar' called for #<Foo:0x000000015e8b10>\r\n```\r\n\r\nhttps://github.com/rails/rails/pull/31933#issuecomment-364108705\r\n\r\n\r\n", "labels": [], "number": 31944, "updated_at": "2018-03-21 16:01:09", "user": 721990, "closed_at": "2018-02-26 19:49:02", "id": 295835442, "title": "delegate to, with private: true option", "url": "https://api.github.com/repos/rails/rails/issues/31944", "created_at": "2018-02-09 11:12:09", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364405935", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-09 11:12:11", "user": 7468109, "id": 364405935}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364416110", "text": "Hi @equivalent \r\n\r\nThanks for your PR. Have you discussed it on the mailing list? I haven't found it.\r\n\r\nBesides of that, why would you need this? What is the intention?\r\n\r\nYou can also do the following without adding this PR:\r\n```ruby\r\nclass Foo\r\n   # ...\r\n   delegate :foo, :bar, to: :baz\r\n   # ...\r\n   private\r\n   delegate :car, :dar, to: :daz\r\n   # ...\r\nend\r\n```\r\n", "created_at": "2018-02-09 12:04:17", "user": 671550, "id": 364416110}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364428441", "text": "Hi @albertoalmagro \r\n\r\nsorry for 2 PRs, I just wanted to create alternative option for this PR https://github.com/rails/rails/pull/31933  (this is the main one and all my arguments are in it) \r\n\r\n\r\nI'm sorry but example you provided does not work:\r\n\r\n\r\n```ruby\r\nclass Bar\r\n   def car\r\n      12\r\n   end\r\nend\r\n\r\nclass Foo\r\n   private  \r\n   delegate :car, to: :bar  \r\n   def bar\r\n     Bar.new\r\n   end  \r\nend  \r\n\r\nFoo.new.car\r\n#=> 12\r\n\r\nFoo.new.public_methods - Object.new.public_methods \r\n#=> [:car]\r\n```\r\n\r\n> maybe a security bug ? ... I've mange to get this result  on Rails 4.2.5.1, Ruby 2.2.8 and other project Rails 5.1.4, Ruby 2.5.0\r\n\r\n----------------------\r\n\r\nI'll copy paste the entire story of PR https://github.com/rails/rails/pull/31933   in here so the whole context is in place :  \r\n\r\n### Summary\r\n\r\nfor delegation as  public methods there is existing `#delegate` method :\r\n\r\n```ruby\r\nclass Foo\r\n   # ...\r\n   delegate :foo, :bar, to: :baz\r\n   # ...\r\nend\r\n\r\nfoo = Foo.new\r\nfoo.foo\r\nfoo.bar\r\n```\r\n\r\nhttps://github.com/rails/rails/blob/master/activesupport/lib/active_support/core_ext/module/delegation.rb#L154\r\n\r\nAnd this PR provides method `#delegate_privately` \r\n\r\n```ruby\r\nclass Foo\r\n   # ...\r\n   delegate_privately :car, :dar, to: :daz\r\n   # ...\r\nend\r\n\r\nfoo = Foo.new\r\nfoo.car  # => NoMethodError: private method `car' called for #<Foo:0x000000015e8b10>\r\nfoo.dar # => NoMethodError: private method `car' called for #<Foo:0x000000015e8b10>\r\n```\r\n\r\n**Reason**\r\n\r\nfrom my understanding,  currently the only way how to delegate as private method is by doing:\r\n\r\n```ruby\r\nclass Foo\r\n   # ...\r\n   private *delegate( :car, :dar, to: :daz)\r\n   # ...\r\nend\r\n\r\nfoo = Foo.new\r\nfoo.car  # => NoMethodError: private method `car' called for #<Foo:0x000000015e8b10>\r\nfoo.dar # => NoMethodError: private method `dar' called for #<Foo:0x000000015e8b10>\r\n```\r\n\r\n* https://blog.eq8.eu/til/how-to-delegate-methods-in-rails-as-private.html\r\n* https://stackoverflow.com/questions/15643172/make-delegated-methods-private\r\n\r\nand there are some cases when I want to delegate methods to other object and not expose those methods as part of  primary object  interface methods\r\n\r\n**Why is `private *delegate(...)` not enough:**\r\n\r\nSeems to me like developers might feels discouraged to use the `private *delegate(...)` as it's 4 responsibility in one line: \r\n\r\n*  private\r\n*  splat operator\r\n* the actual delegation \r\n* knowledge of what delegate returns \r\n\r\n...this way all these 4 responsibilities are hidden in one method `#delegate_privately` and tested outside of the application => Rails framework\r\n\r\nAlso there is misconception amongs developers that this works (which does not)\r\n\r\n```ruby\r\nclass Bar\r\n   def car\r\n      12\r\n   end\r\nend\r\n\r\nclass Foo\r\n   private  \r\n   delegate :car, to: :bar  \r\n   def bar\r\n     Bar.new\r\n   end  \r\nend  \r\n\r\nFoo.new.car\r\n#=> 12\r\n\r\nFoo.new.public_methods - Object.new.public_methods \r\n#=> [:car]\r\n```\r\n\r\n> Actually that is my case,  I was (at least) 4 years in understanding that this works, and never bothered to check it :disappointed:\r\n\r\n \r\n\r\nRelated discussion:\r\n\r\n* https://github.com/rails/rails/issues/31932\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "created_at": "2018-02-09 13:05:47", "user": 721990, "id": 364428441}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364430495", "text": "so whether you guys like solution  PR https://github.com/rails/rails/pull/31944  (this one):\r\n\r\n```ruby\r\nclass Foo\r\n   # ...\r\n   delegate :foo, :bar, to: :baz\r\n   delegate :car, :dar, to: :daz, private: true\r\n   # ...\r\nend\r\n```\r\n\r\nor you guys like solution in PR https://github.com/rails/rails/pull/31933 :\r\n\r\n```ruby\r\nclass Foo\r\n   # ...\r\n   delegate :foo, :bar, to: :baz\r\n   delegate_privately :car, :dar, to: :daz\r\n   # ...\r\nend\r\n```\r\n\r\nit's up to you which one you pick and close the other. Both are doing the same and  I like both solutions\r\n\r\nPoint is  this **does not** work : \r\n\r\n```ruby\r\nclass Foo\r\n  # ...\r\n   delegate :foo, :bar, to: :baz\r\n   private\r\n   delegate :car, :dar, to: :daz\r\n  # ...\r\nend\r\n```\r\n\r\nAnd this works but it's too many responsibilities(feels like there should be a easier way) and stuff may go wrong and not many dev. know about this: \r\n\r\n```ruby\r\nclass Foo\r\n  # ...\r\n   delegate :foo, :bar, to: :baz\r\n   private *delegate(:car, :dar, to: :daz)\r\n  #...\r\nend\r\n```\r\n", "created_at": "2018-02-09 13:15:01", "user": 721990, "id": 364430495}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364458026", "text": "> Have you discussed it on the mailing list? I haven't found it.\r\n\r\n@albertoalmagro where did you get the impression that people should do that? Do we need to fix some documentation? The mailing list is the least-bad option if someone wants to discuss something they haven't yet implemented, but \"here's a diff, should I open a PR?\" posts are annoyingly pointless.", "created_at": "2018-02-09 15:02:44", "user": 1034, "id": 364458026}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364460600", "text": "@matthewd in the Rails contributing guide, as this would be a new feature in my opinion. http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#what-about-feature-requests-questionmark\r\n\r\nAnd also here: https://github.com/rails/rails/issues/31932#issuecomment-364096251", "created_at": "2018-02-09 15:11:39", "user": 671550, "id": 364460600}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364461521", "text": "> If you'd like feedback on an idea for a feature before doing the work to make a patch\r\n\r\n> feature proposals without code\r\n\r\nAny suggestions on how those could be phrased differently? ", "created_at": "2018-02-09 15:14:50", "user": 1034, "id": 364461521}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364462288", "text": "OK, sorry, all yours.", "created_at": "2018-02-09 15:17:21", "user": 671550, "id": 364462288}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364464399", "text": "Sorry for the noise @equivalent it seems I need some holidays", "created_at": "2018-02-09 15:24:25", "user": 671550, "id": 364464399}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364496711", "text": "@albertoalmagro  no problem at all mate :) ", "created_at": "2018-02-09 17:12:01", "user": 721990, "id": 364496711}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365054933", "text": "Implementation looks good to me, but I'm not sure I would use this syntax sugar so I'll defer to @dhh.", "created_at": "2018-02-12 20:41:06", "user": 47848, "id": 365054933}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365056101", "text": "I like this 👍", "created_at": "2018-02-12 20:45:31", "user": 2741, "id": 365056101}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365060069", "text": "The tests are broken,  can you take a look?", "created_at": "2018-02-12 21:00:02", "user": 47848, "id": 365060069}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365248945", "text": "@rafaelfranca sorry didn't have time over weekend, will fix them now; \r\n", "created_at": "2018-02-13 12:11:12", "user": 721990, "id": 365248945}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365256030", "text": "Should we also support `protected` as well? Alternatively there's `delegate :x, to: :@y, visibility: :private`\r\n\r\nI know we've established that the code below doesn't work. But does anyone here know why we can't?\r\n\r\n```ruby\r\nprivate\r\n  delegate :x, to: :@y\r\n```\r\n\r\nThe API feels partially weird once users have to do the below. Though the `private` keyword is weird in general because it'd only apply to the current `self` — it doesn't catch constants and class methods iirc.\r\n\r\n```ruby\r\nprivate\r\n  delegate :x, to: :@y, private: true\r\n```", "created_at": "2018-02-13 12:43:56", "user": 350807, "id": 365256030}, {"reactions": {"+1": [350807]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365264892", "text": "> I know we've established that the code below doesn't work. But does anyone here know why we can't?\r\n\r\nYeah.. `private` is lexically scoped, and MRI doesn't expose that information to Ruby-land.\r\n\r\nI don't think `protected` is common enough to bother with, nor to justify a more verbose `visibility:` option. (Personally I'm dubious that `private:` would get enough use too, but it does seem comparatively plausible.)", "created_at": "2018-02-13 13:22:13", "user": 1034, "id": 365264892}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365272526", "text": "@matthewd it really depends whether developer needs to implement Interface Segregation Principle (in sense that expose only methods you want to be callable).  I agree with `protected` not having much value but `private` is really valuable.   \r\n\r\nFrom top of my mind, if you are writing test where you compare 2 objects interfaces `expects( Foo.new.public_methods(false)).to match_array(Bar.new.public_methods(false))`  ", "created_at": "2018-02-13 13:52:35", "user": 721990, "id": 365272526}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365274051", "text": "@kaspth  @matthewd  let me know if you want the `protected` as well, I can add that in. But I do agree with @matthewd that `private` is good enough. At least for first iteration of this PR.\r\n\r\n...also I want to point out that commits are now squashed https://github.com/rails/rails/pull/31944#discussion_r167870004  original implementation changed to this https://github.com/rails/rails/commit/41671930eb2b9684e5550ffc97fe9cd060afe243#diff-01f2db2585c06eca03cf014cfe51c50eR235", "created_at": "2018-02-13 13:58:14", "user": 721990, "id": 365274051}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365274865", "text": "Totally fine with just `private: true` 👍\r\n\r\nWould @kamipo's `send(:private, *method_names) if private` work though?", "created_at": "2018-02-13 14:01:13", "user": 350807, "id": 365274865}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365277584", "text": "@kaspth  ah, sorry I've squashed the commits, original history is lost\r\n\r\nmy (failing) original was:\r\n\r\n```ruby\r\n    method_names.each { |n|   module_eval(\"private #{n}\", file, line) } if private\r\n```\r\n\r\n> that is  evaluated as `'private city'`\r\n\r\nand although it was working when I've tested it with `rails c` inside  a Rails 5 project that used Gemfile `'rails', path: '/home/equivalent/my_clone/rails`  the Rails core tests were failing\r\n\r\n\r\nkamipo was proposing (if I understood it correctly ): \r\n\r\n```ruby\r\n    method_names.each { |n|   module_eval(\"private #{n.inspect}\", file, line) } if private\r\n```\r\n\r\n> so that evaluated string was `'private :city'`\r\n\r\n\r\n> **UPDATE**, actually @kamipo  was proposing much better solution `send(:private, *method_names) if private` I just didn't see the latest comment \r\n https://github.com/rails/rails/pull/31944#discussion_r167869858 sorry :crying_cat_face:  \r\n\r\nThat was failing too\r\n\r\nThe current implementation (that seems to pass, and work)\r\n\r\n```ruby\r\n    method_names.each { |n| self.send(:private, n) } if private\r\n```\r\n\r\nthis is sending a message to Class method / Module method object to \"privatize\" the method `:city` for  that class/module\r\n", "created_at": "2018-02-13 14:11:32", "user": 721990, "id": 365277584}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365279464", "text": "My latest suggestion (https://github.com/rails/rails/pull/31944#discussion_r167869858) is like here:\r\n\r\n```diff\r\ndiff --git a/activesupport/lib/active_support/core_ext/module/delegation.rb b/activesupport/lib/active_support/core_ext/module/delegation.rb\r\nindex f3d4db667c..80955900c4 100644\r\n--- a/activesupport/lib/active_support/core_ext/module/delegation.rb\r\n+++ b/activesupport/lib/active_support/core_ext/module/delegation.rb\r\n@@ -232,7 +232,7 @@ def delegate(*methods, to: nil, prefix: nil, allow_nil: nil, private: nil)\r\n       module_eval(method_def, file, line)\r\n     end\r\n \r\n-    method_names.each { |n| self.send(:private, n) } if private\r\n+    send(:private, *method_names) if private\r\n     method_names\r\n   end\r\n \r\n```\r\n\r\nI confirmed that it has passed.", "created_at": "2018-02-13 14:18:06", "user": 12642, "id": 365279464}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365284045", "text": "@kamipo  sorry didn't seen your latest comment, thank you very much that's much better approach. Now implemented.\r\n\r\nshould I squash the commits ? ", "created_at": "2018-02-13 14:33:35", "user": 721990, "id": 365284045}, {"reactions": {"+1": [12642, 721990]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365287012", "text": "No need for `send` either: https://github.com/rails/rails/pull/31944#discussion_r167859539\r\n\r\n```ruby\r\nprivate(*method_names) if private\r\n```", "created_at": "2018-02-13 14:43:38", "user": 1034, "id": 365287012}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365347445", "text": "all suggestions implemented \r\n\r\n`Gem av; ujs is faling` on build (everything else is passing ) is that caused by me ? or is this a known issue ?", "created_at": "2018-02-13 17:49:46", "user": 721990, "id": 365347445}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366413103", "text": "Can you add a CHANGELOG entry and squash your commits?", "created_at": "2018-02-17 03:32:47", "user": 47848, "id": 366413103}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366545971", "text": "@equivalent really like how this turned out, great work! 👏 Now all that's left to cross the finish line is @rafaelfranca's bits in https://github.com/rails/rails/pull/31944#issuecomment-366413103 😊", "created_at": "2018-02-18 20:42:54", "user": 350807, "id": 366545971}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366662879", "text": "Great job @equivalent ! I also was one of the confused developers who thought that putting this under private would solve the issue. Thanks a lot for the PR and for teaching me this! 👏 ", "created_at": "2018-02-19 11:31:11", "user": 671550, "id": 366662879}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366927601", "text": "@rafaelfranca  \r\n\r\nok I've added Changelog (let me know if it's too long I can make it shorter, also I'm referencing this issue number in the Changelog as there may be developers investigating why not to do just `private \\n delegate` )  \r\n\r\n@kamipo  @matthewd   @kaspth @albertoalmagro @rafaelfranca @dhh \r\nThank you all for all the help, ideas and patience before **we** got this right. :confetti_ball: \r\n\r\n", "created_at": "2018-02-20 10:03:26", "user": 721990, "id": 366927601}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368229362", "text": "@equivalent no problem! We'll need a rebase for the changelog, sorry! Then I'll merge.", "created_at": "2018-02-24 13:43:56", "user": 350807, "id": 368229362}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368503396", "text": "@kaspth ok done the rebase.\r\n\r\n@simi  thx for helping me with the rebase (...I've manage to f.up initilal rebase badly due to bad `.git/config`  in the fork stored on my laptop) ", "created_at": "2018-02-26 13:27:10", "user": 721990, "id": 368503396}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368553277", "text": "@equivalent looks like there's still some leftover time zone changes from the rebase :)", "created_at": "2018-02-26 16:06:53", "user": 350807, "id": 368553277}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368616357", "text": "@kaspth ok, try now ", "created_at": "2018-02-26 19:17:39", "user": 721990, "id": 368616357}, {"reactions": {"hooray": [6443532, 758704, 721990, 671550]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368627200", "text": "Verified locally on Ruby 2.4. Welcome, @equivalent! You're now a contributor to Rails 👏", "created_at": "2018-02-26 19:49:58", "user": 350807, "id": 368627200}, {"reactions": {"laugh": [671550]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368691154", "text": "![yes ! ](http://i0.kym-cdn.com/photos/images/newsfeed/000/162/317/2vA1a.png)", "created_at": "2018-02-26 23:39:46", "user": 721990, "id": 368691154}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/374950077", "text": "This was a common issue which I used see in my team. Thanks for adding the functionality to make the delegated methods private without dealing with the abomination `private(*delegate(...))`.\r\nImplementing the `protected` feature does not add too much complexity therefore I suggest implementing it as well, even though some of you think it's not widely used. At least the reason to add it could be; since the `private` option is implemented, one can think the `protected` is implemented as well. To prevent such astonishment, the protected option should be implemented.", "created_at": "2018-03-21 14:10:45", "user": 1840945, "id": 374950077}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\nhttps://gist.github.com/liukun-lk/c12c087e20f783a726526be25e957fdb\r\n\r\n### System configuration\r\n**Rails version**:\r\n5.2.0.rc1\r\n**Ruby version**:\r\nruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-darwin16]", "labels": [], "number": 31943, "updated_at": "2018-02-09 07:25:04", "user": 5738686, "closed_at": "2018-02-09 07:25:04", "id": 295743171, "title": "[Rails5.2.0.rc1] TypeError: is not a class/module", "url": "https://api.github.com/repos/rails/rails/issues/31943", "created_at": "2018-02-09 03:25:43", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364334277", "text": "That is because `self` inside the scope block is not the `Post` class, but a Relation. You can refer to `Post::STATUS_NORMAL` or just `STATUS_NORMAL`, but not `self::STATUS_NORMAL`.\r\n\r\n@kamipo this behavior was changed in https://github.com/rails/rails/commit/4bdd86fb1e608d0031ee5e03af4ae0b13b41fea3\r\nThoughts?", "created_at": "2018-02-09 04:49:35", "user": 13696143, "id": 364334277}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364337408", "text": "@composerinteralia Thanks. That means after Rails 5.2.0 we should use `klass` instead of `relation` in the scope block?", "created_at": "2018-02-09 05:15:12", "user": 5738686, "id": 364337408}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364342064", "text": "Right, this is same issue with #31740.\r\n\r\nThis change is for all scopes (defined scope, default_scope, and association scope) are behaves consistently.\r\n\r\nBefore 5.2, if both an AR model class and a Relation instance have same named methods (e.g. `arel_attribute`, `predicate_builder`, etc),  defined scope doesn't respect relation instance information.\r\n\r\nFor example.\r\n\r\n```ruby\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments1, class_name: \"RecentComment1\"\r\n  has_many :comments2, class_name: \"RecentComment2\"\r\nend\r\n\r\nclass RecentComment1 < ActiveRecord::Base\r\n  self.table_name = \"comments\"\r\n  default_scope { where(arel_attribute(:created_at).gteq(2.weeks.ago)) }\r\nend\r\n\r\n\r\nclass RecentComment2 < ActiveRecord::Base\r\n  self.table_name = \"comments\"\r\n  default_scope { recent_updated }\r\n  scope :recent_updated, -> { where(arel_attribute(:updated_at).gteq(2.weeks.ago)) }\r\nend\r\n```\r\n\r\nIf eager loading `Post.eager_load(:comments1, :comments2).to_a`, `:comments1` (default_scope) respects aliased table name, but `:comments2` (using defined scope) may not work correctly since defined scope doesn't respect relation instance information.", "created_at": "2018-02-09 05:50:57", "user": 12642, "id": 364342064}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364356174", "text": "@kamipo Thanks, I understand. : )", "created_at": "2018-02-09 07:25:04", "user": 5738686, "id": 364356174}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"+1": [6443532]}, "text": "### Summary\r\n\r\n* Use heredoc with credentials template.\r\n* Fix indentation for aws config\r\n", "labels": [], "number": 31942, "updated_at": "2018-02-09 22:07:27", "user": 15371677, "closed_at": "2018-02-09 07:59:46", "id": 295727601, "title": "Use heredoc with credentials template", "url": "https://api.github.com/repos/rails/rails/issues/31942", "created_at": "2018-02-09 01:44:21", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364309144", "text": "r? @kaspth\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-09 01:44:22", "user": 7468109, "id": 364309144}, {"reactions": {"laugh": [15371677]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364362141", "text": "Thanks!", "created_at": "2018-02-09 07:59:51", "user": 987638, "id": 364362141}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364491756", "text": "@yhirano55 thanks!\r\n\r\n@y-yagi don't forget to backport to 5-2-stable 😊", "created_at": "2018-02-09 16:55:22", "user": 350807, "id": 364491756}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364583179", "text": ":+1: Backported: d1e3302fa8dba0da4acdfd36beee55434e226743", "created_at": "2018-02-09 22:07:27", "user": 987638, "id": 364583179}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [15371677, 199, 6443532]}, "text": "Pick the first value from the named column in the current relation. This is short-hand for `relation.limit(1).pluck(column_name).first`, and is primarily useful when you have a relation that's already narrowed down to a single row.\r\n\r\nJust like #pluck, #pick will only load the actual value, not the entire record object, so it's also more efficient. The value is, again like with pluck, typecast by the column type.\r\n\r\n```ruby\r\n  Person.where(id: 1).pick(:name)\r\n  # SELECT people.name FROM people WHERE id = 1 LIMIT 1\r\n  # => 'David'\r\n```", "labels": [], "number": 31941, "updated_at": "2018-02-13 09:31:09", "user": 2741, "closed_at": "2018-02-09 18:30:20", "id": 295727221, "title": "Add Relation#pick as short-hand for single-value plucks", "url": "https://api.github.com/repos/rails/rails/issues/31941", "created_at": "2018-02-09 01:42:08", "comments": [{"reactions": {"+1": [1034, 15371677, 418258]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364342596", "text": "Might we want `pick` to take multiple arguments like `pluck`?\r\n\r\n```rb\r\n  Person.where(id: 1).pick(:name, :email)\r\n  # SELECT people.name, people.email FROM people WHERE id = 1 LIMIT 1\r\n  # => ['Daniel', 'i@heart.rails']\r\n```\r\n\r\n(I was unreasonably nervous to leave this comment. I actually wrote it, then deleted it, then wrote it again.)", "created_at": "2018-02-09 05:54:50", "user": 13696143, "id": 364342596}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364471360", "text": "> is primarily useful when you have a relation that's already narrowed down to a single row\r\n\r\nThis reminds me of some of the philosophy behind #26206. Might it be worth codifying that rule?\r\n\r\n```ruby\r\ndef pick(*column_names)\r\n  rows = limit(2).pluck(*column_names)\r\n  raise \"Too many rows\" if rows.size > 1\r\n  rows.first\r\nend\r\n```", "created_at": "2018-02-09 15:47:36", "user": 1034, "id": 364471360}, {"reactions": {"+1": [1034]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364472621", "text": "The specific relation that I extracted #pick from actually does comprise multiple rows, but I know that I just want to deal with the first one (because I ordered the relation in such a way. Here's the actual source:\r\n\r\n```ruby\r\nmodule Person::Creator\r\n  extend ActiveSupport::Concern\r\n\r\n  def last_created_at_from(recordings)\r\n    recordings.where(creator: self).reverse_chronologically.pick(:created_at)\r\n  end\r\nend\r\n```\r\n\r\nSo a guard clause against multiple rows wouldn't really work for this. I don't think it's necessary in any case.", "created_at": "2018-02-09 15:51:55", "user": 2741, "id": 364472621}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364472813", "text": "@composerinteralia Totally. Just added that 👌\r\n\r\n@kamipo I just changed the test for now 🙏", "created_at": "2018-02-09 15:52:31", "user": 2741, "id": 364472813}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364628307", "text": "Will it raise `NoMethodError` for `NullRelation`?", "created_at": "2018-02-10 05:45:11", "user": 122436, "id": 364628307}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365048321", "text": "@bogdan no. Is it raising? I just added 4c615a53e0 and that test is passing. As it is the only way to generate `NullRelation` I can't see how it would be raising.", "created_at": "2018-02-12 20:16:07", "user": 47848, "id": 365048321}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365204849", "text": "@rafaelfranca It was only my theoretical guess. I think the test is good idea anyway. Thanks!", "created_at": "2018-02-13 09:31:09", "user": 122436, "id": 365204849}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [150670]}, "text": "### Steps to reproduce\r\n\r\nI have rails app which works fine. I try to add `mysql2` config to database.yml, and system doesnt run anymore. I've done lots of digging on internet, but I believe that \"activesupport-5.1.4\" doesnt play well with mysql2.\r\n\r\n# Gemfile:\r\n[..]\r\ngem 'mysql2' # adding this\r\n[..]\r\n\r\n### Expected behavior\r\nTell us what should happen:\r\n\r\nShould work like a charm. I'm including the libraries, I have packages installed locally, everything seems to work, but it does not RUN.\r\n\r\n### Actual behavior\r\nTell us what happens instead:\r\n\r\n$ bundle exec unicorn -c config/unicorn.rb\r\n\r\n/home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require': Could not load 'active_record/connection_adapters/mysql_adapter'. Make sure that the adapter in config/database.yml is valid. If you use an adapter other than 'mysql2', 'postgresql' or 'sqlite3' add the necessary adapter gem to the Gemfile. (LoadError)\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `block in require'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:258:in `load_dependency'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activerecord-5.1.4/lib/active_record/connection_adapters/connection_specification.rb:186:in `spec'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/connection_pool.rb:880:in `establish_connection'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activerecord-5.1.4/lib/active_record/connection_handling.rb:58:in `establish_connection'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activerecord-5.1.4/lib/active_record/railtie.rb:124:in `block (2 levels) in <class:Railtie>'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:69:in `instance_eval'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:69:in `block in execute_hook'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:60:in `with_execution_control'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:65:in `execute_hook'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:50:in `block in run_load_hooks'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:49:in `each'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:49:in `run_load_hooks'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activerecord-5.1.4/lib/active_record/base.rb:326:in `<module:ActiveRecord>'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activerecord-5.1.4/lib/active_record/base.rb:25:in `<top (required)>'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `block in require'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:258:in `load_dependency'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n\tfrom /home/riccardo/git/ror5-pasta/pasta/app/models/application_record.rb:1:in `<top (required)>'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `block in require'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:258:in `load_dependency'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:379:in `block in require_or_load'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:36:in `block in load_interlock'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies/interlock.rb:12:in `block in loading'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/concurrency/share_lock.rb:149:in `exclusive'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies/interlock.rb:11:in `loading'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:36:in `load_interlock'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:357:in `require_or_load'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:335:in `depend_on'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:251:in `require_dependency'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/railties-5.1.4/lib/rails/engine.rb:476:in `block (2 levels) in eager_load!'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/railties-5.1.4/lib/rails/engine.rb:475:in `each'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/railties-5.1.4/lib/rails/engine.rb:475:in `block in eager_load!'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/railties-5.1.4/lib/rails/engine.rb:473:in `each'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/railties-5.1.4/lib/rails/engine.rb:473:in `eager_load!'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/railties-5.1.4/lib/rails/engine.rb:354:in `eager_load!'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/railties-5.1.4/lib/rails/application/finisher.rb:67:in `each'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/railties-5.1.4/lib/rails/application/finisher.rb:67:in `block in <module:Finisher>'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/railties-5.1.4/lib/rails/initializable.rb:30:in `instance_exec'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/railties-5.1.4/lib/rails/initializable.rb:30:in `run'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/railties-5.1.4/lib/rails/initializable.rb:59:in `block in run_initializers'\r\n\tfrom /home/riccardo/.rvm/rubies/ruby-2.3.4/lib/ruby/2.3.0/tsort.rb:228:in `block in tsort_each'\r\n\tfrom /home/riccardo/.rvm/rubies/ruby-2.3.4/lib/ruby/2.3.0/tsort.rb:350:in `block (2 levels) in each_strongly_connected_component'\r\n\tfrom /home/riccardo/.rvm/rubies/ruby-2.3.4/lib/ruby/2.3.0/tsort.rb:431:in `each_strongly_connected_component_from'\r\n\tfrom /home/riccardo/.rvm/rubies/ruby-2.3.4/lib/ruby/2.3.0/tsort.rb:349:in `block in each_strongly_connected_component'\r\n\tfrom /home/riccardo/.rvm/rubies/ruby-2.3.4/lib/ruby/2.3.0/tsort.rb:347:in `each'\r\n\tfrom /home/riccardo/.rvm/rubies/ruby-2.3.4/lib/ruby/2.3.0/tsort.rb:347:in `call'\r\n\tfrom /home/riccardo/.rvm/rubies/ruby-2.3.4/lib/ruby/2.3.0/tsort.rb:347:in `each_strongly_connected_component'\r\n\tfrom /home/riccardo/.rvm/rubies/ruby-2.3.4/lib/ruby/2.3.0/tsort.rb:226:in `tsort_each'\r\n\tfrom /home/riccardo/.rvm/rubies/ruby-2.3.4/lib/ruby/2.3.0/tsort.rb:205:in `tsort_each'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/railties-5.1.4/lib/rails/initializable.rb:58:in `run_initializers'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/railties-5.1.4/lib/rails/application.rb:353:in `initialize!'\r\n\tfrom /home/riccardo/git/ror5-pasta/pasta/config/environment.rb:5:in `<top (required)>'\r\n\tfrom config.ru:4:in `require_relative'\r\n\tfrom config.ru:4:in `block in <main>'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/rack-2.0.4/lib/rack/builder.rb:55:in `instance_eval'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/rack-2.0.4/lib/rack/builder.rb:55:in `initialize'\r\n\tfrom config.ru:1:in `new'\r\n\tfrom config.ru:1:in `<main>'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/unicorn-4.9.0/lib/unicorn.rb:48:in `eval'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/unicorn-4.9.0/lib/unicorn.rb:48:in `block in builder'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/unicorn-4.9.0/lib/unicorn/http_server.rb:768:in `build_app!'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/unicorn-4.9.0/lib/unicorn/http_server.rb:137:in `start'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/gems/unicorn-4.9.0/bin/unicorn:126:in `<top (required)>'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/bin/unicorn:22:in `load'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/bin/unicorn:22:in `<main>'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/bin/ruby_executable_hooks:15:in `eval'\r\n\tfrom /home/riccardo/.rvm/gems/ruby-2.3.4/bin/ruby_executable_hooks:15:in `<main>'\r\n\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n**Ruby version**: tried 2.3.4p301 and 2.2\r\n", "labels": [], "number": 31940, "updated_at": "2018-03-21 07:42:04", "user": 132802, "closed_at": "2018-02-08 23:57:10", "id": 295684208, "title": "[5.1.4] mysql2 gem seems not to work with activesupport-5.1.4", "url": "https://api.github.com/repos/rails/rails/issues/31940", "created_at": "2018-02-08 22:12:27", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364289580", "text": "> /home/riccardo/.rvm/gems/ruby-2.3.4/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in require': Could not load 'active_record/connection_adapters/mysql_adapter'. Make sure that the adapter in config/database.yml is valid. If you use an adapter other than 'mysql2', 'postgresql' or 'sqlite3' add the necessary adapter gem to the Gemfile.\r\n\r\nIn this error, you probably have specified erroneous `adater` in `config/database.yml`. \r\nConfirm the `adapter` specification, if you specified `mysql`, change to` mysql2`.\r\n\r\n", "created_at": "2018-02-08 23:57:10", "user": 987638, "id": 364289580}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/374843924", "text": "This seems to be a Rails incompatibilty with the current mysql2 version 0.5.0. Note that a new Rails install creates this `Gemfile` entry:\r\n\r\n```ruby\r\n# Use mysql as the database for Active Record\r\ngem 'mysql2', '>= 0.3.18', '< 0.5'\r\n```", "created_at": "2018-03-21 06:28:01", "user": 150670, "id": 374843924}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/374854536", "text": "This will be fixed by https://github.com/rails/rails/pull/32310", "created_at": "2018-03-21 07:42:04", "user": 8122246, "id": 374854536}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nDocument automated identification of nested resources in form_for with array\r\n", "labels": [], "number": 31939, "updated_at": "2018-02-25 22:30:32", "user": 48054, "closed_at": "2018-02-24 21:18:27", "id": 295682320, "title": "Add nested resources form helper description", "url": "https://api.github.com/repos/rails/rails/issues/31939", "created_at": "2018-02-08 22:05:48", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364264476", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @georgeclaghorn (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-08 22:05:51", "user": 7468109, "id": 364264476}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368261042", "text": "The guides are meant to have a certain flow, so they read as one voice throughout. This better suits the `form_for` documentation, where we already cover nested resources: https://github.com/rails/rails/blob/3915a470d2b8898fdbc384d0f9f31e2ad8a2c899/actionview/lib/action_view/helpers/form_helper.rb#L292-L303\r\n\r\nThanks!", "created_at": "2018-02-24 21:18:27", "user": 350807, "id": 368261042}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368351301", "text": "@kaspth the nested resources are described in next paragraph https://github.com/rails/rails/pull/31939/files#diff-6c86ada7eb016a7b145c128714a8d379R362 - I guess this should be described in both places", "created_at": "2018-02-25 22:30:32", "user": 48054, "id": 368351301}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Use an infinite sized queue in rack test context to avoid deadlock situation on insertion into a full queue when data is never consumed from the `Action::Dispatch::Response::Buffer`.\r\n\r\n### Summary\r\n\r\nHi rails team!\r\n\r\nThis is my first time contributing to rails. I saw issue https://github.com/rails/rails/issues/31200, and the subsequent follow-up issue https://github.com/rails/rails/issues/31813, and thought it would be a good first problem to tackle.\r\n\r\nI implemented the second tentative solution listed in #31813, where an infinite queue is used for streaming in a rack test context.\r\n\r\nIf the team believes it's better to proceed with the third solution (consuming the response in async) over the second one, I'd be happy to try and tackle it and would appreciate any guidance or advice from the team.\r\n\r\n### Other Information\r\n\r\nJust for my understanding _(and this may be a silly question, so I apologize in advance if it is)_. Why was a `SizedQueue` used over a regular `Queue`? Was the limit of `10` chosen arbitrarily, or was it chosen for a specific reason?\r\n\r\nThank you! 🙂 ", "labels": [], "number": 31938, "updated_at": "2018-02-22 14:41:44", "user": 8942499, "closed_at": "None", "id": 295625160, "title": "Fix: `Testing an ActionController::Live controller leads to a deadlock `", "url": "https://api.github.com/repos/rails/rails/issues/31938", "created_at": "2018-02-08 18:50:21", "comments": [], "assignees": [1080678, 1080678], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "The issue can be approximated as follows:\r\n\r\n```rb\r\n> a = App.create!\r\n> a.changes\r\n=> {\"created_at\"=>\r\n  [Thu, 08 Feb 2018 17:41:13 UTC +00:00, Thu, 08 Feb 2018 17:41:13 UTC +00:00],\r\n \"updated_at\"=>\r\n  [Thu, 08 Feb 2018 17:41:13 UTC +00:00, Thu, 08 Feb 2018 17:41:13 UTC +00:00]}\r\n> a.changes[\"created_at\"][0].nsec\r\n=> 707180575\r\n> a.changes[\"created_at\"][1].nsec\r\n=> 707180000\r\n```\r\n\r\nI've yet to be able to create a local repro, though I am continuing to try. None of my code attempts to set either of these values so it's not clear to me why they should be dirty.\r\n\r\nRuby: 2.5.0\r\nRails: 5.2.0.rc\r\nPostgres: 9.6.5\r\npg gem: 1.0.0\r\n\r\nPostgres schema:\r\n```sql\r\nCREATE TABLE apps (\r\n    created_at timestamp without time zone,\r\n    updated_at timestamp without time zone\r\n)\r\n```", "labels": [], "number": 31937, "updated_at": "2018-02-09 18:32:15", "user": 9835, "closed_at": "None", "id": 295608162, "title": "Newly created record has changes on timestamps", "url": "https://api.github.com/repos/rails/rails/issues/31937", "created_at": "2018-02-08 17:53:51", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364197760", "text": "Can't reproduce. Looks like problem is arising from other party (external gem for example). Could you, please, provide a reproducible script using this template https://github.com/rails/rails/blob/master/guides/bug_report_templates/active_record_master.rb?", "created_at": "2018-02-08 18:05:02", "user": 5657035, "id": 364197760}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364200790", "text": "@fatkodima it's almost certainly some edge case interaction. I can't even reproduce it on my local dev system, only on Heroku. That said, I'm happy to dig in further, though if anyone can point me in a more specific direction that would be very helpful.", "created_at": "2018-02-08 18:15:13", "user": 9835, "id": 364200790}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364214869", "text": "So I think I have a pretty good idea of what is causing this.\r\n\r\nThe `App` record has an `after_save` call back which attempts to update a cache on a `belongs_to` for `Organization`. The `Organization`'s cache update method calls `apps.length`, this in turn eventually hits this code in ActiveRecord: https://github.com/rails/rails/blob/master/activerecord/lib/active_record/associations/collection_association.rb#L331. Along the way, we compare the record persisted in the DB with the local one in memory. However, Postgres doesn't store nanoseconds so the times don't match up.", "created_at": "2018-02-08 19:03:52", "user": 9835, "id": 364214869}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364215042", "text": "I can't repro this locally because I'm developing on macOS and Ruby doesn't have nanoseconds here.", "created_at": "2018-02-08 19:04:29", "user": 9835, "id": 364215042}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364227859", "text": "@fatkodima In light of the fact that @wagenet can't reproduce locally, it seems more likely to be a platform-specific edge-case rather than an interaction with a third party gem.", "created_at": "2018-02-08 19:50:17", "user": 4, "id": 364227859}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364234035", "text": "Adding `sleep 1` might help for getting a repro script", "created_at": "2018-02-08 20:12:19", "user": 1529387, "id": 364234035}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364518435", "text": "@wycats I couldn't reproduce locally because macOS doesn't have nano seconds in `Time`, but as @sgrif mentioned, a well-placed `sleep 1` would probably work around this. I'll try to put together a repro for this, but TBH it's not a high priority for me now that I have a workaround.", "created_at": "2018-02-09 18:32:15", "user": 9835, "id": 364518435}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "In model I have:\r\n```ruby\r\nbefore_commit :queue, on: [:create, :update]\r\nafter_commit :queue, on: :destroy\r\n```\r\n\r\nWe also need to skip these callbacks in one place, I tried:\r\n```ruby\r\nEmailAddress.skip_callback(:commit, :before, :queue)\r\nEmailAddress.skip_callback(:commit, :after, :queue)\r\n```\r\n\r\nBut this leads to:\r\n```\r\nArgumentError: Before commit callback :queue has not been defined\r\n```\r\n\r\nBut still can skip the `after_commit` one.\r\n\r\nUPD. It seems to skip the `before` one I have to write `before_commit` instead of just `before`, which is strange:\r\n```ruby\r\nEmailAddress.skip_callback(:before_commit, :before, :queue)\r\n```\r\n\r\nAnd the error message in case of undefined callback also looks weird:\r\n```\r\n2.3.3 :003 > EmailAddress.skip_callback(:before_commit, :before, :test)\r\n => ArgumentError: Before before_commit callback :test has not been defined\r\n```", "labels": [], "number": 31936, "updated_at": "2018-02-12 12:06:20", "user": 126732, "closed_at": "2018-02-12 12:06:20", "id": 295601592, "title": "Unable to skip before commit callback", "url": "https://api.github.com/repos/rails/rails/issues/31936", "created_at": "2018-02-08 17:32:45", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364206902", "text": "It is a private api, as stated here https://github.com/rails/rails/issues/25896 so not recommended to use.\r\nAnd implemented here https://github.com/rails/rails/blob/d7f9adf7941574d0a40a165739938d28f278bd77/activerecord/lib/active_record/transactions.rb#L217 through `:before_commit` - so this is why the second example is working.", "created_at": "2018-02-08 18:36:14", "user": 5657035, "id": 364206902}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364213909", "text": "Yeah, exactly, I figured this out looking at this same code. I find this a little discrepancy compared to the other callbacks, even though the API might be private. And it is not very clear that the API is private.", "created_at": "2018-02-08 19:00:20", "user": 126732, "id": 364213909}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364904108", "text": "Only the API that appears on the API site(http://api.rubyonrails.org) are public user-facing API. \r\nIf visibility is public but `:nodoc:` is specified, it is an API for internal use, so it does not appear on the API site. \r\n`before_commit` is specified `:nodoc:`. In other words, it is an internal API, not public user-facing API.  \r\nhttps://github.com/rails/rails/blob/4a17b26c6850dd0892dc0b58a6a3f1cce3169593/activerecord/lib/active_record/transactions.rb#L215 \r\n\r\nRef: http://edgeguides.rubyonrails.org/api_documentation_guidelines.html#method-visibility\r\n", "created_at": "2018-02-12 12:06:20", "user": 987638, "id": 364904108}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "I use Paperclip gem. \r\nInto User model I have specific a different path from default path:\r\n`has_attached_file :image, :path => ':rails_root/private/images/:code/:filename'`\r\n\r\nIs it possible with ActiveStorage?", "labels": [], "number": 31935, "updated_at": "2018-02-08 14:26:46", "user": 10075337, "closed_at": "2018-02-08 14:24:49", "id": 295528250, "title": "[ActiveStorage] Set different storage path into model", "url": "https://api.github.com/repos/rails/rails/issues/31935", "created_at": "2018-02-08 14:18:03", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364126754", "text": "No, sorry.\r\n\r\nPlease use Stack Overflow or the [rubyonrails-talk](https://groups.google.com/forum/#!forum/rubyonrails-talk) mailing list for questions, where a wider community will be able to help you. We reserve the issue tracker for bugs.", "created_at": "2018-02-08 14:24:49", "user": 94129, "id": 364126754}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Fixes https://github.com/rails/rails/issues/31931.\r\n\r\nRegression was introduced in https://github.com/rails/rails/commit/5a593486f5c8a73f2be200a409b0a14dff51790c.\r\n\r\nr? @kamipo ", "labels": [], "number": 31934, "updated_at": "2018-02-09 00:58:19", "user": 5657035, "closed_at": "2018-02-09 00:58:18", "id": 295528097, "title": "Fix marshaling of models with `has_many :through` associations", "url": "https://api.github.com/repos/rails/rails/issues/31934", "created_at": "2018-02-08 14:17:34", "comments": [], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nfor delegation as  public methods there is existing `#delegate` method :\r\n\r\n```ruby\r\nclass Foo\r\n   # ...\r\n   delegate :foo, :bar, to: :baz\r\n   # ...\r\nend\r\n\r\nfoo = Foo.new\r\nfoo.foo\r\nfoo.bar\r\n```\r\n\r\nhttps://github.com/rails/rails/blob/master/activesupport/lib/active_support/core_ext/module/delegation.rb#L154\r\n\r\nAnd this PR provides method `#delegate_privately` \r\n\r\n```ruby\r\nclass Foo\r\n   # ...\r\n   delegate_privately :car, :dar, to: :daz\r\n   # ...\r\nend\r\n\r\nfoo = Foo.new\r\nfoo.car  # => NoMethodError: private method `car' called for #<Foo:0x000000015e8b10>\r\nfoo.dar # => NoMethodError: private method `car' called for #<Foo:0x000000015e8b10>\r\n```\r\n\r\n**Reason**\r\n\r\nfrom my understanding,  currently the only way how to delegate as private method is by doing:\r\n\r\n```ruby\r\nclass Foo\r\n   # ...\r\n   private *delegate( :car, :dar, to: :daz)\r\n   # ...\r\nend\r\n\r\nfoo = Foo.new\r\nfoo.car  # => NoMethodError: private method `car' called for #<Foo:0x000000015e8b10>\r\nfoo.dar # => NoMethodError: private method `dar' called for #<Foo:0x000000015e8b10>\r\n```\r\n\r\n* https://blog.eq8.eu/til/how-to-delegate-methods-in-rails-as-private.html\r\n* https://stackoverflow.com/questions/15643172/make-delegated-methods-private\r\n\r\nand there are some cases when I want to delegate methods to other object and not expose those methods as part of  primary object  interface methods\r\n\r\n**Why is `private *delegate(...)` not enough:**\r\n\r\nSeems to me like developers might feels discouraged to use the `private *delegate(...)` as it's 4 responsibility in one line: \r\n\r\n*  private\r\n*  splat operator\r\n* the actual delegation \r\n* knowledge of what delegate returns \r\n\r\n...this way all these 4 responsibilities are hidden in one method `#delegate_privately` and tested outside of the application => Rails framework\r\n\r\nAlso there is misconception amongs developers that this works (which does not)\r\n\r\n```ruby\r\nclass Bar\r\n   def car\r\n      12\r\n   end\r\nend\r\n\r\nclass Foo\r\n   private  \r\n   delegate :car, to: :bar  \r\n   def bar\r\n     Bar.new\r\n   end  \r\nend  \r\n\r\nFoo.new.car\r\n#=> 12\r\n\r\nFoo.new.public_methods - Object.new.public_methods \r\n#=> [:car]\r\n```\r\n\r\n> Actually that is my case,  I was (at least) 4 years in understanding that this works, and never bothered to check it :disappointed:\r\n\r\n \r\n\r\nRelated discussion:\r\n\r\n* https://github.com/rails/rails/issues/31932\r\n\r\n\r\n", "labels": [], "number": 31933, "updated_at": "2018-02-13 14:46:31", "user": 721990, "closed_at": "2018-02-12 21:00:19", "id": 295507594, "title": "delegate_privately - ability to delegate methods while keeping them private", "url": "https://api.github.com/repos/rails/rails/issues/31933", "created_at": "2018-02-08 13:15:30", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364108053", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @georgeclaghorn (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-08 13:15:33", "user": 7468109, "id": 364108053}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364108705", "text": "alternatively (if this is rejected) I can do: \r\n\r\n```\r\nclass Foo\r\n   # ...\r\n   delegate :foo, :bar, to: :baz\r\n   delegate :car, :dar, to: :daz, private: true\r\n   # ...\r\nend\r\n\r\nfoo = Foo.new\r\nfoo.foo\r\nfoo.bar\r\nfoo.car # => NoMethodError: private method `car' called for #<Foo:0x000000015e8b10>\r\nfoo.dar # => NoMethodError: private method `dar' called for #<Foo:0x000000015e8b10>\r\n```\r\n\r\nbut I do personally prefer `#delegate_privately`\r\n\r\npoint is `private *delegate(...)` is too much work  and  lot of developers think this is a thing:\r\n\r\n```ruby\r\nclass Foo\r\n  private\r\n  delegate :my_private_method_that_must_stay_private, to: :obj\r\nend\r\n```\r\n\r\n-------------------\r\n\r\nok alternative PR done here: https://github.com/rails/rails/pull/31944", "created_at": "2018-02-08 13:18:22", "user": 721990, "id": 364108705}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364416725", "text": "Same comment as [here](https://github.com/rails/rails/pull/31944#issuecomment-364416110), I would like to discuss this in only one PR.", "created_at": "2018-02-09 12:07:31", "user": 671550, "id": 364416725}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "I want to introduce a PR to Rails after which  there would be a possibility to delegate methods to object as private methods. But I want to check first with you if it's a good idea before I do the work.\r\n\r\nSo we would have this (already existing method `#delegate`) for delegation as  public methods :\r\n\r\n```ruby\r\nclass Foo\r\n   # ...\r\n   delegate :foo, :bar, to: :baz\r\n   # ...\r\nend\r\n\r\nfoo = Foo.new\r\nfoo.foo\r\nfoo.bar\r\n```\r\n\r\nhttps://github.com/rails/rails/blob/master/activesupport/lib/active_support/core_ext/module/delegation.rb#L154\r\n\r\nAnd I want to introduce method `#delegate_privately` \r\n\r\n```ruby\r\nclass Foo\r\n   # ...\r\n   delegate_privately :car, :dar, to: :daz\r\n   # ...\r\nend\r\n\r\nfoo = Foo.new\r\nfoo.car  # => NoMethodError: private method `car' called for #<Foo:0x000000015e8b10>\r\nfoo.dar # => NoMethodError: private method `car' called for #<Foo:0x000000015e8b10>\r\n```\r\n\r\n...or if you don't want a new method I can change existing `delegate` method to include flag `private: true`\r\n\r\n```ruby\r\nclass Foo\r\n   # ...\r\n   delegate :foo, :bar, to: :baz\r\n   delegate :car, :dar, to: :daz, private: true\r\n   # ...\r\nend\r\n\r\nfoo = Foo.new\r\nfoo.foo\r\nfoo.bar\r\n```\r\n\r\n**Reason**\r\n\r\nfrom my understanding,  currently the only way how to delegate as private method is by doing:\r\n\r\n```ruby\r\nclass Foo\r\n   # ...\r\n   private *delegate( :car, :dar, to: :daz)\r\n   # ...\r\nend\r\n\r\nfoo = Foo.new\r\nfoo.car  # => NoMethodError: private method `car' called for #<Foo:0x000000015e8b10>\r\nfoo.dar # => NoMethodError: private method `car' called for #<Foo:0x000000015e8b10>\r\n```\r\n\r\n* https://blog.eq8.eu/til/how-to-delegate-methods-in-rails-as-private.html\r\n* https://stackoverflow.com/questions/15643172/make-delegated-methods-private\r\n\r\nand there are some cases when I want to do delegation in object and not expose it as interface method\r\n\r\n-----\r\n\r\nand BTW this don't work:\r\n\r\n```ruby\r\nclass Foo\r\n   private  \r\n   delegate :to_s, to: :bar  \r\n   def bar\r\n     12\r\n   end  \r\nend  \r\n\r\nFoo.new.to_s\r\n#=> \"12\"\r\n\r\nFoo.new.public_methods - Object.new.public_methods \r\n#=> [:foo]\r\n```\r\n\r\n", "labels": [], "number": 31932, "updated_at": "2018-02-08 13:37:08", "user": 721990, "closed_at": "2018-02-08 12:41:12", "id": 295488065, "title": "feature proposal: delegate private", "url": "https://api.github.com/repos/rails/rails/issues/31932", "created_at": "2018-02-08 12:07:01", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364096251", "text": "AFAIK Active Support accepts mainly features used internally in Rails code. Is there chance for any benefit for current Rails code? \r\n\r\n*Also feature proposals without code belongs to rails-core mailing list - http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#what-about-feature-requests-questionmark*.\r\n\r\n:office: ", "created_at": "2018-02-08 12:24:27", "user": 193936, "id": 364096251}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364098447", "text": "I don't know, I use the `#delegate` all over the production code of applications    that I write (e.g. delegation of methods to association models) ...as well as other Active Support methods\r\n\r\nThe delegation is extension of `class Module` => it's used everywhere. So I'm not sure what benefit it will have for Rails code but  it's sort of an issue for application code if there is no way how to delegate privately. `¯\\_(ツ)_/¯`", "created_at": "2018-02-08 12:34:32", "user": 721990, "id": 364098447}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364100054", "text": ":thinking: \r\n\r\n>Also feature proposals without code belongs to rails-core mailing list - http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#what-about-feature-requests-questionmark.\r\n\r\n![sorry](https://rlv.zcache.com/okay_meme_postcard-r431d6dd2726a40d98d4f55ef721556ed_vgbaq_8byvr_324.jpg) \r\n\r\nsorry didn't know, closing the ticket ", "created_at": "2018-02-08 12:41:11", "user": 721990, "id": 364100054}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364108210", "text": "PR created https://github.com/rails/rails/pull/31933 ", "created_at": "2018-02-08 13:16:13", "user": 721990, "id": 364108210}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"+1": [351958]}, "text": "### Steps to reproduce\r\n\r\nWhen update Rails to 5.2.0.rc1, \r\n```\r\nRails.cache.fetch('test') { Page.home.enable.includes(:banners).first }\r\n```\r\nwill raise `TypeError: no _dump_data is defined for class Proc`.\r\n\r\n```\r\n# app/models/page.rb\r\n...\r\n  has_many :pages_banners, -> { order(weight: :asc, id: :desc) }, dependent: :destroy, inverse_of: :page\r\n  has_many :banners, through: :pages_banners\r\n...\r\n```\r\n\r\nWhen I remove `-> { order(weight: :asc, id: :desc) }`, rails cache can run correctly.\r\n\r\nAnd when I rollback to `5.2.0.beta2`, rails cache also can run correctly even if `-> { order(weight: :asc, id: :desc) }` exist.\r\n\r\n### System configuration\r\n**Rails version**:\r\n5.2.0.rc1\r\n**Ruby version**:\r\nruby 2.4.0p0 (2016-12-24 revision 57164) [x86_64-darwin16]", "labels": [], "number": 31931, "updated_at": "2018-02-09 00:58:18", "user": 5738686, "closed_at": "2018-02-09 00:58:18", "id": 295390450, "title": "5.2.0.rc1: Rails.cache.fetch raise TypeError: no _dump_data is defined for class Proc", "url": "https://api.github.com/repos/rails/rails/issues/31931", "created_at": "2018-02-08 05:30:39", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364088068", "text": "Thanks. Can confirm on master, I will look at this.", "created_at": "2018-02-08 11:47:37", "user": 5657035, "id": 364088068}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\nAttempt to pass a web URL to a template file via the `-m` option on `rails new`.\r\nExample :: `rails new helloworld -m https://github.com/jw81/Rails_Templating/blob/master/template.rb`\r\n\r\n### Expected behavior\r\nA new Rails project is created using the template passed into the `-m` option.\r\n\r\n### Actual behavior\r\n`/usr/local/lib/ruby/2.5.0/open-uri.rb:377:in open_http': 406 Not Acceptable (OpenURI::HTTPError)`\r\n\r\n### System configuration\r\n**Rails version**: 5.0.0\r\n\r\n**Ruby version**: 2.5\r\n", "labels": [], "number": 31930, "updated_at": "2018-02-08 15:36:12", "user": 5184844, "closed_at": "2018-02-08 11:14:24", "id": 295328583, "title": "Running rails new with template URL fails with HTTP Error Code 406", "url": "https://api.github.com/repos/rails/rails/issues/31930", "created_at": "2018-02-07 23:15:22", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364080690", "text": "Please use the [mailing list](https://groups.google.com/forum/#!forum/rubyonrails-talk) or StackOverflow for questions/help, where a wider community will be able to help you. We reserve the issues tracker for issues only.", "created_at": "2018-02-08 11:14:24", "user": 987638, "id": 364080690}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364149578", "text": "Dang it, I'm sorry.\r\nIt wasn't a bug.  It was user error.\r\n\r\nFor people who may stumble across this in the future, make sure you are passing a URL that points at the RAW version of a file.\r\nIn my example, if I change the url that I pass via the `-m` option to `https://raw.githubusercontent.com/jw81/Rails_Templating/master/template.rb`, it works perfectly.\r\n\r\nSorry for opening the issue.  :(", "created_at": "2018-02-08 15:36:12", "user": 5184844, "id": 364149578}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nIn order to help get around https://github.com/rails/rails/issues/31928, we've written code to allow custom naming of schema_cache.yml files. This allows each process that we have running on a shared box to write a file only it reads.\r\n\r\n### Other Information\r\n\r\nThis bug and approach has been explained in the issue listed above.", "labels": [], "number": 31929, "updated_at": "2018-02-07 22:36:01", "user": 4146, "closed_at": "2018-02-07 22:36:01", "id": 295317598, "title": "Allow unique name for schema_cache.yml file.", "url": "https://api.github.com/repos/rails/rails/issues/31929", "created_at": "2018-02-07 22:32:19", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363933834", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @pixeltrix (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-07 22:32:22", "user": 7468109, "id": 363933834}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363933838", "text": "<img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20> **Warning** <img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20>\n\n* Pull requests are usually filed against the master branch for this repo, but this one is against 5-1-stable. Please double check that you specified the right target!", "created_at": "2018-02-07 22:32:23", "user": 7468109, "id": 363933838}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363934779", "text": "Thank you for the pull request but I don't think this is the solution of the problem. See https://github.com/rails/rails/issues/31928#issuecomment-363934523", "created_at": "2018-02-07 22:36:01", "user": 47848, "id": 363934779}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "After upgrading to Rails 5.1.4, we started seeing an issue with our Resque worker process hitting our `information_schema` table many times per second. This was because our Resque workers fork for each job that they handle, meaning that the schema cache was refreshed for each job.\r\n\r\nIn an attempt to fix it, we attempted to clear and repopulate the schema_cache.yml file when each worker starts. The code we used is attached below (_**Fig 1**_). We have this code running inside the process so we can avoid loading `environment.rb` multiple times. The problem we encountered with this solution was that we have multiple workers on a box. This means that a worker could be starting, which clears and repopulates the cache, when another worker is about to load the cache off of disk. We're seeing this in production and it causes us to encounter a `NoMethodError` when trying to call `false.version` on this line:\r\nhttps://github.com/rails/rails/blob/554dcc4c6ec3339507e9b05235c417e0ed00e1c4/activerecord/lib/active_record/railtie.rb#L99\r\n\r\nWe have a few ideas about potential fixes:\r\n- Don't clear the cache upon fork\r\n- Allow each parent process to write/load it's own version of the schema_cache.yml file (schema_cache.1234.yml, for example). We have code written that satisfies this that I will send over as a PR shortly, but I think the first fix might be more appropriate.\r\n\r\n### Steps to reproduce\r\nFork process and reopen connection to MySQL.\r\n\r\n### Expected behavior\r\nThe child process continues using the ActiveRecord schema cache from the parent.\r\n\r\n### Actual behavior\r\nThe child process has to rebuild the schema cache, by querying the information_schema table.\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.3.3\r\n\r\n**Resque version**: 1.26.0 \r\n\r\n### Fig 1\r\n\r\n```ruby\r\nload 'active_record/railties/databases.rake'\r\nRake::Task['db:schema:cache:clear'].execute\r\nRake::Task['db:schema:cache:dump'].execute\r\n```", "labels": [], "number": 31928, "updated_at": "2018-02-22 19:23:16", "user": 4146, "closed_at": "None", "id": 295314714, "title": "Rails 5 loses schema cache on fork", "url": "https://api.github.com/repos/rails/rails/issues/31928", "created_at": "2018-02-07 22:21:41", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363934523", "text": "How can we reproduce this problem? There is no code in rails that cleans the schema cache after a fork. In fact, we store the schema cache in the connection pool exactly to make sure that any connection that is created use the same schema cache.\r\n\r\nhttps://github.com/rails/rails/blob/554dcc4c6ec3339507e9b05235c417e0ed00e1c4/activerecord/lib/active_record/railtie.rb#L101", "created_at": "2018-02-07 22:35:02", "user": 47848, "id": 363934523}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363935942", "text": "Ah, interesting. But that wouldn't run in the parent process if the schema_cache.yml file doesn't yet exist, right? Because we are generating the file in the process itself, only the child's connection pool would execute this line.\r\n\r\nAlso, does the connection pool get cleared on forking? I assume not?", "created_at": "2018-02-07 22:40:37", "user": 4146, "id": 363935942}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363938115", "text": "You need to generate the schema cache before booting the application in the parent process.\r\n\r\nEach process has it own connection pool, but every time a new process is created we copy the schema cache from the parent process.\r\n\r\nhttps://github.com/rails/rails/blob/4ca73f448187c02b5474cf90dc7c3122ee0760ff/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L1042", "created_at": "2018-02-07 22:49:35", "user": 47848, "id": 363938115}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363938820", "text": "Great. I'll attempt this.", "created_at": "2018-02-07 22:52:21", "user": 4146, "id": 363938820}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364509585", "text": "FWIW, although the cache may be copied on fork, I still think this is a legitimate concern. Given a repo that has multiple applications (say a web app and a few background workers) any two of these starting up at the same time could cause a race condition where the second process clobbers the the schema cache file as the first process attempts to read it. So in this case it isn't forking related but is related to multiple processes using a shared resource without coordination. We've run into this problem.\r\n\r\nIt seems the solution is to either introduce some mechanism for global control of the cache generation or to remove the race condition. In essence the former is what is being proposed by suggesting \"generate the schema cache before booting the application\". Doing this effectively and resiliently is not always simple and certainly increases deployment and operational complexity.\r\n\r\nMy preferred solution would be to remove the contention on a shared resource. I think the PR attached to this issue is a fine solution since it doesn't preclude the current way AR works and anybody who wants to generate the cache in a globally coordinated way (an there are good reasons for doing so) can do so in exactly the way they do today.\r\n\r\nAnother option would be to allow for pre-populating the cache without the use of a file (populate the in-memory cache directly on boot). This removes the global resource but introduces a different mode of operation so I think the solution is less desirable than the PR.", "created_at": "2018-02-09 17:58:25", "user": 14916, "id": 364509585}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/367791400", "text": "A few things to wrap this issue up:\r\n\r\nIt seems the real solution to this problem would be to ensure that the `connection_pool.schema_cache` gets updated as the `connection.schema_cache` receives changes. Is there ever a time when you wouldn't want these to be in sync?\r\n\r\nAs for our issue, I'll paste our solution for anyone who might be searching for a way to fix the issue if they also encounter it.\r\n\r\n```ruby\r\n\r\n# [AP-4386] When we deployed Rails5 to production, we saw\r\n# a lot of slow queries against database on worker tasks.\r\n# It seems that these workers query the database to determine\r\n# primary keys, etc. when an ActiveRecord class is used the\r\n# the first time after load. Caching this information should\r\n# stop the database from being hit.\r\n#\r\n# Caching logic taken directly from Rails' 'rake db:schema:cache:dump'\r\n# task. This code clears the schema cache, then reloads every\r\n# table in the db explicitly. Lastly, and most importantly,\r\n# it sets `connection_pool.schema_cache` to the current\r\n# connection's schema cache. This ensure's that every child\r\n# process forked by Resque gets this schema_cache.\r\n#\r\n# References:\r\n#   https://github.com/rails/rails/issues/31928\r\n#   https://github.com/rails/rails/blob/1dfc3a248ac03b96696927159e5e1a00c8e96ec2/activerecord/lib/active_record/tasks/database_tasks.rb#L299\r\nActiveRecord::Base.connection.schema_cache.clear!\r\nActiveRecord::Base.connection.data_sources.each do |table|\r\n  ActiveRecord::Base.connection.schema_cache.add(table)\r\nend\r\nActiveRecord::Base.connection_pool.schema_cache = ActiveRecord::Base.connection.schema_cache.dup\r\n```", "created_at": "2018-02-22 19:23:16", "user": 4146, "id": 367791400}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nThis adds documentation for `:combine_options` in ActiveStorage's Variation proxy for MiniMagick. Turns out this is still undocumented functionality after my PR that introduced it.\r\n", "labels": [], "number": 31927, "updated_at": "2018-02-09 14:23:36", "user": 3011, "closed_at": "2018-02-09 14:18:12", "id": 295308684, "title": "Document :combine_options", "url": "https://api.github.com/repos/rails/rails/issues/31927", "created_at": "2018-02-07 22:00:34", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363925414", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kaspth (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-07 22:00:36", "user": 7468109, "id": 363925414}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364113604", "text": "@mrreynolds can you fix the codeclimate build?", "created_at": "2018-02-08 13:38:31", "user": 1080678, "id": 364113604}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364444827", "text": "@eileencodes sorry, fixed and rebased.", "created_at": "2018-02-09 14:14:55", "user": 3011, "id": 364444827}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364445685", "text": "Thanks! 😄 ", "created_at": "2018-02-09 14:18:18", "user": 1080678, "id": 364445685}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364446639", "text": "Thanks 😄Too late for 5.2 final?", "created_at": "2018-02-09 14:22:03", "user": 3011, "id": 364446639}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364447086", "text": "Good point, it's documentation for ActiveStorage so I backported it to 5.2 in b6c20f2c3eff6ecdc111b315dfb0d56ebad5dbce", "created_at": "2018-02-09 14:23:36", "user": 1080678, "id": 364447086}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "This starts to address #31832.\r\n`ActiveModel::Attributes` includes `ActiveModel::AttributeMethods`,\r\nwhich requires an `#attributes` method that returns a hash with string keys.", "labels": [], "number": 31926, "updated_at": "2018-02-28 05:17:44", "user": 13696143, "closed_at": "2018-02-28 05:17:44", "id": 295300176, "title": "Add ActiveModel::Attributes#attributes", "url": "https://api.github.com/repos/rails/rails/issues/31926", "created_at": "2018-02-07 21:32:00", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363917617", "text": "r? @eileencodes\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-07 21:32:04", "user": 7468109, "id": 363917617}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363920714", "text": "r? @sgrif", "created_at": "2018-02-07 21:43:20", "user": 1529387, "id": 363920714}], "assignees": [1529387, 1529387], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "", "labels": [], "number": 31925, "updated_at": "2018-02-08 14:21:52", "user": 13696143, "closed_at": "2018-02-08 13:37:20", "id": 295282259, "title": "Fix grammar bug in security guide [ci skip]", "url": "https://api.github.com/repos/rails/rails/issues/31925", "created_at": "2018-02-07 20:31:26", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363900768", "text": "r? @kamipo\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-07 20:31:29", "user": 7468109, "id": 363900768}, {"reactions": {"+1": [13696143, 6443532]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363926285", "text": "I think it's not the responsibility of Rails to discuss best practices in passwords and if we're going to it should be recommending a password manager, not how to write rememberable passwords. I'd be keen on completely removing these anecdotes and focus on the security of an application and Rails instead.", "created_at": "2018-02-07 22:03:58", "user": 1080678, "id": 363926285}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363941704", "text": "Good call. I removed the whole section.", "created_at": "2018-02-07 23:04:36", "user": 13696143, "id": 363941704}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [1694410, 9379]}, "text": "### Steps to reproduce\r\n\r\nI am using a `before_subscribe` hook on ActionCable::Channel::Base to authorize user when a new connection request comes in. If there is a bug in my custom code that raises an exception, I would have expected there to be a way to tap into that exception much like there exists `rescue_from` for ActionController hierarchy. All it does right now is log the error using `logger.error` and silently moves on.\r\n\r\nhttps://github.com/rails/rails/blob/master/actioncable/lib/action_cable/connection/subscriptions.rb#L23-L24\r\nand\r\nhttps://github.com/rails/rails/blob/master/actioncable/lib/action_cable/connection/base.rb#L86-L90\r\n\r\nWould it be a good idea to build something like `rescue_from`?\r\n\r\n### Expected behavior\r\n\r\nBe able to tap into exceptions and use custom reporting logic.\r\n\r\n### Actual behavior\r\n\r\nSilent ignore of error, with a just a log in log file.\r\n\r\n### System configuration\r\n**Rails version**:\r\n5.1.4\r\n\r\n**Ruby version**:\r\n2.3.0", "labels": ["actioncable"], "number": 31924, "updated_at": "2018-02-19 15:05:27", "user": 11386, "closed_at": "None", "id": 295248100, "title": "ActionCable exceptions are logged and then ignored. There needs to be a way to hook in some airbrake/honeybadger notification etc.", "url": "https://api.github.com/repos/rails/rails/issues/31924", "created_at": "2018-02-07 18:40:20", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366692936", "text": "The standard way to do this is with callbacks - rescue the exception, report to the relevant service and then re-raise. The [Appsignal gem][1] is doing a combination of callbacks and method chaining which suggests that maybe we're missing callbacks for actions on channels. Other than that it's up to the third-party gems to implement support.\r\n\r\n[1]: https://github.com/appsignal/appsignal-ruby/blob/master/lib/appsignal/hooks/action_cable.rb", "created_at": "2018-02-19 13:28:03", "user": 6321, "id": 366692936}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366719558", "text": "The Appsignal gem seems to be monkey patching `ActionCable::Channel::Base#perform_action` method. In my project, I did it at `ActionCable::Connection::Subscriptions::execute_command` level.", "created_at": "2018-02-19 15:05:27", "user": 11386, "id": 366719558}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "This ensures the duration's `@parts` hash has a default value, to avoid this regression introduced in 5.1:\r\n\r\n```ruby\r\nYAML.load(YAML.dump(10.minutes)) + 1  # => NoMethodError: undefined method `+' for nil:NilClass\r\n```", "labels": [], "number": 31923, "updated_at": "2018-02-07 20:06:28", "user": 2377, "closed_at": "2018-02-07 20:06:21", "id": 295135084, "title": "Fix yaml deserialization of ActiveSupport::Duration", "url": "https://api.github.com/repos/rails/rails/issues/31923", "created_at": "2018-02-07 13:21:03", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363766614", "text": "r? @georgeclaghorn\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-07 13:21:07", "user": 7468109, "id": 363766614}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363891693", "text": "I was erring on the side of being explicit about where the coder values come from and what’s being encoded, but can remove them if you prefer", "created_at": "2018-02-07 19:58:37", "user": 2377, "id": 363891693}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363893971", "text": "I think it is fine. Thank you for the PR", "created_at": "2018-02-07 20:06:28", "user": 47848, "id": 363893971}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Fixes #31917", "labels": [], "number": 31922, "updated_at": "2018-02-08 10:54:21", "user": 987638, "closed_at": "2018-02-08 10:49:51", "id": 295117285, "title": "Do not add master key when `RAILS_MASTER_KEY` env specified", "url": "https://api.github.com/repos/rails/rails/issues/31922", "created_at": "2018-02-07 12:20:46", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363756729", "text": "cc @kaspth ", "created_at": "2018-02-07 12:40:08", "user": 987638, "id": 363756729}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363813172", "text": "@y-yagi Assuming this is merged, can we expect a back-port to the `5-2-stable` branch for the next RC?", "created_at": "2018-02-07 15:52:59", "user": 48658, "id": 363813172}, {"reactions": {"heart": [350807]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364075847", "text": "Sure!  Backport: dc09b9952115e291360949a1643b9800bd7c0e22", "created_at": "2018-02-08 10:54:21", "user": 987638, "id": 364075847}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nSimple Rails App with one Person model. Person has a name and a birthdate. Add a validation for the name to the model so it must bei present.\r\nBut should be reproducabale with any Rails Model\r\n\r\n### Expected behavior\r\n```\r\nirb(main):001:0> foo = Person.new\r\n=> #<Person id: nil, name: nil, birthdate: nil, created_at: nil, updated_at: nil>\r\nirb(main):002:0> foo.valid?\r\n=> false\r\nirb(main):003:0> foo.errors.details\r\n=> {:name=>[{:error=>:blank}]}\r\nirb(main):004:0> foo.errors.details[:bar].present?\r\n=> false\r\nirb(main):005:0> foo.errors.details\r\n=> {:name=>[{:error=>:blank}]}\r\n```\r\n\r\n### Actual behavior\r\n```\r\nirb(main):001:0> foo = Person.new\r\n=> #<Person id: nil, name: nil, birthdate: nil, created_at: nil, updated_at: nil>\r\nirb(main):002:0> foo.valid?\r\n=> false\r\nirb(main):003:0> foo.errors.details\r\n=> {:name=>[{:error=>:blank}]}\r\nirb(main):004:0> foo.errors.details[:bar].present?\r\n=> false\r\nirb(main):005:0> foo.errors.details\r\n=> {:name=>[{:error=>:blank}], :bar=>[]}\r\nirb(main):006:0> foo.errors.details[:bar].present?\r\n=> false\r\n```\r\nYou see, after asking if `:bar`is there, it is there. But actually it is not, if you ask again.\r\nSame happens with `.any?`, `.empty?` ...\r\nProblem is, if you render the details as JSON then, the `:bar` shows up there.\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: ruby 2.4.1p111\r\n", "labels": [], "number": 31921, "updated_at": "2018-02-07 14:45:53", "user": 1230894, "closed_at": "2018-02-07 14:45:53", "id": 295091728, "title": "@object.errors.details has unexpected behaviour", "url": "https://api.github.com/repos/rails/rails/issues/31921", "created_at": "2018-02-07 10:52:14", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363744956", "text": "Thanks for the report. I'll try to fix\r\nRelated to #23468, #28584", "created_at": "2018-02-07 11:47:11", "user": 6443532, "id": 363744956}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363775516", "text": "From comments in https://github.com/rails/rails/issues/23468#issuecomment-288865859 i got that this is expected behavior and we shouldn't change this.\r\nThank you.", "created_at": "2018-02-07 13:54:09", "user": 6443532, "id": 363775516}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363790724", "text": "@bogdanvlviv thanks for getting into it. I still think this is weird. Because if you check some details for a certain error before rendering the json, the key then shows up in the view. We had some really confused frontend-developers because of this. But thank you anyway!", "created_at": "2018-02-07 14:45:53", "user": 1230894, "id": 363790724}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n- guides/source/active_record_postgresql.md\r\n- guides/source/development_dependencies_install.md\r\n- guides/source/rails_application_templates.md\r\n\r\nThese files are not listed in guides/source/documents.yaml\r\n\r\n\r\n### Expected behavior\r\nAll pages should be listed in http://edgeguides.rubyonrails.org/ or at least reachable via links.\r\n(But I don't know this is intended or not.)\r\n\r\n### Actual behavior\r\nTwo of these pages are reachable via links, but http://edgeguides.rubyonrails.org/active_record_postgresql.html seems unreachable.\r\n```\r\n➜  rails git:(master) PAGER=cat git grep development_dependencies_install\r\nguides/source/contributing_to_ruby_on_rails.md:In case you can't use the Rails development box, see [this other guide](development_dependencies_install.html).\r\n➜  rails git:(master) PAGER=cat git grep rails_application_templates\r\nguides/source/generators.md:Now that you've seen how generators can be used _inside_ an application, did you know they can also be used to _generate_ applications too? This kind of generator is referred to as a \"template\". This is a brief overview of the Templates API. For detailed documentation see the [Rails Application Templates guide](rails_application_templates.html).\r\n➜  rails git:(master) PAGER=cat git grep active_record_postgresql\r\n```\r\n", "labels": [], "number": 31920, "updated_at": "2018-02-09 01:48:54", "user": 5965113, "closed_at": "None", "id": 295080073, "title": "Some guides are not listed in documents.yaml", "url": "https://api.github.com/repos/rails/rails/issues/31920", "created_at": "2018-02-07 10:17:45", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363796112", "text": "At least active_record_postgresql.md is intended as work in progress. https://github.com/rails/rails/pull/23376#discussion_r51372663", "created_at": "2018-02-07 15:02:13", "user": 12642, "id": 363796112}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364309914", "text": "As for `development_dependencies_install.md` and `rails_application_templates.md`, is this expected?\r\nPersonally I found `rails_application_templates.md` is useful on its own and worth to list in `documents.yaml`", "created_at": "2018-02-09 01:48:54", "user": 5965113, "id": 364309914}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "https://travis-ci.org/rails/rails/jobs/338338927#L1043\r\n\r\nRelated to daf15f58b943d85d8fb726590ae94f77ca0a5d5f\r\nr? @kamipo \r\n", "labels": [], "number": 31919, "updated_at": "2018-02-09 00:44:56", "user": 6443532, "closed_at": "2018-02-09 00:43:34", "id": 295065961, "title": "Fix `test_counter_cache_with_touch_and_lock_version` failure", "url": "https://api.github.com/repos/rails/rails/issues/31919", "created_at": "2018-02-07 09:36:07", "comments": [], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Fix `blob.service_url` for supports string or nil `:filename` option, and make sure that present a `ActiveStorage::Filename` type to `serivce.url`.\r\n\r\nbefore:\r\n\r\n```rb\r\nblob.service_url(filename: ActiveStorage::Filename.new(\"new.txt\"))\r\n\r\nblob.service_url(filename: \"new.txt\")\r\n=> NoMethodError: undefined method `parameters' for \"new.txt\":String\r\n\r\nparams = {}\r\nblob.service_url(filename: params[:filename])\r\n=> NoMethodError: undefined method `parameters' for nil:NilClass\r\n```\r\n\r\nhttps://github.com/rails/rails/blob/8c5a7fbefd3cad403e7594d0b6a5488d80d4c98e/activestorage/lib/active_storage/service.rb#L124\r\n\r\nafter:\r\n\r\n```rb\r\nblob.service_url(filename: \"new.txt\")\r\n```", "labels": [], "number": 31918, "updated_at": "2018-02-08 05:00:47", "user": 5518, "closed_at": "2018-02-08 03:31:33", "id": 295026769, "title": "Fix `blob.service_url` for supports string type `:filename` option", "url": "https://api.github.com/repos/rails/rails/issues/31918", "created_at": "2018-02-07 06:56:34", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363675293", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @pixeltrix (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-07 06:56:46", "user": 7468109, "id": 363675293}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363981406", "text": "done\r\n", "created_at": "2018-02-08 02:23:20", "user": 5518, "id": 363981406}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "It seems that `bin/rails credentials:edit` ignores the Rails master key if it's set via `ENV` var rather than `config/master.key`.\r\n\r\n### Steps to reproduce\r\n\r\n1. Generate a new Rails app\r\n1. `cd <new_app> && cat config/master.key` prints `8fe10c494a635b461cfe23bf24999433`\r\n1. `bin/rails credentials:show` prints the contents, as expected.\r\n1. `bin/rails credentials:edit` opens editor.\r\n     On save and close of file we see `New credentials encrypted and saved.`\r\n1. `rm config/master.key`\r\n1. `bin/rails credentials:show` reports `Missing master key to decrypt credentials. See bin/rails credentials:help`\r\n1. `RAILS_MASTER_KEY=8fe10c494a635b461cfe23bf24999433 bin/rails credentials:show` prints the contents, as expected.\r\n1. `RAILS_MASTER_KEY=8fe10c494a635b461cfe23bf24999433 bin/rails credentials:edit` generates a new key:\r\n\r\n```\r\nAdding config/master.key to store the master encryption key: bbfeef5bedd12d45078725d8bf1a7e33\r\n\r\nSave this in a password manager your team can access.\r\n\r\nIf you lose the key, no one, including you, can access anything encrypted with it.\r\n\r\n      create  config/master.key\r\n```\r\n\r\n### Expected behavior\r\n`bin/rails credentials:edit` should respect the `RAILS_MASTER_KEY` ENV Var.\r\n\r\n### Actual behavior\r\nRemoving the `config/master.key` and invoking with an ENV var ignores the ENV Var:\r\n\r\n```\r\n$ RAILS_MASTER_KEY=8fe10c494a635b461cfe23bf24999433 bin/rails credentials:edit\r\nAdding config/master.key to store the master encryption key: bbfeef5bedd12d45078725d8bf1a7e33\r\n\r\nSave this in a password manager your team can access.\r\n\r\nIf you lose the key, no one, including you, can access anything encrypted with it.\r\n\r\n      create  config/master.key\r\n\r\nNew credentials encrypted and saved.\r\n```\r\n\r\n### System configuration\r\n**Rails version**: `5.2.0.rc1`\r\n\r\n**Ruby version**: `2.5.0`\r\n", "labels": [], "number": 31917, "updated_at": "2018-02-08 10:49:51", "user": 48658, "closed_at": "2018-02-08 10:49:51", "id": 294974818, "title": "`bin/rails credentials:edit` is ignoring the ENV['RAILS_MASTER_KEY']", "url": "https://api.github.com/repos/rails/rails/issues/31917", "created_at": "2018-02-07 01:31:20", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363736872", "text": "Thanks for your report. I will fix.", "created_at": "2018-02-07 11:11:45", "user": 987638, "id": 363736872}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nThis fixes #31915, where serialization of an ActiveRecord constant causes a stack overflow", "labels": [], "number": 31916, "updated_at": "2018-02-16 15:59:39", "user": 2279083, "closed_at": "None", "id": 294947567, "title": "Prevent serializing an active record constant from causing a stack overflow", "url": "https://api.github.com/repos/rails/rails/issues/31916", "created_at": "2018-02-06 23:13:18", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363598198", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @georgeclaghorn (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-06 23:13:20", "user": 7468109, "id": 363598198}], "assignees": [94129, 94129], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\nSerialization of an active record constant causes a stack overflow(`User.as_json`). The bug can be reproduced with the below script.\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\nend\r\n\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_assert_serializing_active_record_constant_does_not_crash\r\n    #circular reference between arel_table and Post\r\n    #Load arel_table instance_variable\r\n    Post.arel_table\r\n    #Attempting to serialize when arel_table is loaded causes an infinite loop\r\n    Post.as_json\r\n    assert true\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nProper serialization of the constant, name, active_record class attributes etc.\r\n\r\n### Actual behavior\r\nStack Overflow\r\n\r\n### Pull Request\r\nI have created a PR that fixes the issue here: https://github.com/rails/rails/pull/31916\r\n", "labels": ["activerecord", "attached PR"], "number": 31915, "updated_at": "2018-02-07 22:43:40", "user": 2279083, "closed_at": "None", "id": 294946218, "title": "Serializing an ActiveRecord class causes a stack overflow", "url": "https://api.github.com/repos/rails/rails/issues/31915", "created_at": "2018-02-06 23:07:44", "comments": [], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "Avoid `warning: parentheses after method name is interpreted as an argument list, not a decomposed argument`.\r\nThis has been fixed in 0.3.2.", "labels": [], "number": 31914, "updated_at": "2018-02-07 08:31:50", "user": 6261109, "closed_at": "2018-02-07 00:55:07", "id": 294931262, "title": "Update em-socksify to the latest version", "url": "https://api.github.com/repos/rails/rails/issues/31914", "created_at": "2018-02-06 22:10:56", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363582118", "text": "r? @kamipo\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-06 22:11:05", "user": 7468109, "id": 363582118}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nWe call `set_callbacks` on all descendants, so we need to make sure that callbacks are also defined on all descendants. Otherwise, you will get an error when running `set_callback` for a callback that was defined after subclasses were added.\r\n\r\n```ruby\r\nclass Foo < ActiveRecord::Base\r\nend\r\n\r\nActiveRecord::Base.define_model_callbacks :greet\r\nActiveRecord::Base.after_greet { puts 'goodbye' }\r\n=> NoMethodError: undefined method `prepend' for nil:NilClass\r\n```", "labels": [], "number": 31913, "updated_at": "2018-03-19 18:32:48", "user": 7904, "closed_at": "None", "id": 294911493, "title": "Define callbacks on descendants.", "url": "https://api.github.com/repos/rails/rails/issues/31913", "created_at": "2018-02-06 21:02:54", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363563500", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @pixeltrix (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-06 21:02:57", "user": 7468109, "id": 363563500}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365974720", "text": "@pixeltrix @rafaelfranca Let me know if I can improve this PR in any way or explain the reasoning behind it a little more clearly. FYI, I tried to provide a concise example of the problem in my initial PR comment.", "created_at": "2018-02-15 16:07:01", "user": 7904, "id": 365974720}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365983580", "text": "I don't think there's any need to define the methods on the descendants?", "created_at": "2018-02-15 16:33:42", "user": 1034, "id": 365983580}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365984777", "text": "@matthewd Is my test case an invalid use case? I do something similar in my app where some descendants of `ActiveRecord::Base` are already defined and I'm trying to add a callback to `ActiveRecord::Base`.\r\n\r\n```ruby\r\nclass Foo < ActiveRecord::Base\r\nend\r\n\r\nActiveRecord::Base.define_model_callbacks :greet\r\nActiveRecord::Base.after_greet { puts 'goodbye' }\r\n=> NoMethodError: undefined method `prepend' for nil:NilClass\r\n```", "created_at": "2018-02-15 16:37:22", "user": 7904, "id": 365984777}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365987091", "text": "@matthewd Also, I double checked that the test I wrote fails on the master branch.\r\n\r\nMaster:\r\n![image](https://user-images.githubusercontent.com/7904/36269258-bebc4854-1246-11e8-9bae-b946bb6fef15.png)\r\n\r\n\r\nThis Branch:\r\n![image](https://user-images.githubusercontent.com/7904/36269231-a6587b3e-1246-11e8-87e0-3176a8b6329c.png)\r\n", "created_at": "2018-02-15 16:43:54", "user": 7904, "id": 365987091}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366315422", "text": "@matthewd @pixeltrix Also confirmed this is a regression in 5.1/master.\r\n\r\n5-0-stable:\r\n![image](https://user-images.githubusercontent.com/7904/36322512-7a22cddc-131b-11e8-921c-693e5cdeae11.png)\r\n", "created_at": "2018-02-16 18:15:39", "user": 7904, "id": 366315422}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366936944", "text": "I understand the extra `set_callbacks` calls; I'm questioning the need for the method definitions.", "created_at": "2018-02-20 10:39:24", "user": 1034, "id": 366936944}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368257979", "text": "@matthewd Ahh I understand now. Good point. I've updated the PR. What do you think now?", "created_at": "2018-02-24 20:33:03", "user": 7904, "id": 368257979}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/372339420", "text": "@matthewd @pixeltrix Is there anything else I can do to address your questions/concerns about this PR?", "created_at": "2018-03-12 14:58:20", "user": 7904, "id": 372339420}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/374318897", "text": "@matthewd @pixeltrix Please let me know if I can help get this PR merged. I could just submit the failing test case if you'd rather fix it in a different way?", "created_at": "2018-03-19 18:32:47", "user": 7904, "id": 374318897}], "assignees": [6321, 6321], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "Hello,\r\n\r\nThis pull request is a follow-up to #30199 as SDoc 1.0.0 has been released. Sorry, I didn't mean 6 months by \"temporarily\". This can certainly be back-ported to `5-2-stable` as there was a bug with SEO tags before this release. \r\n\r\nHave a nice day ! :-)", "labels": ["docs"], "number": 31912, "updated_at": "2018-02-07 08:55:50", "user": 354185, "closed_at": "2018-02-07 00:50:30", "id": 294873917, "title": "Refer to a stable release of SDoc", "url": "https://api.github.com/repos/rails/rails/issues/31912", "created_at": "2018-02-06 18:56:23", "comments": [], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [157134]}, "text": "### Summary\r\n\r\nCache stores have a local cache strategy that is not used on fetch multi because read multi entries is not aware of it.\r\n\r\nCloses #31909.\r\n\r\n### Other Information\r\n\r\nUsing bug report template won't detect the issue for some reason.\r\n\r\nYou have to create a real application, add dalli to Gemfile, configure the environment to use mem cache as cache store and create a controller with that:\r\n\r\n```ruby\r\nclass MoviesController < ApplicationController\r\n  def index\r\n    if params[:dalli]\r\n      d = Dalli::Client.new('127.0.0.1:11211')\r\n      k = \"x\" * 1024\r\n\r\n      if params[:clear]\r\n        d.flush\r\n      else\r\n        d.set(\"#{k}1\", true)\r\n        d.set(\"#{k}2\", true)\r\n        d.set(\"#{k}3\", true)\r\n      end\r\n\r\n      fetch_multi_time = Benchmark.measure do\r\n        1_000.times do\r\n          d.get_multi(\"#{k}1\", \"#{k}2\", \"#{k}3\") { |_key| true }\r\n        end\r\n      end\r\n\r\n      if params[:clear]\r\n        d.flush\r\n      else\r\n        d.set(\"#{k}1\", true)\r\n        d.set(\"#{k}2\", true)\r\n        d.set(\"#{k}3\", true)\r\n      end\r\n\r\n      read_write_time = Benchmark.measure do\r\n        1_000.times do\r\n          d.get(\"#{k}1\") || d.set(\"#{k}1\", true)\r\n          d.get(\"#{k}2\") || d.set(\"#{k}2\", true)\r\n          d.get(\"#{k}3\") || d.set(\"#{k}3\", true)\r\n        end\r\n      end\r\n\r\n      render json: {\r\n        fetch_multi_time: fetch_multi_time.real,\r\n        read_write_time: read_write_time.real,\r\n      }\r\n    else\r\n      driver = Rails.cache\r\n\r\n      if params[:clear]\r\n        driver.clear\r\n      else\r\n        driver.write(\"#{k}1\", true)\r\n        driver.write(\"#{k}2\", true)\r\n        driver.write(\"#{k}3\", true)\r\n      end\r\n\r\n      fetch_multi_time = Benchmark.measure do\r\n        1_000.times do\r\n          driver.read_multi(\"#{k}1\", \"#{k}2\", \"#{k}3\") { |_key| true }\r\n        end\r\n      end\r\n\r\n      if params[:clear]\r\n        driver.clear\r\n      else\r\n        driver.write(\"#{k}1\", true)\r\n        driver.write(\"#{k}2\", true)\r\n        driver.write(\"#{k}3\", true)\r\n      end\r\n\r\n      read_write_time = Benchmark.measure do\r\n        1_000.times do\r\n          driver.read(\"#{k}1\") || driver.write(\"#{k}1\", true)\r\n          driver.read(\"#{k}2\") || driver.write(\"#{k}2\", true)\r\n          driver.read(\"#{k}3\") || driver.write(\"#{k}3\", true)\r\n        end\r\n      end\r\n\r\n      render json: {\r\n        fetch_multi_time: fetch_multi_time.real,\r\n        read_write_time: read_write_time.real\r\n      }\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nThis benchmark is rudimentary but it shows the problem in the most simple way.\r\n\r\nBefore:\r\n\r\n```js\r\n{\r\n  \"fetch_multi_time\": 1.5901559998746961,\r\n  \"read_write_time\": 0.020418000174686313\r\n}\r\n```\r\n\r\nAfter (the difference falls in no statistic difference):\r\n\r\n```js\r\n{\r\n  \"fetch_multi_time\": 0.014100000029429793,\r\n  \"read_write_time\": 0.023772000102326274\r\n}\r\n```\r\n\r\nThis was detected while writing some benchmarks for [abstract builder](https://github.com/sobrinho/abstract_builder).", "labels": [], "number": 31911, "updated_at": "2018-02-24 10:46:43", "user": 26460, "closed_at": "2018-02-23 20:55:41", "id": 294779807, "title": "Support local cache on memcache store read multi", "url": "https://api.github.com/repos/rails/rails/issues/31911", "created_at": "2018-02-06 14:31:12", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363439218", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @sgrif (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-06 14:31:20", "user": 7468109, "id": 363439218}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363439305", "text": "I'm looking for code review on this one, the code is not ready yet.\r\n\r\ncc @fatkodima ", "created_at": "2018-02-06 14:31:37", "user": 26460, "id": 363439305}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363445075", "text": "`RedisCacheStore` has this problem as well. Probably, duplicated module `LocalCacheWithRaw` should be extracted into parent (`Store`) and reused for both memcached and redis? ", "created_at": "2018-02-06 14:50:08", "user": 5657035, "id": 363445075}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363450420", "text": "Good point, I will do that.", "created_at": "2018-02-06 15:06:54", "user": 26460, "id": 363450420}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363454200", "text": "@fatkodima can you take a look again?", "created_at": "2018-02-06 15:18:32", "user": 26460, "id": 363454200}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366775021", "text": "Rebased to fix the build.", "created_at": "2018-02-19 18:43:24", "user": 26460, "id": 366775021}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366781904", "text": "r? @jeremy", "created_at": "2018-02-19 19:17:33", "user": 5657035, "id": 366781904}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366983252", "text": "r? @jeremy", "created_at": "2018-02-20 13:51:32", "user": 26460, "id": 366983252}], "assignees": [199, 199], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "I don't understand when I login with http session run normal and login success, but when I use https I can't set session and login fails.\r\n\r\nI find solution add config.force_ssl = true in file 'config/production.rb' but login fails with https.\r\n\r\nThank you!", "labels": [], "number": 31910, "updated_at": "2018-02-06 08:02:03", "user": 32532324, "closed_at": "2018-02-06 08:01:37", "id": 294661667, "title": "Don't set session method post with https in rails 5.1", "url": "https://api.github.com/repos/rails/rails/issues/31910", "created_at": "2018-02-06 07:48:27", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363341245", "text": "I see resolve here: github.com/rails/rails/issues/22965 ", "created_at": "2018-02-06 08:02:03", "user": 32532324, "id": 363341245}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nUsing the bug report template doesn't reproduce the issue for some reason:\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"rails\", \"~> 5.1.0\"\r\n  gem \"dalli\"\r\nend\r\n\r\nrequire \"rack/test\"\r\nrequire \"action_controller/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  config.session_store :cookie_store, key: \"cookie_store_key\"\r\n  secrets.secret_key_base = \"secret_key_base\"\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  routes.draw do\r\n    get \"/\" => \"test#index\"\r\n  end\r\nend\r\n\r\nclass TestController < ActionController::Base\r\n  include Rails.application.routes.url_helpers\r\n\r\n  def index\r\n    cache = ActiveSupport::Cache.lookup_store(:mem_cache_store, ['127.0.0.1:11211'])\r\n\r\n    cache.write(\"key1\", true)\r\n    cache.write(\"key2\", true)\r\n    cache.write(\"key3\", true)\r\n\r\n    fetch_multi_time = Benchmark.measure do\r\n      10_000.times do\r\n        cache.fetch_multi(\"key1\", \"key2\", \"key3\") do |_key|\r\n          raise 'miss'\r\n        end\r\n      end\r\n    end\r\n\r\n    read_write_time = Benchmark.measure do\r\n      10_000.times do\r\n        cache.read(\"key1\") or raise 'miss'\r\n        cache.read(\"key2\") or raise 'miss'\r\n        cache.read(\"key3\") or raise 'miss'\r\n      end\r\n    end\r\n\r\n    render json: {\r\n      fetch_multi_time: fetch_multi_time.real,\r\n      read_write_time: read_write_time.real\r\n    }\r\n  end\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\n\r\n# Ensure backward compatibility with Minitest 4\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n\r\n  def test_returns_success\r\n    get \"/\"\r\n    assert last_response.ok?\r\n    raise last_response.body\r\n  end\r\n\r\n  private\r\n    def app\r\n      Rails.application\r\n    end\r\nend\r\n```\r\n\r\nYou have to create a real application, add `dalli` to Gemfile, configure the environment to use mem cache as cache store and create a controller with the same code.\r\n\r\n```ruby\r\nclass MoviesController < ApplicationController\r\n  def index\r\n    Rails.cache.write(\"key1\", true)\r\n    Rails.cache.write(\"key2\", true)\r\n    Rails.cache.write(\"key3\", true)\r\n\r\n    fetch_multi_time = Benchmark.measure do\r\n      1_000.times do\r\n        Rails.cache.fetch_multi(\"key1\", \"key2\", \"key3\") do |_key|\r\n          raise 'miss'\r\n        end\r\n      end\r\n    end\r\n\r\n    read_write_time = Benchmark.measure do\r\n      1_000.times do\r\n        Rails.cache.read(\"key1\") or raise 'miss'\r\n        Rails.cache.read(\"key2\") or raise 'miss'\r\n        Rails.cache.read(\"key3\") or raise 'miss'\r\n      end\r\n    end\r\n\r\n    render json: {\r\n      fetch_multi_time: fetch_multi_time.real,\r\n      read_write_time: read_write_time.real\r\n    }\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nI was expecting the `fetch_multi` to perform a lot better than using 3 separated reads.\r\n\r\n### Actual behavior\r\n\r\nBe aware that using the bug report template does not reproduce the issue (work as expected):\r\n\r\n```js\r\n{\r\n  \"fetch_multi_time\": 2.637000000104308,\r\n  \"read_write_time\": 3.379054999910295\r\n}\r\n```\r\n\r\nBut using a fresh application does reproduce (work as not expected):\r\n\r\n```javascript\r\n{\r\n  \"fetch_multi_time\": 0.3341950001195073,\r\n  \"read_write_time\": 0.01899300003424287\r\n}\r\n```\r\n\r\nread + write time is an order of magnitude faster than using fetch multi and this is not supposed to be true.\r\n\r\nNote that using dalli directly, the performance is slight better as expected (would be better by having network latency):\r\n\r\n```ruby\r\n  def index\r\n    if params[:dalli]\r\n      dalli = Dalli::Client.new('localhost:11211')\r\n      dalli.set(\"key1\", true)\r\n      dalli.set(\"key2\", true)\r\n      dalli.set(\"key3\", true)\r\n\r\n      fetch_multi_time = Benchmark.measure do\r\n        1_000.times do\r\n          dalli.get_multi(\"key1\", \"key2\", \"key3\")\r\n        end\r\n      end\r\n\r\n      read_write_time = Benchmark.measure do\r\n        1_000.times do\r\n          dalli.get(\"key1\")\r\n          dalli.get(\"key2\")\r\n          dalli.get(\"key3\")\r\n        end\r\n      end\r\n    else\r\n      Rails.cache.write(\"key1\", true)\r\n      Rails.cache.write(\"key2\", true)\r\n      Rails.cache.write(\"key3\", true)\r\n\r\n      fetch_multi_time = Benchmark.measure do\r\n        1_000.times do\r\n          Rails.cache.fetch_multi(\"key1\", \"key2\", \"key3\") do |_key|\r\n            raise 'miss'\r\n          end\r\n        end\r\n      end\r\n\r\n      read_write_time = Benchmark.measure do\r\n        1_000.times do\r\n          Rails.cache.read(\"key1\") or raise 'miss'\r\n          Rails.cache.read(\"key2\") or raise 'miss'\r\n          Rails.cache.read(\"key3\") or raise 'miss'\r\n        end\r\n      end\r\n    end\r\n\r\n    render json: {\r\n      fetch_multi_time: fetch_multi_time.real,\r\n      read_write_time: read_write_time.real\r\n    }\r\n  end\r\n```\r\n\r\n```js\r\n{\r\n  \"fetch_multi_time\": 0.23557999986223876,\r\n  \"read_write_time\": 0.29412800003774464\r\n}\r\n```\r\n\r\nSo, by that we can assume that the problem is not the Memcached or Dalli driver.\r\n\r\nThese values are consistent on my machine across several reloads.\r\n\r\nWe may have some sort of optimization on read calls that aren't present on fetch_multi or something like that, I'm not sure.\r\n\r\n### System configuration\r\n\r\n**Rails version**: 5.1.6\r\n\r\n**Ruby version**: 2.4.2", "labels": [], "number": 31909, "updated_at": "2018-02-06 17:36:48", "user": 26460, "closed_at": "2018-02-06 17:36:48", "id": 294642100, "title": "Memcache: Rails.cache.fetch_multi is slow by an order of magnitude than Rails.cache.read", "url": "https://api.github.com/repos/rails/rails/issues/31909", "created_at": "2018-02-06 06:03:40", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363383765", "text": "One more discovery, dalli store doesn't have the problem, I'm trying to investigate the differences between them.", "created_at": "2018-02-06 10:45:20", "user": 26460, "id": 363383765}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363402763", "text": "Maybe this is due to local cache https://github.com/rails/rails/blob/83c1ed9a1a11196cab66d9c44a56a902ca0710e4/activesupport/lib/active_support/cache/mem_cache_store.rb#L31 used for repeatable `#read`s?", "created_at": "2018-02-06 12:05:35", "user": 5657035, "id": 363402763}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363420678", "text": "Got it.\r\n\r\nRepeated calls are faster using read+write because there is an in-memory cache for the read operation but not for the fetch multi operation.\r\n\r\nI'm going to try to implement the in-memory cache for this to have the same benefits and open a PR.", "created_at": "2018-02-06 13:23:40", "user": 26460, "id": 363420678}, {"reactions": {"heart": [5657035]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363420822", "text": "@fatkodima yes, sent my message without reading yours.\r\n\r\nI'm going to work on this :)", "created_at": "2018-02-06 13:24:13", "user": 26460, "id": 363420822}, {"reactions": {"+1": [199]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363502444", "text": "Closed in favor of #31911.", "created_at": "2018-02-06 17:36:46", "user": 26460, "id": 363502444}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nI was unable to reproduce the bug using the template, but I will paste the output of explain command on rails console, using Rails 3.2.x (where it works) and Rails 4.2.10 (where it fails)\r\n\r\nEXPLAIN SELECT `agency_manufacturers`.* FROM `agency_manufacturers` WHERE `agency_manufacturers`.`manufacturer_id` = 90 AND `agency_manufacturers`.`imprint_ids` = '' AND (country like '%Australia%')\r\n\r\n\r\nSELECT `agency_manufacturers`.* FROM `agency_manufacturers` WHERE `agency_manufacturers`.`manufacturer_id` = 90 AND `agency_manufacturers`.`imprint_ids` = **'--- \\'\\'\\n'** AND (country like '%Australia%')\r\n\r\n### Expected behavior\r\nQuery an empty String on an ActiveRecord Association Relation\r\n\r\n### Actual behavior\r\nRails replaces empty String with '--- \\'\\'\\n'\r\n\r\n### System configuration\r\n**Rails version**: 4.2.10\r\n\r\n**Ruby version**: 2.4.1\r\n", "labels": [], "number": 31908, "updated_at": "2018-02-10 03:21:52", "user": 892012, "closed_at": "2018-02-07 23:03:07", "id": 294634868, "title": "Error querying empty string on a ActiveRecord Association Relation", "url": "https://api.github.com/repos/rails/rails/issues/31908", "created_at": "2018-02-06 05:14:42", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363797492", "text": "4.2 is only getting security updates at this point. You can check out the [maintenance policy](http://guides.rubyonrails.org/maintenance_policy.html) for details. Is this something you can recreate on 5.1, preferably using one of these [templates](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case)?", "created_at": "2018-02-07 15:06:25", "user": 13696143, "id": 363797492}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363826123", "text": "I couldn't manage to reproduce the bug using the templates. When we upgrade to Rails 5.1 I could check the bug again. But, since I've made a search on google before creating the issue, I believe it still persists on 5.1", "created_at": "2018-02-07 16:29:28", "user": 892012, "id": 363826123}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363941348", "text": "You need to give us more information on how to reproduce this issue or provides reproduce script, otherwise there is nothing we can do.  \r\nSo I close this. But if you can create a reproduce script, feel free to reopen this. Thanks! \r\n", "created_at": "2018-02-07 23:03:06", "user": 987638, "id": 363941348}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364622207", "text": "@y-yagi , I discovered that this bug occurs because the Machine was using MySQL 5.6.16\r\n\r\nWhen using MySQL 5.7.21, this bug doesn't happen.\r\n\r\nThanks!", "created_at": "2018-02-10 03:21:25", "user": 892012, "id": 364622207}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "The [rails 5.1 definition](http://api.rubyonrails.org/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-collection_radio_buttons) for `collection_radio_buttons()` is:\r\n\r\n```\r\ncollection_radio_buttons(\r\n         object, method, \r\n         collection, \r\n         value_method, text_method, \r\n         options = {}, html_options = {}, &block)\r\n```\r\n\r\nYet the docs say nothing about the ```options``` argument or the ```html_options``` argument.\r\nHow is it possible for the docs not to list all the arguments in a method definition, coupled with an explanation of what each argument does?   Is that acceptable to anyone?\r\n\r\nFurthermore, the general explanation for the method:\r\n\r\n> Returns radio button tags for the collection of existing return values of method for object's class. The value returned from calling method on the instance object will be selected. If calling method returns nil, no selection is made.\r\n\r\nis just a bunch of gibberish that means nothing.  For instance, what are the \"existing return values of method for object's class.  If `object` is an Article instance, which has a `belongs_to/has_many` association with Author, and `method` is :author_id, then `object.method`, i.e. `the_article.author_id`, will return something like 1.  How is 1 \"a collection of existing return values\"?   And what is meant by \"object's class\" v. \"object\".  Is there some distinction that the docs are trying to make between \"object's class\" and \"object\".  I tried executing Article.author_id in the rails console, and I got an undefined method error.   As far as I can tell,  collection_radio_buttons() creates a radio button for every object in `collection`, period. \r\n\r\nThe method description continues:\r\n\r\n> The value returned from calling method on the instance object will be selected. \r\n\r\nThat sentence essentially says, \"The value....will be selected\", yet a value cannot be \"selected\".  On the other hand, a _radio button_ can be _checked_.  I think the way things work is that `object.method` will return something, say \"1\", and if the value attribute of any of the created radio buttons is equal to \"1\", then that radio button will be checked when the view is displayed.\r\n\r\nThere is no point in creating incredible software unless you are able to explain how to use it.  I tried looking at the source code for `collection_radio_buttons()`, but I got lost.", "labels": [], "number": 31907, "updated_at": "2018-03-04 05:55:13", "user": 891276, "closed_at": "None", "id": 294614854, "title": "collection_radio_buttons(): Does anyone in the rails world know what the options argument is for?", "url": "https://api.github.com/repos/rails/rails/issues/31907", "created_at": "2018-02-06 02:51:20", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363328341", "text": "I appreciate you thinking better of your original comment; in light of that I'll read past any remaining excitement, and attempt to actually be helpful:\r\n\r\nI agree that intro is pretty unclear -- though must note it's [stood the test of time](https://github.com/rails/rails/commit/b59e3d1897fd8701995d9b2dc31b5a4e5c1ebe9d). `method` *may* return a collection, but I'm honestly not sure whether that's what it was intending to describe. ([The original ticket](https://web.archive.org/web/20090923182233/http://dev.rubyonrails.org:80/ticket/9038) doesn't seem to clarify either.) \"object's class\" also means nothing to me [in this context].\r\n\r\nI think the \"The [UI element corresponding to the] value .. will be selected\" elision is clear enough as is, though. Expecting a reasonable degree of context seems reasonable, and we gain clarity by keeping this set of related methods' descriptions in sync. (Even if it's trickier than it could be to discern how the method will behave, a reader can at least feel confident that all of them will behave consistently.)\r\n\r\nDespite the existing description's attempts to mislead, you seem to have a fair handle on how the arguments actually get used; would you like to have a go at writing a better intro?\r\n\r\n", "created_at": "2018-02-06 06:54:24", "user": 1034, "id": 363328341}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363333990", "text": "> method may return a collection\r\n\r\nYes,  but I tried using :attributes then :to_s for ```method```, and the number of created radio buttons was the same, which was equal to the number of elements in ```collection```.  The example that really helped me understand how things work is (comments added by me):\r\n\r\n```\r\n<%= f.collection_radio_buttons(\r\n  :attributes,  #A method (used as a placeholder in this case) which is called on the\r\n                #instance encapsulated by f, but whose return value will \r\n                #never match the return value of value_method, therefore no\r\n                #radio button will get a checked=\"checked\" attribute.\r\n\r\n  ['First', 'Second'],  #collection\r\n  :to_s,   #value_method => Sets the attribute: value=\"First\", for the first radio button, ...\r\n  :to_s,   #text_method  => \"First\" will be the text for the label for the first radio button, ... \r\n) \r\n```\r\n\r\nhtml:\r\n\r\n```\r\n<input type=\"radio\" value=\"First\" name=\"post[attributes]\" id=\"post_attributes_first\" />\r\n<label for=\"post_attributes_first\">First</label>\r\n\r\n<input type=\"radio\" value=\"Second\" name=\"post[attributes]\" id=\"post_attributes_second\" />\r\n<label for=\"post_attributes_second\">Second</label>\r\n```\r\n\r\n> Despite the existing description's attempts to mislead, you seem to have a fair handle on how the arguments actually get used; would you like to have a go at writing a better intro?\r\n\r\nThat's because I spent around 12 hours searching for scant info and playing with the code.  How about:\r\n\r\n```\r\ncollection:    For each element in collection, a radio button and label tag is created.  \r\nvalue_method:  Called on each element in collection, and the return value is assigned to \r\n               the value attribute of the radio button. \r\nobject.method: If the return value of object.method is equal to the value attribute of a radio button,\r\n               the radio button gets a checked=\"checked\" attribute.\r\ntext_method:   Called on each element in collection, and the return value is used as \r\n               the text for the label tag. \r\noptions:       Unknown purpose.\r\nhtml_options:  Used to specify additional html attributes for the radio button, e.g. {class: 'group1'}\r\n```\r\nBut, the docs should describe every parameter variable in a method definition, and I have no idea what the `options` argument does.   The `simple_form` [docs](http://www.rubydoc.info/github/plataformatec/simple_form/SimpleForm/FormBuilder#collection_radio_buttons-instance_method) say that you can specify the option ```item_wrapper_tag``` (among others), which specifies a tag that you want to wrap each radio button/label, but that option doesn't work for me without the simple_form gem.\r\n\r\n\r\n\r\n", "created_at": "2018-02-06 07:25:59", "user": 891276, "id": 363333990}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/370204377", "text": "Please post this on Stack Overflow, not here. Thanks.", "created_at": "2018-03-04 05:55:13", "user": 1174604, "id": 370204377}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "mutool uses AGPL for licensing which has strict distribution rules.\r\nhttps://github.com/rails/rails/pull/30667#issuecomment-332276198\r\n\r\nPoppler is licensed under GPL, so this should provide a free\r\nalternative for most Rails apps.\r\n", "labels": ["activestorage"], "number": 31906, "updated_at": "2018-03-07 16:29:56", "user": 16457, "closed_at": "2018-03-06 18:35:29", "id": 294602826, "title": "Implement PDF Previewer Using Poppler", "url": "https://api.github.com/repos/rails/rails/issues/31906", "created_at": "2018-02-06 01:38:16", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363281443", "text": "r? @pixeltrix\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-06 01:38:19", "user": 7468109, "id": 363281443}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363281444", "text": "<img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20> **Warning** <img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20>\n\n* Pull requests are usually filed against the master branch for this repo, but this one is against 5-2-stable. Please double check that you specified the right target!", "created_at": "2018-02-06 01:38:19", "user": 7468109, "id": 363281444}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363282829", "text": "/cc @matthewd @georgeclaghorn @rafaelfranca this is my PR from our discussions before. If this is amenable to people, I'd like to propose potentially having this as the default since `mutool` would require commercial licenses for any rails app that wants to use it.", "created_at": "2018-02-06 01:45:41", "user": 16457, "id": 363282829}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363283043", "text": "Can you please rebase against master? Whoever merges this will backport it to 5-2-stable.", "created_at": "2018-02-06 01:46:52", "user": 94129, "id": 363283043}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363602062", "text": "@georgeclaghorn done.", "created_at": "2018-02-06 23:29:55", "user": 16457, "id": 363602062}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363616827", "text": "There’s a failing test that needs fixing.\r\n\r\nHave you thought about how to document this alternative?", "created_at": "2018-02-07 00:46:26", "user": 94129, "id": 363616827}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365499517", "text": "@matthewd is this along the lines of what you were thinking of?", "created_at": "2018-02-14 05:20:41", "user": 16457, "id": 365499517}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/369453313", "text": "@rafaelfranca should PDFPreviewer class name reflect the binary underneath if we have two PDF Previewers in rails?", "created_at": "2018-03-01 02:26:19", "user": 16457, "id": 369453313}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/369525208", "text": "Anyone have an idea why this change would break the railties test on 2.5.0? https://travis-ci.org/rails/rails/jobs/347576562\r\n\r\nEdit: looks like rebasing and pushing again fixed it?", "created_at": "2018-03-01 09:08:04", "user": 16457, "id": 369525208}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/370516658", "text": "> should PDFPreviewer class name reflect the binary underneath if we have two PDF Previewers in rails?\r\n\r\nYeah, the old `PDFPreviewer` should be renamed to `MuPDFPreviewer`.", "created_at": "2018-03-05 18:30:52", "user": 94129, "id": 370516658}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/370882495", "text": "Merged in 0b717c20458d12191f479fc693dd1ca1eb11c050 with the requested changes and some modest doc updates so we can issue the last release candidate. Thanks!", "created_at": "2018-03-06 18:35:29", "user": 94129, "id": 370882495}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nThis pull request addreses ActiveModel::MissingAttributeError: can't write unknown attribute `type`\r\nReported at https://travis-ci.org/rails/rails/jobs/337434035\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n$ cd activerecord\r\n$ bin/test test/cases/serialized_attribute_test.rb test/cases/persistence_test.rb --seed 19139 -n \"/^(?:SerializedAttributeTest#(?:test_serialized_attributes_from_database_on_subclass)|PersistenceTest#(?:test_becomes))$/\"\r\nUsing sqlite3\r\nRun options: --seed 19139 -n \"/^(?:SerializedAttributeTest#(?:test_serialized_attributes_from_database_on_subclass)|PersistenceTest#(?:test_becomes))$/\"\r\n\r\n# Running:\r\n\r\n.E\r\n\r\nError:\r\nPersistenceTest#test_becomes:\r\nActiveModel::MissingAttributeError: can't write unknown attribute `type`\r\n    /home/yahonda/git/rails/activemodel/lib/active_model/attribute.rb:207:in `with_value_from_database'\r\n    /home/yahonda/git/rails/activemodel/lib/active_model/attribute_set.rb:57:in `write_from_user'\r\n    /home/yahonda/git/rails/activerecord/lib/active_record/attribute_methods/write.rb:51:in `_write_attribute'\r\n    /home/yahonda/git/rails/activerecord/lib/active_record/inheritance.rb:249:in `ensure_proper_type'\r\n    /home/yahonda/git/rails/activerecord/lib/active_record/inheritance.rb:238:in `initialize_internals_callback'\r\n    /home/yahonda/git/rails/activerecord/lib/active_record/scoping.rb:43:in `initialize_internals_callback'\r\n    /home/yahonda/git/rails/activerecord/lib/active_record/core.rb:312:in `initialize'\r\n    /home/yahonda/git/rails/activerecord/lib/active_record/persistence.rb:363:in `becomes'\r\n    /home/yahonda/git/rails/activerecord/test/cases/persistence_test.rb:250:in `test_becomes'\r\n\r\n\r\nbin/test test/cases/persistence_test.rb:249\r\n\r\n\r\n\r\nFinished in 0.131432s, 15.2169 runs/s, 15.2169 assertions/s.\r\n2 runs, 2 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n### Actual result\r\n```ruby\r\n$ bin/test test/cases/serialized_attribute_test.rb test/cases/persistence_test.rb --seed 19139 -n \"/^(?:SerializedAttributeTest#(?:test_serialized_attributes_from_database_on_subclass)|PersistenceTest#(?:test_becomes))$/\"\r\nUsing sqlite3\r\nRun options: --seed 19139 -n \"/^(?:SerializedAttributeTest#(?:test_serialized_attributes_from_database_on_subclass)|PersistenceTest#(?:test_becomes))$/\"\r\n\r\n# Running:\r\n\r\n.E\r\n\r\nError:\r\nPersistenceTest#test_becomes:\r\nActiveModel::MissingAttributeError: can't write unknown attribute `type`\r\n    /home/yahonda/git/rails/activemodel/lib/active_model/attribute.rb:207:in `with_value_from_database'\r\n    /home/yahonda/git/rails/activemodel/lib/active_model/attribute_set.rb:57:in `write_from_user'\r\n    /home/yahonda/git/rails/activerecord/lib/active_record/attribute_methods/write.rb:51:in `_write_attribute'\r\n    /home/yahonda/git/rails/activerecord/lib/active_record/inheritance.rb:249:in `ensure_proper_type'\r\n    /home/yahonda/git/rails/activerecord/lib/active_record/inheritance.rb:238:in `initialize_internals_callback'\r\n    /home/yahonda/git/rails/activerecord/lib/active_record/scoping.rb:43:in `initialize_internals_callback'\r\n    /home/yahonda/git/rails/activerecord/lib/active_record/core.rb:312:in `initialize'\r\n    /home/yahonda/git/rails/activerecord/lib/active_record/persistence.rb:363:in `becomes'\r\n    /home/yahonda/git/rails/activerecord/test/cases/persistence_test.rb:250:in `test_becomes'\r\n\r\n\r\nbin/test test/cases/persistence_test.rb:249\r\n\r\n\r\n\r\nFinished in 0.131432s, 15.2169 runs/s, 15.2169 assertions/s.\r\n2 runs, 2 assertions, 0 failures, 1 errors, 0 skips\r\n$\r\n```\r\n\r\n Thanks @y-yagi for helping about minitest_bisect at #31893", "labels": [], "number": 31905, "updated_at": "2018-02-06 13:42:25", "user": 73684, "closed_at": "2018-02-06 13:34:56", "id": 294578374, "title": "Fix ActiveModel::MissingAttributeError: can't write unknown attribute `type`", "url": "https://api.github.com/repos/rails/rails/issues/31905", "created_at": "2018-02-05 23:23:56", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363255787", "text": "r? @pixeltrix\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-05 23:23:59", "user": 7468109, "id": 363255787}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363425478", "text": "Thanks for the fix.", "created_at": "2018-02-06 13:42:25", "user": 73684, "id": 363425478}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n  gem \"rails\", github: \"rails/rails\"\r\nend\r\n\r\nrequire \"action_controller/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  routes.draw do\r\n    resources :test\r\n  end\r\nend\r\n\r\nclass TestController < ActionController::Base\r\n  def update\r\n    puts params\r\n    if params[:somekey] == 1\r\n      return head :ok\r\n    else\r\n      return head :unprocessable_entity\r\n    end\r\n  end\r\nend\r\n\r\nrequire \"rails/test_help\"\r\nclass TestControllerTest < ActionController::TestCase\r\n  test \"updating\" do\r\n    put :update, format: :json, params: {id: 1, somekey: 1}, as: :json\r\n    assert_response :ok\r\n    put :update, format: :json, params: {id: 2, somekey: 2}, as: :json\r\n    assert_response :unprocessable_entity\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nAlthough doing multiple calls to the action in the same test is not good practice, I would expect both `params[:id]` and `params[:somekey]` to get two different values.\r\n\r\n### Actual behavior\r\nWhile `params[:id]` is correct, `params[:somekey]` remains in the first value. It does not “get stuck” if  `:as` is removed.\r\n\r\n### System configuration\r\n**Rails version**: 5.0.6, 5.1.4, git\r\n\r\n**Ruby version**: 2.3.3p222", "labels": [], "number": 31904, "updated_at": "2018-02-05 22:24:19", "user": 4124528, "closed_at": "None", "id": 294563954, "title": "Functional test request body is not overwritten on consecutive calls when using :as", "url": "https://api.github.com/repos/rails/rails/issues/31904", "created_at": "2018-02-05 22:24:19", "comments": [], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {"+1": [10076, 210667, 45294, 9278, 5998968]}, "text": "Hi,\r\nI've noticed that this bug wasn't fixed yet, but there's a PR for it. Is there any chance to merge this before the final release?\r\nhttps://github.com/rails/rails/pull/29096\r\n\r\ncc @rafaelfranca @kamipo \r\n\r\nThanks", "labels": [], "number": 31903, "updated_at": "2018-02-12 20:39:03", "user": 9540855, "closed_at": "2018-02-12 20:38:20", "id": 294563924, "title": "5.1.5.rc1 after commit on update still doesn't work", "url": "https://api.github.com/repos/rails/rails/issues/31903", "created_at": "2018-02-05 22:24:12", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363281966", "text": "@ahorek Thanks for the reminder.\r\nI just restarted the build on Travis for that branch (was red but probably unrelated).\r\n", "created_at": "2018-02-06 01:41:02", "user": 10076, "id": 363281966}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364500493", "text": "ci is green, anything else I can do to move this forward? should I also make a MR for 5.1.5?", "created_at": "2018-02-09 17:25:08", "user": 9540855, "id": 364500493}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365054372", "text": "It will not be included in 5.1.5, unless it is a regression since 5.1.4, that is not the case. Maybe it will be included in 5.1.6, but it depends if someone merge it.", "created_at": "2018-02-12 20:39:03", "user": 47848, "id": 365054372}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "There appears to be an issue with determining the template for digesting. I believe it may be related to rendering HTML in response to a javascript request. Here is the code that worked in previous versions of Rails:\r\n\r\n```\r\n    respond_to do |format|\r\n      format.html\r\n      format.js { render @objects, cached: true }\r\n    end\r\n```\r\n\r\nWith 5.2.0, I am getting the warning:\r\n\r\n`Couldn't find template for digesting: admin/_object`\r\n\r\nI tried being more explicit:\r\n\r\n```\r\n    respond_to do |format|\r\n      format.html\r\n      format.js { render partial: 'admin/object', collection: @objects, cached: true }\r\n    end\r\n```\r\n\r\nBut that didn't work. I was finally able to get it to work by providing the full path (except the underscore for the partial):\r\n\r\n```\r\n    respond_to do |format|\r\n      format.html\r\n      format.js { render partial: 'admin/object.html.erb', collection: @objects, cached: true }\r\n    end\r\n```", "labels": ["needs work"], "number": 31902, "updated_at": "2018-02-08 14:05:33", "user": 64581, "closed_at": "None", "id": 294563007, "title": "5.2.0 RC1 Cache Digesting Issue", "url": "https://api.github.com/repos/rails/rails/issues/31902", "created_at": "2018-02-05 22:20:46", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363937165", "text": "Can you please provide a sample application that reproduces the issue?", "created_at": "2018-02-07 22:45:40", "user": 987638, "id": 363937165}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363981590", "text": "@georgeclaghorn this sounds a little like https://github.com/rails/jbuilder/pull/400 to me... do you think it could be related?", "created_at": "2018-02-08 02:24:28", "user": 1034, "id": 363981590}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363989492", "text": "It seems like we expect a JS template at `admin/_object.js.erb` because the rendered format is JS. I reproduced this in a test app, and passing `formats: :html` to `render` fixes it.", "created_at": "2018-02-08 03:15:01", "user": 94129, "id": 363989492}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363990123", "text": "When we [look up](https://github.com/rails/rails/blob/5ae2ecab6d3365f6f17e3c8cb298dfeeea113774/actionview/lib/action_view/digestor.rb#L52) the partial for digesting, we only give the lookup context the rendered format.", "created_at": "2018-02-08 03:19:41", "user": 94129, "id": 363990123}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364115917", "text": "I tried using:\r\n\r\n```\r\n    respond_to do |format|\r\n      format.html\r\n      format.js { render @objects, cached: true, format: :html }\r\n    end\r\n```\r\n\r\nBut still get the warning:\r\n\r\n`Couldn't find template for digesting: admin/_object`", "created_at": "2018-02-08 13:47:08", "user": 64581, "id": 364115917}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364116380", "text": "Nevermind, passing `formats: :html` (formats plural) did remove the warning!", "created_at": "2018-02-08 13:48:50", "user": 64581, "id": 364116380}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364116386", "text": "The option is `:formats`, not `:format`.", "created_at": "2018-02-08 13:48:51", "user": 94129, "id": 364116386}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364121005", "text": "I had the same issue with an `html.erb` page rendering the same partial:\r\n\r\n` <%= render partial: 'admin/object.html.erb', collection: @objects %>`\r\n\r\nI was able to apply the same fix to avoid the digesting issue:\r\n\r\n`<%= render @objects, formats: :html %>`\r\n", "created_at": "2018-02-08 14:05:33", "user": 64581, "id": 364121005}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nRails Minitest plugin should add `SuppressedSummaryReporter` only for replacing `SummaryReporter` and `Rails::TestUnitReporter` for `ProgressReporter`.\r\nCurrently, the plugin always add these two reporters without checking if it's necessary.\r\n\r\nFor example, [kern/minitest-reporters](https://github.com/kern/minitest-reporters) can remove all reporters and set custom ones defined by the configuration.\r\nCurrently, `rails` will re-add reporters without checks.\r\n", "labels": [], "number": 31901, "updated_at": "2018-02-17 03:37:24", "user": 4509277, "closed_at": "2018-02-17 03:37:24", "id": 294525642, "title": "Use SuppressedSummaryReporter and Rails::TestUnitReporter only if needed", "url": "https://api.github.com/repos/rails/rails/issues/31901", "created_at": "2018-02-05 20:08:22", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363205844", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-05 20:08:24", "user": 7468109, "id": 363205844}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363206319", "text": "PS: I don't find the information about which branch to target for this kind of pull request. I am sorry if it's wrong, I can change it 👍.", "created_at": "2018-02-05 20:10:20", "user": 4509277, "id": 363206319}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363254807", "text": "Thanks for your Pull Request. \r\nDoes this PR's purpose is to make it possible to invalidate reportesr provided by Rails?\r\n", "created_at": "2018-02-05 23:19:07", "user": 987638, "id": 363254807}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363337395", "text": "The purpose is to make possible to replace reporters.\r\nYou can check this related issue https://github.com/kern/minitest-reporters/issues/230.\r\n`minitest-reporters` allow to use other reporters like `SpecReporter`, `ProgressReporter`, `RubyMineReporter`.\r\n\r\nIf I understand well, Rails doesn't check and add unconditionally these two reporters. This is what I would like to change.\r\nI think that is the initial intention when we read the comment `# Replace progress reporter for colors.`\r\n\r\nThe other way may be to use an `ENV` variable for opt-out?", "created_at": "2018-02-06 07:43:26", "user": 4509277, "id": 363337395}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363404477", "text": "Thanks. We are considering adding the option to skip Rails' custom Minitest reporter.\r\nhttps://github.com/rails/rails/pull/30555#issuecomment-343733729 \r\n\r\nProbably I think that adding this option will satisfy your request. \r\nSo let's track that PR. Thank.\r\n", "created_at": "2018-02-06 12:13:42", "user": 987638, "id": 363404477}, {"reactions": {"+1": [4509277]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363416352", "text": "> I think that is the initial intention when we read the comment `# Replace progress reporter for colors.`\r\n\r\n+1. We want to replace the original reporters; if they're not there, then we have nothing to do.\r\n\r\nI suspect I already know the answer, but is it possible/practical to test this?", "created_at": "2018-02-06 13:06:10", "user": 1034, "id": 363416352}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363451173", "text": "One way for testing this is to move/extract the replacing logic to a method that take `reporter` as an argument and make unit test on this method. What do you think?\r\nI will take a look at how `minitest` do tests. Maybe they test the plugin system.", "created_at": "2018-02-06 15:09:07", "user": 4509277, "id": 363451173}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364124219", "text": "I added some tests 👍 ", "created_at": "2018-02-08 14:16:29", "user": 4509277, "id": 364124219}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365595570", "text": "One job doesn't pass https://travis-ci.org/rails/rails/jobs/341311470\r\n> The job exceeded the maximum time limit for jobs, and has been terminated.\r\n\r\nI don't think that I can do anything 😄 ", "created_at": "2018-02-14 12:41:09", "user": 4509277, "id": 365595570}, {"reactions": {"+1": [4509277]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365690887", "text": "Can you add a changelog entry and squash your commits?", "created_at": "2018-02-14 17:55:44", "user": 47848, "id": 365690887}, {"reactions": {"hooray": [1653699]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365863761", "text": "@rafaelfranca I have added a changelog entry and squashed my commits 👍 ", "created_at": "2018-02-15 09:01:01", "user": 4509277, "id": 365863761}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {"hooray": [49549, 3124, 6443532, 199, 354185, 4132009, 8942499, 12427222, 3866868, 3144140, 2768870, 10141, 8995429, 1840367, 2200578, 904193, 381395, 4390603, 1000669, 1147449, 354236, 3727827, 7119729, 27698968, 7096667, 959128, 240770, 66961, 436888, 1582784, 312, 672989, 1906401, 438405, 957419, 6544741, 48745, 681982, 3123328, 5464881, 116234, 9677099, 16444991, 153201, 386234, 2034140, 3732709, 8019344, 564113, 170351, 16111, 3450257, 6267, 129149, 52359, 36139, 1079270, 6765108, 43840, 1437912, 121782, 827224, 2501554, 1655218, 2637951, 22913677, 20585744, 5495713, 1538066, 114033, 425283, 202472, 10490190, 9843667, 11377783, 928367, 414418, 577441, 1585289, 37346, 198547, 1156865], "heart": [350807, 4509277, 2231765, 3124, 6443532, 354185, 8942499, 1442465, 13696143, 8122246, 12427222, 1100408, 840464, 153459, 323891, 77174, 713787, 2768870, 422, 8995429, 279390, 621238, 381395, 1000669, 3727827, 27698968, 7096667, 4792866, 7046787, 959128, 240770, 8790491, 436888, 248174, 38027, 5059927, 672989, 438405, 6544741, 681982, 721339, 5464881, 1172532, 39493, 116234, 3407996, 44833, 14014, 5364479, 1156987, 1147484, 386234, 2034140, 3732709, 8019344, 3901922, 170351, 3332891, 16111, 5435697, 11112, 129149, 988715, 6528, 36139, 6765108, 3863871, 1803598, 7427365, 6029816, 41963, 1206395, 3188392, 121782, 14403, 1655218, 101501, 2149035, 588846, 4392286, 1538066, 1334409, 157134, 114033, 1486169, 202472, 10490190, 9843667, 11377783, 1630249, 237136, 1319150, 577441, 2371639, 1585289, 7111514, 37346, 52430, 5125014, 198547, 1156865], "+1": [5717791, 63340, 3124, 11950149, 8995429, 904193, 381395, 1108341, 1000669, 3727827, 27698968, 4792866, 7046787, 671378, 959128, 240770, 8790491, 436888, 10867145, 672989, 1906401, 438405, 18215551, 6544741, 756762, 681982, 721339, 19774147, 116234, 24459895, 463602, 386234, 3732709, 306253, 170351, 3332891, 16111, 3492040, 3450257, 3954591, 129149, 282701, 17846512, 25447, 36139, 6765108, 5181880, 9130792, 5013681, 1907408, 41963, 827224, 2501554, 92, 9622730, 1655218, 66674, 5436425, 101501, 9149289, 9585, 20585744, 5495713, 157134, 114033, 2628211, 425283, 18175533, 202472, 10490190, 5518, 109765, 9158723, 4314978, 9843667, 11377783, 264525, 414418, 245691, 6404663, 7275347, 8336537, 577441, 2371639, 7428736, 4054, 543366, 1585289, 12672, 7111514, 37346, 827743, 5221643, 419086, 975802, 198547, 1156865, 61983, 3348292, 263097], "laugh": [3124, 12427222, 381395, 27698968, 959128, 672989, 438405, 6544741, 386234, 16111, 36139, 6765108, 114033, 10490190, 1585289, 1156865]}, "text": "@tenderlove and I worked on this which adds parallel testing to Rails applications by default. New applications will have parallel testing enabled by default, and older applications can add it to their test helper:\r\n\r\n```ruby\r\nclass ActiveSupport::TestCase\r\n  parallelize(workers: 2)\r\nend\r\n```\r\n\r\nParallel testing in this implementation utilizes forking processes over threads. The reason we (tenderlove and eileencodes) chose forking processes over threads is forking will be faster with single databases, which most applications will use locally. Using threads is beneficial when tests are IO bound but the majority of tests are not IO bound. NOTE: after some experimentation we added a threaded parallelization method as well, but forked processes are still the default.\r\n\r\nIf an application doesn't want to use parallel testing they can either remove the `parallelize` block from the test application or set `PARALLEL_WORKERS` to `1` or fewer. For environments where you want to change the default number of workers from what you've set in your `test_helper.rb` you can export / set an environment variable to change the number of workers used. The following will use 15 workers and split the tests into 15 processes.\r\n\r\n```\r\nPARALLEL_WORKERS=15 bin/rails test\r\n```\r\n\r\nNote: ~~While parallel testing will work with multiple primary databases, it currently doesn't rollback fixtures correctly. I'm actively working on fixing that but decided it was out of scope for this particular feature, since fixing it is not a feature of parallel testing but rather a bug / inconsistency in how Rails is handled. The fix for that should be coming shortly. Parallel testing and multiple primary databases does work with tests if not using fixtures.~~ I'm not sure why I thought this but I just tested it locally again and the fixtures work. I think I had a bug in my setup the last time I tested this.\r\n\r\nIf you have multiple databases they can be setup like this in your `test_helper.rb`\r\n\r\n```ruby\r\nclass ActiveSupport::TestCase\r\n  parallelize(workers: 2)\r\n\r\n  parallelize_setup do |worker|\r\n    # create a db w/ worker. Runs after processes are forked\r\n  end\r\n\r\n  parallelize_teardown do |worker|\r\n    # delete the test databases or other cleanup. Runs before processes are closed\r\n  end\r\nend\r\n```\r\n\r\nTo do:\r\n- [x] Documentation\r\n- [x] Guides\r\n- [x] CHANGELOG\r\n\r\ncc/ @tenderlove @dhh ", "labels": [], "number": 31900, "updated_at": "2018-03-19 17:46:25", "user": 1080678, "closed_at": "2018-02-16 13:09:03", "id": 294503770, "title": "Parallel testing", "url": "https://api.github.com/repos/rails/rails/issues/31900", "created_at": "2018-02-05 18:55:32", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363186919", "text": "This looks great!  3 things off the top of my head:\r\n\r\n1. I'm not sure if Windows supports unix sockets. We should test that and possibly opt-out Windows folks.\r\n2. JRuby definitely doesn't support `fork`.  We might be able to get this to work with `Process.spawn` out of the box, but maybe we should opt-out JRuby folks for now too?\r\n3. I like the class-level `parallelize` API for setting the number of workers, but do we care if people call the method more than once? (I think the answer is \"no\", but I just want to check)", "created_at": "2018-02-05 19:02:30", "user": 3124, "id": 363186919}, {"reactions": {"+1": [9585]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363194396", "text": "This is great work!  Thanks @eileencodes @tenderlove ❤️ ", "created_at": "2018-02-05 19:28:29", "user": 13086902, "id": 363194396}, {"reactions": {"heart": [3124, 11435593, 1227084, 2628211, 4340]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363495900", "text": "It seems Windows 10 upcoming RS4 release will support unix sockets partially, see <https://blogs.msdn.microsoft.com/commandline/2017/12/19/af_unix-comes-to-windows/>", "created_at": "2018-02-06 17:15:58", "user": 1024162, "id": 363495900}, {"reactions": {"+1": [891085], "confused": [14306, 68766]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363552574", "text": "Does anyone use rails on Windows either development or production? MRI is still large i dont know anyone using JRUby on production. Opting them out for this release is OK.", "created_at": "2018-02-06 20:20:41", "user": 760429, "id": 363552574}, {"reactions": {"+1": [1962801, 43391, 2011209]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363554424", "text": "Is this a replacement for https://github.com/grosser/parallel_tests ?", "created_at": "2018-02-06 20:27:11", "user": 78363, "id": 363554424}, {"reactions": {"+1": [760429, 7111514]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363556702", "text": "@metacritical I don't want to discount users of JRuby or Windows, however I think since we're a ways out from Rails 6.0 there's a ton of potential for this feature to evolve. I'd love to see a way to use threads over processes if someone finds that useful. I don't think it's necessary for the first iteration though. Once we have an API nailed down and this merged we can iterate on it and add a threads feature.\r\n\r\n@GBH yes technically it replaces it, but not because we think the gem is doing anything incorrect. We're not personally using it at GitHub but we wrote our own implementation based on how we parallelize our own tests.", "created_at": "2018-02-06 20:35:42", "user": 1080678, "id": 363556702}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363630070", "text": "I'm afraid this problem is beyond the scope, but is there any way to define whether a test should run on threads or processes? For instance, if I had a test that is IO bound, it would be awesome to run on threads.\r\nI don’t know, maybe this will solve the JRuby’s problem with `fork` as well.", "created_at": "2018-02-07 01:57:50", "user": 1211207, "id": 363630070}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363635689", "text": "Nice and sweet. 👏💖", "created_at": "2018-02-07 02:29:30", "user": 809030, "id": 363635689}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363952083", "text": "Sometimes I set breakpoints in tests with Pry or Byebug. I assume the might not work with multiple processes. Could we add a note to the docs mentioning that? (Sorry I haven't had a chance to test this for myself.)", "created_at": "2018-02-07 23:49:56", "user": 1423865, "id": 363952083}, {"reactions": {"+1": [1423865, 6267, 8417720, 11080848, 6343069, 6736430]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364241326", "text": "@pangolingo when debugging with pry or byebug you should probably run a single test rather than all of them. But at least byebug works well in a multi-threaded environment (pauses other threads when it hits `byebug` and resumes upon `continue`). I'm not sure how it behaves in a forked process.", "created_at": "2018-02-08 20:39:46", "user": 386234, "id": 364241326}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366041954", "text": "Decided to add a threaded parallelizer after all. JRuby apps will automatically be generated using the threaded one. If you want to use threads just add `with: :threads` as a keyword argument.\r\n\r\nI've updated docs, guides, and added a changelog. ", "created_at": "2018-02-15 19:52:07", "user": 1080678, "id": 366041954}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366500060", "text": "Awesome!", "created_at": "2018-02-18 08:23:15", "user": 889196, "id": 366500060}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/367185381", "text": "@eileencodes \r\nIn rails 5.2\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nENV['RAILS_ENV'] ||= 'test'\r\nrequire_relative '../config/environment'\r\nrequire 'rails/test_help'\r\nrequire 'rubocop/rake_task'\r\n\r\nRuboCop::RakeTask.new\r\n\r\nclass ActiveSupport::TestCase\r\n  # Run tests in parallel with specified workers\r\n  parallelize(workers: 2)\r\n\r\n  # Add more helper methods to be used by all tests here...\r\nend\r\n```\r\n\r\nrails t show failed **rubocop** tests\r\n\r\nNow \r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nENV['RAILS_ENV'] ||= 'test'\r\nrequire_relative '../config/environment'\r\nrequire 'rails/test_help'\r\nrequire 'rubocop/rake_task'\r\n\r\nRuboCop::RakeTask.new\r\n\r\nclass ActiveSupport::TestCase\r\n  # Add more helper methods to be used by all tests here...\r\nend\r\n```\r\nrails t ignoring `RuboCop::RakeTask.new`\r\n\r\nHow use that now?", "created_at": "2018-02-21 01:43:24", "user": 4083992, "id": 367185381}, {"reactions": {"+1": [4083992]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368256795", "text": "@Fudoshiki can you open a new issue explaining the problem you're having?  From your comment I don't understand what the issue is. Thanks!", "created_at": "2018-02-24 20:17:52", "user": 1080678, "id": 368256795}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/374205169", "text": "Someone asked if anyone is using windows for rails development. Yes. I work for a state agency and use the windows subsystem for linux on windows for all development since the fall creators update and they fixed filewatchers. Just FYI we are out here.", "created_at": "2018-03-19 13:08:04", "user": 2280065, "id": 374205169}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/374297739", "text": "Does this apply to both rspec and minitest? ", "created_at": "2018-03-19 17:29:06", "user": 744056, "id": 374297739}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/374299402", "text": "Hey @johnvross I know you're out there and I'm sorry someone asked that question as it's not an opinion the core team holds. I think you should be supported through the threaded parallelizer, but I'm  not sure the Unix sockets that dRB relies on will work for you.\r\n\r\n@chrishough this is using Minitest's parallel executor so I don't think it will work for rspec per say but we wrote the API in such a way that it's easy for us to add support for another parallelizer. This feature is still very new and it will be awhile before Rails 6 is released.", "created_at": "2018-03-19 17:33:54", "user": 1080678, "id": 374299402}, {"reactions": {"+1": [14151]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/374303597", "text": "Thanks @eileencodes.  I was hoping it would replace https://github.com/grosser/parallel_tests, and I am definitely curious to see how this plays out. ", "created_at": "2018-03-19 17:46:25", "user": 744056, "id": 374303597}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "\r\nin: http://edgeguides.rubyonrails.org/active_storage_overview.html#mirror-service\r\n\r\n\"You can start mirroring to the new service, copy existing files from the old service to the new, then go all-in on the new service.\"\r\n\r\nI have a bucket on S3 and try to copy its content to local to setup an on-premise server.\r\n\r\nActive storage adds files to S3 bucket direct with names like \"BvWAx6tgrodtsYMB6oxKSTRz\"\r\nand its variant in variants folder\r\nthen BvWAx6tgrodtsYMB6oxKSTRz folder with the same name\r\nthen the variant file with new name like \"cf64579b5ef85d267d1782150b3e470a308a085a4763b\"\r\n\r\nBut in local it creates folder with first two characters from the file name \"Bv\" \r\ninside it another folder with the second two characters \"WA\" \r\nthen the file with its name \"BvWAx6tgrodtsYMB6oxKSTRz\"\r\n\r\nand its and its variant in \"va\" folder \r\ninside it \"ri\" folder \r\ninside it \"variants\" folder \r\ninside it a folder with the file name \"BvWAx6tgrodtsYMB6oxKSTRz\"\r\nthen the variant file with variant file name \"cf64579b5ef85d267d1782150b3e470a308a085a4763b\"\r\n\r\nHow can I make the local structure like S3 structure to let me copy files after some time to on-premise server.\r\n\r\nI see it done automatic if I set Mirror Service, but I need it for files before mirror.\r\n\r\nThanks", "labels": [], "number": 31899, "updated_at": "2018-02-05 17:56:43", "user": 22920591, "closed_at": "2018-02-05 17:54:21", "id": 294471864, "title": "Active Storage Mirror Service", "url": "https://api.github.com/repos/rails/rails/issues/31899", "created_at": "2018-02-05 17:13:00", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363165306", "text": "You can’t, sorry.\r\n\r\nPlease use Stack Overflow or the [rubyonrails-talk](https://groups.google.com/forum/#!forum/rubyonrails-talk) for questions, where a wider community will be able to help you. We reserve the issue tracker for bugs.", "created_at": "2018-02-05 17:54:21", "user": 94129, "id": 363165306}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363166086", "text": "To clarify, you can’t copy files directly from the disk service’s root to S3; use Ruby code to enumerate blobs and upload them to the destination service.", "created_at": "2018-02-05 17:56:43", "user": 94129, "id": 363166086}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "I have basically extracted instrumentation tests into a separate module to test against **all** (not just `null_store` or `memory_store`) cache stores and added missing `RedisCacheStore#read_multi` instrumentation.", "labels": [], "number": 31898, "updated_at": "2018-02-05 19:58:03", "user": 5657035, "closed_at": "2018-02-05 19:57:15", "id": 294464565, "title": "Add missing instrumentation to RedisCacheStore#read_multi", "url": "https://api.github.com/repos/rails/rails/issues/31898", "created_at": "2018-02-05 16:52:21", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363146236", "text": "r? @sgrif\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-05 16:52:23", "user": 7468109, "id": 363146236}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363146311", "text": "r? @jeremy ", "created_at": "2018-02-05 16:52:39", "user": 5657035, "id": 363146311}], "assignees": [199, 199], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nHere's a gist with the behavior: https://gist.github.com/kddeisz/e513f30e315912d8eb40ed97b644346d. \r\n\r\nNote you'll need redis running to run this script. I'm not sure if it's isolated to the redis store or not, I'm just trying to mirror my application as closely as possible.\r\n\r\n### Expected behavior\r\n\r\nWhen updating a record (and thereby updated the `updated_at` column) it should bust the cache.\r\n\r\n### Actual behavior\r\n\r\nIt's not busting.\r\n\r\n### System configuration\r\n**Rails version**: 5.2.0.rc1\r\n\r\n**Ruby version**: 2.5.0", "labels": [], "number": 31897, "updated_at": "2018-03-05 17:13:54", "user": 5093358, "closed_at": "2018-02-14 02:46:06", "id": 294463506, "title": "Caching behavior regression", "url": "https://api.github.com/repos/rails/rails/issues/31897", "created_at": "2018-02-05 16:49:26", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363148796", "text": "Update: it's not cache store specific. After bisecting it comes to here: https://github.com/rails/rails/commit/f6d2efa9e8d597832510fd20e3b8fee87f6e6df6. Working on a PR now.", "created_at": "2018-02-05 17:00:15", "user": 5093358, "id": 363148796}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363174151", "text": "Okay yeah no I'm going to need help with this. I can get it to fix my use case but I can't get it to pass to the test here: https://github.com/rails/rails/commit/57f0e3d1300d01444d2a311560c055d26968dc3f#r26439527. @georgeclaghorn I'm going to probably need your help here.", "created_at": "2018-02-05 18:22:48", "user": 5093358, "id": 363174151}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363176587", "text": "I'm actually not sure I understand why we wouldn't want to use `cache_key_with_version` in this case. ", "created_at": "2018-02-05 18:31:02", "user": 5093358, "id": 363176587}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365472871", "text": "Your script uses the `redis_store` adapter provided by the [redis-activesupport](https://github.com/redis-store/redis-activesupport) gem, which isn't maintained by the Rails team; unless you can reproduce the bug using one of the in-tree adapters, this issue should be opened against that gem instead.", "created_at": "2018-02-14 02:12:05", "user": 432189, "id": 365472871}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365476070", "text": "@eugeneius I've updated the gist to use the built-in redis cache store, the tests still fail.", "created_at": "2018-02-14 02:29:50", "user": 5093358, "id": 365476070}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365478003", "text": "The test passes for me:\r\n\r\n```\r\nRun options: --seed 48525\r\n\r\n# Running:\r\n\r\n.\r\n\r\nFinished in 0.012247s, 81.6526 runs/s, 244.9579 assertions/s.\r\n1 runs, 3 assertions, 0 failures, 0 errors, 0 skips\r\n```", "created_at": "2018-02-14 02:42:16", "user": 94129, "id": 365478003}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365478571", "text": "Oh so embarrassing sorry! I forgot to clear out the cache between switching the adapters. Sorry about that!", "created_at": "2018-02-14 02:46:06", "user": 5093358, "id": 365478571}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "```ruby\r\n# config/development.rb\r\n...\r\nconfig.cache_store = :redis_cache_store\r\n...\r\n```\r\n\r\n```ruby\r\nRails.cache.fetch_multi(:a, :b, :c) { \"value\" }\r\n```\r\n\r\n```\r\n▶ redis-cli monitor\r\nOK\r\n1517844254.700679 [0 127.0.0.1:58616] \"get\" \"a\"\r\n1517844254.700936 [0 127.0.0.1:58616] \"get\" \"b\"\r\n1517844254.701301 [0 127.0.0.1:58616] \"get\" \"c\"\r\n1517844254.701731 [0 127.0.0.1:58616] \"mset\" \"a\" \"\\x04\\bo: ActiveSupport::Cache::Entry\\t:\\x0b@valueI\\\"\\nvalue\\x06:\\x06ET:\\r@version0:\\x10@created_atf\\x151517844254.70148:\\x10@expires_in0\" \"b\" \"\\x04\\bo: ActiveSupport::Cache::Entry\\t:\\x0b@valueI\\\"\\nvalue\\x06:\\x06ET:\\r@version0:\\x10@created_atf\\x161517844254.701498:\\x10@expires_in0\" \"c\" \"\\x04\\bo: ActiveSupport::Cache::Entry\\t:\\x0b@valueI\\\"\\nvalue\\x06:\\x06ET:\\r@version0:\\x10@created_atf\\x171517844254.7015092:\\x10@expires_in0\"\r\n```\r\n\r\n`RedisCacheStore` is not using `Redis#mget`.", "labels": [], "number": 31896, "updated_at": "2018-02-05 21:51:56", "user": 5657035, "closed_at": "2018-02-05 21:51:56", "id": 294432615, "title": "Use Redis#mget for RedisCacheStore#fetch_multi", "url": "https://api.github.com/repos/rails/rails/issues/31896", "created_at": "2018-02-05 15:27:45", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363221547", "text": "r? @jeremy ", "created_at": "2018-02-05 21:07:26", "user": 5657035, "id": 363221547}], "assignees": [199, 199], "state": "closed", "is-pull-request": true}
{"reactions": {"heart": [1034], "+1": [1034]}, "text": "This is an alternative of #31877 to fix #31876 caused by #28808.\r\n\r\nThis issue was caused by a combination of several loose implementation.\r\n\r\n* finding automatic inverse association of polymorphic without context (caused by #28808)\r\n* returning `klass` even if `polymorphic?` (exists before #28808)\r\n* loose verification by `valid_inverse_reflection?` (exists before #28808)\r\n\r\nThis makes `klass` raise if `polymorphic?` not to be misused.\r\nThis issue will not happen unless polymorphic `klass` is misused.\r\n\r\nFixes #31876.\r\nCloses #31877.", "labels": [], "number": 31895, "updated_at": "2018-02-25 20:15:27", "user": 12642, "closed_at": "2018-02-25 20:15:23", "id": 294400474, "title": "Make `reflection.klass` raise if `polymorphic?` not to be misused", "url": "https://api.github.com/repos/rails/rails/issues/31895", "created_at": "2018-02-05 13:54:22", "comments": [], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Backport of #31827.", "labels": [], "number": 31894, "updated_at": "2018-02-06 02:02:28", "user": 12642, "closed_at": "2018-02-06 01:05:17", "id": 294362868, "title": "5-1-stable: PERF: Recover marshaling dump/load performance", "url": "https://api.github.com/repos/rails/rails/issues/31894", "created_at": "2018-02-05 11:38:50", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363060214", "text": "<img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20> **Warning** <img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20>\n\n* Pull requests are usually filed against the master branch for this repo, but this one is against 5-1-stable. Please double check that you specified the right target!", "created_at": "2018-02-05 11:38:51", "user": 7468109, "id": 363060214}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "To isolate the cause of this error reported at https://travis-ci.org/rails/rails/jobs/337434035\r\nI have executed `minitest_bisect` with seed 3080. Unfortunately, it will not start bisecting.\r\n\r\n```ruby\r\nError:\r\nPersistenceTest#test_becomes:\r\nActiveModel::MissingAttributeError: can't write unknown attribute `type`\r\n```\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n$ cd activerecord\r\n$ MTB_VERBOSE=2 bundle exec minitest_bisect --seed 3080 -w -Itest \"test/cases/adapter_test.rb\" \"test/cases/aggregations_test.rb\" \"test/cases/ar_schema_test.rb\" \"test/cases/associations/belongs_to_associations_test.rb\" \"test/cases/associations/bidirectional_destroy_dependencies_test.rb\" \"test/cases/associations/callbacks_test.rb\" \"test/cases/associations/cascaded_eager_loading_test.rb\" \"test/cases/associations/eager_load_includes_full_sti_class_test.rb\" \"test/cases/associations/eager_load_nested_include_test.rb\" \"test/cases/associations/eager_singularization_test.rb\" \"test/cases/associations/eager_test.rb\" \"test/cases/associations/extension_test.rb\" \"test/cases/associations/has_and_belongs_to_many_associations_test.rb\" \"test/cases/associations/has_many_associations_test.rb\" \"test/cases/associations/has_many_through_associations_test.rb\" \"test/cases/associations/has_one_associations_test.rb\" \"test/cases/associations/has_one_through_associations_test.rb\" \"test/cases/associations/inner_join_association_test.rb\" \"test/cases/associations/inverse_associations_test.rb\" \"test/cases/associations/join_model_test.rb\" \"test/cases/associations/left_outer_join_association_test.rb\" \"test/cases/associations/nested_through_associations_test.rb\" \"test/cases/associations/required_test.rb\" \"test/cases/associations_test.rb\" \"test/cases/attribute_decorators_test.rb\" \"test/cases/attribute_methods/read_test.rb\" \"test/cases/attribute_methods_test.rb\" \"test/cases/attributes_test.rb\" \"test/cases/autosave_association_test.rb\" \"test/cases/base_test.rb\" \"test/cases/batches_test.rb\" \"test/cases/binary_test.rb\" \"test/cases/bind_parameter_test.rb\" \"test/cases/cache_key_test.rb\" \"test/cases/calculations_test.rb\" \"test/cases/callbacks_test.rb\" \"test/cases/clone_test.rb\" \"test/cases/coders/json_test.rb\" \"test/cases/coders/yaml_column_test.rb\" \"test/cases/collection_cache_key_test.rb\" \"test/cases/column_alias_test.rb\" \"test/cases/column_definition_test.rb\" \"test/cases/comment_test.rb\" \"test/cases/connection_adapters/adapter_leasing_test.rb\" \"test/cases/connection_adapters/connection_handler_test.rb\" \"test/cases/connection_adapters/connection_specification_test.rb\" \"test/cases/connection_adapters/merge_and_resolve_default_url_config_test.rb\" \"test/cases/connection_adapters/mysql_type_lookup_test.rb\" \"test/cases/connection_adapters/schema_cache_test.rb\" \"test/cases/connection_adapters/type_lookup_test.rb\" \"test/cases/connection_management_test.rb\" \"test/cases/connection_pool_test.rb\" \"test/cases/connection_specification/resolver_test.rb\" \"test/cases/core_test.rb\" \"test/cases/counter_cache_test.rb\" \"test/cases/custom_locking_test.rb\" \"test/cases/database_statements_test.rb\" \"test/cases/date_test.rb\" \"test/cases/date_time_precision_test.rb\" \"test/cases/date_time_test.rb\" \"test/cases/defaults_test.rb\" \"test/cases/dirty_test.rb\" \"test/cases/disconnected_test.rb\" \"test/cases/dup_test.rb\" \"test/cases/enum_test.rb\" \"test/cases/errors_test.rb\" \"test/cases/explain_subscriber_test.rb\" \"test/cases/explain_test.rb\" \"test/cases/finder_respond_to_test.rb\" \"test/cases/finder_test.rb\" \"test/cases/fixture_set/file_test.rb\" \"test/cases/fixtures_test.rb\" \"test/cases/forbidden_attributes_protection_test.rb\" \"test/cases/habtm_destroy_order_test.rb\" \"test/cases/hot_compatibility_test.rb\" \"test/cases/i18n_test.rb\" \"test/cases/inheritance_test.rb\" \"test/cases/instrumentation_test.rb\" \"test/cases/integration_test.rb\" \"test/cases/invalid_connection_test.rb\" \"test/cases/invertible_migration_test.rb\" \"test/cases/json_attribute_test.rb\" \"test/cases/json_serialization_test.rb\" \"test/cases/locking_test.rb\" \"test/cases/log_subscriber_test.rb\" \"test/cases/migration/change_schema_test.rb\" \"test/cases/migration/change_table_test.rb\" \"test/cases/migration/column_attributes_test.rb\" \"test/cases/migration/column_positioning_test.rb\" \"test/cases/migration/columns_test.rb\" \"test/cases/migration/command_recorder_test.rb\" \"test/cases/migration/compatibility_test.rb\" \"test/cases/migration/create_join_table_test.rb\" \"test/cases/migration/foreign_key_test.rb\" \"test/cases/migration/index_test.rb\" \"test/cases/migration/logger_test.rb\" \"test/cases/migration/pending_migrations_test.rb\" \"test/cases/migration/references_foreign_key_test.rb\" \"test/cases/migration/references_index_test.rb\" \"test/cases/migration/references_statements_test.rb\" \"test/cases/migration/rename_table_test.rb\" \"test/cases/migration_test.rb\" \"test/cases/migrator_test.rb\" \"test/cases/mixin_test.rb\" \"test/cases/modules_test.rb\" \"test/cases/multiparameter_attributes_test.rb\" \"test/cases/multiple_db_test.rb\" \"test/cases/nested_attributes_test.rb\" \"test/cases/nested_attributes_with_callbacks_test.rb\" \"test/cases/null_relation_test.rb\" \"test/cases/numeric_data_test.rb\" \"test/cases/persistence_test.rb\" \"test/cases/pooled_connections_test.rb\" \"test/cases/primary_keys_test.rb\" \"test/cases/query_cache_test.rb\" \"test/cases/quoting_test.rb\" \"test/cases/readonly_test.rb\" \"test/cases/reaper_test.rb\" \"test/cases/reflection_test.rb\" \"test/cases/relation/delegation_test.rb\" \"test/cases/relation/merging_test.rb\" \"test/cases/relation/mutation_test.rb\" \"test/cases/relation/or_test.rb\" \"test/cases/relation/predicate_builder_test.rb\" \"test/cases/relation/record_fetch_warning_test.rb\" \"test/cases/relation/where_chain_test.rb\" \"test/cases/relation/where_clause_test.rb\" \"test/cases/relation/where_test.rb\" \"test/cases/relation_test.rb\" \"test/cases/relations_test.rb\" \"test/cases/reload_models_test.rb\" \"test/cases/reserved_word_test.rb\" \"test/cases/result_test.rb\" \"test/cases/sanitize_test.rb\" \"test/cases/schema_dumper_test.rb\" \"test/cases/schema_loading_test.rb\" \"test/cases/scoping/default_scoping_test.rb\" \"test/cases/scoping/named_scoping_test.rb\" \"test/cases/scoping/relation_scoping_test.rb\" \"test/cases/secure_token_test.rb\" \"test/cases/serialization_test.rb\" \"test/cases/serialized_attribute_test.rb\" \"test/cases/statement_cache_test.rb\" \"test/cases/store_test.rb\" \"test/cases/suppressor_test.rb\" \"test/cases/tasks/database_tasks_test.rb\" \"test/cases/tasks/mysql_rake_test.rb\" \"test/cases/tasks/postgresql_rake_test.rb\" \"test/cases/tasks/sqlite_rake_test.rb\" \"test/cases/test_fixtures_test.rb\" \"test/cases/time_precision_test.rb\" \"test/cases/timestamp_test.rb\" \"test/cases/touch_later_test.rb\" \"test/cases/transaction_callbacks_test.rb\" \"test/cases/transaction_isolation_test.rb\" \"test/cases/transactions_test.rb\" \"test/cases/type/adapter_specific_registry_test.rb\" \"test/cases/type/date_time_test.rb\" \"test/cases/type/integer_test.rb\" \"test/cases/type/string_test.rb\" \"test/cases/type/type_map_test.rb\" \"test/cases/type/unsigned_integer_test.rb\" \"test/cases/type_test.rb\" \"test/cases/types_test.rb\" \"test/cases/unconnected_test.rb\" \"test/cases/unsafe_raw_sql_test.rb\" \"test/cases/validations/absence_validation_test.rb\" \"test/cases/validations/association_validation_test.rb\" \"test/cases/validations/i18n_generate_message_validation_test.rb\" \"test/cases/validations/i18n_validation_test.rb\" \"test/cases/validations/length_validation_test.rb\" \"test/cases/validations/presence_validation_test.rb\" \"test/cases/validations/uniqueness_validation_test.rb\" \"test/cases/validations_test.rb\" \"test/cases/view_test.rb\" \"test/cases/yaml_serialization_test.rb\" \"test/cases/adapters/sqlite3/collation_test.rb\" \"test/cases/adapters/sqlite3/copy_table_test.rb\" \"test/cases/adapters/sqlite3/explain_test.rb\" \"test/cases/adapters/sqlite3/json_test.rb\" \"test/cases/adapters/sqlite3/quoting_test.rb\" \"test/cases/adapters/sqlite3/sqlite3_adapter_test.rb\" \"test/cases/adapters/sqlite3/sqlite3_create_folder_test.rb\" \"test/cases/adapters/sqlite3/statement_pool_test.rb\"\r\n```\r\n\r\n### Expected behavior\r\nIt should start bisecting each test and would show what causes `ActiveModel::MissingAttributeError`.\r\n\r\n### Actual behavior\r\n```ruby\r\nreproducing...Using sqlite3\r\nRun options: --seed 3080 --server 10166\r\n\r\n# Running:\r\n\r\nTraceback (most recent call last):\r\n\t16: from /home/yahonda/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/minitest-5.11.1/lib/minitest.rb:63:in `block in autorun'\r\n\t15: from /home/yahonda/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/minitest-5.11.1/lib/minitest.rb:136:in `run'\r\n\t14: from /home/yahonda/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/minitest-5.11.1/lib/minitest.rb:159:in `__run'\r\n\t13: from /home/yahonda/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/minitest-5.11.1/lib/minitest.rb:159:in `map'\r\n\t12: from /home/yahonda/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/minitest-5.11.1/lib/minitest.rb:159:in `block in __run'\r\n\t11: from /home/yahonda/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/minitest-5.11.1/lib/minitest.rb:319:in `run'\r\n\t10: from /home/yahonda/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/minitest-5.11.1/lib/minitest.rb:347:in `with_info_handler'\r\n\t 9: from /home/yahonda/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/minitest-5.11.1/lib/minitest.rb:360:in `on_signal'\r\n\t 8: from /home/yahonda/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/minitest-5.11.1/lib/minitest.rb:320:in `block in run'\r\n\t 7: from /home/yahonda/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/minitest-5.11.1/lib/minitest.rb:320:in `each'\r\n\t 6: from /home/yahonda/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/minitest-5.11.1/lib/minitest.rb:321:in `block (2 levels) in run'\r\n\t 5: from /home/yahonda/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/minitest-5.11.1/lib/minitest.rb:334:in `run_one_method'\r\n\t 4: from /home/yahonda/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/minitest-5.11.1/lib/minitest.rb:785:in `record'\r\n\t 3: from /home/yahonda/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/minitest-5.11.1/lib/minitest.rb:785:in `each'\r\n\t 2: from /home/yahonda/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/minitest-5.11.1/lib/minitest.rb:786:in `block in record'\r\n\t 1: from /home/yahonda/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/minitest-server-1.0.4/lib/minitest/server_plugin.rb:34:in `record'\r\n/home/yahonda/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/minitest-server-1.0.4/lib/minitest/server_plugin.rb:34:in `instance_method': undefined method `test_should_automatically_validate_associations_with_:validate_=>_true' for class `Minitest::Result' (NameError)\r\n in 3.78 sec\r\nReproduction run passed? Aborting.\r\nTry running with MTB_VERBOSE=2 to verify.\r\n$\r\n```\r\n\r\n### System configuration\r\n**Rails version**:master branch with the latest commit f9a8646d8150956524a72af9f85c832bbe84061b\r\n\r\n**Ruby version**:ruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-linux]", "labels": [], "number": 31893, "updated_at": "2018-02-06 23:31:12", "user": 73684, "closed_at": "2018-02-05 22:42:16", "id": 294355125, "title": "Unable to minitest_bisect to find what causes `PersistenceTest#test_becomes` error", "url": "https://api.github.com/repos/rails/rails/issues/31893", "created_at": "2018-02-05 11:10:12", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363246467", "text": "This is `minitest-server`'s issue.  Latest released `minitest-server` does not support Minitest 5.11. \r\nIt seems already fixed by https://github.com/seattlerb/minitest-server/commit/4c5827fdd2318603c69eca32bba39d91642e7bf8. \r\nLet's wait for the new version to be released.\r\n", "created_at": "2018-02-05 22:42:16", "user": 987638, "id": 363246467}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363249202", "text": "For your information, it is the result of my local bisect.\r\n\r\n```\r\nFinal reproduction:\r\n\r\nUsing sqlite3\r\nRun options: --seed 3080 -n \"/^(?:SerializedAttributeTest#(?:test_serialized_attributes_from_database_on_subclass)|PersistenceTest#(?:test_becomes))$/\"\r\n\r\n# Running:\r\n\r\n.E\r\n\r\nError:\r\nPersistenceTest#test_becomes:\r\nActiveModel::MissingAttributeError: can't write unknown attribute `type`\r\n    /home/y-yagi/src/github/y-yagi/rails/activemodel/lib/active_model/attribute.rb:207:in `with_value_from_database'\r\n    /home/y-yagi/src/github/y-yagi/rails/activemodel/lib/active_model/attribute_set.rb:57:in `write_from_user'\r\n    /home/y-yagi/src/github/y-yagi/rails/activerecord/lib/active_record/attribute_methods/write.rb:51:in `_write_attribute'\r\n    /home/y-yagi/src/github/y-yagi/rails/activerecord/lib/active_record/inheritance.rb:249:in `ensure_proper_type'\r\n    /home/y-yagi/src/github/y-yagi/rails/activerecord/lib/active_record/inheritance.rb:238:in `initialize_internals_callback'\r\n    /home/y-yagi/src/github/y-yagi/rails/activerecord/lib/active_record/scoping.rb:43:in `initialize_internals_callback'\r\n    /home/y-yagi/src/github/y-yagi/rails/activerecord/lib/active_record/core.rb:312:in `initialize'\r\n    /home/y-yagi/src/github/y-yagi/rails/activerecord/lib/active_record/persistence.rb:363:in `becomes'\r\n    /home/y-yagi/src/github/y-yagi/rails/activerecord/test/cases/persistence_test.rb:250:in `test_becomes'\r\n```", "created_at": "2018-02-05 22:54:00", "user": 987638, "id": 363249202}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363256265", "text": "Thank you for the information. Opened #31905 for the fix I wanted.", "created_at": "2018-02-05 23:26:03", "user": 73684, "id": 363256265}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363411612", "text": "@y-yagi Would you do me a favor? I'd like to use the minitest-server including https://github.com/seattlerb/minitest-server/commit/4c5827fdd2318603c69eca32bba39d91642e7bf8 but get `Could not find gem 'minitest-server' in https://github.com/seattlerb/minitest-server.git (at master@4c5827f).` error. Here are changes made and the output\r\n\r\nhttps://gist.github.com/yahonda/e6d1b7294d25889c5e247f681fedba00\r\n\r\nThanks.", "created_at": "2018-02-06 12:46:50", "user": 73684, "id": 363411612}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363598263", "text": "`minitest-server` doesn't provide gemspec. Therefore, can't specify GitHub  branch(If my understanding is correct). \r\nTherefore, I cloned the code, created a new version, and installed it. \r\nAnother approach is to directly rewrite the installed gem's code directly. Only `lib/minitest/server_plugin.rb` needs to be modified.\r\n", "created_at": "2018-02-06 23:13:36", "user": 987638, "id": 363598263}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363602372", "text": "Thanks for the useful information. \r\nI did update `lib/minitest/server_plugin.rb` and now minitest_bisect is running.", "created_at": "2018-02-06 23:31:11", "user": 73684, "id": 363602372}], "assignees": [987638, 987638], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "", "labels": [], "number": 31892, "updated_at": "2018-02-05 17:55:29", "user": 10832262, "closed_at": "2018-02-05 13:08:02", "id": 294352829, "title": "Fix single quotes [ci skip]", "url": "https://api.github.com/repos/rails/rails/issues/31892", "created_at": "2018-02-05 11:02:01", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363051924", "text": "r? @eileencodes\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-05 11:02:12", "user": 7468109, "id": 363051924}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363079536", "text": "Thanks for the PR. We don't accept cosmetic changes and since these aren't grammatically incorrect quotes / apostrophe's there isn't a reason to change these. For the last change I it's not a question rather than saying \"after this you will know what autopaths are\". ", "created_at": "2018-02-05 13:08:01", "user": 1080678, "id": 363079536}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "I'm on **Rails 5**.\r\n\r\nI have a polymorphic association like this:\r\n\r\n*models/enjoy_level.rb*:\r\n\r\n    class EnjoyLevel < ApplicationRecord\r\n      belongs_to :enjoyable, polymorphic: true, touch: true, optional: true\r\n    end\r\n\r\n*models/mother.rb*:\r\n\r\n    class Mother < ApplicationRecord\r\n      has_one :enjoy_level, as: :enjoyable, dependent: :destroy\r\n    \r\n      accepts_nested_attributes_for :enjoy_level\r\n    end\r\n\r\nIf I destroy one `mother` (which have `touch: true` option) it still:\r\n\r\n- destroy the `enjoy_level` one before;\r\n- set `Mother` `update_at` to now();\r\n- and finally destroy this `Mother` record one.\r\n\r\n**The first and second steps are useless**, right?\r\n\r\nWhere am I wrong?\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n**Ruby version**: 2.5.0\r\n", "labels": [], "number": 31891, "updated_at": "2018-02-07 00:20:36", "user": 21275217, "closed_at": "None", "id": 294339592, "title": "Rails, polymorphic association. Destroy with \"touch: true\", useless steps.", "url": "https://api.github.com/repos/rails/rails/issues/31891", "created_at": "2018-02-05 10:18:44", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363117900", "text": "Hey @johnunclesam I'm not sure exactly what problem you're seeing. Can you use [our test scripts to provide a test case](https://github.com/rails/rails/blob/master/guides/bug_report_templates/active_record_master.rb) that reproduces your issue? Thanks.", "created_at": "2018-02-05 15:26:16", "user": 1080678, "id": 363117900}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363610893", "text": "@eileencodes I think I know what he is trying to explain. Check my gist https://gist.github.com/noma4i/3034ac3776cdfea2730f2ca81dd3f836\r\n\r\nYou can see that rails from master has 6 queries overall for that test while 5.1.5.rc1 will use 7 sql queries generating one useless SELECT statement so my assert will pass on master while failing for 5.1.*\r\n\r\nflip `gem 'rails'` in my test suite to see the problem.", "created_at": "2018-02-07 00:13:34", "user": 210667, "id": 363610893}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363612004", "text": "@eileencodes I think he is trying to ask, what is the purpose of updating Mother's object by related EnjoyLevel objects just before Mother's object will be destroyed.\r\n\r\nFor example using his code:\r\n```\r\nmother = Mother.new\r\nenjoy_level = EnjoyLevel.create(mother_id: mother.id)\r\n\r\nmother.destroy\r\n# After we called destroy action:\r\n# 1. Rails will go to all the EnjoyLevel objects and destroy them, that belong to \r\n# that mother object because of `depend: :destroy` condition.\r\n# 2. Each destroy of EnjoyLevel object will do `touch` method to related mother's \r\n# model because of `belongs_to ..., touch: true' condition and will make a commit \r\n# to the database updating updated_at field of mother's model\r\n# 3. Mother model will be completely destroyed\r\n```\r\n\r\nSo in this case step 2 looks like a useless set of queries that can be omitted. ", "created_at": "2018-02-07 00:19:45", "user": 1730823, "id": 363612004}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n(Guidelines for creating a bug report are [available\r\nhere](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report))\r\n\r\n### Expected behavior\r\nTell us what should happen\r\n\r\n### Actual behavior\r\nTell us what happens instead\r\n\r\n### System configuration\r\n**Rails version**:\r\n\r\n**Ruby version**:\r\n", "labels": [], "number": 31890, "updated_at": "2018-02-05 09:27:39", "user": 12582335, "closed_at": "2018-02-05 09:27:39", "id": 294320467, "title": "new issue", "url": "https://api.github.com/repos/rails/rails/issues/31890", "created_at": "2018-02-05 09:15:33", "comments": [], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n(Guidelines for creating a bug report are [available\r\nhere](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report))\r\n\r\n### Expected behavior\r\nTell us what should happen\r\n\r\n### Actual behavior\r\nTell us what happens instead\r\n\r\n### System configuration\r\n**Rails version**:\r\n\r\n**Ruby version**:\r\n", "labels": [], "number": 31889, "updated_at": "2018-02-05 09:16:21", "user": 12582335, "closed_at": "2018-02-05 09:16:21", "id": 294319463, "title": "test", "url": "https://api.github.com/repos/rails/rails/issues/31889", "created_at": "2018-02-05 09:12:08", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363023743", "text": "just test", "created_at": "2018-02-05 09:13:37", "user": 12582335, "id": 363023743}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Use `serialize_entry` throughout and introduce `serialize_entries`.\r\n\r\nReferences #31886 ", "labels": [], "number": 31888, "updated_at": "2018-02-05 07:40:50", "user": 199, "closed_at": "2018-02-05 07:40:07", "id": 294292369, "title": "Redis cache store: consolidate serialization", "url": "https://api.github.com/repos/rails/rails/issues/31888", "created_at": "2018-02-05 07:04:42", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363003892", "text": "FF merge @ f9a8646d8150956524a72af9f85c832bbe84061b", "created_at": "2018-02-05 07:40:07", "user": 199, "id": 363003892}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n* configure rails to use redis cache, e.g.:\r\n\r\n```rails\r\nRails.application.configure do\r\n  ...\r\n  config.cache_store = :redis_cache_store\r\n  ...\r\nend\r\n```\r\n\r\n* attempt to write certain characters, e.g (in a rails console).:\r\n\r\n```rails\r\npry(main)> Rails.cache.write(\"não\", \"não\")\r\n```\r\n\r\n### Expected behavior\r\nThe key and content should be written to the cache successfully.\r\n\r\n### Actual behavior\r\nThe following error is raised:\r\n\r\n```\r\nEncoding::CompatibilityError: incompatible character encodings: UTF-8 and ASCII-8BIT\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 5.2.0.beta2\r\n\r\n**Ruby version**: ruby 2.3.1p112 (2016-04-26 revision 54768) [x86_64-darwin16]\r\n\r\nI *suppose* that it's the same bug that's come up before in other projects (e.g. https://github.com/sorentwo/readthis/issues/52) but I don't know well enough to be certain.\r\n", "labels": [], "number": 31887, "updated_at": "2018-02-05 23:36:12", "user": 1849176, "closed_at": "2018-02-05 23:36:12", "id": 294284456, "title": "Encoding::CompatibilityError", "url": "https://api.github.com/repos/rails/rails/issues/31887", "created_at": "2018-02-05 06:14:20", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363258357", "text": "Seems to be fixed in `5.2.0rc1` 🎉 ", "created_at": "2018-02-05 23:36:12", "user": 1849176, "id": 363258357}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Fixes https://github.com/rails/rails/issues/31884.\r\n\r\nBefore, values were incorrectly stored as strings like\r\n`\"#<ActiveSupport::Cache::Entry:0x007fd63671af48>\"`. So now they are stored correctly.\r\n\r\nI created a test with explicit `expires_in` as `nil` to test this code path https://github.com/rails/rails/blob/5d1999547d81edb07c0ce9149023b1bcd5de8a57/activesupport/lib/active_support/cache/redis_cache_store.rb#L361-L364 which was always avoided before by tests, because of `expires_in` here https://github.com/rails/rails/blob/5d1999547d81edb07c0ce9149023b1bcd5de8a57/activesupport/test/cache/stores/redis_cache_store_test.rb#L92", "labels": [], "number": 31886, "updated_at": "2018-02-05 06:42:26", "user": 5657035, "closed_at": "2018-02-05 06:42:26", "id": 294237872, "title": "Fix RedisCacheStore #write_multi to correctly store entries", "url": "https://api.github.com/repos/rails/rails/issues/31886", "created_at": "2018-02-04 22:36:34", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362946257", "text": "r? @schneems\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-04 22:36:45", "user": 7468109, "id": 362946257}], "assignees": [199, 199], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "constrains -> constraints", "labels": [], "number": 31885, "updated_at": "2018-02-05 02:58:41", "user": 7363250, "closed_at": "2018-02-05 00:42:46", "id": 294227121, "title": "Fix small typo in routing [ci skip]", "url": "https://api.github.com/repos/rails/rails/issues/31885", "created_at": "2018-02-04 20:21:48", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362936352", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-04 20:21:50", "user": 7468109, "id": 362936352}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362954659", "text": "constrains is correct", "created_at": "2018-02-05 00:42:46", "user": 1034, "id": 362954659}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362968943", "text": "hehe, thanks", "created_at": "2018-02-05 02:58:39", "user": 7363250, "id": 362968943}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n1. Create a new Rails 5.2.0.rc1 project.\r\n\r\n2. Add gems `hiredis` and `redis`.\r\n\r\n3. Add `redis_cache_store` to config/environments/development.rb.\r\n\r\n```ruby\r\nconfig.cache_store = :redis_cache_store, { driver: :hiredis, compress: true, timeout: 1 }\r\n```\r\n\r\n4. Enter console.\r\n\r\n```ruby\r\n2.5.0 :012 > Rails.cache\r\n => <#ActiveSupport::Cache::RedisCacheStore options={:namespace=>nil, :compress=>true, :compress_threshold=>1024, :expires_in=>nil, :race_condition_ttl=>nil} redis=#<Redis client v4.0.1 for redis://127.0.0.1:6379/0>>\r\n2.5.0 :013 > Rails.cache.fetch_multi(:key) do 'value' end\r\n => {:key=>\"value\"}\r\n2.5.0 :015 > Rails.cache.fetch_multi(:key) do 'value' end\r\n => {:key=>\"#<ActiveSupport::Cache::Entry:0x00007fc0f5e6f588>\"}\r\n```\r\n\r\n### Expected behavior\r\nExpectedly return `\"value\"`.\r\n\r\n### Actual behavior\r\nActually return `\"#<ActiveSupport::Cache::Entry:0x00007fc0f5e6f588>\"`.\r\n\r\n### System configuration\r\n**Rails version**: 5.2.0.rc1\r\n\r\n**Ruby version**: 2.5.0\r\n", "labels": [], "number": 31884, "updated_at": "2018-02-05 00:39:12", "user": 378625, "closed_at": "2018-02-05 00:39:12", "id": 294211352, "title": "RedisCacheStore fetch_multi writes incorrect values.", "url": "https://api.github.com/repos/rails/rails/issues/31884", "created_at": "2018-02-04 16:49:59", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362936735", "text": "/cc @jeremy", "created_at": "2018-02-04 20:26:49", "user": 94129, "id": 362936735}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362954390", "text": "Thanks for the report, @swordray! Fixed by #31886.", "created_at": "2018-02-05 00:39:12", "user": 199, "id": 362954390}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "I've reviewed \"Active Model Basics\" and \"Action View Overview\" guides\r\nand looks like they have good enough information and don't have errors.\r\nThis PR removes label 'work in progress' for these guides.\r\n\r\n[History for rails/guides/source/active_model_basics.md](https://github.com/rails/rails/commits/master/guides/source/active_model_basics.md)\r\n\r\n[History for rails/guides/source/action_view_overview.md](https://github.com/rails/rails/commits/master/guides/source/action_view_overview.md)", "labels": [], "number": 31883, "updated_at": "2018-02-04 16:56:32", "user": 6443532, "closed_at": "None", "id": 294206381, "title": "Remove label 'work in progress' for AM and AV guides", "url": "https://api.github.com/repos/rails/rails/issues/31883", "created_at": "2018-02-04 15:42:09", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362916342", "text": "r? @georgeclaghorn\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-04 15:42:17", "user": 7468109, "id": 362916342}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362921663", "text": "Just because they don't have errors and are readable doesn't mean they aren't still a work in progress.\r\n\r\n@fxn do you know what's missing from these guides? 😊", "created_at": "2018-02-04 16:56:32", "user": 350807, "id": 362921663}], "assignees": [94129, 94129], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "### Environment\r\n\r\n```\r\n$ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID: Debian\r\nDescription:    Debian GNU/Linux unstable (sid)\r\nRelease:        unstable\r\nCodename:       sid\r\n$ uname -a\r\nLinux genbu 4.14.0-3-amd64 #1 SMP Debian 4.14.13-1 (2018-01-14) x86_64 GNU/Linux\r\n$ ruby -v\r\nruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-linux]\r\n```\r\n### Actual reault\r\n\r\nFollowing error occured while running `rake guides:generate:html`.\r\n\r\n```\r\n$ bundle exec rake guides:generate:html\r\n/home/kenji/.rbenv/versions/2.5.0/bin/ruby rails_guides.rb\r\nGenerating 5_2_release_notes.md as 5_2_release_notes.html\r\nGenerating contributing_to_ruby_on_rails.md as contributing_to_ruby_on_rails.html\r\nGenerating form_helpers.md as form_helpers.html\r\nGenerating working_with_javascript_in_rails.md as working_with_javascript_in_rails.html\r\nGenerating debugging_rails_applications.md as debugging_rails_applications.html\r\nTraceback (most recent call last):\r\n        9: from rails_guides.rb:29:in `<main>'\r\n        8: from /home/kenji/ruby/rails/guides/rails_guides/generator.rb:39:in `generate'\r\n        7: from /home/kenji/ruby/rails/guides/rails_guides/generator.rb:91:in `generate_guides'\r\n        6: from /home/kenji/ruby/rails/guides/rails_guides/generator.rb:91:in `each'\r\n        5: from /home/kenji/ruby/rails/guides/rails_guides/generator.rb:93:in `block in generate_guides'\r\n        4: from /home/kenji/ruby/rails/guides/rails_guides/generator.rb:144:in `generate_guide'\r\n        3: from /home/kenji/ruby/rails/guides/rails_guides/generator.rb:144:in `open'\r\n        2: from /home/kenji/ruby/rails/guides/rails_guides/generator.rb:165:in `block in generate_guide'\r\n        1: from /home/kenji/ruby/rails/guides/rails_guides/markdown.rb:21:in `render'\r\n/home/kenji/ruby/rails/guides/rails_guides/markdown.rb:72:in `extract_raw_header_and_body': invalid byte sequence in US-ASCII (ArgumentError)\r\nrake aborted!\r\nCommand failed with status (1): [/home/kenji/.rbenv/versions/2.5.0/bin/ruby...]\r\n/home/kenji/ruby/rails/guides/Rakefile:24:in `block (3 levels) in <top (required)>'\r\n/home/kenji/.rbenv/versions/2.5.0/bin/bundle:23:in `load'\r\n/home/kenji/.rbenv/versions/2.5.0/bin/bundle:23:in `<main>'\r\nTasks: TOP => guides:generate:html\r\n(See full trace by running task with --trace)\r\n```\r\n### My investigation\r\n\r\nRuby does not set `Encoding.default_external` with non-existent locale such as `en_US.UTF-8` as original code expected.\r\nFor example,\r\n\r\n```\r\n$ LANG=ja_JP.UTF-8 ruby -v -e \"p Encoding.default_external\"\r\nruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-linux]\r\n$ LANG=C ruby -v -e \"p Encoding.default_external\"\r\nruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-linux]\r\n$ LANG=C.UTF-8 ruby -v -e \"p Encoding.default_external\"\r\nruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-linux]\r\n$ LANG=GB2312 ruby -v -e \"p Encoding.default_external\"\r\nruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-linux]\r\n$ LANG=en_US.UTF-8 ruby -v -e \"p Encoding.default_external\"\r\nruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-linux]\r\n```\r\n\r\nAvailable locales on my PC are following:\r\n\r\n```\r\n$ locale -a\r\nC\r\nC.UTF-8\r\nPOSIX\r\nja_JP.utf8\r\n```\r\n\r\n`en_US.UTF-8` does not exist.\r\n\r\nWe can specify external encoding and internal encoding via command line option as following:\r\n\r\n```\r\n$ LANG=en_US.UTF-8 ruby -v -Eutf-8:utf-8 -e \"p Encoding.default_external\"\r\nruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-linux]\r\n```\r\n\r\n### Expected result\r\n\r\nWe can run `rake guide:generate:html` successfully with any locale.", "labels": [], "number": 31882, "updated_at": "2018-02-04 14:11:31", "user": 33111, "closed_at": "None", "id": 294199683, "title": "Fix invalid byte sequence error without `en_US.UTF-8` environment while rake guides:generate:html", "url": "https://api.github.com/repos/rails/rails/issues/31882", "created_at": "2018-02-04 14:07:18", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362909277", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @georgeclaghorn (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-04 14:07:21", "user": 7468109, "id": 362909277}], "assignees": [94129, 94129], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nAdd a note on using `yarn autoclean`.\r\n\r\n### Other Information\r\n\r\n`yarn autoclean --init` creates `.yarnclean` including `assets` as for  [current stable version](https://github.com/yarnpkg/yarn/blob/v1.3.2/src/cli/commands/autoclean.js#L27).", "labels": [], "number": 31881, "updated_at": "2018-02-04 05:25:31", "user": 363938, "closed_at": "None", "id": 294171635, "title": "Update rails-ujs readme", "url": "https://api.github.com/repos/rails/rails/issues/31881", "created_at": "2018-02-04 05:25:29", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362882159", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @pixeltrix (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-04 05:25:31", "user": 7468109, "id": 362882159}], "assignees": [6321, 6321], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nBy including the source code in the published npm package, we enable activestorage users to ship smaller javascript bundles to visitors using modern browsers. (And it seems like there is already support from rails core members for doing precisely that: https://github.com/rails/webpacker/issues/887#issuecomment-334276744.)\r\n\r\nI've demonstrated this in this sample repository:\r\nhttps://github.com/rmacklin/activestorage-es2015-build-example\r\n\r\nIn that example, the bundle shrinks by 5K (24%).\r\n\r\nIn addition to allowing smaller bundles for those who ship untranspiled code to modern browsers, including the source code in the published package can be useful in other ways:\r\n\r\n1. Users can import individual modules rather than the whole library\r\n2. As a result of (1), users can also monkey patch individual parts of activestorage by importing the relevant module, modifying the exported object, and then importing the rest of activestorage (which would then use the patched object).\r\n\r\n### Other Information\r\n\r\nIn order to allow the source code to be depended on rather than the compiled code, we have to declare the external dependency on spark-md5 as a regular dependency, not a development dependency.\r\n\r\nThis means that even users who depend on the compiled code will have to download this package. However, spark-md5 is a small package (and may already be downloaded as a transitive dependency of another package), so this tradeoff seems worth it.", "labels": [], "number": 31880, "updated_at": "2018-02-07 22:43:04", "user": 1863540, "closed_at": "2018-02-06 17:09:09", "id": 294151924, "title": "Include source code in published activestorage npm package", "url": "https://api.github.com/repos/rails/rails/issues/31880", "created_at": "2018-02-03 22:48:56", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362861847", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @pixeltrix (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-03 22:48:58", "user": 7468109, "id": 362861847}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362861848", "text": "<img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20> **Warning** <img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20>\n\n* Pull requests are usually filed against the master branch for this repo, but this one is against 5-2-stable. Please double check that you specified the right target!", "created_at": "2018-02-03 22:48:58", "user": 7468109, "id": 362861848}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362862028", "text": "I did intend to target this to 5-2-stable because 5.2 (and activestorage) is not yet released and I think we should get this into the official 5.2 release. If this change is accepted, it will be easy to pull it into master (I'd be happy to open a separate PR for that, though I'm assuming all changes that make it into the official 5.2 release will be merged into master).", "created_at": "2018-02-03 22:52:09", "user": 1863540, "id": 362862028}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362862787", "text": "I'm not sure how @rails-bot picks reviewers, but @pixeltrix does not have any commits in activestorage, so I think @javan (who is specified as the [npm package's author](https://github.com/rails/rails/blob/v5.2.0.rc1/activestorage/package.json#L17)) may be a more appropriate reviewer.", "created_at": "2018-02-03 22:59:43", "user": 1863540, "id": 362862787}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362865686", "text": "The Travis failure is:\r\n```\r\nFailure:\r\nNestedThroughAssociationsTest#test_has_many_through_has_one_with_has_one_through_source_reflection_preload_via_joins [/home/travis/build/rails/rails/activerecord/test/cases/associations/nested_through_associations_test.rb:124]:\r\n2 instead of 1 queries were executed.\r\n```\r\nonly on ruby 2.2.8, so it seems unrelated (my changes do not touch activerecord, only activestorage, and they don't touch ruby code)", "created_at": "2018-02-03 23:30:15", "user": 1863540, "id": 362865686}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362922838", "text": "I'm OK with publishing the source files in the npm package, but I'd prefer to see them copied to a more convenient git-ignored location when releasing so you don't have to import `activestorage/app/javascript/activestorage` or [set up an alias](https://github.com/rmacklin/activestorage-es2015-build-example/blob/419230fce44736677d59bcb36e84f716d09e9c15/tasks/bundles.js#L90-L93).\r\n\r\n> In that example, the bundle shrinks by 5K (24%).\r\n\r\nThat's because you're compiling (less verbose) ES2015 instead of ES5, right?\r\n\r\n> I did intend to target this to 5-2-stable because 5.2 (and activestorage) is not yet released and I think we should get this into the official 5.2 release\r\n\r\nPlease file this against master and we'll backport as neccessary.", "created_at": "2018-02-04 17:13:25", "user": 5355, "id": 362922838}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363165656", "text": "> Please file this against master and we'll backport as neccessary.\r\n\r\nOk, sorry about that! I've rebased off master and updated the PR target branch. I left in the update to the changelog, but if this is going to be backported to 5.2, should I remove that commit and let the backport PR handle it?", "created_at": "2018-02-05 17:55:28", "user": 1863540, "id": 363165656}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363166730", "text": "> That's because you're compiling (less verbose) ES2015 instead of ES5, right?\r\n\r\nExactly. Module authors are encouraged to publish untranspiled code now because it allows developers to serve the untranspiled code to supporting browsers (which, these days, covers the majority of visitors). Not only do we get the benefits of reduced download and parse time, but now that we're shipping the native syntax (instead of transpiling it), the JS engines can apply optimizations for the native syntax.", "created_at": "2018-02-05 17:58:44", "user": 1863540, "id": 363166730}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363170678", "text": "> I'm OK with publishing the source files in the npm package, but I'd prefer to see them copied to a more convenient git-ignored location when releasing so you don't have to import `activestorage/app/javascript/activestorage` or [set up an alias](https://github.com/rmacklin/activestorage-es2015-build-example/blob/419230fce44736677d59bcb36e84f716d09e9c15/tasks/bundles.js#L90-L93).\r\n\r\nSounds good. I've pushed 9f9f77ec5600daccb642dc0c1df5cf4d1be6a536 which copies the files to a git-ignored `src` directory. Now the transpiled code can be imported from `activestorage`, and the source code can be imported from `activestorage/src`. Let me know if you'd prefer a different folder name - I just picked `src` because that's what's used in other packages I've been importing the source code from.", "created_at": "2018-02-05 18:11:17", "user": 1863540, "id": 363170678}, {"reactions": {"+1": [1863540]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363470390", "text": "Looks great! Please [squash your commits](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#squashing-commits) and then we're good to go.", "created_at": "2018-02-06 16:05:10", "user": 5355, "id": 363470390}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363477569", "text": "Commits have been squashed and the branch has been rebased off the head of master.", "created_at": "2018-02-06 16:23:06", "user": 1863540, "id": 363477569}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363493672", "text": "Thank you!", "created_at": "2018-02-06 17:09:14", "user": 5355, "id": 363493672}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363499379", "text": "Thanks very much for your help!\r\n\r\nAs far as getting this change into the official activestorage release in rails 5.2.0, what's the process around that? Anything I can help with?", "created_at": "2018-02-06 17:27:04", "user": 1863540, "id": 363499379}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363519432", "text": "Being more of an enhancement / feature than a bug fix, it may not be released until 5.2.1. It seems harmless enough to add to 5.2.0 though since it doesn't make any actual code changes. What do you think, @rafaelfranca? ", "created_at": "2018-02-06 18:31:18", "user": 5355, "id": 363519432}, {"reactions": {"hooray": [1863540, 5355]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363927915", "text": "I think it is fine to include. Just backported", "created_at": "2018-02-07 22:09:56", "user": 47848, "id": 363927915}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363935418", "text": "Awesome, thanks again for your help (and for your work on activestorage & the rest of rails)!", "created_at": "2018-02-07 22:38:27", "user": 1863540, "id": 363935418}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [73432, 10076, 201360]}, "text": "Right now in `/active_storage/service/disk_service.rb` we put `http://localhost:3000` by default and from documentation people have no idea if they can change the port. Only one way to understand it - open rails source code.\r\n\r\nIn my case, Puma started on port 5000 and ActiveStorage returns an error. This edit in default `storage.yml` at least will show that you can easily change the port from config.\r\n\r\nAlso I thought about approuch with `fetch`:\r\n\r\n```ruby\r\n# /active_storage/service/disk_service.rb\r\nclass Service::DiskService < Service\r\n  attr_reader :root, :host\r\n  DEFAULT_HOST = \"http://localhost:#{ENV.fetch('PORT')}\"\r\n\r\n  def initialize(root:, host: DEFAULT_HOST)\r\n    @root, @host = root, host\r\n  end\r\nend\r\n```\r\n\r\nBut this still don't make port option in `storage.yml` more obvious.\r\n\r\nThank you!", "labels": ["activestorage"], "number": 31879, "updated_at": "2018-02-11 08:18:48", "user": 1442465, "closed_at": "None", "id": 294137003, "title": "Show host in default storage.yml", "url": "https://api.github.com/repos/rails/rails/issues/31879", "created_at": "2018-02-03 19:09:54", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362845807", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @georgeclaghorn (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-03 19:09:57", "user": 7468109, "id": 362845807}], "assignees": [94129, 94129], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "correction to #31755 as per https://github.com/rails/rails/pull/31755#discussion_r165819798\r\n\r\n", "labels": [], "number": 31878, "updated_at": "2018-02-03 18:35:07", "user": 18395, "closed_at": "2018-02-03 18:35:07", "id": 294133712, "title": "Correct capitalization of \"Rails\" in guide text", "url": "https://api.github.com/repos/rails/rails/issues/31878", "created_at": "2018-02-03 18:26:19", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362842562", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-03 18:26:31", "user": 7468109, "id": 362842562}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nDo not attempt to find an inverse association for polymorphic associations. This fixes the regression I found in my own rails app when upgrading from Rails 5.1.4 to 5.2.0.rc1.\r\n\r\nSee #31876.\r\n\r\n### Other Information\r\n\r\nI'm not familiar enough with automatic inverse associations to know if disabling this for all polymorphic associations is a reasonable thing to do?\r\n\r\nThis is also my first attempt at contributing to Rails, so apologies in advance if I've done anything wrong here. I'd be happy to make any requested changes.", "labels": [], "number": 31877, "updated_at": "2018-02-25 20:15:23", "user": 4764, "closed_at": "2018-02-25 20:15:23", "id": 294133222, "title": "Do not attempt to find inverse for polymorphic associations.", "url": "https://api.github.com/repos/rails/rails/issues/31877", "created_at": "2018-02-03 18:19:29", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362842093", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @georgeclaghorn (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-03 18:19:40", "user": 7468109, "id": 362842093}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362906986", "text": "@kamipo Thank you for the feedback and guidance! I've made the suggested changes and also updated the CHANGELOG with a better description of the change.", "created_at": "2018-02-04 13:31:28", "user": 4764, "id": 362906986}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362916428", "text": "Can you squash your commits into one?", "created_at": "2018-02-04 15:43:30", "user": 12642, "id": 362916428}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362918625", "text": "> Do not attempt to find inverse for polymorphic associations\r\n\r\nThis feels like the same thing that lead to #28808 :confused:\r\n\r\n*Why* should we not attempt that? I understand that there's an issue, and avoiding the attempt is a way to avoid that (I don't think I understand enough to have a strong opinion on whether it's the *right* way)... but I think we could do with some further explanation of why we're disabling this, so future-me doesn't merge a change that reverses it.\r\n\r\nOn the surface, I don't immediately see a reason that a polymorphic belongs_to intrinsically can't have an inverse. (Unlike `:through`, say.)\r\n\r\nAm I missing something obvious, either about the change or the underlying implementation? \r\n\r\nI certainly agree that `Sponsor.reflect_on_association(:sponsor).inverse_of` should be nil (as it would be even if `:sponsor` were not polymorphic)... but when working with a specific instance, I thought (assumed?) we used that instance's class (so, we'd here seek a `:sponsors` association on the model of the object pointed to by the `sponsor` association). \r\n\r\nCan this test just use the existing `:sponsorable` association, btw? Is the name significant? I see no indication of that in the test or above discussion.", "created_at": "2018-02-04 16:13:33", "user": 1034, "id": 362918625}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362920903", "text": "@matthewd To answer your last question first: The name appears to be important. I've seen this issue when the class name and the polymorphic association are the \"same\". So, this is an issue:\r\n\r\n```\r\nclass Sponsor < ActiveRecord::Base\r\n  belongs_to :sponsor, polymorphic: true\r\nend\r\n```\r\n\r\nBut, this is not:\r\n\r\n```\r\nclass Sponsor < ActiveRecord::Base\r\n  belongs_to :thing, polymorphic: true\r\nend\r\n```\r\n\r\nIt does *feel* like this test is maybe too superficial and there might be a better test that could be written, but I don't think I understand the issue deeply enough to write that test, yet.\r\n\r\nCould you provide an example(s) of an inverse for a polymorphic `belongs_to`? Wouldn't there, potentially, be many inverses as the polymorphic `belongs_to` could hold many different types of models? Can we support multiple inverses? (please don't read this as combative or anything like that... I'm having trouble getting my head around this and those are honest questions)\r\n\r\nI'm open to attempting a better test / fix, but I might need a little direction to do so.", "created_at": "2018-02-04 16:45:31", "user": 4764, "id": 362920903}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362921786", "text": "@kamipo I fixed the indentation and squashed as requested.", "created_at": "2018-02-04 16:58:34", "user": 4764, "id": 362921786}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362923230", "text": "> Can this test just use the existing `:sponsorable` association, btw? Is the name significant? I see no indication of that in the test or above discussion.\r\n\r\nRight, currently the implementation of automatic finding inverse association is heuristic, it is depending on the class found from the association name.\r\n\r\nOur test code doesn't have `Sponsorable` AR class, so finding any class from `:sponsorable` is failed as expected.\r\nBut if the polymorphic association name is `:sponsor`, `Sponsor` class  and `:sponsor` association itself on the class is found, and current implementation (`valid_inverse_reflection?`) allow the found reflection on the same class.\r\n\r\nNow we treat `:foreign_key` as `INVALID_AUTOMATIC_INVERSE_OPTIONS` conservatively. The reason is that an association name do not match to right class for the case.\r\n\r\nSince automatic inverse association feature decide the only one inverse association, we may implement it even if polymorphic belongs_to association if inverse association exists only one in the future, but it can not decide by current implementation for now.", "created_at": "2018-02-04 17:18:52", "user": 12642, "id": 362923230}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362952363", "text": "Thanks both; I think I understand what's going on a bit better now. For a start, #28808 was about finding an inverse that *is* polymorphic, this is about finding an inverse *of* a polymorphic.\r\n\r\nI'll note that we do support an explicit inverse on polymorphic associations: \r\nhttps://github.com/rails/rails/blob/5d1999547d81edb07c0ce9149023b1bcd5de8a57/activerecord/lib/active_record/reflection.rb#L523-L531\r\n\r\nSo maybe we *could* (should?) attempt an `associated_class`-specific auto-inverse in future -- but right now that code path is `record`-agnostic, and even if we made that improvement, it would still be true that the reflection cannot know its inverse outside the context of a particular record. (Though now I think about it, does the reflection *ever* need to know its inverse outside that context, other than for existing tests? The only calls I see are from `AR::Associations::*`, which have the record.)\r\n\r\nSetting all of that aside, I think we can make the bad case fail more clearly: I offer that `AssociationReflection#klass` should raise if `polymorphic?`. We'll still want this new conditional to prevent the raise, of course.. but that takes some weight off its shoulders: the fundamental error is assuming a polymorphic reflection knows which class is on the other end.\r\n\r\nI do have one remaining question:\r\n\r\n> But if the polymorphic association name is :sponsor, Sponsor class and :sponsor association itself on the class is found, and current implementation (valid_inverse_reflection?) allow the found reflection on the same class.\r\n\r\nA `belongs_to` association can't possibly be the inverse of another `belongs_to` association, can it? Shouldn't something more general be preventing that particular mistake? AFAICS, for this test to legitimately make the \"assuming a polymorphic's name indicates the target class\" mistake, there would need to be a `has_one` or `has_many` association on the mistaken-target class whose name matches the source class.\r\n\r\n(As it's about the name matching *a* class, and not necessarily about it matching *this* class, I think the test would be clearer by avoiding the self-reference: to me that implies a specific detail that's not required -- even though it does increase the chances of finding a coincidental association with the right name.)", "created_at": "2018-02-05 00:11:37", "user": 1034, "id": 362952363}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362982879", "text": "> I think we can make the bad case fail more clearly: I offer that `AssociationReflection#klass` should raise if `polymorphic?`.\r\n\r\nThe problem that returning `klass` even if `polymorphic?` exists before #28808.\r\n\r\nhttps://github.com/rails/rails/blob/5d1999547d81edb07c0ce9149023b1bcd5de8a57/activerecord/test/models/tagging.rb#L3-L5\r\n\r\nThe `Taggable` module is constantized from `belongs_to :taggable, polymorphic: true`, and tested that polymorphic association with `counter_cache: true` doesn't fail even if `Taggable` is not AR like class.\r\n\r\n> A `belongs_to` association can't possibly be the inverse of another `belongs_to` association, can it? Shouldn't something more general be preventing that particular mistake?\r\n\r\nI agree that we can more improve the reflection implementation until Rails 6.0.\r\n\r\nWhen I first saw this issue, I tried to fix `valid_inverse_reflection?`. This issue is caused by a combination of several loose implementation.\r\n\r\n* finding automatic inverse association of polymorphic without context (caused by #28808)\r\n* returning `klass` even if `polymorphic?` (exists before #28808)\r\n* loose verification by `valid_inverse_reflection?` (exists before #28808)\r\n\r\nSince this is a regression caused by #28808 and I was going to backport this fix to 5-2-stable, I was thinking that it is better to do not attempt to automatically find the inverse of a polymorphic `belongs_to` association.\r\n\r\n> AFAICS, for this test to legitimately make the \"assuming a polymorphic's name indicates the target class\" mistake, there would need to be a `has_one` or `has_many` association on the mistaken-target class whose name matches the source class.\r\n\r\n> (As it's about the name matching a class, and not necessarily about it matching this class, I think the test would be clearer by avoiding the self-reference: to me that implies a specific detail that's not required -- even though it does increase the chances of finding a coincidental association with the right name.)\r\n\r\nOriginally the examples (https://github.com/rails/rails/pull/31877#discussion_r165833192) was thinking about a natural name that could actually happen.\r\n\r\nMaybe this may also happen with `has_one` or `has_many` as long as attempt to automatically find the inverse of a polymorphic `belongs_to` association, should we require test for `has_one` or `has_many` for approval?\r\nProbably we can change the example to reference another `belongs_to` polymorphic instead of self-reference `belongs_to` polymorphic at least.", "created_at": "2018-02-05 05:07:35", "user": 12642, "id": 362982879}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362987311", "text": "Assuming it does show the same problem, I think a test using `has_many` would be better, because that constructs an association that is otherwise valid. The current test works, but if we improve the loose verification, it will then be passing for a different reason (because a belongs_to can't inverse a belongs_to) instead of the one we want (because a polymorphic belongs_to shouldn't infer the referenced class); after that future change, this test would continue passing even if the main change here were reverted.\r\n\r\nI agree that we can look to improve the verification some time later: that's really unrelated to this issue... but that's also why I'd like to keep the test away from that situation.\r\n\r\nI think we can safely make `klass` raise if `polymorphic?` in 5.2 -- it's an internal logic error if it gets called (as you noted, this isn't the first time we've had such a problem). Any time a public API hits that exception, it would just be reporting an otherwise hidden [but still present] bug.", "created_at": "2018-02-05 05:43:16", "user": 1034, "id": 362987311}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nIgnore the (perhaps poor) naming choices for the moment:\r\n\r\n```\r\nclass Entity < ApplicationRecord\r\n  belongs_to :entity, polymorphic: true\r\nend\r\n```\r\n\r\nIn Rails 5.2.0.rc1 I receive this error:\r\n\r\n```\r\n> rails console\r\nLoading development environment (Rails 5.2.0.rc1)\r\n>> Entity.create(entity: User.last)\r\n  User Load (0.5ms)  SELECT  \"users\".* FROM \"users\" ORDER BY \"users\".\"id\" DESC LIMIT $1  [[\"LIMIT\", 1]]\r\nTraceback (most recent call last):\r\n       16: from activerecord (5.2.0.rc1) lib/active_record/inheritance.rb:66:in `new'\r\n       15: from activerecord (5.2.0.rc1) lib/active_record/core.rb:314:in `initialize'\r\n       14: from activemodel (5.2.0.rc1) lib/active_model/attribute_assignment.rb:35:in `assign_attributes'\r\n       13: from activerecord (5.2.0.rc1) lib/active_record/attribute_assignment.rb:28:in `_assign_attributes'\r\n       12: from activemodel (5.2.0.rc1) lib/active_model/attribute_assignment.rb:41:in `_assign_attributes'\r\n       11: from activemodel (5.2.0.rc1) lib/active_model/attribute_assignment.rb:41:in `each'\r\n       10: from activemodel (5.2.0.rc1) lib/active_model/attribute_assignment.rb:42:in `block in _assign_attributes'\r\n        9: from activemodel (5.2.0.rc1) lib/active_model/attribute_assignment.rb:49:in `_assign_attribute'\r\n        8: from activemodel (5.2.0.rc1) lib/active_model/attribute_assignment.rb:49:in `public_send'\r\n        7: from activerecord (5.2.0.rc1) lib/active_record/associations/builder/association.rb:116:in `entity='\r\n        6: from activerecord (5.2.0.rc1) lib/active_record/associations/singular_association.rb:17:in `writer'\r\n        5: from activerecord (5.2.0.rc1) lib/active_record/associations/belongs_to_association.rb:15:in `replace'\r\n        4: from activerecord (5.2.0.rc1) lib/active_record/associations/association.rb:101:in `set_inverse_instance'\r\n        3: from activerecord (5.2.0.rc1) lib/active_record/associations/belongs_to_association.rb:95:in `invertible_for?'\r\n        2: from activerecord (5.2.0.rc1) lib/active_record/associations/belongs_to_polymorphic_association.rb:24:in `inverse_reflection_for'\r\n        1: from activerecord (5.2.0.rc1) lib/active_record/reflection.rb:528:in `polymorphic_inverse_of'\r\nActiveRecord::InverseOfAssociationNotFoundError (Could not find the inverse association for entity (nil in User))\r\n```\r\n\r\nI do not have an inverse association in `User` (nor do I want one).\r\n\r\nUnder Rails 5.1.4 this association is working as expected.\r\n\r\nIf I change the name of the association from `:entity` to anything else (and rename the database columns), the association works correctly again under 5.2.0.rc1.\r\n\r\nIt seems as if the code looking for an inverse association for the `belongs_to :entity` is finding the `belongs_to` itself and proceeding with the expectation that `User` has an inverse association. \r\n\r\n### System configuration\r\n**Rails version**: 5.2.0.rc1\r\n\r\n**Ruby version**: 2.5.0\r\n", "labels": [], "number": 31876, "updated_at": "2018-02-25 20:15:23", "user": 4764, "closed_at": "2018-02-25 20:15:23", "id": 294126861, "title": "5.2.0.rc1 ActiveRecord polymorphic association regression", "url": "https://api.github.com/repos/rails/rails/issues/31876", "created_at": "2018-02-03 17:01:18", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362846741", "text": "I tried but couldn't reproduce the issue, can you please try to provide an executable reproduction script by using the information given in [this](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) page?", "created_at": "2018-02-03 19:21:31", "user": 12642, "id": 362846741}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362848912", "text": "@kamipo This should reproduce the issue: https://gist.github.com/eki/5a894cb7f3bcb4fbceaa803b963d9443", "created_at": "2018-02-03 19:50:16", "user": 4764, "id": 362848912}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "", "labels": [], "number": 31875, "updated_at": "2018-02-05 00:35:31", "user": 10352597, "closed_at": "2018-02-05 00:35:30", "id": 294126642, "title": "Add zettabytes and yottabytes methods", "url": "https://api.github.com/repos/rails/rails/issues/31875", "created_at": "2018-02-03 16:58:18", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362833654", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-03 16:58:21", "user": 7468109, "id": 362833654}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362843583", "text": "Can you add a CHANGELOG entry?", "created_at": "2018-02-03 18:40:20", "user": 12642, "id": 362843583}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362862389", "text": "Sure. 😄 ", "created_at": "2018-02-03 22:55:37", "user": 10352597, "id": 362862389}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362880362", "text": "Could you give an example of a situation where you want to use these methods?", "created_at": "2018-02-04 04:38:22", "user": 1034, "id": 362880362}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362953840", "text": "@mattbrictson I'm not using these methods at the moment, I just wanted to keep this core extensions up to date. 😄 ", "created_at": "2018-02-05 00:31:30", "user": 10352597, "id": 362953840}, {"reactions": {"+1": [10352597]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362954120", "text": "Okay, I think it'll be a while before we need these, thanks.", "created_at": "2018-02-05 00:35:30", "user": 1034, "id": 362954120}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nAs written, a block in the params filter list can only alter the mutable content of the value. It cannot wholesale replace it.\r\n\r\nThis enables a block in the params filter to be a pure function, returning the new value.\r\n\r\n### Other Information\r\n\r\nIt *does* change behavior. I had to alter a test.\r\n\r\nBefore I do any more work on this, I want to know if it is looked upon favorably and would be at all likely to be merged.\r\n\r\nThe change enables the following strategy to white-list, rather than black-list the params.\r\n\r\n`config/initializers/filter_parameter_logging.rb:`\r\n```ruby\r\nRails.application.config.filter_parameters << lambda { |key, value|\r\n  Logging::WhiteList.filter_param(key, value)\r\n}\r\n```\r\n\r\n`app/services/logging/white_list.rb (not a complete implementation):`\r\n```ruby\r\nmodule Logging\r\n  class WhiteList\r\n    class << self\r\n      def filter_param(key, value)\r\n        puts \"FILTER SAYS #{key} #{value}\"\r\n        # param_permitted?(key) ? value : '[FILTERED]'\r\n        '[FILTERED]'\r\n      end\r\n    end\r\n  end\r\nend\r\n```", "labels": [], "number": 31874, "updated_at": "2018-02-07 00:49:19", "user": 1066662, "closed_at": "2018-02-06 16:55:57", "id": 293980845, "title": "Enable block in params filter to return a replacement value", "url": "https://api.github.com/repos/rails/rails/issues/31874", "created_at": "2018-02-02 18:27:48", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362665872", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @eileencodes (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-02 18:27:51", "user": 7468109, "id": 362665872}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362668845", "text": "Here is the [query in the rails.core group](https://groups.google.com/d/msg/rubyonrails-core/1lBd16H8Ock/_XGEqzaiBQAJ)", "created_at": "2018-02-02 18:38:51", "user": 1066662, "id": 362668845}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362675304", "text": "Thank you for the pull request. If it alter the behavior, what will happen with already existing blocks when people is upgrading the application, they will all have to change their code? How would they know that the code need to be changed or not?", "created_at": "2018-02-02 19:02:40", "user": 47848, "id": 362675304}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362727381", "text": "Thank you for asking about how people are notified of this change.\r\n \r\nI think it will be part of the upgrade documentation: \"Do you use a Proc or lambda in your parameter filter? You must update the Proc to return the existing value or a new value.\"\r\n\r\nSomething like that. Given how limited the capability is, I don't think it is very common. But that is pure speculation on my part. I haven't found documentation for it. I had to read the code to find it.", "created_at": "2018-02-02 22:32:04", "user": 1066662, "id": 362727381}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362731007", "text": "There you go. I thought of a way to do it without breaking the tests.\r\n\r\nIf you think you'll commit it, I'll supply more tests.", "created_at": "2018-02-02 22:47:34", "user": 1066662, "id": 362731007}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362776752", "text": "Can't a block already achieve this with `value.replace`?", "created_at": "2018-02-03 03:50:49", "user": 1034, "id": 362776752}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362796103", "text": "`value.replace` would not be able to filter numbers in a JSON request.\r\n\r\nThe current implementation seems a bit strange to me. The rest of cases work for any value type, but blocks only for mutable values that you have to modify in place.", "created_at": "2018-02-03 10:23:49", "user": 3387, "id": 362796103}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362809595", "text": "The tricky part here is to decide what is the meaning of chaining multiple blocks.\r\n\r\nFirst, why do we support multiple blocks? So that you can configure filtering from different places, like from different gems. In that sense, I would expect a block that is not concerned with a particular key to return the value it got as is. Perhaps that value is already the mask.\r\n\r\nSeems suspicious to treat specially a falsey return value in such an arbitrary code in which falsey values may be present (from JSON requests, for example).\r\n\r\nSo, in that sense, I believe the code should just chain calls:\r\n\r\n```ruby\r\nblocks.each { |block| value = block.call(key, value) }\r\n```\r\n\r\nDo you see any drawback with that approach except for backwards incomptability?", "created_at": "2018-02-03 14:00:06", "user": 3387, "id": 362809595}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362815015", "text": "A backwards compatible solution would be to be able to pass an object that responds to `filter?`.\r\n\r\nThe code would be (off the top of my head):\r\n\r\n```ruby\r\nvalue = FILTERED if filters.any? { |filter| filter.filter?(key) }\r\n```\r\n\r\nThis interface, as the rest except blocks, is only concerned about the key. Also, the mask is the usual one as in the rest, not set by the user.\r\n\r\n(Don't like the cacophony of `filter.filter?`, but you get the idea.)", "created_at": "2018-02-03 14:37:03", "user": 3387, "id": 362815015}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363085044", "text": "The main problem with calling each block in place of chaining is that the change in value is still a side effect of one or more of the calls. The contract doesn't make any promises about ordering of the blocks. The semantics of multiple blocks is simply that every block gets a crack at replacing the value given key and value.\r\n\r\nTreating the block as a filter would break the test that operates by reversing the value, and make the power of this feature much more limited.\r\n\r\n@matthewd  Using String#replace actually works for my use case, but doesn't address the strangeness of modifying the value parameter as a side effect, nor enable replacing a numeric value with a string, as @fxn pointed out.", "created_at": "2018-02-05 13:31:12", "user": 1066662, "id": 363085044}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363088104", "text": "@wbreeze Today, the return value of the block is ignored. Whatever happens in that block has to be a side-effect.\r\n\r\nNow, _given_ that we are exploring changing the current behavior and take the return value into account, the next question is what to do with it. Your patch says: \"if the return value is falsey, use the current parameter value for logging\". My proposal says: \"log whatever the blocks decide by chaining the return values into arguments, whatever is the last returned value, that's the one\". Note that if any block sets the value to \"[FILTERED]\", then the rest are going to receive \"[FILTERED]\" as value.\r\n\r\nThe last idea is a totally different approach in which it is enough that one filter says the parameter has to be filtered to have it filtered. In that approach the value is ignored altogether (which I think is more coherent with the current interface).\r\n", "created_at": "2018-02-05 13:43:49", "user": 3387, "id": 363088104}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363093409", "text": "Hi @fxn Thank you for the comments. Yes, the last block to change the value \"wins\" and a block that changes the value changes the value seen by subsequent blocks. With no order defined, the only sane way to think of it is that one or the other of the blocks might return something different.\r\n\r\nI'm agnostic about whether to check for falsey and put in the original value. The advantage of doing so is that it doesn't break an existing test. Looking at the original commit https://github.com/rails/rails/pull/31874/commits/2e278cfe1ffacd72c886d4c1572608091287b8a3 you'll see that it originally worked as you suggest, and which test was broken.", "created_at": "2018-02-05 14:04:10", "user": 1066662, "id": 363093409}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363094076", "text": "I assume the `||` was the above-mentioned attempt to improve backwards compatibility. (I'm guessing, on the assumption that the block might reasonably be using `gsub!`, say.)\r\n\r\nI don't deny that it seems an awkward interface.. I just wanted to establish the exact limitations. If we're going to go through the pain of an interface change, we need to know exactly what limitations we're trying to overcome.\r\n\r\nIf the limitations are 1) it's awkward, 2) you can't hide JSON-submitted integers, 3) no really, mutating a string like that is really awkward... I'm pretty on the fence about fixing it. If it were easy, sure, but it seems like the fix would itself be awkward: we can't use a Proc, because that already has the above meaning, so we'd need a custom class as @fxn suggested. And that seems.. 😐 ", "created_at": "2018-02-05 14:06:47", "user": 1034, "id": 363094076}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363106983", "text": "I cannot imagine which is the use case for the current implementation of blocks, who is using that?\r\n\r\nA web application only dealing with strings could use it (and still the block return anything since there is no contract). BTW @wbreeze, it is true that generally speaking mutating and argument is bad practice, but in this particular case the value is duplicated in the caller, I guess precisely because mutating the object is the current contract for blocks.\r\n\r\nI'll work on this issue.", "created_at": "2018-02-05 14:51:29", "user": 3387, "id": 363106983}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363224185", "text": "I have written a possible way to open the API to generic filters in a backwards compatible way ([patch](https://github.com/rails/rails/compare/generic-parameters-filter)). That is untested, just typed in the editor as is, only to see how it could work.\r\n\r\nIt's no big deal, but honestly if the only use case we have is whitelisting, I am 👎 on adding it without more evidence of its usefulness.\r\n\r\nTwo things that could maybe be taken into account:\r\n\r\n* Knowing mature projects that whitelist for real. Possible, as @matthewd showed, if sensitive data is only found in strings (HTTP or JSON). Otherwise, it is an just an `AD::Request` monkeypatch away, a determined team concerned so much about this would have found it.\r\n\r\n* That there are other use cases worth this addition.\r\n\r\nLet's see what we find.", "created_at": "2018-02-05 21:17:26", "user": 3387, "id": 363224185}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363422748", "text": "Thank you both for taking the time to look at this. Not a mature project. No. We're just some little guys using Rails since forever. This client wants white listing, and that's what they get. We'll start with /_id\\Z/ and see where we end up. My open mind says it's reasonable to cut down the data exposure such that there's only one city to defend-- the database. However naivety is in my case history. You guys are far more skeptical.\r\n\r\nMy only worry is that our JSON API will trip on the not-a-string thing. I'm not sure what to do about that, other than hold on and see where you guys take this bus. If you decide to park it, we'll think of something.\r\n\r\nIf you do extend with something new, consider removing the param altogether, such that not even the name is in the log. Seems draconian, but one person's poison can be another's cure.", "created_at": "2018-02-06 13:32:07", "user": 1066662, "id": 363422748}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363489310", "text": "Let's tentatively close this, but please share your experience in the project. Depending on the how it goes we could reconsider, and maybe your feedback or blocking issues result in a slightly different extension point. Reality often wins over the blackboard :).\r\n\r\nAlso, if you find a roadblock that risks being able to fullfil those requirements don't worry, please write a followup here, we may come up with a quick patch or monkeypatch at least to workaround the situation.", "created_at": "2018-02-06 16:55:53", "user": 3387, "id": 363489310}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363617365", "text": "Thank you so much.", "created_at": "2018-02-07 00:49:19", "user": 1066662, "id": 363617365}], "assignees": [1034, 1034, 3387], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [525961]}, "text": "### Steps to reproduce\r\nUpgrading my Rails app from `5.2.0.beta2` to `5.2.0.rc1` and launching the Rails development console with `bin/rails c`.\r\n\r\n### Expected behavior\r\nIt should work just fine, as it was with the `5.2.0.beta2` version. 😄 \r\n\r\n### Actual behavior\r\n\r\n```\r\n/Users/Thibaud/.gem/ruby/2.4.3/gems/activerecord-5.2.0.rc1/lib/active_record/coders/yaml_column.rb:24:in `load': undefined method `new' for Representable::JSON:Module (NoMethodError)\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activerecord-5.2.0.rc1/lib/active_record/coders/yaml_column.rb:44:in `check_arity_of_constructor'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activerecord-5.2.0.rc1/lib/active_record/coders/yaml_column.rb:13:in `initialize'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activerecord-5.2.0.rc1/lib/active_record/store.rb:187:in `new'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activerecord-5.2.0.rc1/lib/active_record/store.rb:187:in `initialize'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activerecord-5.2.0.rc1/lib/active_record/store.rb:83:in `new'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activerecord-5.2.0.rc1/lib/active_record/store.rb:83:in `store'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activestorage-5.2.0.rc1/app/models/active_storage/blob.rb:22:in `<class:Blob>'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activestorage-5.2.0.rc1/app/models/active_storage/blob.rb:16:in `<main>'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:63:in `load'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:63:in `load'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:468:in `block in load_file'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:653:in `new_constants_in'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:467:in `load_file'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:365:in `block in require_or_load'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:37:in `block in load_interlock'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies/interlock.rb:14:in `block in loading'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/concurrency/share_lock.rb:151:in `exclusive'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies/interlock.rb:13:in `loading'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:37:in `load_interlock'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:348:in `require_or_load'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:502:in `load_missing_constant'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/active_support.rb:43:in `load_missing_constant'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:193:in `const_missing'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activestorage-5.2.0.rc1/lib/active_storage/engine.rb:79:in `block (2 levels) in <class:Engine>'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/callbacks.rb:426:in `instance_exec'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/callbacks.rb:426:in `block in make_lambda'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/callbacks.rb:198:in `block (2 levels) in halting'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/callbacks.rb:606:in `block (2 levels) in default_terminator'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/callbacks.rb:605:in `catch'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/callbacks.rb:605:in `block in default_terminator'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/callbacks.rb:199:in `block in halting'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/callbacks.rb:513:in `block in invoke_before'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/callbacks.rb:513:in `each'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/callbacks.rb:513:in `invoke_before'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/callbacks.rb:131:in `run_callbacks'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/reloader.rb:89:in `prepare!'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/railties-5.2.0.rc1/lib/rails/application/finisher.rb:63:in `block in <module:Finisher>'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/railties-5.2.0.rc1/lib/rails/initializable.rb:32:in `instance_exec'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/railties-5.2.0.rc1/lib/rails/initializable.rb:32:in `run'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/railties-5.2.0.rc1/lib/rails/initializable.rb:61:in `block in run_initializers'\r\n\tfrom /Users/Thibaud/.rubies/ruby-2.4.3/lib/ruby/2.4.0/tsort.rb:228:in `block in tsort_each'\r\n\tfrom /Users/Thibaud/.rubies/ruby-2.4.3/lib/ruby/2.4.0/tsort.rb:350:in `block (2 levels) in each_strongly_connected_component'\r\n\tfrom /Users/Thibaud/.rubies/ruby-2.4.3/lib/ruby/2.4.0/tsort.rb:431:in `each_strongly_connected_component_from'\r\n\tfrom /Users/Thibaud/.rubies/ruby-2.4.3/lib/ruby/2.4.0/tsort.rb:349:in `block in each_strongly_connected_component'\r\n\tfrom /Users/Thibaud/.rubies/ruby-2.4.3/lib/ruby/2.4.0/tsort.rb:347:in `each'\r\n\tfrom /Users/Thibaud/.rubies/ruby-2.4.3/lib/ruby/2.4.0/tsort.rb:347:in `call'\r\n\tfrom /Users/Thibaud/.rubies/ruby-2.4.3/lib/ruby/2.4.0/tsort.rb:347:in `each_strongly_connected_component'\r\n\tfrom /Users/Thibaud/.rubies/ruby-2.4.3/lib/ruby/2.4.0/tsort.rb:226:in `tsort_each'\r\n\tfrom /Users/Thibaud/.rubies/ruby-2.4.3/lib/ruby/2.4.0/tsort.rb:205:in `tsort_each'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/railties-5.2.0.rc1/lib/rails/initializable.rb:60:in `run_initializers'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/railties-5.2.0.rc1/lib/rails/application.rb:360:in `initialize!'\r\n\tfrom /Users/Thibaud/Codes/acp-admin/config/environment.rb:5:in `<main>'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:283:in `block in require'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:283:in `require'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/railties-5.2.0.rc1/lib/rails/application.rb:336:in `require_environment!'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/railties-5.2.0.rc1/lib/rails/command/actions.rb:18:in `require_application_and_environment!'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/railties-5.2.0.rc1/lib/rails/commands/console/console_command.rb:95:in `perform'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/thor-0.20.0/lib/thor/command.rb:27:in `run'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/thor-0.20.0/lib/thor/invocation.rb:126:in `invoke_command'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/thor-0.20.0/lib/thor.rb:387:in `dispatch'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/railties-5.2.0.rc1/lib/rails/command/base.rb:65:in `perform'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/railties-5.2.0.rc1/lib/rails/command.rb:46:in `invoke'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/railties-5.2.0.rc1/lib/rails/commands.rb:18:in `<main>'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:283:in `block in require'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n\tfrom /Users/Thibaud/.gem/ruby/2.4.3/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:283:in `require'\r\n\tfrom bin/rails:4:in `<main>'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 5.2.0.rc1\r\n**Ruby version**: 2.4.3", "labels": [], "number": 31873, "updated_at": "2018-03-01 09:19:40", "user": 1322, "closed_at": "2018-02-02 18:02:45", "id": 293965582, "title": "Rails 5.2.0.rc1 lib/active_record/coders/yaml_column.rb:24:in `load': undefined method `new' for Representable::JSON:Module (NoMethodError)", "url": "https://api.github.com/repos/rails/rails/issues/31873", "created_at": "2018-02-02 17:31:46", "comments": [{"reactions": {"+1": [19265077]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362659227", "text": "Thank you for the report. Fixed in https://github.com/rails/rails/pull/31855 already present in the 5-2-stable branch.", "created_at": "2018-02-02 18:02:45", "user": 47848, "id": 362659227}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362694498", "text": "Awesome, thanks @rafaelfranca! 💌  ", "created_at": "2018-02-02 20:14:56", "user": 1322, "id": 362694498}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/369528298", "text": "Hi; not a big deal but while searching for this error, landed here\r\nAm getting the very same error while running `5.2.0.beta2` with ruby `2.5.0`, standard web browser visit in development, and in the console. It happens randomly, some browser refresh and it starts being okay again; then fails again later with the same error, and so on\r\n\r\nMay I ask you to tell me how to grab the 5-2-stable version ?", "created_at": "2018-03-01 09:17:40", "user": 7711, "id": 369528298}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nWe're seeing issues using :exponentially_longer where failures in downstream systems are causing a [thundering herd](https://en.wikipedia.org/wiki/Thundering_herd_problem) effect.  A great many jobs fail, they all get enqueued to try again in a static interval and bring down the downstream system yet again.  This repeats until the retry limit is exhausted.\r\n\r\nWe've gotten around this using a custom `wait` block but since exponential backoff with randomness is builtin to some adapters, like [Sidekiq](https://github.com/mperham/sidekiq/issues/480), I'm proposing to have it baked into to :exponentially_longer.\r\n\r\n", "labels": [], "number": 31872, "updated_at": "2018-03-13 02:59:35", "user": 5561166, "closed_at": "None", "id": 293956330, "title": "Add Randomness to :exponentially_longer", "url": "https://api.github.com/repos/rails/rails/issues/31872", "created_at": "2018-02-02 17:00:35", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362643198", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @sgrif (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-02 17:00:38", "user": 7468109, "id": 362643198}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364147553", "text": "@jeremy I pushed up https://github.com/rails/rails/pull/31872/commits/5d900e995fc0a31356687cbe68618cb2f948b14b.  Do you mind taking a look and letting me know if this is the calculation/API changes you were suggesting?  \r\n\r\n> Desirable for standard :wait as well\r\n\r\nI'm trying to translate this to the code, are you suggesting we add jitter when a user passes in an `Integer` or `ActiveSupport::Duration` to `retry_on`? \r\n\r\nI still need to update the changelog and comments for the new `:jitter` option but I wanted your 👀 on this before I did that.", "created_at": "2018-02-08 15:29:54", "user": 5561166, "id": 364147553}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/372045556", "text": "@jeremy - apologies for the ping but just wanted to get some eyes on this when you have time.  Thanks!", "created_at": "2018-03-10 17:09:11", "user": 5561166, "id": 372045556}, {"reactions": {"+1": [5561166]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/372530648", "text": "> I'm trying to translate this to the code, are you suggesting we add jitter when a user passes in an Integer or ActiveSupport::Duration to retry_on?\r\n\r\nYep! ", "created_at": "2018-03-13 02:59:35", "user": 199, "id": 372530648}], "assignees": [1529387, 1529387], "state": "open", "is-pull-request": true}
{"reactions": {"+1": [309161]}, "text": "### Summary\r\n\r\nCurrently all ActiveStorage blobs are located in the \"root directory\" of the S3 bucket. This makes manual inspection of the S3 bucket very hard when there already are existing objects not belonging to ActiveStorage.\r\n\r\n### Other Information\r\n\r\nMaybe this cluttering is not a problem for everyone, but most setups I came across have only one S3 bucket per environment (production, staging) and not an entire bucket dedicated to ActiveStorage.\r\n\r\nI [sought feedback](https://groups.google.com/forum/#!topic/rubyonrails-core/t3FPqfc2AB8) on the Rails Core group, but received no response (at least the post had most \"views\" of the past half year 🙃) Since no one was willing to jump in, I thought I'd show some code to receive feedback. I'd be happy for a \"no\" as well, as long as I learn why :)\r\n\r\nPS: I was not sure whether the variable should be called `prefix` or `namespace` but that's up to code review. The ActiveStorage tests pass locally. I have not run the entire suite yet, I'll let Travis do that for me.\r\n\r\nThank you Rails Team, you're my heroes.", "labels": [], "number": 31871, "updated_at": "2018-02-27 20:34:29", "user": 11441, "closed_at": "2018-02-02 16:26:09", "id": 293932858, "title": "Namespacing prefix for ActiveStorage S3 Service", "url": "https://api.github.com/repos/rails/rails/issues/31871", "created_at": "2018-02-02 15:50:33", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362633576", "text": "> Maybe this cluttering is not a problem for everyone, but most setups I came across have only one S3 bucket per environment (production, staging) and not an entire bucket dedicated to ActiveStorage.\r\n\r\nYou’re intended to create a bucket for Active Storage to use exclusively. I’ve yet to hear a good reason why that’s not feasible.\r\n\r\n(If we did this, we’d do it for all services and not just one.)", "created_at": "2018-02-02 16:26:09", "user": 94129, "id": 362633576}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362641058", "text": "Thank you for clarifying this! (Also for future developers wondering about this).\r\n\r\nI really thought a dedicated bucket was not obvious. But I can agree that less code complexity is worth the infrastructure complexity.\r\n\r\nThank you for the hard work you're putting into ActiveStorage.", "created_at": "2018-02-02 16:52:18", "user": 11441, "id": 362641058}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/369011260", "text": "> You’re intended to create a bucket for Active Storage to use exclusively. I’ve yet to hear a good reason why that’s not feasible.\r\n\r\nAWS accounts are limited to 100 buckets, so in a large company like the one I work for buckets can become scarce resources. I think that might be a pretty good reason?\r\n\r\nI agree with keeping config options to a minimum, but using prefixes is quite a common pattern when dealing with storage providers. The AWS SDK supports various prefix-based operations, and even ActiveStorage already has a delete_prefixed method.\r\n\r\n@georgeclaghorn Is there a downside you're looking to avoid besides the addition of a config option?", "created_at": "2018-02-27 20:14:50", "user": 3600, "id": 369011260}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "check the gist => https://gist.github.com/nachokb/7d9763e8fadbe6286383e813f79fcadc\r\n\r\n### Steps to reproduce\r\n\r\n1. have a model with \r\n    1. an optional column and\r\n    1. an accessor which computes it when it's blank (e.g. `StudentClass#total_count` is either the explicit value of that column or it's computed by summing other values);\r\n1. add a numericality validator (with `allow_blank: true`)\r\n1. assign an empty string `''` to that column\r\n\r\n### Expected behavior\r\n\r\n1. the model should behave exactly like it is when assigning `nil` to that column:\r\n    1. particularly, it shouldn't trigger any validation error (because of `allow_blank: true`)\r\n\r\n### Actual behavior\r\n\r\nThe model adds a \"is not a number\" validation error;\r\n\r\n### System configuration\r\n**Rails version**:\r\n\r\n1. Rails 4.1.8 and 4.1.16: works as expected\r\n1. Rails 4.2.9 and 4.2.10: fails (adds \"is not a number\" error)\r\n1. Rails 5.1.4 & 5.2.0.rc1: fails and also throws weird `undefined method 'test_total_can_be_blank'` error\r\n\r\n**Ruby version**: tested all Rails versions on Ruby 2.1, 2.2, 2.3 and 2.4 [*]. Behavior is exactly the same.\r\n\r\n[*] with the exception of Rails 5+ on Ruby 2.1 (which is unsupported and fails when installing rack).\r\n", "labels": [], "number": 31870, "updated_at": "2018-02-06 23:27:33", "user": 17967, "closed_at": "2018-02-06 23:27:32", "id": 293773805, "title": "numericality validator with custom getter adds an error when assigned blank value", "url": "https://api.github.com/repos/rails/rails/issues/31870", "created_at": "2018-02-02 04:59:57", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363464424", "text": "Looks like you should use a custom validation (`validate ....`) for overriden getter.\r\nRelated https://github.com/rails/rails/issues/29574.", "created_at": "2018-02-06 15:48:01", "user": 5657035, "id": 363464424}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363507174", "text": "@fatkodima I'm not defending the particular usage here (overriding a getter is hairy indeed).\r\n\r\nWhat I think I find incorrect is \r\n\r\n1. that it behaves differently whether I assign `nil` or `''`. Particularly b/c 90% of the time it will be assigned from parameters;\r\n1. also, that this has changed and not been documented (AFAICT);\r\n\r\nIt only happens when overriding the getter, but I think *that is incidental*. I'll keep debugging it later though.\r\n\r\nThanks!", "created_at": "2018-02-06 17:50:59", "user": 17967, "id": 363507174}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363601475", "text": "I now believe that the problem is a little more subtle.\r\n\r\n1. [EachValidator#validate](https://github.com/rails/rails/blob/master/activemodel/lib/active_model/validator.rb#L150) uses `#read_attribute_for_validation` (which is just an alias for `#send`) to implement `allow_blank`;\r\n1. [NumericalityValidator#validate_each](https://github.com/rails/rails/blob/master/activemodel/lib/active_model/validations/numericality.rb#L22) uses `#XYZ_before_type_cast` instead to do the validation;\r\n\r\nThus, assigning a blank string to an attribute with a getter jumps the blank control, but the validation sees `''`.\r\n\r\nThis app is buggy, because validations historically respected overriden getters, and _this_ validation is trying to validate not the getter but the value set by the user (ie. it will never be blank, even if the user didn't set it, because it's getting computed in that case).\r\n\r\nBUT, it is still a change from prior versions, and thus maybe we should document it somewhere? Maybe making it clear that\r\n\r\n> if you override a getter, make sure `#XYZ_before_type_cast` and `#read_attribute_for_validation` behave consistently with your changes\r\n\r\nI'm closing this issue because the new behavior _is the correct one_.", "created_at": "2018-02-06 23:27:32", "user": 17967, "id": 363601475}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Remove superfluous repetition and place them in a common section. [ci skip]\r\n\r\n", "labels": [], "number": 31869, "updated_at": "2018-03-22 13:34:29", "user": 15097447, "closed_at": "2018-03-21 22:12:10", "id": 293732149, "title": "[ci skip] Update Action Mailer Documentation", "url": "https://api.github.com/repos/rails/rails/issues/31869", "created_at": "2018-02-02 00:25:47", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362446915", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-02 00:25:49", "user": 7468109, "id": 362446915}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "I'm not sure cause, but due to the influence of `gem clean`, the expected　gem seems not to be installed correctly.\r\nIn order to avoid a test failure due to this, I fixed that `gem clean` not be executed.\r\nRef: travis-ci/travis-ci#2518\r\n", "labels": [], "number": 31868, "updated_at": "2018-02-02 21:50:15", "user": 987638, "closed_at": "2018-02-02 15:23:58", "id": 293726219, "title": "Fix build failures on Travis", "url": "https://api.github.com/repos/rails/rails/issues/31868", "created_at": "2018-02-01 23:53:29", "comments": [], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [451510]}, "text": "### Steps to reproduce\r\n\r\nConfigure a form with a checkbox field where checked_value = \"0\" and unchecked_value = \"1\" (inverting the defaults) and a method (here :bad on model Dog) that returns a boolean value, like so:\r\n\r\n```\r\n<%= form_for @dog, invoice, index: nil do |form| %>\r\n   Dogs who are good:\r\n  <%= f.check_box(:bad,  {}, \"0\", \"1\") %>\r\n<% end %>\r\n```\r\n\r\n### Expected behavior\r\nWhen `dog.bad = true`, the box should be unchecked.\r\nWhen `dog.bad = false`, the box should be checked.\r\n\r\n### Actual behavior\r\nThe opposite:\r\nWhen `dog.bad = true`, the box is checked.\r\nWhen `dog.bad = false`, the box is unchecked.\r\n\r\n### System configuration\r\n**Rails version**:\r\n5.1.4\r\n\r\n**Ruby version**:\r\nruby 2.5.0p0\r\n\r\nI've targeted the unexpected behavior to within the `checked?` method of ActionView::Helpers::Tags::CheckBox. Here's a screenshot showing the code and current behavior:\r\n\r\n![screen shot 2018-02-01 at 1 38 05 pm](https://user-images.githubusercontent.com/3675092/35705703-0ff82dcc-0758-11e8-8489-58bc19a4cab4.png)\r\n\r\n", "labels": [], "number": 31867, "updated_at": "2018-02-01 22:52:01", "user": 3675092, "closed_at": "2018-02-01 22:14:01", "id": 293699433, "title": "ActionView's CheckBox incorrectly calculates 'checked' property on inverted check values", "url": "https://api.github.com/repos/rails/rails/issues/31867", "created_at": "2018-02-01 22:01:41", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362419056", "text": "But why the checked value are `\"0\"` and `\"1\"` and not `true`, `false`?", "created_at": "2018-02-01 22:10:24", "user": 47848, "id": 362419056}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362419989", "text": "If you know you value is a boolean you need to pass booleans as the checked value. Let me know if that also doesn't work so I can reopen this issue. thanks", "created_at": "2018-02-01 22:14:01", "user": 47848, "id": 362419989}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362420034", "text": "The default checked value is \"1\" and the default unchecked value is \"0\", so seems like a reasonable expectation? And at the least, I'd consider changing those default values.\r\n\r\n![screen shot 2018-02-01 at 2 13 45 pm](https://user-images.githubusercontent.com/3675092/35706315-21dcf304-075a-11e8-840e-1e744604bfaa.png)\r\n", "created_at": "2018-02-01 22:14:13", "user": 3675092, "id": 362420034}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362421169", "text": "The default are strings to when the value is also a string or an integer, but if your value is a boolean you can't use strings because any string evaluates to `true` in ruby.", "created_at": "2018-02-01 22:18:48", "user": 47848, "id": 362421169}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362422832", "text": "Yeah, I understand that. I'm suggesting if not supporting the reversal of those arguments that they should be changed as the defaults (right now the defaults are both strings, too). It's confusing until you dig down where I did in the code (screenshot above). The current interface suggests that the reversal of the defaults would be fine.\r\n\r\nI'm no longer using this on my project, but I do think it's a bug and at the least the usage should be clarified by better defaults, if not supported. But, I'm disengaging. Thanks.", "created_at": "2018-02-01 22:25:50", "user": 3675092, "id": 362422832}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362429021", "text": "That reversal of those argument are supported now, but the type or your attribute needs to be a string.\r\n\r\nI agree the default value being strings is weird, and I agree it is confusing but changing that default to booleans will break a lot of code, so we can't do that.", "created_at": "2018-02-01 22:52:01", "user": 47848, "id": 362429021}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "This was merged and then reverted due to a bug for `Redis::Distributed` in https://github.com/rails/rails/pull/31447.\r\n\r\nI changed implementation to also match `MemCacheStore`'s pool implementation for sharded data and added missing test.\r\nAlso looks like this will have problems with already instantiated redis object, passed from user, which we obviously cannot use within connection pool to instantiate new redis objects from it. So some warning or error should be raised? \r\n\r\nCan you @georgeclaghorn and @rafaelfranca please review once again?", "labels": [], "number": 31866, "updated_at": "2018-02-14 23:26:05", "user": 5657035, "closed_at": "2018-02-14 23:26:05", "id": 293698801, "title": "Add support for connection pooling on RedisCacheStore", "url": "https://api.github.com/repos/rails/rails/issues/31866", "created_at": "2018-02-01 21:59:34", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362416164", "text": "r? @georgeclaghorn\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-01 21:59:36", "user": 7468109, "id": 362416164}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nAfter running `rails new rails_playground --webpack` I'm getting this error:\r\n\r\n<details>\r\n\r\n```\r\nUsing --database=postgresql from /Users/yurii/.railsrc\r\n      create  \r\n      create  README.md\r\n      create  Rakefile\r\n      create  .ruby-version\r\n      create  config.ru\r\n      create  .gitignore\r\n      create  Gemfile\r\n         run  git init from \".\"\r\nInitialized empty Git repository in /Users/yurii/Developer/yuriihabrusiev/rails_playground/.git/\r\n      create  package.json\r\n      create  app\r\n      create  app/assets/config/manifest.js\r\n      create  app/assets/javascripts/application.js\r\n      create  app/assets/javascripts/cable.js\r\n      create  app/assets/stylesheets/application.css\r\n      create  app/channels/application_cable/channel.rb\r\n      create  app/channels/application_cable/connection.rb\r\n      create  app/controllers/application_controller.rb\r\n      create  app/helpers/application_helper.rb\r\n      create  app/jobs/application_job.rb\r\n      create  app/mailers/application_mailer.rb\r\n      create  app/models/application_record.rb\r\n      create  app/views/layouts/application.html.erb\r\n      create  app/views/layouts/mailer.html.erb\r\n      create  app/views/layouts/mailer.text.erb\r\n      create  app/assets/images/.keep\r\n      create  app/assets/javascripts/channels\r\n      create  app/assets/javascripts/channels/.keep\r\n      create  app/controllers/concerns/.keep\r\n      create  app/models/concerns/.keep\r\n      create  bin\r\n      create  bin/bundle\r\n      create  bin/rails\r\n      create  bin/rake\r\n      create  bin/setup\r\n      create  bin/update\r\n      create  bin/yarn\r\n      create  config\r\n      create  config/routes.rb\r\n      create  config/application.rb\r\n      create  config/environment.rb\r\n      create  config/cable.yml\r\n      create  config/puma.rb\r\n      create  config/spring.rb\r\n      create  config/storage.yml\r\n      create  config/environments\r\n      create  config/environments/development.rb\r\n      create  config/environments/production.rb\r\n      create  config/environments/test.rb\r\n      create  config/initializers\r\n      create  config/initializers/application_controller_renderer.rb\r\n      create  config/initializers/assets.rb\r\n      create  config/initializers/backtrace_silencers.rb\r\n      create  config/initializers/content_security_policy.rb\r\n      create  config/initializers/cookies_serializer.rb\r\n      create  config/initializers/cors.rb\r\n      create  config/initializers/filter_parameter_logging.rb\r\n      create  config/initializers/inflections.rb\r\n      create  config/initializers/mime_types.rb\r\n      create  config/initializers/new_framework_defaults_5_2.rb\r\n      create  config/initializers/wrap_parameters.rb\r\n      create  config/locales\r\n      create  config/locales/en.yml\r\n      create  config/master.key\r\n      append  .gitignore\r\n      create  config/boot.rb\r\n      create  config/database.yml\r\n      create  db\r\n      create  db/seeds.rb\r\n      create  lib\r\n      create  lib/tasks\r\n      create  lib/tasks/.keep\r\n      create  lib/assets\r\n      create  lib/assets/.keep\r\n      create  log\r\n      create  log/.keep\r\n      create  public\r\n      create  public/404.html\r\n      create  public/422.html\r\n      create  public/500.html\r\n      create  public/apple-touch-icon-precomposed.png\r\n      create  public/apple-touch-icon.png\r\n      create  public/favicon.ico\r\n      create  public/robots.txt\r\n      create  tmp\r\n      create  tmp/.keep\r\n      create  tmp/cache\r\n      create  tmp/cache/assets\r\n      create  vendor\r\n      create  vendor/.keep\r\n      create  test/fixtures\r\n      create  test/fixtures/.keep\r\n      create  test/fixtures/files\r\n      create  test/fixtures/files/.keep\r\n      create  test/controllers\r\n      create  test/controllers/.keep\r\n      create  test/mailers\r\n      create  test/mailers/.keep\r\n      create  test/models\r\n      create  test/models/.keep\r\n      create  test/helpers\r\n      create  test/helpers/.keep\r\n      create  test/integration\r\n      create  test/integration/.keep\r\n      create  test/test_helper.rb\r\n      create  test/system\r\n      create  test/system/.keep\r\n      create  test/application_system_test_case.rb\r\n      create  storage\r\n      create  storage/.keep\r\n      create  tmp/storage\r\n      create  tmp/storage/.keep\r\n      remove  config/initializers/cors.rb\r\n      remove  config/initializers/new_framework_defaults_5_2.rb\r\n         run  bundle install\r\nThe dependency tzinfo-data (>= 0) will be unused by any of the platforms Bundler is installing for. Bundler is installing for ruby but the dependency is only for x86-mingw32, x86-mswin32, x64-mingw32, java. To add those platforms to the bundle, run `bundle lock --add-platform x86-mingw32 x86-mswin32 x64-mingw32 java`.\r\nFetching gem metadata from https://rubygems.org/.........\r\nFetching gem metadata from https://rubygems.org/.\r\nResolving dependencies....\r\nUsing rake 12.3.0\r\nUsing concurrent-ruby 1.0.5\r\nUsing i18n 0.9.3\r\nUsing minitest 5.11.3\r\nUsing thread_safe 0.3.6\r\nUsing tzinfo 1.2.4\r\nUsing activesupport 5.2.0.rc1\r\nUsing builder 3.2.3\r\nUsing erubi 1.7.0\r\nUsing mini_portile2 2.3.0\r\nUsing nokogiri 1.8.2\r\nUsing rails-dom-testing 2.0.3\r\nUsing crass 1.0.3\r\nUsing loofah 2.1.1\r\nUsing rails-html-sanitizer 1.0.3\r\nUsing actionview 5.2.0.rc1\r\nUsing rack 2.0.4\r\nUsing rack-test 0.8.2\r\nUsing actionpack 5.2.0.rc1\r\nUsing nio4r 2.2.0\r\nUsing websocket-extensions 0.1.3\r\nUsing websocket-driver 0.7.0\r\nUsing actioncable 5.2.0.rc1\r\nUsing globalid 0.4.1\r\nUsing activejob 5.2.0.rc1\r\nUsing mini_mime 1.0.0\r\nUsing mail 2.7.0\r\nUsing actionmailer 5.2.0.rc1\r\nUsing activemodel 5.2.0.rc1\r\nUsing arel 9.0.0\r\nUsing activerecord 5.2.0.rc1\r\nUsing mimemagic 0.3.2\r\nUsing marcel 0.3.1\r\nUsing activestorage 5.2.0.rc1\r\nUsing public_suffix 3.0.1\r\nUsing addressable 2.5.2\r\nUsing io-like 0.3.0\r\nUsing archive-zip 0.7.0\r\nUsing bindex 0.5.0\r\nUsing msgpack 1.2.2\r\nUsing bootsnap 1.1.8\r\nUsing bundler 1.16.1\r\nUsing byebug 10.0.0\r\nUsing xpath 3.0.0\r\nUsing capybara 2.17.0\r\nUsing ffi 1.9.18\r\nUsing childprocess 0.8.0\r\nUsing chromedriver-helper 1.1.0\r\nUsing coffee-script-source 1.12.2\r\nUsing execjs 2.7.0\r\nUsing coffee-script 2.4.1\r\nUsing method_source 0.9.0\r\nUsing thor 0.20.0\r\nUsing railties 5.2.0.rc1\r\nUsing coffee-rails 4.2.2\r\nUsing multi_json 1.13.1\r\nUsing jbuilder 2.7.0\r\nUsing rb-fsevent 0.10.2\r\nUsing rb-inotify 0.9.10\r\nUsing ruby_dep 1.5.0\r\nUsing listen 3.1.5\r\nUsing pg 1.0.0\r\nUsing puma 3.11.2\r\nUsing rack-proxy 0.6.3\r\nUsing sprockets 3.7.1\r\nUsing sprockets-rails 3.2.1\r\nUsing rails 5.2.0.rc1\r\nUsing rubyzip 1.2.1\r\nUsing sass-listen 4.0.0\r\nUsing sass 3.5.5\r\nUsing tilt 2.0.8\r\nUsing sass-rails 5.0.7\r\nUsing selenium-webdriver 3.8.0\r\nUsing spring 2.0.2\r\nUsing spring-watcher-listen 2.0.1\r\nUsing turbolinks-source 5.1.0\r\nUsing turbolinks 5.1.0\r\nUsing uglifier 4.1.5\r\nUsing web-console 3.5.1\r\nUsing webpacker 3.2.1\r\nBundle complete! 19 Gemfile dependencies, 80 gems now installed.\r\nUse `bundle info [gemname]` to see where a bundled gem is installed.\r\n       rails  webpacker:install\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/set.rb:625: warning: already initialized constant Set::InspectKey\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/set.rb:625: warning: previous definition of InspectKey was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/pathname.rb:20: warning: already initialized constant Pathname::TO_PATH\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/pathname.rb:20: warning: previous definition of TO_PATH was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/pathname.rb:22: warning: already initialized constant Pathname::SAME_PATHS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/pathname.rb:22: warning: previous definition of SAME_PATHS was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/pathname.rb:34: warning: already initialized constant Pathname::SEPARATOR_LIST\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/pathname.rb:34: warning: previous definition of SEPARATOR_LIST was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/pathname.rb:35: warning: already initialized constant Pathname::SEPARATOR_PAT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/pathname.rb:35: warning: previous definition of SEPARATOR_PAT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/rbconfig.rb:16: warning: already initialized constant RbConfig::TOPDIR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/rbconfig.rb:16: warning: previous definition of TOPDIR was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/rbconfig.rb:20: warning: already initialized constant RbConfig::CONFIG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/rbconfig.rb:20: warning: previous definition of CONFIG was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/rbconfig.rb:270: warning: already initialized constant RbConfig::MAKEFILE_CONFIG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/rbconfig.rb:270: warning: previous definition of MAKEFILE_CONFIG was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:90: warning: already initialized constant FileUtils::VERSION\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:90: warning: previous definition of VERSION was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_AIO_LISTIO_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_AIO_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_AIO_PRIO_DELTA_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_ARG_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_ATEXIT_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_BC_BASE_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_BC_DIM_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_BC_SCALE_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_BC_STRING_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_CHILD_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_CLK_TCK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_COLL_WEIGHTS_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_DELAYTIMER_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_EXPR_NEST_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_HOST_NAME_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_IOV_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_LINE_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_LOGIN_NAME_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_NGROUPS_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_GETGR_R_SIZE_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_GETPW_R_SIZE_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_MQ_OPEN_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_MQ_PRIO_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_OPEN_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_ADVISORY_INFO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_BARRIERS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_ASYNCHRONOUS_IO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_CLOCK_SELECTION\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_CPUTIME\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_FSYNC\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_IPV6\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_JOB_CONTROL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_MAPPED_FILES\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_MEMLOCK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_MEMLOCK_RANGE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_MEMORY_PROTECTION\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_MESSAGE_PASSING\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_MONOTONIC_CLOCK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_PRIORITIZED_IO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_PRIORITY_SCHEDULING\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_RAW_SOCKETS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_READER_WRITER_LOCKS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_REALTIME_SIGNALS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_REGEXP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SAVED_IDS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SEMAPHORES\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SHARED_MEMORY_OBJECTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SHELL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SPAWN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SPIN_LOCKS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SPORADIC_SERVER\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SS_REPL_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SYNCHRONIZED_IO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_ATTR_STACKADDR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_ATTR_STACKSIZE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_CPUTIME\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_PRIO_INHERIT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_PRIO_PROTECT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_PRIORITY_SCHEDULING\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_PROCESS_SHARED\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_SAFE_FUNCTIONS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_SPORADIC_SERVER\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREADS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TIMEOUTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TIMERS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TRACE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TRACE_EVENT_FILTER\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TRACE_EVENT_NAME_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TRACE_INHERIT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TRACE_LOG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TRACE_NAME_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TRACE_SYS_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TRACE_USER_EVENT_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TYPED_MEMORY_OBJECTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_VERSION\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_V6_ILP32_OFF32\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_V6_ILP32_OFFBIG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_V6_LP64_OFF64\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_V6_LPBIG_OFFBIG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_C_BIND\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_C_DEV\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_CHAR_TERM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_FORT_DEV\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_FORT_RUN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_LOCALEDEF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_PBS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_PBS_ACCOUNTING\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_PBS_CHECKPOINT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_PBS_LOCATE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_PBS_MESSAGE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_PBS_TRACK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_SW_DEV\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_UPE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_VERSION\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_PAGE_SIZE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_PAGESIZE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_DESTRUCTOR_ITERATIONS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_KEYS_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_STACK_MIN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_THREADS_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_RE_DUP_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_RTSIG_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SEM_NSEMS_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SEM_VALUE_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SIGQUEUE_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_STREAM_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SYMLOOP_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TIMER_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TTY_NAME_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TZNAME_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_XOPEN_CRYPT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_XOPEN_ENH_I18N\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_XOPEN_REALTIME\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_XOPEN_REALTIME_THREADS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_XOPEN_SHM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_XOPEN_STREAMS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_XOPEN_UNIX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_XOPEN_VERSION\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_PHYS_PAGES\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_NPROCESSORS_CONF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_NPROCESSORS_ONLN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_PATH\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_ILP32_OFF32_CFLAGS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_ILP32_OFF32_LDFLAGS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_ILP32_OFF32_LIBS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_ILP32_OFFBIG_CFLAGS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_ILP32_OFFBIG_LIBS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_LP64_OFF64_CFLAGS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_LP64_OFF64_LDFLAGS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_LP64_OFF64_LIBS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_LPBIG_OFFBIG_LIBS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_WIDTH_RESTRICTED_ENVS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_FILESIZEBITS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_LINK_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_MAX_CANON\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_MAX_INPUT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_NAME_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_PATH_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_PIPE_BUF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_2_SYMLINKS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_ALLOC_SIZE_MIN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_REC_INCR_XFER_SIZE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_REC_MAX_XFER_SIZE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_REC_MIN_XFER_SIZE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_REC_XFER_ALIGN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_SYMLINK_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_CHOWN_RESTRICTED\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_NO_TRUNC\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_VDISABLE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_ASYNC_IO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_PRIO_IO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_SYNC_IO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Struct::Passwd\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Struct::Group\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1188: warning: already initialized constant FileUtils::Entry_::S_IF_DOOR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1188: warning: previous definition of S_IF_DOOR was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1446: warning: already initialized constant FileUtils::Entry_::DIRECTORY_TERM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1446: warning: previous definition of DIRECTORY_TERM was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1448: warning: already initialized constant FileUtils::Entry_::SYSCASE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1448: warning: previous definition of SYSCASE was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1501: warning: already initialized constant FileUtils::OPT_TABLE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1501: warning: previous definition of OPT_TABLE was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1555: warning: already initialized constant FileUtils::LOW_METHODS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1555: warning: previous definition of LOW_METHODS was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1562: warning: already initialized constant FileUtils::METHODS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1562: warning: previous definition of METHODS was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/digest.rb:6: warning: already initialized constant Digest::REQUIRE_MUTEX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/digest.rb:6: warning: previous definition of REQUIRE_MUTEX was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/json/common.rb:100: warning: already initialized constant JSON::NaN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/json/common.rb:100: warning: previous definition of NaN was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/json/common.rb:102: warning: already initialized constant JSON::Infinity\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/json/common.rb:102: warning: previous definition of Infinity was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/json/common.rb:104: warning: already initialized constant JSON::MinusInfinity\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/json/common.rb:104: warning: previous definition of MinusInfinity was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/json/common.rb:129: warning: already initialized constant JSON::UnparserError\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/json/common.rb:129: warning: previous definition of UnparserError was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:29: warning: already initialized constant URI::RFC2396_REGEXP::PATTERN::ALPHA\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:29: warning: previous definition of ALPHA was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:31: warning: already initialized constant URI::RFC2396_REGEXP::PATTERN::ALNUM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:31: warning: previous definition of ALNUM was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:35: warning: already initialized constant URI::RFC2396_REGEXP::PATTERN::HEX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:35: warning: previous definition of HEX was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:37: warning: already initialized constant URI::RFC2396_REGEXP::PATTERN::ESCAPED\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:37: warning: previous definition of ESCAPED was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:41: warning: already initialized constant URI::RFC2396_REGEXP::PATTERN::UNRESERVED\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:41: warning: previous definition of UNRESERVED was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:46: warning: already initialized constant URI::RFC2396_REGEXP::PATTERN::RESERVED\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:46: warning: previous definition of RESERVED was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:49: warning: already initialized constant URI::RFC2396_REGEXP::PATTERN::DOMLABEL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:49: warning: previous definition of DOMLABEL was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:51: warning: already initialized constant URI::RFC2396_REGEXP::PATTERN::TOPLABEL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:51: warning: previous definition of TOPLABEL was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:53: warning: already initialized constant URI::RFC2396_REGEXP::PATTERN::HOSTNAME\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:53: warning: previous definition of HOSTNAME was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc3986_parser.rb:6: warning: already initialized constant URI::RFC3986_Parser::RFC3986_URI\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc3986_parser.rb:6: warning: previous definition of RFC3986_URI was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc3986_parser.rb:7: warning: already initialized constant URI::RFC3986_Parser::RFC3986_relative_ref\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc3986_parser.rb:7: warning: previous definition of RFC3986_relative_ref was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:17: warning: already initialized constant URI::REGEXP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:17: warning: previous definition of REGEXP was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:18: warning: already initialized constant URI::Parser\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:18: warning: previous definition of Parser was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:19: warning: already initialized constant URI::RFC3986_PARSER\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:19: warning: previous definition of RFC3986_PARSER was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:22: warning: already initialized constant URI::DEFAULT_PARSER\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:22: warning: previous definition of DEFAULT_PARSER was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::ABS_URI\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of ABS_URI was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::REL_URI\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of REL_URI was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::URI_REF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of URI_REF was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::ABS_URI_REF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of ABS_URI_REF was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::REL_URI_REF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of REL_URI_REF was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::ESCAPED\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of ESCAPED was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::UNSAFE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of UNSAFE was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::SCHEME\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of SCHEME was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::USERINFO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of USERINFO was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::HOST\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of HOST was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::PORT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of PORT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::OPAQUE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of OPAQUE was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::REGISTRY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of REGISTRY was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::ABS_PATH\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of ABS_PATH was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::REL_PATH\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of REL_PATH was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::QUERY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of QUERY was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::FRAGMENT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of FRAGMENT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:343: warning: already initialized constant URI::TBLENCWWWCOMP_\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:343: warning: previous definition of TBLENCWWWCOMP_ was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:349: warning: already initialized constant URI::TBLDECWWWCOMP_\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:349: warning: previous definition of TBLDECWWWCOMP_ was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:360: warning: already initialized constant URI::HTML5ASCIIINCOMPAT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:360: warning: previous definition of HTML5ASCIIINCOMPAT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:518: warning: already initialized constant URI::WEB_ENCODINGS_\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:518: warning: previous definition of WEB_ENCODINGS_ was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/generic.rb:28: warning: already initialized constant URI::Generic::DEFAULT_PORT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/generic.rb:28: warning: previous definition of DEFAULT_PORT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/generic.rb:47: warning: already initialized constant URI::Generic::COMPONENT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/generic.rb:47: warning: previous definition of COMPONENT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/generic.rb:62: warning: already initialized constant URI::Generic::USE_REGISTRY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/generic.rb:62: warning: previous definition of USE_REGISTRY was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri.rb:99: warning: already initialized constant URI::VERSION_CODE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri.rb:99: warning: previous definition of VERSION_CODE was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri.rb:100: warning: already initialized constant URI::VERSION\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri.rb:100: warning: previous definition of VERSION was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ftp.rb:25: warning: already initialized constant URI::FTP::DEFAULT_PORT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ftp.rb:25: warning: previous definition of DEFAULT_PORT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ftp.rb:30: warning: already initialized constant URI::FTP::COMPONENT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ftp.rb:30: warning: previous definition of COMPONENT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ftp.rb:43: warning: already initialized constant URI::FTP::TYPECODE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ftp.rb:43: warning: previous definition of TYPECODE was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ftp.rb:47: warning: already initialized constant URI::FTP::TYPECODE_PREFIX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ftp.rb:47: warning: previous definition of TYPECODE_PREFIX was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/http.rb:25: warning: already initialized constant URI::HTTP::DEFAULT_PORT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/http.rb:25: warning: previous definition of DEFAULT_PORT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/http.rb:28: warning: already initialized constant URI::HTTP::COMPONENT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/http.rb:28: warning: previous definition of COMPONENT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/https.rb:20: warning: already initialized constant URI::HTTPS::DEFAULT_PORT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/https.rb:20: warning: previous definition of DEFAULT_PORT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:26: warning: already initialized constant URI::LDAP::DEFAULT_PORT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:26: warning: previous definition of DEFAULT_PORT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:29: warning: already initialized constant URI::LDAP::COMPONENT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:29: warning: previous definition of COMPONENT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:47: warning: already initialized constant URI::LDAP::SCOPE_ONE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:47: warning: previous definition of SCOPE_ONE was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:48: warning: already initialized constant URI::LDAP::SCOPE_SUB\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:48: warning: previous definition of SCOPE_SUB was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:49: warning: already initialized constant URI::LDAP::SCOPE_BASE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:49: warning: previous definition of SCOPE_BASE was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:46: warning: already initialized constant URI::LDAP::SCOPE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:46: warning: previous definition of SCOPE was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldaps.rb:18: warning: already initialized constant URI::LDAPS::DEFAULT_PORT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldaps.rb:18: warning: previous definition of DEFAULT_PORT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/mailto.rb:22: warning: already initialized constant URI::MailTo::DEFAULT_PORT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/mailto.rb:22: warning: previous definition of DEFAULT_PORT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/mailto.rb:25: warning: already initialized constant URI::MailTo::COMPONENT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/mailto.rb:25: warning: previous definition of COMPONENT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/mailto.rb:53: warning: already initialized constant URI::MailTo::HEADER_REGEXP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/mailto.rb:53: warning: previous definition of HEADER_REGEXP was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/mailto.rb:56: warning: already initialized constant URI::MailTo::EMAIL_REGEXP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/mailto.rb:56: warning: previous definition of EMAIL_REGEXP was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/forwardable/impl.rb:3: warning: already initialized constant Forwardable::FILTER_EXCEPTION\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/forwardable/impl.rb:3: warning: previous definition of FILTER_EXCEPTION was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/forwardable.rb:116: warning: already initialized constant Forwardable::FORWARDABLE_VERSION\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/forwardable.rb:116: warning: previous definition of FORWARDABLE_VERSION was here\r\nrails aborted!\r\nBundler::GemRequireError: There was an error while trying to load the gem 'puma'.\r\nGem Load Error is: uninitialized constant IPSocket\r\nBacktrace for gem load error is:\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/active_support.rb:43:in `load_missing_constant'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/socket.rb:3:in `<main>'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/puma-3.11.2/lib/puma.rb:2:in `<main>'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:50:in `require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:50:in `require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bundler-1.16.1/lib/bundler/runtime.rb:81:in `block (2 levels) in require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bundler-1.16.1/lib/bundler/runtime.rb:76:in `each'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bundler-1.16.1/lib/bundler/runtime.rb:76:in `block in require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bundler-1.16.1/lib/bundler/runtime.rb:65:in `each'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bundler-1.16.1/lib/bundler/runtime.rb:65:in `require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bundler-1.16.1/lib/bundler.rb:114:in `require'\r\n/Users/yurii/Developer/yuriihabrusiev/rails_playground/config/application.rb:7:in `<main>'\r\n/Users/yurii/Developer/yuriihabrusiev/rails_playground/Rakefile:4:in `require_relative'\r\n/Users/yurii/Developer/yuriihabrusiev/rails_playground/Rakefile:4:in `<main>'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `load'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `load'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/rake-12.3.0/lib/rake/rake_module.rb:29:in `load_rakefile'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/rake-12.3.0/lib/rake/application.rb:703:in `raw_load_rakefile'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/rake-12.3.0/lib/rake/application.rb:104:in `block in load_rakefile'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/rake-12.3.0/lib/rake/application.rb:186:in `standard_exception_handling'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/rake-12.3.0/lib/rake/application.rb:103:in `load_rakefile'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/railties-5.2.0.rc1/lib/rails/commands/rake/rake_command.rb:22:in `block in perform'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/rake-12.3.0/lib/rake/application.rb:186:in `standard_exception_handling'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/railties-5.2.0.rc1/lib/rails/commands/rake/rake_command.rb:20:in `perform'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/railties-5.2.0.rc1/lib/rails/command.rb:48:in `invoke'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/railties-5.2.0.rc1/lib/rails/commands.rb:18:in `<main>'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\nbin/rails:4:in `<main>'\r\nBundler Error Backtrace:\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bundler-1.16.1/lib/bundler/runtime.rb:84:in `rescue in block (2 levels) in require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bundler-1.16.1/lib/bundler/runtime.rb:80:in `block (2 levels) in require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bundler-1.16.1/lib/bundler/runtime.rb:76:in `each'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bundler-1.16.1/lib/bundler/runtime.rb:76:in `block in require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bundler-1.16.1/lib/bundler/runtime.rb:65:in `each'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bundler-1.16.1/lib/bundler/runtime.rb:65:in `require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bundler-1.16.1/lib/bundler.rb:114:in `require'\r\n/Users/yurii/Developer/yuriihabrusiev/rails_playground/config/application.rb:7:in `<main>'\r\n/Users/yurii/Developer/yuriihabrusiev/rails_playground/Rakefile:4:in `require_relative'\r\n/Users/yurii/Developer/yuriihabrusiev/rails_playground/Rakefile:4:in `<main>'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `load'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `load'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:277:in `block in load'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:277:in `load'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/railties-5.2.0.rc1/lib/rails/commands/rake/rake_command.rb:22:in `block in perform'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/railties-5.2.0.rc1/lib/rails/commands/rake/rake_command.rb:20:in `perform'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/railties-5.2.0.rc1/lib/rails/command.rb:48:in `invoke'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/railties-5.2.0.rc1/lib/rails/commands.rb:18:in `<main>'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:283:in `block in require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activesupport-5.2.0.rc1/lib/active_support/dependencies.rb:283:in `require'\r\nbin/rails:4:in `<main>'\r\n\r\nCaused by:\r\nNameError: uninitialized constant IPSocket\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/active_support.rb:43:in `load_missing_constant'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/puma-3.11.2/lib/puma.rb:2:in `<main>'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:50:in `require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:50:in `require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bundler-1.16.1/lib/bundler/runtime.rb:81:in `block (2 levels) in require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bundler-1.16.1/lib/bundler/runtime.rb:76:in `each'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bundler-1.16.1/lib/bundler/runtime.rb:76:in `block in require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bundler-1.16.1/lib/bundler/runtime.rb:65:in `each'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bundler-1.16.1/lib/bundler/runtime.rb:65:in `require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bundler-1.16.1/lib/bundler.rb:114:in `require'\r\n/Users/yurii/Developer/yuriihabrusiev/rails_playground/config/application.rb:7:in `<main>'\r\n/Users/yurii/Developer/yuriihabrusiev/rails_playground/Rakefile:4:in `require_relative'\r\n/Users/yurii/Developer/yuriihabrusiev/rails_playground/Rakefile:4:in `<main>'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `load'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `load'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/railties-5.2.0.rc1/lib/rails/commands/rake/rake_command.rb:22:in `block in perform'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/railties-5.2.0.rc1/lib/rails/commands/rake/rake_command.rb:20:in `perform'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/railties-5.2.0.rc1/lib/rails/command.rb:48:in `invoke'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/railties-5.2.0.rc1/lib/rails/commands.rb:18:in `<main>'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\nbin/rails:4:in `<main>'\r\n(See full trace by running task with --trace)\r\n         run  bundle exec spring binstub --all\r\n* bin/rake: spring inserted\r\n* bin/rails: spring inserted\r\n```\r\n\r\n</details>\r\n\r\n### Expected behavior\r\nNew application is generated.\r\n\r\n### Actual behavior\r\nGetting error.\r\n\r\n### System configuration\r\n**Rails version**: 5.2.0.rc1\r\n\r\n**Ruby version**: 2.5.0p0 (2017-12-25 revision 61468) [x86_64-darwin17]", "labels": [], "number": 31865, "updated_at": "2018-03-06 22:41:10", "user": 901000, "closed_at": "2018-03-06 22:41:10", "id": 293661935, "title": "Rails fails to generate new app with 5.2.0.rc1", "url": "https://api.github.com/repos/rails/rails/issues/31865", "created_at": "2018-02-01 19:53:19", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362385258", "text": "I could not reproduce the problem with the steps you provided and the same configuration. Do you have any more information to provide? Otherwise we will not be able to help.", "created_at": "2018-02-01 20:03:32", "user": 47848, "id": 362385258}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362393707", "text": "I generated application with `rails new rails_playground` successfully but running `bin/rails c` fails with similar error:\r\n\r\n<details>\r\n\r\n```\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/set.rb:625: warning: already initialized constant Set::InspectKey\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/set.rb:625: warning: previous definition of InspectKey was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/pathname.rb:20: warning: already initialized constant Pathname::TO_PATH\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/pathname.rb:20: warning: previous definition of TO_PATH was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/pathname.rb:22: warning: already initialized constant Pathname::SAME_PATHS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/pathname.rb:22: warning: previous definition of SAME_PATHS was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/pathname.rb:34: warning: already initialized constant Pathname::SEPARATOR_LIST\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/pathname.rb:34: warning: previous definition of SEPARATOR_LIST was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/pathname.rb:35: warning: already initialized constant Pathname::SEPARATOR_PAT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/pathname.rb:35: warning: previous definition of SEPARATOR_PAT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/rbconfig.rb:16: warning: already initialized constant RbConfig::TOPDIR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/rbconfig.rb:16: warning: previous definition of TOPDIR was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/rbconfig.rb:20: warning: already initialized constant RbConfig::CONFIG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/rbconfig.rb:20: warning: previous definition of CONFIG was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/rbconfig.rb:270: warning: already initialized constant RbConfig::MAKEFILE_CONFIG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/rbconfig.rb:270: warning: previous definition of MAKEFILE_CONFIG was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/timeout.rb:50: warning: already initialized constant Timeout::THIS_FILE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/timeout.rb:50: warning: previous definition of THIS_FILE was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/timeout.rb:51: warning: already initialized constant Timeout::CALLER_OFFSET\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/timeout.rb:51: warning: previous definition of CALLER_OFFSET was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/timeout.rb:127: warning: already initialized constant TimeoutError\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/timeout.rb:127: warning: previous definition of TimeoutError was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:227: warning: already initialized constant Logger::VERSION\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:227: warning: previous definition of VERSION was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:235: warning: already initialized constant Logger::ProgName\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:235: warning: previous definition of ProgName was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:246: warning: already initialized constant Logger::Severity::DEBUG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:246: warning: previous definition of DEBUG was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:248: warning: already initialized constant Logger::Severity::INFO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:248: warning: previous definition of INFO was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:250: warning: already initialized constant Logger::Severity::WARN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:250: warning: previous definition of WARN was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:252: warning: already initialized constant Logger::Severity::ERROR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:252: warning: previous definition of ERROR was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:254: warning: already initialized constant Logger::Severity::FATAL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:254: warning: previous definition of FATAL was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:256: warning: already initialized constant Logger::Severity::UNKNOWN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:256: warning: previous definition of UNKNOWN was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:577: warning: already initialized constant Logger::SEV_LABEL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:577: warning: previous definition of SEV_LABEL was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:590: warning: already initialized constant Logger::Formatter::Format\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:590: warning: previous definition of Format was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:625: warning: already initialized constant Logger::Period::SiD\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/logger.rb:625: warning: previous definition of SiD was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/digest.rb:6: warning: already initialized constant Digest::REQUIRE_MUTEX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/digest.rb:6: warning: previous definition of REQUIRE_MUTEX was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/json/common.rb:100: warning: already initialized constant JSON::NaN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/json/common.rb:100: warning: previous definition of NaN was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/json/common.rb:102: warning: already initialized constant JSON::Infinity\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/json/common.rb:102: warning: previous definition of Infinity was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/json/common.rb:104: warning: already initialized constant JSON::MinusInfinity\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/json/common.rb:104: warning: previous definition of MinusInfinity was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/json/common.rb:129: warning: already initialized constant JSON::UnparserError\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/json/common.rb:129: warning: previous definition of UnparserError was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:29: warning: already initialized constant URI::RFC2396_REGEXP::PATTERN::ALPHA\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:29: warning: previous definition of ALPHA was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:31: warning: already initialized constant URI::RFC2396_REGEXP::PATTERN::ALNUM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:31: warning: previous definition of ALNUM was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:35: warning: already initialized constant URI::RFC2396_REGEXP::PATTERN::HEX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:35: warning: previous definition of HEX was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:37: warning: already initialized constant URI::RFC2396_REGEXP::PATTERN::ESCAPED\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:37: warning: previous definition of ESCAPED was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:41: warning: already initialized constant URI::RFC2396_REGEXP::PATTERN::UNRESERVED\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:41: warning: previous definition of UNRESERVED was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:46: warning: already initialized constant URI::RFC2396_REGEXP::PATTERN::RESERVED\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:46: warning: previous definition of RESERVED was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:49: warning: already initialized constant URI::RFC2396_REGEXP::PATTERN::DOMLABEL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:49: warning: previous definition of DOMLABEL was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:51: warning: already initialized constant URI::RFC2396_REGEXP::PATTERN::TOPLABEL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:51: warning: previous definition of TOPLABEL was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:53: warning: already initialized constant URI::RFC2396_REGEXP::PATTERN::HOSTNAME\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc2396_parser.rb:53: warning: previous definition of HOSTNAME was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc3986_parser.rb:6: warning: already initialized constant URI::RFC3986_Parser::RFC3986_URI\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc3986_parser.rb:6: warning: previous definition of RFC3986_URI was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc3986_parser.rb:7: warning: already initialized constant URI::RFC3986_Parser::RFC3986_relative_ref\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/rfc3986_parser.rb:7: warning: previous definition of RFC3986_relative_ref was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:17: warning: already initialized constant URI::REGEXP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:17: warning: previous definition of REGEXP was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:18: warning: already initialized constant URI::Parser\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:18: warning: previous definition of Parser was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:19: warning: already initialized constant URI::RFC3986_PARSER\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:19: warning: previous definition of RFC3986_PARSER was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:22: warning: already initialized constant URI::DEFAULT_PARSER\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:22: warning: previous definition of DEFAULT_PARSER was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::ABS_URI\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of ABS_URI was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::REL_URI\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of REL_URI was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::URI_REF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of URI_REF was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::ABS_URI_REF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of ABS_URI_REF was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::REL_URI_REF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of REL_URI_REF was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::ESCAPED\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of ESCAPED was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::UNSAFE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of UNSAFE was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::SCHEME\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of SCHEME was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::USERINFO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of USERINFO was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::HOST\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of HOST was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::PORT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of PORT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::OPAQUE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of OPAQUE was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::REGISTRY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of REGISTRY was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::ABS_PATH\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of ABS_PATH was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::REL_PATH\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of REL_PATH was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::QUERY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of QUERY was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: already initialized constant URI::FRAGMENT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:29: warning: previous definition of FRAGMENT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:343: warning: already initialized constant URI::TBLENCWWWCOMP_\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:343: warning: previous definition of TBLENCWWWCOMP_ was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:349: warning: already initialized constant URI::TBLDECWWWCOMP_\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:349: warning: previous definition of TBLDECWWWCOMP_ was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:360: warning: already initialized constant URI::HTML5ASCIIINCOMPAT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:360: warning: previous definition of HTML5ASCIIINCOMPAT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:518: warning: already initialized constant URI::WEB_ENCODINGS_\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/common.rb:518: warning: previous definition of WEB_ENCODINGS_ was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/generic.rb:28: warning: already initialized constant URI::Generic::DEFAULT_PORT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/generic.rb:28: warning: previous definition of DEFAULT_PORT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/generic.rb:47: warning: already initialized constant URI::Generic::COMPONENT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/generic.rb:47: warning: previous definition of COMPONENT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/generic.rb:62: warning: already initialized constant URI::Generic::USE_REGISTRY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/generic.rb:62: warning: previous definition of USE_REGISTRY was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri.rb:99: warning: already initialized constant URI::VERSION_CODE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri.rb:99: warning: previous definition of VERSION_CODE was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri.rb:100: warning: already initialized constant URI::VERSION\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri.rb:100: warning: previous definition of VERSION was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ftp.rb:25: warning: already initialized constant URI::FTP::DEFAULT_PORT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ftp.rb:25: warning: previous definition of DEFAULT_PORT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ftp.rb:30: warning: already initialized constant URI::FTP::COMPONENT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ftp.rb:30: warning: previous definition of COMPONENT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ftp.rb:43: warning: already initialized constant URI::FTP::TYPECODE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ftp.rb:43: warning: previous definition of TYPECODE was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ftp.rb:47: warning: already initialized constant URI::FTP::TYPECODE_PREFIX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ftp.rb:47: warning: previous definition of TYPECODE_PREFIX was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/http.rb:25: warning: already initialized constant URI::HTTP::DEFAULT_PORT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/http.rb:25: warning: previous definition of DEFAULT_PORT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/http.rb:28: warning: already initialized constant URI::HTTP::COMPONENT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/http.rb:28: warning: previous definition of COMPONENT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/https.rb:20: warning: already initialized constant URI::HTTPS::DEFAULT_PORT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/https.rb:20: warning: previous definition of DEFAULT_PORT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:26: warning: already initialized constant URI::LDAP::DEFAULT_PORT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:26: warning: previous definition of DEFAULT_PORT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:29: warning: already initialized constant URI::LDAP::COMPONENT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:29: warning: previous definition of COMPONENT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:47: warning: already initialized constant URI::LDAP::SCOPE_ONE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:47: warning: previous definition of SCOPE_ONE was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:48: warning: already initialized constant URI::LDAP::SCOPE_SUB\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:48: warning: previous definition of SCOPE_SUB was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:49: warning: already initialized constant URI::LDAP::SCOPE_BASE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:49: warning: previous definition of SCOPE_BASE was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:46: warning: already initialized constant URI::LDAP::SCOPE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldap.rb:46: warning: previous definition of SCOPE was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldaps.rb:18: warning: already initialized constant URI::LDAPS::DEFAULT_PORT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/ldaps.rb:18: warning: previous definition of DEFAULT_PORT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/mailto.rb:22: warning: already initialized constant URI::MailTo::DEFAULT_PORT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/mailto.rb:22: warning: previous definition of DEFAULT_PORT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/mailto.rb:25: warning: already initialized constant URI::MailTo::COMPONENT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/mailto.rb:25: warning: previous definition of COMPONENT was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/mailto.rb:53: warning: already initialized constant URI::MailTo::HEADER_REGEXP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/mailto.rb:53: warning: previous definition of HEADER_REGEXP was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/mailto.rb:56: warning: already initialized constant URI::MailTo::EMAIL_REGEXP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/uri/mailto.rb:56: warning: previous definition of EMAIL_REGEXP was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:90: warning: already initialized constant FileUtils::VERSION\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:90: warning: previous definition of VERSION was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_AIO_LISTIO_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_AIO_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_AIO_PRIO_DELTA_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_ARG_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_ATEXIT_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_BC_BASE_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_BC_DIM_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_BC_SCALE_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_BC_STRING_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_CHILD_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_CLK_TCK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_COLL_WEIGHTS_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_DELAYTIMER_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_EXPR_NEST_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_HOST_NAME_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_IOV_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_LINE_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_LOGIN_NAME_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_NGROUPS_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_GETGR_R_SIZE_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_GETPW_R_SIZE_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_MQ_OPEN_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_MQ_PRIO_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_OPEN_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_ADVISORY_INFO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_BARRIERS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_ASYNCHRONOUS_IO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_CLOCK_SELECTION\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_CPUTIME\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_FSYNC\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_IPV6\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_JOB_CONTROL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_MAPPED_FILES\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_MEMLOCK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_MEMLOCK_RANGE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_MEMORY_PROTECTION\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_MESSAGE_PASSING\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_MONOTONIC_CLOCK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_PRIORITIZED_IO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_PRIORITY_SCHEDULING\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_RAW_SOCKETS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_READER_WRITER_LOCKS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_REALTIME_SIGNALS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_REGEXP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SAVED_IDS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SEMAPHORES\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SHARED_MEMORY_OBJECTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SHELL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SPAWN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SPIN_LOCKS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SPORADIC_SERVER\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SS_REPL_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SYNCHRONIZED_IO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_ATTR_STACKADDR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_ATTR_STACKSIZE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_CPUTIME\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_PRIO_INHERIT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_PRIO_PROTECT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_PRIORITY_SCHEDULING\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_PROCESS_SHARED\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_SAFE_FUNCTIONS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_SPORADIC_SERVER\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREADS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TIMEOUTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TIMERS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TRACE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TRACE_EVENT_FILTER\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TRACE_EVENT_NAME_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TRACE_INHERIT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TRACE_LOG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TRACE_NAME_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TRACE_SYS_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TRACE_USER_EVENT_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TYPED_MEMORY_OBJECTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_VERSION\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_V6_ILP32_OFF32\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_V6_ILP32_OFFBIG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_V6_LP64_OFF64\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_V6_LPBIG_OFFBIG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_C_BIND\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_C_DEV\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_CHAR_TERM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_FORT_DEV\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_FORT_RUN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_LOCALEDEF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_PBS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_PBS_ACCOUNTING\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_PBS_CHECKPOINT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_PBS_LOCATE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_PBS_MESSAGE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_PBS_TRACK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_SW_DEV\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_UPE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_2_VERSION\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_PAGE_SIZE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_PAGESIZE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_DESTRUCTOR_ITERATIONS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_KEYS_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_STACK_MIN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_THREAD_THREADS_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_RE_DUP_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_RTSIG_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SEM_NSEMS_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SEM_VALUE_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SIGQUEUE_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_STREAM_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_SYMLOOP_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TIMER_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TTY_NAME_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_TZNAME_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_XOPEN_CRYPT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_XOPEN_ENH_I18N\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_XOPEN_REALTIME\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_XOPEN_REALTIME_THREADS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_XOPEN_SHM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_XOPEN_STREAMS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_XOPEN_UNIX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_XOPEN_VERSION\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_PHYS_PAGES\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_NPROCESSORS_CONF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::SC_NPROCESSORS_ONLN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_PATH\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_ILP32_OFF32_CFLAGS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_ILP32_OFF32_LDFLAGS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_ILP32_OFF32_LIBS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_ILP32_OFFBIG_CFLAGS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_ILP32_OFFBIG_LIBS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_LP64_OFF64_CFLAGS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_LP64_OFF64_LDFLAGS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_LP64_OFF64_LIBS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_LPBIG_OFFBIG_LIBS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::CS_POSIX_V6_WIDTH_RESTRICTED_ENVS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_FILESIZEBITS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_LINK_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_MAX_CANON\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_MAX_INPUT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_NAME_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_PATH_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_PIPE_BUF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_2_SYMLINKS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_ALLOC_SIZE_MIN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_REC_INCR_XFER_SIZE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_REC_MAX_XFER_SIZE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_REC_MIN_XFER_SIZE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_REC_XFER_ALIGN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_SYMLINK_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_CHOWN_RESTRICTED\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_NO_TRUNC\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_VDISABLE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_ASYNC_IO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_PRIO_IO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Etc::PC_SYNC_IO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Struct::Passwd\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/etc.bundle: warning: already initialized constant Struct::Group\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1188: warning: already initialized constant FileUtils::Entry_::S_IF_DOOR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1188: warning: previous definition of S_IF_DOOR was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1446: warning: already initialized constant FileUtils::Entry_::DIRECTORY_TERM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1446: warning: previous definition of DIRECTORY_TERM was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1448: warning: already initialized constant FileUtils::Entry_::SYSCASE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1448: warning: previous definition of SYSCASE was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1501: warning: already initialized constant FileUtils::OPT_TABLE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1501: warning: previous definition of OPT_TABLE was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1555: warning: already initialized constant FileUtils::LOW_METHODS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1555: warning: previous definition of LOW_METHODS was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1562: warning: already initialized constant FileUtils::METHODS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/fileutils.rb:1562: warning: previous definition of METHODS was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/forwardable/impl.rb:3: warning: already initialized constant Forwardable::FILTER_EXCEPTION\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/forwardable/impl.rb:3: warning: previous definition of FILTER_EXCEPTION was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/forwardable.rb:116: warning: already initialized constant Forwardable::FORWARDABLE_VERSION\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/forwardable.rb:116: warning: previous definition of FORWARDABLE_VERSION was here\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SOCK_STREAM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SOCK_STREAM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SOCK_DGRAM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SOCK_DGRAM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SOCK_RAW\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SOCK_RAW\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SOCK_RDM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SOCK_RDM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SOCK_SEQPACKET\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SOCK_SEQPACKET\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_UNSPEC\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_UNSPEC\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_UNSPEC\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_UNSPEC\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_INET\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_INET\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_INET\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_INET\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_INET6\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_INET6\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_INET6\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_INET6\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_UNIX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_UNIX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_UNIX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_UNIX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_IPX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_IPX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_IPX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_IPX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_APPLETALK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_APPLETALK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_APPLETALK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_APPLETALK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_LOCAL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_LOCAL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_LOCAL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_LOCAL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_IMPLINK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_IMPLINK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_IMPLINK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_IMPLINK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_PUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_PUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_PUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_PUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_CHAOS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_CHAOS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_CHAOS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_CHAOS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_NS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_NS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_NS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_NS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_ISO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_ISO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_ISO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_ISO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_OSI\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_OSI\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_OSI\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_OSI\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_ECMA\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_ECMA\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_ECMA\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_ECMA\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_DATAKIT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_DATAKIT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_DATAKIT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_DATAKIT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_CCITT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_CCITT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_CCITT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_CCITT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_SNA\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_SNA\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_SNA\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_SNA\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_DLI\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_DLI\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_DLI\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_DLI\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_LAT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_LAT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_LAT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_LAT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_HYLINK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_HYLINK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_HYLINK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_HYLINK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_ROUTE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_ROUTE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_ROUTE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_ROUTE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_LINK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_LINK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_LINK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_LINK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_COIP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_COIP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_COIP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_COIP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_CNT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_CNT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_CNT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_CNT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_SIP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_SIP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_SIP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_SIP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_NDRV\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_NDRV\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_NDRV\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_NDRV\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_ISDN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_ISDN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_ISDN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_ISDN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_NATM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_NATM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_NATM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_NATM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_SYSTEM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_SYSTEM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_SYSTEM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_SYSTEM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_NETBIOS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_NETBIOS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_NETBIOS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_NETBIOS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_PPP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_PPP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_PPP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_PPP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AF_E164\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AF_E164\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_XTP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_XTP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_RTIP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_RTIP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_PIP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_PIP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::PF_KEY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::PF_KEY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MSG_OOB\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MSG_OOB\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MSG_PEEK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MSG_PEEK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MSG_DONTROUTE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MSG_DONTROUTE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MSG_EOR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MSG_EOR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MSG_TRUNC\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MSG_TRUNC\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MSG_CTRUNC\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MSG_CTRUNC\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MSG_WAITALL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MSG_WAITALL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MSG_DONTWAIT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MSG_DONTWAIT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MSG_EOF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MSG_EOF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MSG_FLUSH\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MSG_FLUSH\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MSG_HOLD\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MSG_HOLD\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MSG_SEND\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MSG_SEND\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MSG_HAVEMORE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MSG_HAVEMORE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MSG_RCVMORE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MSG_RCVMORE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SOL_SOCKET\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SOL_SOCKET\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_IP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_IP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_ICMP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_ICMP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_IGMP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_IGMP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_GGP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_GGP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_TCP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_TCP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_EGP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_EGP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_PUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_PUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_UDP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_UDP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_IDP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_IDP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_HELLO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_HELLO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_ND\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_ND\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_TP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_TP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_XTP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_XTP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_EON\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_EON\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_AH\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_AH\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_DSTOPTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_DSTOPTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_ESP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_ESP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_FRAGMENT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_FRAGMENT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_HOPOPTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_HOPOPTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_ICMPV6\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_ICMPV6\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_IPV6\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_IPV6\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_NONE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_NONE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_ROUTING\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_ROUTING\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_RAW\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_RAW\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPROTO_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPROTO_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPORT_RESERVED\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPORT_RESERVED\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPPORT_USERRESERVED\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPPORT_USERRESERVED\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::INADDR_ANY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::INADDR_ANY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::INADDR_BROADCAST\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::INADDR_BROADCAST\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::INADDR_LOOPBACK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::INADDR_LOOPBACK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::INADDR_UNSPEC_GROUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::INADDR_UNSPEC_GROUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::INADDR_ALLHOSTS_GROUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::INADDR_ALLHOSTS_GROUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::INADDR_MAX_LOCAL_GROUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::INADDR_MAX_LOCAL_GROUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::INADDR_NONE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::INADDR_NONE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_OPTIONS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_OPTIONS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_HDRINCL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_HDRINCL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_TOS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_TOS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_TTL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_TTL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_RECVOPTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_RECVOPTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_RECVRETOPTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_RECVRETOPTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_RECVDSTADDR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_RECVDSTADDR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_RETOPTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_RETOPTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_RECVTTL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_RECVTTL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_RECVIF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_RECVIF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_PORTRANGE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_PORTRANGE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_MULTICAST_IF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_MULTICAST_IF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_MULTICAST_TTL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_MULTICAST_TTL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_MULTICAST_LOOP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_MULTICAST_LOOP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_ADD_MEMBERSHIP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_ADD_MEMBERSHIP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_DROP_MEMBERSHIP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_DROP_MEMBERSHIP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_DEFAULT_MULTICAST_TTL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_DEFAULT_MULTICAST_TTL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_DEFAULT_MULTICAST_LOOP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_DEFAULT_MULTICAST_LOOP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_MAX_MEMBERSHIPS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_MAX_MEMBERSHIPS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_PKTINFO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_PKTINFO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_RECVTOS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_RECVTOS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_IPSEC_POLICY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_IPSEC_POLICY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_UNBLOCK_SOURCE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_UNBLOCK_SOURCE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_BLOCK_SOURCE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_BLOCK_SOURCE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_ADD_SOURCE_MEMBERSHIP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_ADD_SOURCE_MEMBERSHIP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_DROP_SOURCE_MEMBERSHIP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_DROP_SOURCE_MEMBERSHIP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IP_MSFILTER\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IP_MSFILTER\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MCAST_JOIN_GROUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MCAST_JOIN_GROUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MCAST_BLOCK_SOURCE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MCAST_BLOCK_SOURCE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MCAST_UNBLOCK_SOURCE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MCAST_UNBLOCK_SOURCE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MCAST_LEAVE_GROUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MCAST_LEAVE_GROUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MCAST_JOIN_SOURCE_GROUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MCAST_JOIN_SOURCE_GROUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MCAST_LEAVE_SOURCE_GROUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MCAST_LEAVE_SOURCE_GROUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MCAST_EXCLUDE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MCAST_EXCLUDE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::MCAST_INCLUDE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::MCAST_INCLUDE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_DEBUG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_DEBUG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_REUSEADDR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_REUSEADDR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_REUSEPORT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_REUSEPORT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_TYPE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_TYPE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_ERROR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_ERROR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_DONTROUTE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_DONTROUTE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_BROADCAST\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_BROADCAST\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_SNDBUF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_SNDBUF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_RCVBUF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_RCVBUF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_KEEPALIVE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_KEEPALIVE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_OOBINLINE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_OOBINLINE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_LINGER\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_LINGER\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_RCVLOWAT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_RCVLOWAT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_SNDLOWAT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_SNDLOWAT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_RCVTIMEO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_RCVTIMEO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_SNDTIMEO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_SNDTIMEO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_ACCEPTCONN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_ACCEPTCONN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_USELOOPBACK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_USELOOPBACK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_DONTTRUNC\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_DONTTRUNC\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_WANTMORE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_WANTMORE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_WANTOOBFLAG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_WANTOOBFLAG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_NREAD\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_NREAD\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_NKE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_NKE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_NOSIGPIPE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_NOSIGPIPE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SO_TIMESTAMP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SO_TIMESTAMP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::TCP_NODELAY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::TCP_NODELAY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::TCP_MAXSEG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::TCP_MAXSEG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::TCP_KEEPCNT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::TCP_KEEPCNT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::TCP_KEEPINTVL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::TCP_KEEPINTVL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::TCP_NOOPT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::TCP_NOOPT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::TCP_NOPUSH\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::TCP_NOPUSH\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::TCP_FASTOPEN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::TCP_FASTOPEN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::EAI_ADDRFAMILY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::EAI_ADDRFAMILY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::EAI_AGAIN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::EAI_AGAIN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::EAI_BADFLAGS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::EAI_BADFLAGS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::EAI_FAIL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::EAI_FAIL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::EAI_FAMILY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::EAI_FAMILY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::EAI_MEMORY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::EAI_MEMORY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::EAI_NODATA\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::EAI_NODATA\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::EAI_NONAME\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::EAI_NONAME\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::EAI_OVERFLOW\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::EAI_OVERFLOW\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::EAI_SERVICE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::EAI_SERVICE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::EAI_SOCKTYPE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::EAI_SOCKTYPE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::EAI_SYSTEM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::EAI_SYSTEM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::EAI_BADHINTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::EAI_BADHINTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::EAI_PROTOCOL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::EAI_PROTOCOL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::EAI_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::EAI_MAX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AI_PASSIVE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AI_PASSIVE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AI_CANONNAME\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AI_CANONNAME\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AI_NUMERICHOST\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AI_NUMERICHOST\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AI_NUMERICSERV\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AI_NUMERICSERV\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AI_MASK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AI_MASK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AI_ALL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AI_ALL\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AI_V4MAPPED_CFG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AI_V4MAPPED_CFG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AI_ADDRCONFIG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AI_ADDRCONFIG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AI_V4MAPPED\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AI_V4MAPPED\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::AI_DEFAULT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::AI_DEFAULT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::NI_MAXHOST\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::NI_MAXHOST\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::NI_MAXSERV\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::NI_MAXSERV\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::NI_NOFQDN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::NI_NOFQDN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::NI_NUMERICHOST\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::NI_NUMERICHOST\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::NI_NAMEREQD\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::NI_NAMEREQD\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::NI_NUMERICSERV\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::NI_NUMERICSERV\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::NI_DGRAM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::NI_DGRAM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SHUT_RD\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SHUT_RD\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SHUT_WR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SHUT_WR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SHUT_RDWR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SHUT_RDWR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_JOIN_GROUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_JOIN_GROUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_LEAVE_GROUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_LEAVE_GROUP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_MULTICAST_HOPS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_MULTICAST_HOPS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_MULTICAST_IF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_MULTICAST_IF\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_MULTICAST_LOOP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_MULTICAST_LOOP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_UNICAST_HOPS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_UNICAST_HOPS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_V6ONLY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_V6ONLY\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_CHECKSUM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_CHECKSUM\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_DONTFRAG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_DONTFRAG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_DSTOPTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_DSTOPTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_HOPLIMIT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_HOPLIMIT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_HOPOPTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_HOPOPTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_NEXTHOP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_NEXTHOP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_PATHMTU\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_PATHMTU\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_PKTINFO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_PKTINFO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_RECVDSTOPTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_RECVDSTOPTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_RECVHOPLIMIT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_RECVHOPLIMIT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_RECVHOPOPTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_RECVHOPOPTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_RECVPKTINFO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_RECVPKTINFO\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_RECVRTHDR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_RECVRTHDR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_RECVTCLASS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_RECVTCLASS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_RTHDR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_RTHDR\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_RTHDRDSTOPTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_RTHDRDSTOPTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_RTHDR_TYPE_0\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_RTHDR_TYPE_0\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_RECVPATHMTU\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_RECVPATHMTU\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_TCLASS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_TCLASS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IPV6_USE_MIN_MTU\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IPV6_USE_MIN_MTU\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::INET_ADDRSTRLEN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::INET_ADDRSTRLEN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::INET6_ADDRSTRLEN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::INET6_ADDRSTRLEN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IFNAMSIZ\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IFNAMSIZ\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IF_NAMESIZE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IF_NAMESIZE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SOMAXCONN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SOMAXCONN\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SCM_RIGHTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SCM_RIGHTS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SCM_TIMESTAMP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SCM_TIMESTAMP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::SCM_CREDS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::SCM_CREDS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::LOCAL_PEERCRED\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::LOCAL_PEERCRED\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IFF_ALLMULTI\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IFF_ALLMULTI\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IFF_ALTPHYS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IFF_ALTPHYS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IFF_BROADCAST\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IFF_BROADCAST\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IFF_DEBUG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IFF_DEBUG\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IFF_LINK0\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IFF_LINK0\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IFF_LINK1\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IFF_LINK1\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IFF_LINK2\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IFF_LINK2\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IFF_LOOPBACK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IFF_LOOPBACK\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IFF_MULTICAST\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IFF_MULTICAST\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IFF_NOARP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IFF_NOARP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IFF_NOTRAILERS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IFF_NOTRAILERS\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IFF_OACTIVE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IFF_OACTIVE\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IFF_POINTOPOINT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IFF_POINTOPOINT\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IFF_PROMISC\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IFF_PROMISC\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IFF_RUNNING\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IFF_RUNNING\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IFF_SIMPLEX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IFF_SIMPLEX\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::IFF_UP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/x86_64-darwin17/socket.bundle: warning: already initialized constant Socket::Constants::IFF_UP\r\n/Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/active_support.rb:43:in `load_missing_constant': uninitialized constant IPAddr (NameError)\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/ipaddr.rb:42:in `<main>'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/web-console-3.5.1/lib/web_console/whitelist.rb:1:in `<main>'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/web-console-3.5.1/lib/web_console/request.rb:6:in `<class:Request>'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/web-console-3.5.1/lib/web_console/request.rb:3:in `<module:WebConsole>'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/web-console-3.5.1/lib/web_console/request.rb:1:in `<main>'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/web-console-3.5.1/lib/web_console/railtie.rb:57:in `block in <class:Railtie>'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/railties-5.2.0.rc1/lib/rails/initializable.rb:32:in `instance_exec'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/railties-5.2.0.rc1/lib/rails/initializable.rb:32:in `run'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/railties-5.2.0.rc1/lib/rails/initializable.rb:61:in `block in run_initializers'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tsort.rb:228:in `block in tsort_each'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tsort.rb:350:in `block (2 levels) in each_strongly_connected_component'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tsort.rb:431:in `each_strongly_connected_component_from'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tsort.rb:349:in `block in each_strongly_connected_component'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tsort.rb:347:in `each'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tsort.rb:347:in `call'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tsort.rb:347:in `each_strongly_connected_component'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tsort.rb:226:in `tsort_each'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/tsort.rb:205:in `tsort_each'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/railties-5.2.0.rc1/lib/rails/initializable.rb:60:in `run_initializers'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/railties-5.2.0.rc1/lib/rails/application.rb:360:in `initialize!'\r\n\tfrom /Users/yurii/Developer/yuriihabrusiev/rails_playground/config/environment.rb:5:in `<main>'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/spring-2.0.2/lib/spring/application.rb:102:in `preload'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/spring-2.0.2/lib/spring/application.rb:153:in `serve'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/spring-2.0.2/lib/spring/application.rb:141:in `block in run'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/spring-2.0.2/lib/spring/application.rb:135:in `loop'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/spring-2.0.2/lib/spring/application.rb:135:in `run'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/spring-2.0.2/lib/spring/application/boot.rb:19:in `<top (required)>'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/rubygems/core_ext/kernel_require.rb:59:in `require'\r\n\tfrom /Users/yurii/.rbenv/versions/2.5.0/lib/ruby/2.5.0/rubygems/core_ext/kernel_require.rb:59:in `require'\r\n\tfrom -e:1:in `<main>'\r\n```\r\n\r\n</details>\r\n\r\nThought that an issue with my Ruby installation but apps like `irb` work well.", "created_at": "2018-02-01 20:35:43", "user": 901000, "id": 362393707}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362395111", "text": "These issues look very similar to mine:\r\n\r\n* https://github.com/Shopify/bootsnap/issues/123\r\n* https://github.com/Shopify/bootsnap/issues/114", "created_at": "2018-02-01 20:41:03", "user": 901000, "id": 362395111}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362402474", "text": "Yeah, it seems to be a bootsnap issue (it is added by default). What is weird is that I'm also using 2.5.0, in the same OS, also installed via rbenv, with the same version of Ruby and bootsnap and I can't reproduce at all.", "created_at": "2018-02-01 21:09:26", "user": 47848, "id": 362402474}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362403229", "text": "Try to move the content of `tmp/cache/bootsnap*` to a different place to see if the issue persists, if not we can be sure that it is an issue in bootsnap. And in that case it would be great if you provide the content of the cache in the issues you liked so we can investigate that you have in your cache that I don't have and could be causing that issue.", "created_at": "2018-02-01 21:12:23", "user": 47848, "id": 362403229}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362425224", "text": "I don't have this issue with Rails 5.1.4 in same environment and with Rails 5.2.0.rc1 without bootsnap (which is obvious). \r\nWhat parts of cache do you need to compare?", "created_at": "2018-02-01 22:35:43", "user": 901000, "id": 362425224}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362428227", "text": "have you tried to remove the bootsnap cache and run the application still with it?\r\n\r\nMaybe your cache got in a bad state but bootsnap is able to rebuild a working cache from an blank state.", "created_at": "2018-02-01 22:48:38", "user": 47848, "id": 362428227}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362428586", "text": "Yes, same error. Sorry, forgot to mention that in previous comment.", "created_at": "2018-02-01 22:50:14", "user": 901000, "id": 362428586}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362430178", "text": "after you removed the cache did you run `spring stop` before running the rails command again? (I'm assuming your are running the command inside an application)", "created_at": "2018-02-01 22:57:09", "user": 47848, "id": 362430178}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362431607", "text": "Yes, I did it.", "created_at": "2018-02-01 23:03:47", "user": 901000, "id": 362431607}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363688069", "text": "Exactly same error here. Same steps to reproduce and same result when I remove the bootsnap cache. All the same", "created_at": "2018-02-07 08:05:42", "user": 8105430, "id": 363688069}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363689379", "text": "And commenting `require 'bootsnap/setup'` in `config/boot.rb` solves the issue (but then, of course, we cannot enjoy the speed gain of bootsnap anymore)", "created_at": "2018-02-07 08:10:54", "user": 8105430, "id": 363689379}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365434984", "text": "I have the same issue", "created_at": "2018-02-13 23:00:58", "user": 1758985, "id": 365434984}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365764714", "text": "same issue; rake never works properly out of the box before even running the app once", "created_at": "2018-02-14 22:22:34", "user": 1449899, "id": 365764714}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366424225", "text": "It seems the `rails new` generator is running several commands that depend on prerequisite gems not installed by `gem install rails --pre`. In my case, I had the `--webpacker=react` option set and `rails new` bailed on the webpacker gem, then the puma gem (puma from rails 4.2 was < puma 3.11), and finally the bootsnap gem.\r\n\r\nI should also mention that I have the `--skip-bundler` option set in .railsrc because I like to tweak Gemfile before running bundler the first time.\r\n\r\nHope this helps.", "created_at": "2018-02-17 07:42:28", "user": 329533, "id": 366424225}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/370955396", "text": "This is going to be fixed in the next release of bootsnap", "created_at": "2018-03-06 22:41:10", "user": 47848, "id": 370955396}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Explain the effects of the `limit:` option on `:datetime` columns.\r\n\r\n[ci skip]", "labels": [], "number": 31864, "updated_at": "2018-02-09 20:48:08", "user": 380809, "closed_at": "None", "id": 293626554, "title": "Docs: add_column(.. limit: ) re: datetime", "url": "https://api.github.com/repos/rails/rails/issues/31864", "created_at": "2018-02-01 17:54:58", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362348855", "text": "r? @pixeltrix\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-01 17:55:00", "user": 7468109, "id": 362348855}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362418830", "text": "Working `:datetime` with `limit` is for backword compatibility.\r\nShould use `precision` instead.\r\n\r\nhttps://github.com/rails/rails/blob/2417f3c53f3e5fb1fbc1f8ba3a75ce65349dc11c/activerecord/test/cases/date_time_precision_test.rb#L38-L44\r\n\r\nhttps://github.com/rails/rails/blob/2417f3c53f3e5fb1fbc1f8ba3a75ce65349dc11c/activerecord/test/cases/time_precision_test.rb#L30-L37", "created_at": "2018-02-01 22:09:27", "user": 12642, "id": 362418830}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362428261", "text": "Thanks Ryuta and Rafael, I will make the requested changes.", "created_at": "2018-02-01 22:48:47", "user": 380809, "id": 362428261}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362644563", "text": "The requested changes have been made, please review.", "created_at": "2018-02-02 17:06:01", "user": 380809, "id": 362644563}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364561621", "text": "> The requested changes have been made, please review.\r\n\r\nOne week ping, please review. Just docs, should be a quick review.", "created_at": "2018-02-09 20:48:08", "user": 380809, "id": 364561621}], "assignees": [6321, 6321], "state": "open", "is-pull-request": true}
{"reactions": {"+1": [4496810, 1859806]}, "text": "In my current setup, where I use Carrierwave and Cloudinary, files upload automatically as soon as they are attached. So the file is usually on Cloudinary before the user has finished filling out the form.\r\n\r\nI'm trying to figure out if that's possible with ActiveStorage.\r\n\r\nIf not, would it be a worthwhile feature for me to try and contribute back to Rails, or is there something in the ActiveStorage code that prevents automatic uploads from working in the first place?", "labels": ["activestorage"], "number": 31863, "updated_at": "2018-02-23 04:03:15", "user": 56636, "closed_at": "None", "id": 293618624, "title": "Uploading files automatically with ActiveStorage", "url": "https://api.github.com/repos/rails/rails/issues/31863", "created_at": "2018-02-01 17:30:26", "comments": [{"reactions": {"+1": [13545075]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364120700", "text": "@murdoch There is a library that tries to integrate activestorage with cloudinary https://github.com/0sc/activestorage-cloudinary-service but I didn't manage to make direct upload work with it so far.", "created_at": "2018-02-08 14:04:22", "user": 10766, "id": 364120700}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/367535615", "text": "The documentation for ActiveStorage has includes direct uploads using their JavaScript library, as well as examples for showing upload progress: http://edgeguides.rubyonrails.org/active_storage_overview.html#direct-uploads", "created_at": "2018-02-22 01:22:28", "user": 1100408, "id": 367535615}, {"reactions": {"+1": [1859806]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/367903655", "text": "Thanks @dwightwatson but I've seen that already. What I'm looking to know is wether it's possible to make the upload start as soon as the file is attached. The example you linked to shows that the file upload starts when the form is submitted.\r\n\r\nI guess I can place my upload progress bars down near my submit button, so the users at least know the reason why the form is taking so long to submit. Actually that would work.", "created_at": "2018-02-23 04:03:15", "user": 56636, "id": 367903655}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "[ci skip]\r\n\r\nRendered version:\r\n\r\n<img width=\"684\" alt=\"snap 2018-02-01 at 7 30 26 am\" src=\"https://user-images.githubusercontent.com/10076/35686801-02a2efbc-0722-11e8-89b0-6d7ed5568e09.png\">\r\n\r\n@georgeclaghorn Could you provide feedback? 😊 Thanks!", "labels": [], "number": 31862, "updated_at": "2018-02-08 14:57:01", "user": 10076, "closed_at": "2018-02-08 13:07:49", "id": 293573776, "title": "Add docs on how to configure Active Storage", "url": "https://api.github.com/repos/rails/rails/issues/31862", "created_at": "2018-02-01 15:32:45", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362816029", "text": "Thanks, @claudiob! Two things:\r\n\r\n1. This should include documentation for `config.active_storage.logger` and `config.active_storage.queue`.\r\n\r\n2. I’d like to be a little more explanatory. Compare these docs with those for Active Job, which mention defaults, demonstrate customization, and link to further information.", "created_at": "2018-02-03 14:43:19", "user": 94129, "id": 362816029}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363680150", "text": "@georgeclaghorn I followed your advice, here is the new output.\r\nLet me know what else you would improve.\r\n\r\nOn a separate note, I changed this PR to be against `5-2-stable`, so this can be included in the guides.rubyonrails.org/v5.2.0 when they are published. Once it's merged, the change can be ported to master.\r\n\r\n---\r\n\r\n<img width=\"692\" alt=\"snap 2018-02-06 at 11 16 52 pm\" src=\"https://user-images.githubusercontent.com/10076/35903567-a4172946-0b94-11e8-84e4-51eedfc4bc02.png\">\r\n\r\n", "created_at": "2018-02-07 07:24:17", "user": 10076, "id": 363680150}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364000113", "text": "@georgeclaghorn Thanks for your feedback. I made the changes you suggested.", "created_at": "2018-02-08 04:36:47", "user": 10076, "id": 364000113}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "###Steps are as follows:\r\n1. Install Ruby 2.5.0 (64 bit)\r\n2. Ruby Development Kit  (msys2 64 bit \"msys2-x86_64-20161025.exe\" as per https://rubyinstaller.org/downloads/)\r\n3. Install rails. Following error while installation for noir4 gem : \r\n````\r\nTemporarily enhancing PATH for MSYS/MINGW...\r\nBuilding native extensions. This could take a while...\r\nERROR:  Error installing rails:\r\n        ERROR: Failed to build gem native extension.\r\n\r\n    current directory: D:/rubyinstaller-2.5.0-1-x64/rubyinstaller-2.5.0-1-x64/lib/ruby/gems/2.5.0/gems/nio4r-2.2.0/ext/nio4r\r\nD:/rubyinstaller-2.5.0-1-x64/rubyinstaller-2.5.0-1-x64/bin/ruby.exe -r ./siteconf20180201-7796-yjulji.rb extconf.rb\r\n\r\ncurrent directory: D:/rubyinstaller-2.5.0-1-x64/rubyinstaller-2.5.0-1-x64/lib/ruby/gems/2.5.0/gems/nio4r-2.2.0/ext/nio4r\r\nmake \"DESTDIR=\" clean\r\n'make' is not recognized as an internal or external command,\r\noperable program or batch file.\r\n\r\ncurrent directory: D:/rubyinstaller-2.5.0-1-x64/rubyinstaller-2.5.0-1-x64/lib/ruby/gems/2.5.0/gems/nio4r-2.2.0/ext/nio4r\r\nmake \"DESTDIR=\"\r\n'make' is not recognized as an internal or external command,\r\noperable program or batch file.\r\n\r\nmake failed, exit code 1\r\n\r\nGem files will remain installed in D:/rubyinstaller-2.5.0-1-x64/rubyinstaller-2.5.0-1-x64/lib/ruby/gems/2.5.0/gems/nio4r-2.2.0 for inspection.\r\nResults logged to D:/rubyinstaller-2.5.0-1-x64/rubyinstaller-2.5.0-1-x64/lib/ruby/gems/2.5.0/extensions/x64-mingw32/2.5.0/nio4r-2.2.0/gem_make.out\r\n````\r\n\r\n\r\n\r\n\r\n### Expected behavior\r\nExpecting to be installed as per http://guides.rubyonrails.org/getting_started.html\r\n\r\n### Actual behavior\r\nFailed to build noir4 gem as mentioned above.\r\n\r\n### System configuration\r\n**Rails version**: Latest via command \"**gem install rails**\"\r\n\r\n**Ruby version**: 2.5.0\r\n**Operating System**: Windows 10", "labels": [], "number": 31861, "updated_at": "2018-02-01 15:52:39", "user": 6560592, "closed_at": "2018-02-01 15:26:35", "id": 293565237, "title": "Error while installing rails gem", "url": "https://api.github.com/repos/rails/rails/issues/31861", "created_at": "2018-02-01 15:10:12", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362300165", "text": "Hrmm.. I'm not too familiar with Ruby Installer, but `Temporarily enhancing PATH for MSYS/MINGW...` sounds like it should be arranging to provide a `make` command for you.\r\n\r\nI'll have to close this because the error is outside of our control. I see you've also opened an issue on rubygems, which is definitely more involved at the time of the failure... but I suspect the problem lies with Ruby Installer.\r\n\r\nIt's worth noting that the top text on the Ruby Installer page says: \"**Don’t use the Ruby 2.5.0** installer, unless you want to solve issues when installing gems!\"", "created_at": "2018-02-01 15:26:35", "user": 1034, "id": 362300165}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362308874", "text": "Got issue for Ruby 2.4.3\r\n\r\n```\r\nC:\\Users\\Sam>gem install rails\r\nFetching: concurrent-ruby-1.0.5.gem (100%)\r\nSuccessfully installed concurrent-ruby-1.0.5\r\nFetching: i18n-0.9.3.gem (100%)\r\nSuccessfully installed i18n-0.9.3\r\nFetching: thread_safe-0.3.6.gem (100%)\r\nSuccessfully installed thread_safe-0.3.6\r\nFetching: tzinfo-1.2.4.gem (100%)\r\nSuccessfully installed tzinfo-1.2.4\r\nFetching: activesupport-5.1.4.gem (100%)\r\nSuccessfully installed activesupport-5.1.4\r\nFetching: rack-2.0.4.gem (100%)\r\nSuccessfully installed rack-2.0.4\r\nFetching: rack-test-0.8.2.gem (100%)\r\nSuccessfully installed rack-test-0.8.2\r\nFetching: mini_portile2-2.3.0.gem (100%)\r\nSuccessfully installed mini_portile2-2.3.0\r\nFetching: nokogiri-1.8.2-x64-mingw32.gem (100%)\r\nNokogiri is built with the packaged libraries: libxml2-2.9.7, libxslt-1.1.32, zlib-1.2.11, libiconv-1.15.\r\nSuccessfully installed nokogiri-1.8.2-x64-mingw32\r\nFetching: crass-1.0.3.gem (100%)\r\nSuccessfully installed crass-1.0.3\r\nFetching: loofah-2.1.1.gem (100%)\r\nSuccessfully installed loofah-2.1.1\r\nFetching: rails-html-sanitizer-1.0.3.gem (100%)\r\nSuccessfully installed rails-html-sanitizer-1.0.3\r\nFetching: rails-dom-testing-2.0.3.gem (100%)\r\nSuccessfully installed rails-dom-testing-2.0.3\r\nFetching: builder-3.2.3.gem (100%)\r\nSuccessfully installed builder-3.2.3\r\nFetching: erubi-1.7.0.gem (100%)\r\nSuccessfully installed erubi-1.7.0\r\nFetching: actionview-5.1.4.gem (100%)\r\nSuccessfully installed actionview-5.1.4\r\nFetching: actionpack-5.1.4.gem (100%)\r\nSuccessfully installed actionpack-5.1.4\r\nFetching: activemodel-5.1.4.gem (100%)\r\nSuccessfully installed activemodel-5.1.4\r\nFetching: arel-8.0.0.gem (100%)\r\nSuccessfully installed arel-8.0.0\r\nFetching: activerecord-5.1.4.gem (100%)\r\nSuccessfully installed activerecord-5.1.4\r\nFetching: globalid-0.4.1.gem (100%)\r\nSuccessfully installed globalid-0.4.1\r\nFetching: activejob-5.1.4.gem (100%)\r\nSuccessfully installed activejob-5.1.4\r\nFetching: mini_mime-1.0.0.gem (100%)\r\nSuccessfully installed mini_mime-1.0.0\r\nFetching: mail-2.7.0.gem (100%)\r\nSuccessfully installed mail-2.7.0\r\nFetching: actionmailer-5.1.4.gem (100%)\r\nSuccessfully installed actionmailer-5.1.4\r\nFetching: nio4r-2.2.0.gem (100%)\r\nTemporarily enhancing PATH for MSYS/MINGW...\r\nBuilding native extensions.  This could take a while...\r\nERROR:  Error installing rails:\r\n        ERROR: Failed to build gem native extension.\r\n\r\n    current directory: C:/Users/Sam/Downloads/rubyinstaller-2.4.3-1-x64/rubyinstaller-2.4.3-1-x64/lib/ruby/gems/2.4.0/gems/nio4r-2.2.0/ext/nio4r\r\nC:/Users/Sam/Downloads/rubyinstaller-2.4.3-1-x64/rubyinstaller-2.4.3-1-x64/bin/ruby.exe -r ./siteconf20180201-5760-1staukw.rb extconf.rb\r\n\r\ncurrent directory: C:/Users/Sam/Downloads/rubyinstaller-2.4.3-1-x64/rubyinstaller-2.4.3-1-x64/lib/ruby/gems/2.4.0/gems/nio4r-2.2.0/ext/nio4r\r\nmake \"DESTDIR=\" clean\r\n'make' is not recognized as an internal or external command,\r\noperable program or batch file.\r\n\r\ncurrent directory: C:/Users/Sam/Downloads/rubyinstaller-2.4.3-1-x64/rubyinstaller-2.4.3-1-x64/lib/ruby/gems/2.4.0/gems/nio4r-2.2.0/ext/nio4r\r\nmake \"DESTDIR=\"\r\n'make' is not recognized as an internal or external command,\r\noperable program or batch file.\r\n\r\nmake failed, exit code 1\r\n\r\nGem files will remain installed in C:/Users/Sam/Downloads/rubyinstaller-2.4.3-1-x64/rubyinstaller-2.4.3-1-x64/lib/ruby/gems/2.4.0/gems/nio4r-2.2.0 for inspection.\r\nResults logged to C:/Users/Sam/Downloads/rubyinstaller-2.4.3-1-x64/rubyinstaller-2.4.3-1-x64/lib/ruby/gems/2.4.0/extensions/x64-mingw32/2.4.0/nio4r-2.2.0/gem_make.out\r\n\r\nC:\\Users\\Sam>ruby -v\r\nruby 2.4.3p205 (2017-12-14 revision 61247) [x64-mingw32]\r\n```", "created_at": "2018-02-01 15:52:39", "user": 6560592, "id": 362308874}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "This issue is different from this other one: https://github.com/rails/rails/issues/31393 Now the upload works, but the form doesn't get submitted.\r\n\r\n### Steps to reproduce\r\n\r\nIt can be reproduced on this demo app: https://github.com/mdesantis/activestorage_demo\r\n\r\n### Expected behavior\r\n\r\nThis is what happens on Chrome: \r\n![chrome](https://user-images.githubusercontent.com/283320/35684852-6c0d030c-0768-11e8-95c1-bdd410efbc44.gif)\r\n\r\n### Actual behavior\r\n\r\nThis is what happens on Firefox: \r\n![firefox](https://user-images.githubusercontent.com/283320/35684871-7865c51c-0768-11e8-873b-0711e186588a.gif)\r\n\r\n### System configuration\r\n**Rails version**: 5.2.0.rc1\r\n\r\n**Firefox version**: 58.0.1(Linux x64)\r\n", "labels": ["activestorage"], "number": 31860, "updated_at": "2018-02-04 20:24:01", "user": 283320, "closed_at": "2018-02-04 20:24:01", "id": 293560406, "title": "ActiveStorage with Firefox: form doesn't get submitted", "url": "https://api.github.com/repos/rails/rails/issues/31860", "created_at": "2018-02-01 14:57:12", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362292772", "text": "/cc @javan", "created_at": "2018-02-01 15:04:01", "user": 94129, "id": 362292772}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362310916", "text": "Thanks for the demo app! I'll take a look soon.\r\n\r\nIf you remove the file inputs, do Chrome and Firefox handle the validation errors the same way?", "created_at": "2018-02-01 15:58:39", "user": 5355, "id": 362310916}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362312578", "text": "> If you remove the file inputs, do Chrome and Firefox handle the validation errors the same way?\r\n\r\nYes, and the form get submitted even if the file input is there but the user doesn't use it; otherwise, the form doesn't get submitted (I mean that no create/update request reaches the server). So I guess it's something that happens while direct upload javascript runs.", "created_at": "2018-02-01 16:03:43", "user": 283320, "id": 362312578}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362337945", "text": "I have a question: I'd like to work on this issue, but I have no idea how to setup a development environment for working on activestorage javascripts. Do you have suggestions? Thanks :)", "created_at": "2018-02-01 17:18:40", "user": 283320, "id": 362337945}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362351367", "text": "Great! Easiest way is pointing your demo app at a local clone/fork of Rails:\r\n```rb\r\n# Gemfile\r\ngem 'rails', path: '~/Code/rails'\r\n```\r\nThen get set up with the js build tooling:\r\n```sh\r\n$ cd ~/Code/rails/activestorage\r\n$ yarn install\r\n```\r\nMake edits to the source `activestorage/app/javascript/activestorage/*.js` files, and then rebuild the compiled `activestorage.js` file by running: `$ yarn build`.\r\n\r\nReload your app and it'll use your newly compiled `activestorage.js`.", "created_at": "2018-02-01 18:04:03", "user": 5355, "id": 362351367}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362597089", "text": "Thanks @javan, it helped me a lot. The problem seems to be here: https://github.com/rails/rails/blob/master/activestorage/app/javascript/activestorage/ujs.js#L51-L67\r\n\r\nI could verify that `button.click()` doesn't submit the form, while `form.submit()` does, but frankly I have no idea why. I tried commenting the `button.disabled` restoring, but it didn't help. Maybe we could just `form.submit()` there, since we have the form element?\r\n\r\n\r\n", "created_at": "2018-02-02 14:13:27", "user": 283320, "id": 362597089}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362601223", "text": "Also if we `form.submit()` we can stop caring about submit button disabling, since it's then managed by rails ujs itself, as I've just verified.\r\n\r\n**Edit:** at the moment, a good workaround without touching ActiveStorage javascript is to put this in your app:\r\n\r\n```javascript\r\naddEventListener(\"direct-uploads:end\", event => {\r\n  event.target.submit()\r\n})\r\n```", "created_at": "2018-02-02 14:29:47", "user": 283320, "id": 362601223}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362608970", "text": "Hmm, I believe `form.submit()` has its own set of issues. I borrowed the `button.click()` idea from rails ujs itself: https://github.com/rails/rails/blob/74aa62cb691f1abd12e244c3498dc696e0b7ef77/actionview/app/assets/javascripts/rails-ujs/features/method.coffee#L21-L32", "created_at": "2018-02-02 14:58:28", "user": 5355, "id": 362608970}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362612342", "text": "Ha, as I was typing this someone opened an unrelated issue that illustrates the problem with using `form.submit()`: https://github.com/stimulusjs/stimulus/issues/92", "created_at": "2018-02-02 15:10:25", "user": 5355, "id": 362612342}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362612987", "text": "Ahhh, browsers! Even worse, I couldn't find any useful information around the web about these different behaviours, just issue reports. What about triggering both events hoping one of them to work properly? :D ", "created_at": "2018-02-02 15:12:41", "user": 283320, "id": 362612987}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362846664", "text": "FWIW, I'm unable to reproduce this issue in my own sample app. Chrome and Firefox both redirect to /new as expected when there's a validation error.", "created_at": "2018-02-03 19:20:19", "user": 5355, "id": 362846664}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362924224", "text": "@mdesantis, can you update your demo app so it doesn't require secret credentials (or provide me with them)? I can't run it locally as-is.", "created_at": "2018-02-04 17:32:48", "user": 5355, "id": 362924224}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362925710", "text": "Yeah sorry, the credentials on development environment are:\r\n\r\n- username: `admin`\r\n- password: `password`\r\n\r\n> FWIW, I'm unable to reproduce this issue in my own sample app. Chrome and Firefox both redirect to /new as expected when there's a validation error\r\n\r\nO.O maybe I did something wrong?? ", "created_at": "2018-02-04 17:54:53", "user": 283320, "id": 362925710}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362925907", "text": "If you prefer to disable authentication comment this line: https://github.com/mdesantis/activestorage_demo/blob/master/app/controllers/posts_controller.rb#L2", "created_at": "2018-02-04 17:57:46", "user": 283320, "id": 362925907}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362936509", "text": "Thanks, got it running. I commented out your [`event.target.submit()` workaround](https://github.com/mdesantis/activestorage_demo/blob/a50f2a3c056b84c5129e4853ec9c14321451f593/app/assets/javascripts/direct_uploads.js#L49-L50) and am still unable to reproduce the issue. Also using Firefox 58.0.1.\r\n\r\n![as-demo-ff](https://user-images.githubusercontent.com/5355/35781986-5ea05ac6-09bf-11e8-97ef-49913eebebac.gif)\r\n\r\nClosing for now.", "created_at": "2018-02-04 20:24:01", "user": 5355, "id": 362936509}], "assignees": [5355, 5355], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Related to  #31844\r\nr? @kamipo", "labels": [], "number": 31859, "updated_at": "2018-02-01 18:54:48", "user": 6443532, "closed_at": "2018-02-01 17:10:40", "id": 293557623, "title": "Add changelog entry for #31844", "url": "https://api.github.com/repos/rails/rails/issues/31859", "created_at": "2018-02-01 14:49:25", "comments": [], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nController\r\n\r\n```ruby\r\nmodule Admin\r\n  module Categories\r\n    class AdvancedController\r\n      before_action :set_category!\r\n\r\n      private\r\n\r\n      def set_category!\r\n        @category ||= Category.find(params[:category_id])\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nroutes\r\n\r\n```ruby\r\nnamespace :admin do\r\n  resources :categories do\r\n    resource :advanced, controller: '/admin/categories/advanced'\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nOutput from command`rake routes` \r\n\r\n```\r\nadvanced_admin_category GET  /admin/categories/:category_id/advanced(.:format)                                    admin/categories#advanced\r\n```\r\n\r\nAnd get in controller `params[:category_id]` \r\n\r\n### Actual behavior\r\n```\r\nadvanced_admin_category GET  /admin/categories/:id/advanced(.:format)                                    admin/categories#advanced\r\n```\r\n\r\nBut in controller still right parameter `params[:category_id]` \r\n\r\n\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 5.1.1\r\n**Ruby version**:\r\nruby 2.4.1p111", "labels": ["needs work"], "number": 31858, "updated_at": "2018-02-18 01:59:43", "user": 1442465, "closed_at": "2018-02-18 01:59:43", "id": 293549533, "title": "Wrong output for rake routes", "url": "https://api.github.com/repos/rails/rails/issues/31858", "created_at": "2018-02-01 14:26:42", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362434742", "text": "Your example routes does not generate `advanced_admin_category` prefix. It generates `admin_category_advanced` prefix.\r\n \r\n```ruby \r\n# config/routes.rb\r\nRails.application.routes.draw do\r\n  namespace :admin do\r\n    resources :categories do\r\n      resource :advanced, controller: '/admin/categories/advanced'\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n```\r\n$ ./bin/rails routes\r\n                      Prefix Verb   URI Pattern                                            Controller#Action\r\n new_admin_category_advanced GET    /admin/categories/:category_id/advanced/new(.:format)  admin/categories/advanced#new\r\nedit_admin_category_advanced GET    /admin/categories/:category_id/advanced/edit(.:format) admin/categories/advanced#edit\r\n     admin_category_advanced GET    /admin/categories/:category_id/advanced(.:format)      admin/categories/advanced#show\r\n                             PATCH  /admin/categories/:category_id/advanced(.:format)      admin/categories/advanced#update\r\n                             PUT    /admin/categories/:category_id/advanced(.:format)      admin/categories/advanced#update\r\n                             DELETE /admin/categories/:category_id/advanced(.:format)      admin/categories/advanced#destroy\r\n                             POST   /admin/categories/:category_id/advanced(.:format)      admin/categories/advanced#create\r\n            admin_categories GET    /admin/categories(.:format)                            admin/categories#index\r\n                             POST   /admin/categories(.:format)                            admin/categories#create\r\n          new_admin_category GET    /admin/categories/new(.:format)                        admin/categories#new\r\n         edit_admin_category GET    /admin/categories/:id/edit(.:format)                   admin/categories#edit\r\n              admin_category GET    /admin/categories/:id(.:format)                        admin/categories#show\r\n                             PATCH  /admin/categories/:id(.:format)                        admin/categories#update\r\n                             PUT    /admin/categories/:id(.:format)                        admin/categories#update\r\n                             DELETE /admin/categories/:id(.:format)                        admin/categories#destroy \r\n``` \r\n\r\nCan you please provide a sample application that reproduces the issue?\r\n", "created_at": "2018-02-01 23:19:36", "user": 987638, "id": 362434742}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366238681", "text": "Hi @savroff!\r\n\r\nSo, I'm unable to reproduce your error and am getting the same exact output as @y-yagi is getting. Could you by chance provide some information on your `routes.rb` file and controller structure? I'm curious if you have some kind of  custom rule that's causing your routes to be spit out somewhat weird. \r\n\r\nThe closest I was able to reproduce your error was by changing the route and controller to look like the following:\r\n\r\n`routes.rb`\r\n\r\n```ruby\r\nRails.application.routes.draw do\r\n  namespace :advanced do\r\n    resources :admin do\r\n      resource :categories, controller: '/admin/categories/admin'\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n\r\n`some_controller.rb`\r\n\r\n```ruby\r\nmodule Advanced\r\n  module Admin\r\n    class CategoriesController\r\n      before_action :set_category!\r\n\r\n      private\r\n\r\n      def set_category!\r\n        @category ||= Category.find(params[:category_id])\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nHere's the output of `bundle exec rake routes`\r\n\r\n```\r\n                        Prefix Verb   URI Pattern                                         Controller#Action\r\n new_advanced_admin_categories GET    /advanced/admin/:admin_id/categories/new(.:format)  admin/categories/admin#new\r\nedit_advanced_admin_categories GET    /advanced/admin/:admin_id/categories/edit(.:format) admin/categories/admin#edit\r\n     advanced_admin_categories GET    /advanced/admin/:admin_id/categories(.:format)      admin/categories/admin#show\r\n                               PATCH  /advanced/admin/:admin_id/categories(.:format)      admin/categories/admin#update\r\n                               PUT    /advanced/admin/:admin_id/categories(.:format)      admin/categories/admin#update\r\n                               DELETE /advanced/admin/:admin_id/categories(.:format)      admin/categories/admin#destroy\r\n                               POST   /advanced/admin/:admin_id/categories(.:format)      admin/categories/admin#create\r\n          advanced_admin_index GET    /advanced/admin(.:format)                           advanced/admin#index\r\n                               POST   /advanced/admin(.:format)                           advanced/admin#create\r\n            new_advanced_admin GET    /advanced/admin/new(.:format)                       advanced/admin#new\r\n           edit_advanced_admin GET    /advanced/admin/:id/edit(.:format)                  advanced/admin#edit\r\n                advanced_admin GET    /advanced/admin/:id(.:format)                       advanced/admin#show\r\n                               PATCH  /advanced/admin/:id(.:format)                       advanced/admin#update\r\n                               PUT    /advanced/admin/:id(.:format)                       advanced/admin#update\r\n                               DELETE /advanced/admin/:id(.:format)                       advanced/admin#destroy\r\n```\r\n\r\nAs you can see, I was able to come close to - but not exactly directly reproduce the unexpected route naming in your project. Has your controller structure ever looked like what I just posted? Is it possible that your code base is generating routes based off an old application structure of yours?\r\n\r\nAnything helps here!", "created_at": "2018-02-16 13:44:59", "user": 3003701, "id": 366238681}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366486472", "text": "I close it because the issue can not be reproduced. \r\nIf you can prepare the reproduction procedure, please feel free to reopen.", "created_at": "2018-02-18 01:59:43", "user": 987638, "id": 366486472}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nOpen [active_record/base.rb](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/base.rb#L227-L240)\r\n\r\n```\r\n# Connections are usually created through\r\n# {ActiveRecord::Base.establish_connection}[rdoc-ref:ConnectionHandling#establish_connection] and retrieved\r\n# by ActiveRecord::Base.connection. All classes inheriting from ActiveRecord::Base will use this\r\n# connection. But you can also set a class-specific connection. For example, if Course is an\r\n# ActiveRecord::Base, but resides in a different database, you can just say <tt>Course.establish_connection</tt>\r\n# and Course and all of its subclasses will use this connection instead.\r\n```\r\n\r\nOpen [active_record/migration.rb](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/migration.rb#L552-L600)\r\n\r\nTry to search `Base.connect` and `Base.establish`. Is there an easy way to use your own connection? Is there an easy way to use your own `Base`? No.\r\n\r\nOpen [active_record/schema_migration.rb](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/schema_migration.rb)\r\n\r\n`ActiveRecord::Base.schema_migrations_table_name`\r\n\r\nOpen [active_record/log_subscriber.rb](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/log_subscriber.rb#L90-L100)\r\n\r\n`ActiveRecord::Base.logger`\r\n`if ActiveRecord::Base.verbose_query_logs`\r\n\r\nOpen [active_record/fixtures.rb](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/fixtures.rb#L536)\r\n\r\nThere is a workaround:\r\n```\r\n# FIXME: Apparently JK uses this.\r\nconnection = block_given? ? yield : ActiveRecord::Base.connection\r\n```\r\n\r\nBut `ActiveRecord::Base.clear_active_connections!` will kill all base connections from currrent thread. Nobody cares about it. People just trust that all active connections from current thread belongs to current context.\r\n\r\nOpen [active_record/autosave_association.rb](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/autosave_association.rb#L331).\r\n\r\n`ActiveRecord::Base.index_nested_attribute_errors`\r\n\r\nOpen [active_record/railtie.rb](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/railtie.rb)\r\n\r\n`ActiveRecord::Base.verbose_query_logs = false`\r\n`if ActiveRecord::Base.connected?`\r\n`ActiveRecord::Base.clear_cache!`\r\n`ActiveRecord::Base.clear_reloadable_connections!`\r\n\r\nOpen [active_record/schema_dumper.rb](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/schema_dumper.rb#L250)\r\n\r\n`connection = ActiveRecord::Base.connection` (perfect solution)\r\n`ActiveRecord::Base.schema_migrations_table_name`\r\n`ActiveRecord::Base.internal_metadata_table_name`\r\n\r\nOpen [active_record/type.rb](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/type.rb#L52)\r\n\r\n`adapter: ActiveRecord::Base.connection.adapter_name.downcase.to_sym` (perfect solution)\r\n\r\nThere are many `ActiveRecord::Base` read-write usages in `tasks/database_tasks`, `connection_adapters/*`, `railties/*`\r\n\r\n### Expected behavior\r\nWe need to tell user the truth that it is not possible to use multiple databases today. We need to recognize architectural mistakes to fix it in future.\r\n\r\n### Actual behavior\r\nTotal lie. Part of functionality was implemented as a `Base` side effects.\r\n\r\nIt is not possible to use active record with different databases.\r\n\r\nYou need to create dynamically your own `Base` and slip it under 10-12 core active record classes. Moreover you need to verify that all functionality respect your base. The chance to do something wrong is high.\r\n\r\n### System configuration\r\n**Rails version**: master\r\n**Ruby version**: 2.4.3\r\n\r\nWe need to remove all `ActiveRecord::Base` usages from classes. `ActiveRecord::Base` can be the default source for some options, but it should be possible to rewrite it.\r\n\r\nPlease do not merge any pull request that uses `ActiveRecord::Base` directly.", "labels": [], "number": 31857, "updated_at": "2018-02-01 18:36:00", "user": 941925, "closed_at": "2018-02-01 14:45:41", "id": 293540199, "title": "active record: connection to multiple databases in different models", "url": "https://api.github.com/repos/rails/rails/issues/31857", "created_at": "2018-02-01 13:59:57", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362286905", "text": "Thanks for the well-researched report, but we don't take feature requests in the issue tracker.\r\n\r\nLies notwithstanding, plenty of applications successfully work with multiple databases today. There's active work to support *migrations* on multiple databases... but limitations in periphery maintenance tasks don't prevent the application-proper from working just fine.", "created_at": "2018-02-01 14:45:41", "user": 1034, "id": 362286905}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362294398", "text": "@matthewd, Can you please provide a name of branch or fork with WIP for migrations?", "created_at": "2018-02-01 15:09:26", "user": 941925, "id": 362294398}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362307834", "text": "@andrew-aladev most recently, see #31727.\r\n\r\nBut note that the basic database maintenance commands are always going to be primarily focused on the also-basic situation of having and maintaining a single database.\r\n\r\nAlso note that your above grep conflates a number of places that yes, do use Base's connection, with a strong number that use it as the single source of truth for configuration settings. (Something like `verbose_query_logs` is set once in the application, and has no intention of being scoped by any specific connection or model.)", "created_at": "2018-02-01 15:49:18", "user": 1034, "id": 362307834}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362330124", "text": "`verbose_query_logs` is good example. I want to enable verbose logs for first database client and disable for second one. It is not possible.\r\n\r\n`pluralize_table_names` is good option too. I could change it globally for all databases but I couldn't do it for single database.\r\n\r\nWhat is a `connection`? It is just a part of `Base` class. People are trying today to create a workaround to provide an alternative connection for some parts of logic like migration. This is not a solution, it is just a workaround. The problem is in `Base` architecture.\r\n\r\nUser are extending `Base` class. It received default logger, default options, etc. The key word is **default**. Storing real connection, connection pools, forcing options are inheritance violation. It won't lead to anything good.", "created_at": "2018-02-01 16:56:07", "user": 941925, "id": 362330124}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362350703", "text": "@andrew-aladev while my PR didn't solve all the problems it's a very good start.\r\n\r\nI'm actively working on improving features and writing new ones that will improve the experience around using multiple databases. But even without this it is still possible to use multiple databases with Rails. Basecamp and GitHub both do it but it requires some customization - customization I'm working on extracting. Hang tight, improvements to multiple databases are coming.", "created_at": "2018-02-01 18:01:24", "user": 1080678, "id": 362350703}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362357319", "text": "I am looking into `active_record/migration.rb` and I don't know how to fight with `Base`.\r\n\r\nMaybe this is a result of `convention over configuration` paradigm. In wikipedia it means: \"decrease the number of decisions that a developer using the framework is required to make without necessarily losing flexibility\". But wikipedia don't want to teach us how to **restore** lost flexibility in system without configuration and what amount of time it will require.", "created_at": "2018-02-01 18:25:52", "user": 941925, "id": 362357319}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362360232", "text": "@andrew-aladev I already warned you in a different thread, but here I go again. Your passive-agressive comments are already becoming annoying. I humbly ask you to avoid doing them. Like we already said many times in this thread, improvements to multiple databases are coming. We don't know when, neither we don't know why. You are welcome to do whatever you want in the meantime. You can wait, or you can complain, it your choice. If you want to keep complaining, I just ask to you to not do here since it is not helpful.\r\n\r\nThanks", "created_at": "2018-02-01 18:36:00", "user": 47848, "id": 362360232}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\nChanged 4.1.4 to 4.2.10 in Gemfile\r\n(Guidelines for creating a bug report are [available\r\nhere](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report))\r\n\r\n### Expected behavior\r\nTell us what should happen\r\nIt should update \r\n### Actual behavior\r\nTell us what happens instead\r\nIts stuck in Resolving dependencies.......... \r\n### System configuration\r\n**Rails version**:\r\npresent 4.1.4  need to upgrade to 4.2.10\r\n**Ruby version**:\r\n2.2.1 or 2.4.2\r\n\r\nMy Gemfile is:\r\n\r\nource 'https://rubygems.org'\r\n\r\ngem 'rails', '4.2.10'\r\ngem 'sass-rails'\r\ngem 'uglifier'\r\ngem 'jquery-rails'\r\ngem 'mysql2'\r\ngem 'devise'\r\ngem 'devise_invitable', git: 'https://github.com/scambra/devise_invitable.git',\r\n                        ref: '229b12e3ab08167e0c5286d5ac6fe9f9fa2445a3'\r\n\r\ngem 'paperclip'\r\ngem 'acts_as_list'\r\ngem 'rubyzip'\r\ngem 'to_bool'\r\ngem 'jquery-fileupload-rails'\r\ngem 'jquery-sparkline-rails', git: 'https://github.com/cubus/jquery-sparkline-rails.git'\r\ngem 'aws-sdk', '< 2.0'\r\ngem 'sidekiq-limit_fetch'\r\ngem 'activerecord-session_store'\r\ngem 'active_model_serializers'\r\ngem 'devise_security_extension'\r\ngem 'pretender'\r\ngem 'puma', require: false\r\n\r\ngem 'bootstrap-sass'\r\ngem 'bootstrap-select-rails'\r\ngem 'flag-icons-rails'\r\ngem 'autoprefixer-rails'\r\ngem 'font-awesome-sass'\r\ngem 'local_time'\r\ngem 'groupdate'\r\ngem 'chartkick'\r\ngem 'pace-rails'\r\n\r\ngem 'sidekiq'\r\ngem 'sidekiq-status'\r\ngem 'sinatra', require: false\r\ngem 'slim'\r\ngem 'rails-i18n'\r\n\r\ngem 'ransack'\r\ngem 'kaminari'\r\ngem 'counter_culture'\r\n\r\ngem 'activerecord-import'\r\ngem 'ar-octopus'\r\n\r\ngem 'mina'\r\ngem 'mina-multistage', require: false\r\n\r\ngem 'airbrake'\r\n\r\ngem 'newrelic_rpm', group: :production\r\ngem 'paranoia'\r\ngem 'sendgrid-actionmailer'\r\n\r\nPlease suggest what need to do", "labels": [], "number": 31856, "updated_at": "2018-02-01 14:29:36", "user": 24958, "closed_at": "2018-02-01 14:29:36", "id": 293524427, "title": "bundle update rails (4.1.4 to 4.2.10) taking long time ", "url": "https://api.github.com/repos/rails/rails/issues/31856", "created_at": "2018-02-01 13:10:55", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362282231", "text": "Sounds like a question for Bundler, sorry 🤷🏻‍♂️", "created_at": "2018-02-01 14:29:36", "user": 1034, "id": 362282231}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "The `JSON` constant can refer to another object than the AR Coder, so the full name should be used.\r\n\r\nFor example, this is causing issues when using the `representable` gem (https://github.com/trailblazer/representable/issues/224):\r\n\r\n```\r\n/Users/renchap/.rbenv/versions/2.4.3/lib/ruby/gems/2.4.0/gems/activerecord-5.2.0.rc1/lib/active_record/coders/yaml_column.rb:24:in `load': undefined method `new' for Representable::JSON:Module (NoMethodError)\r\n\tfrom /Users/renchap/.rbenv/versions/2.4.3/lib/ruby/gems/2.4.0/gems/activerecord-5.2.0.rc1/lib/active_record/coders/yaml_column.rb:44:in `check_arity_of_constructor'\r\n\tfrom /Users/renchap/.rbenv/versions/2.4.3/lib/ruby/gems/2.4.0/gems/activerecord-5.2.0.rc1/lib/active_record/coders/yaml_column.rb:13:in `initialize'\r\n\tfrom /Users/renchap/.rbenv/versions/2.4.3/lib/ruby/gems/2.4.0/gems/activerecord-5.2.0.rc1/lib/active_record/store.rb:187:in `new'\r\n\tfrom /Users/renchap/.rbenv/versions/2.4.3/lib/ruby/gems/2.4.0/gems/activerecord-5.2.0.rc1/lib/active_record/store.rb:187:in `initialize'\r\n\tfrom /Users/renchap/.rbenv/versions/2.4.3/lib/ruby/gems/2.4.0/gems/activerecord-5.2.0.rc1/lib/active_record/store.rb:83:in `new'\r\n\tfrom /Users/renchap/.rbenv/versions/2.4.3/lib/ruby/gems/2.4.0/gems/activerecord-5.2.0.rc1/lib/active_record/store.rb:83:in `store'\r\n\tfrom /Users/renchap/.rbenv/versions/2.4.3/lib/ruby/gems/2.4.0/gems/activestorage-5.2.0.rc1/app/models/active_storage/blob.rb:22:in `<class:Blob>'\r\n\tfrom /Users/renchap/.rbenv/versions/2.4.3/lib/ruby/gems/2.4.0/gems/activestorage-5.2.0.rc1/app/models/active_storage/blob.rb:16:in `<main>'\r\n```\r\n\r\nI checked the change with my application and it fixed the issue.", "labels": ["activestorage"], "number": 31855, "updated_at": "2018-02-11 07:58:31", "user": 42070, "closed_at": "2018-02-01 15:02:16", "id": 293496806, "title": "ActiveStorage: use the full class name for the JSON coder", "url": "https://api.github.com/repos/rails/rails/issues/31855", "created_at": "2018-02-01 11:33:19", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362239291", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @eileencodes (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-01 11:33:21", "user": 7468109, "id": 362239291}, {"reactions": {"+1": [779623]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362265398", "text": "This is an issue for me too. Looking forward to see this merged.", "created_at": "2018-02-01 13:27:25", "user": 1268778, "id": 362265398}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362295418", "text": "Will this be a part of next 5.2. release ?", "created_at": "2018-02-01 15:12:31", "user": 1268778, "id": 362295418}, {"reactions": {"+1": [42070, 1268778, 13086902, 92044]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362295973", "text": "Yes, I just backported it to the 5-2-stable branch.", "created_at": "2018-02-01 15:14:13", "user": 1080678, "id": 362295973}, {"reactions": {"+1": [20051261]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364731353", "text": "`ActiveRecord::Coders` and `ActiveRecord::Coders::JSON` [are currently marked as :nodoc:](https://github.com/rails/rails/blame/master/activerecord/lib/active_record/coders/json.rb#L5).\r\n\r\nSince they are used by Active Storage, would it make sense to turn them into documented public API?\r\n", "created_at": "2018-02-11 07:58:31", "user": 10076, "id": 364731353}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Allow `ActiveStorage::Blob#service_url` to pass addition options to `service.url`.\r\n\r\nBecause there have some service needs more parameters for file URL:\r\n\r\nhttps://www.alibabacloud.com/help/doc-detail/44687.htm\r\n\r\n```rb\r\nclass AlicloudOSSService < Service\r\n  def url(key, options = {})\r\n    image_process = options[:oss_process] || \"image/resize,w_800\"\r\n    \"http://image-demo.oss-cn-hangzhou.aliyuncs.com/example.jpg?x-oss-process=#{image_process}\"\r\n  end\r\nend\r\n```\r\n\r\nhttps://github.com/huacnlee/activestorage-aliyun/blob/master/lib/active_storage/service/aliyun_service.rb#L43\r\n\r\n```erb\r\n<%= image_tag @user.avatar.service_url(oss_process: \"image/resize,m_fill,h_100,w_100\" %>\r\n```", "labels": ["activestorage"], "number": 31854, "updated_at": "2018-02-02 02:58:58", "user": 5518, "closed_at": "2018-02-02 02:57:10", "id": 293476383, "title": "Allow ActiveStorage::Blob#service_url to pass addition options to service.url", "url": "https://api.github.com/repos/rails/rails/issues/31854", "created_at": "2018-02-01 10:24:11", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362222852", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-01 10:24:14", "user": 7468109, "id": 362222852}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362269327", "text": "👌\r\n\r\nGeorge Claghorn <notifications@github.com>于2018年2月1日 周四下午9:11写道：\r\n\r\n> *@georgeclaghorn* requested changes on this pull request.\r\n> ------------------------------\r\n>\r\n> In activestorage/app/models/active_storage/blob.rb\r\n> <https://github.com/rails/rails/pull/31854#discussion_r165350149>:\r\n>\r\n> > @@ -109,8 +109,14 @@ def text?\r\n>    # with users. Instead, the +service_url+ should only be exposed as a redirect from a stable, possibly authenticated URL.\r\n>    # Hiding the +service_url+ behind a redirect also gives you the power to change services without updating all URLs. And\r\n>    # it allows permanent URLs that redirect to the +service_url+ to be cached in the view.\r\n> -  def service_url(expires_in: service.url_expires_in, disposition: :inline, filename: self.filename)\r\n> -    service.url key, expires_in: expires_in, disposition: forcibly_serve_as_binary? ? :attachment : disposition, filename: filename, content_type: content_type\r\n> +  def service_url(expires_in: service.url_expires_in, disposition: :inline, filename: self.filename, **options)\r\n> +    options.merge!(\r\n> +      expires_in: expires_in,\r\n> +      disposition: forcibly_serve_as_binary? ? :attachment : disposition,\r\n> +      filename: filename,\r\n> +      content_type: content_type\r\n> +    )\r\n> +    service.url key, options\r\n>\r\n> Can we just splat the extra options onto the url call?\r\n>\r\n> service.url key, expires_in: expires_in, filename: filename, content_type: content_type,\r\n>   disposition: forcibly_serve_as_binary? ? :attachment : disposition, **options\r\n>\r\n> —\r\n> You are receiving this because you authored the thread.\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/rails/rails/pull/31854#pullrequestreview-93273587>,\r\n> or mute the thread\r\n> <https://github.com/notifications/unsubscribe-auth/AAAVjivU9gJOe1r0hXQCkAb2S2sNqGz9ks5tQbf6gaJpZM4R1X32>\r\n", "created_at": "2018-02-01 13:43:11", "user": 5518, "id": 362269327}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362309464", "text": "@georgeclaghorn I have updated\r\n\r\n", "created_at": "2018-02-01 15:54:29", "user": 5518, "id": 362309464}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "", "labels": [], "number": 31853, "updated_at": "2018-02-01 11:02:52", "user": 193936, "closed_at": "2018-02-01 11:02:52", "id": 293470292, "title": "Update to latest rubies (2.2.9, 2.3.8 and 2.4.3) on Travis CI.", "url": "https://api.github.com/repos/rails/rails/issues/31853", "created_at": "2018-02-01 10:04:45", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362218020", "text": "r? @eileencodes\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-02-01 10:04:47", "user": 7468109, "id": 362218020}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "```ruby\r\nclass Organization < ApplicationRecord\r\nend\r\n\r\nOrganization.where([ ])  # loads all records from database\r\nOrganization Load (39.8ms)  SELECT `organizations`.* FROM `organizations`\r\n\r\n```\r\n\r\nwhere\r\n`Organization.all` does the same\r\n**I think `Organization.where([ ])` should raise an error**\r\n\r\n**Rails version**:\r\n4.2.7, 5.0.1\r\n**Ruby version**:\r\n2.3.3\r\n", "labels": [], "number": 31852, "updated_at": "2018-02-01 14:49:15", "user": 17309962, "closed_at": "2018-02-01 14:49:15", "id": 293468693, "title": ".where([ ]) returns all records instead it should raise an error", "url": "https://api.github.com/repos/rails/rails/issues/31852", "created_at": "2018-02-01 09:59:54", "comments": [{"reactions": {"+1": [540337]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362222423", "text": "@Aravind99 Currently, this is expected behavior, see https://github.com/rails/rails/blob/5-2-stable/activerecord/lib/active_record/relation/query_methods.rb#L574-L577\r\n\r\nRelated to https://github.com/rails/rails/pull/28290", "created_at": "2018-02-01 10:22:34", "user": 6443532, "id": 362222423}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nI implemented a `current_scope` method in the `AbstractController::Translation` module in order to have the default scope used by `translate`.\r\n\r\nI created a topic on the google group but got no answer since two weeks.\r\nhttps://groups.google.com/forum/?fromgroups#!topic/rubyonrails-core/ngz9RW7COC4", "labels": [], "number": 31851, "updated_at": "2018-02-19 10:18:54", "user": 6830504, "closed_at": "None", "id": 293461258, "title": "add current_scope method for translations", "url": "https://api.github.com/repos/rails/rails/issues/31851", "created_at": "2018-02-01 09:36:12", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362210408", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @rafaelfranca (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-01 09:36:16", "user": 7468109, "id": 362210408}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362291030", "text": "Thanks, while the mailing list works well enough for large ideas before they're implemented, when there's already code to look at, a PR is much easier for discussion.\r\n\r\nI do agree with your thought that `current_scope` sounds too vague for a method we're adding to the controller.\r\n\r\nBut first I think we'd need to understand the use case; we try to avoid adding new methods, especially to large classes, as much as possible. Can you help us understand what problems this allows you to solve, that the existing APIs don't support?", "created_at": "2018-02-01 14:58:25", "user": 1034, "id": 362291030}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362294713", "text": "Thanks for your quick answer!\r\n\r\nI was working on a generic template for emails and I couldn't use the `t('.my_key')` because of the generic aspect of the file I was in, that's why I needed to send a `scope` parameter, but I didn't know how exactly it was generated. I looked in rails' codebase and I found that it was defined in the `translate` method but there were no way to have it outside.\r\n\r\nFor now, I copied the `\"#{controller_path.tr('/', '.')}.#{action_name}\"` in my codebase but I thought it could be easier to have a method for two reasons:\r\n1) It is easier to use and I know people who thought it was already possible to ask rails the generated scope, because it sounds useful and rails often has the answer for useful things\r\n2) it could be used in the `translate` method (with a little rework because of `defaults = [:\"#{path}#{key}\"]` so if something changes, everybody would have the new version automatically if they use this method.", "created_at": "2018-02-01 15:10:29", "user": 6830504, "id": 362294713}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366645657", "text": "Hi, do you need more explanations about this feature in order to decide if this is useful and mergeable or not ?", "created_at": "2018-02-19 10:18:53", "user": 6830504, "id": 366645657}], "assignees": [47848, 47848], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nI implemented a `current_scope` method in the `AbstractController::Translation` module in order to have the default scope used by `translate`.\r\n\r\nI created a topic on the google group but got no answer since two weeks.\r\nhttps://groups.google.com/forum/?fromgroups#!topic/rubyonrails-core/ngz9RW7COC4", "labels": [], "number": 31850, "updated_at": "2018-02-01 09:38:37", "user": 6830504, "closed_at": "2018-02-01 09:36:53", "id": 293459969, "title": "add current_scope method for translations", "url": "https://api.github.com/repos/rails/rails/issues/31850", "created_at": "2018-02-01 09:31:53", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362209195", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @eileencodes (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-01 09:31:55", "user": 7468109, "id": 362209195}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362209197", "text": "<img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20> **Warning** <img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20>\n\n* Pull requests are usually filed against the master branch for this repo, but this one is against 5-0-stable. Please double check that you specified the right target!", "created_at": "2018-02-01 09:31:56", "user": 7468109, "id": 362209197}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362210558", "text": "I made a mistake and created it for 5-0-stable instead of master\r\nI recreated it https://github.com/rails/rails/pull/31851", "created_at": "2018-02-01 09:36:53", "user": 6830504, "id": 362210558}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "This change will improve the readability of ActiveStorage javascript code by breaking out long lines to make it easier to read", "labels": [], "number": 31849, "updated_at": "2018-02-01 02:37:50", "user": 439095, "closed_at": "2018-02-01 02:37:50", "id": 293381675, "title": "Improve ActiveStorage javascript code for readability", "url": "https://api.github.com/repos/rails/rails/issues/31849", "created_at": "2018-02-01 02:25:05", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362137899", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @rafaelfranca (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-02-01 02:25:07", "user": 7468109, "id": 362137899}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362139962", "text": "Thank you for the pull request but we don't accept cosmetic changes", "created_at": "2018-02-01 02:37:50", "user": 47848, "id": 362139962}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "I suspect I have missed something here, but #31832\r\ngot me poking around in `ActiveModel::Attributes`, and\r\nI couldn't see where it was being used, except in\r\na couple tests.\r\n\r\nIf I am correct that this undocumented (i.e. not public)\r\nclass is not being used anywhere in Rails, we should either\r\nremove it, or document it so people can use it. It does have\r\nsome duplication with `ActiveRecord::Attributes`, so maybe\r\nwe could clean that up as well.\r\n\r\nIf I am NOT correct about any of this, I will be happy to learn what I got wrong. 😸 \r\n\r\nIf this becomes mergeable, I would want to go through and make sure I am not negatively affecting test coverage. I removed those for now just to see if the build would pass. (Things were passing locally, but Travis runs a lot more test than I do!)\r\n", "labels": [], "number": 31848, "updated_at": "2018-02-07 13:25:16", "user": 13696143, "closed_at": "2018-02-01 01:42:31", "id": 293364887, "title": "Remove ActiveModel::Attributes ???", "url": "https://api.github.com/repos/rails/rails/issues/31848", "created_at": "2018-02-01 00:44:41", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362130685", "text": "Thank you for the pull request. If you do some research about when this feature was added you can see that the idea is to make it public API. It is still not public, but it will be when we want it to be.", "created_at": "2018-02-01 01:42:31", "user": 47848, "id": 362130685}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362131717", "text": "Got it. I can see that now in 7e9ded512dd58a923a3be038843708dbba4215f6. I will get in the habit of checking the history before I make a PR like this. Sorry about that.", "created_at": "2018-02-01 01:48:40", "user": 13696143, "id": 362131717}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nMy error, which I didn't catch until later, when I saw that the database was configured for Sqlite:\r\n\r\n```bash\r\nrails new my_app --database-postgresql\r\n```\r\n\r\nAlso:\r\n\r\n```bash\r\nrails new my_app --heyheyhey\r\n```\r\netc.\r\n\r\n### Expected behavior\r\nAn error message, naming the unknown option. `rails new` should then quit with an error status.\r\n\r\n### Actual behavior\r\n`rails new` gives no sign that it was invoked incorrectly. It generates an app, and it appears to be successful.\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.5.0\r\n", "labels": [], "number": 31847, "updated_at": "2018-02-01 19:37:09", "user": 150670, "closed_at": "2018-02-01 01:48:40", "id": 293353928, "title": "`rails new` silently fails on incorrect command line option", "url": "https://api.github.com/repos/rails/rails/issues/31847", "created_at": "2018-01-31 23:47:47", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362110848", "text": "I'm happy to submit a PR for this, if a fix is wanted.", "created_at": "2018-01-31 23:53:22", "user": 150670, "id": 362110848}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362131718", "text": "This is expected behavior. rails new can also run a custom template, and this template can accept options that are not valid `rails new` commands. If we raise when we see invalid options we would remove this feature.", "created_at": "2018-02-01 01:48:40", "user": 47848, "id": 362131718}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362157313", "text": "@rafaelfranca Do you mean Application Templates enabled with `-m, [--template=TEMPLATE]`? I can imagine raising an error if a template hasn't been specified.", "created_at": "2018-02-01 04:46:39", "user": 150670, "id": 362157313}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362197086", "text": ":+1: that sounds like a good idea if it's feasible", "created_at": "2018-02-01 08:44:02", "user": 1034, "id": 362197086}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362336265", "text": ":+1:", "created_at": "2018-02-01 17:13:05", "user": 47848, "id": 362336265}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362377840", "text": "I'll submit a PR.", "created_at": "2018-02-01 19:37:09", "user": 150670, "id": 362377840}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nThis pull request changes Gemfile at `5-2-stable` so that Oracle enhanced adapter `release52` branch will be used.\r\n\r\nThere was a same kind of pull request for `5-1-stable` #28578", "labels": [], "number": 31846, "updated_at": "2018-01-31 23:01:52", "user": 73684, "closed_at": "2018-01-31 23:01:52", "id": 293341933, "title": "Use Oracle enhanced adapter `release52` to support Rails `5-2-stable`", "url": "https://api.github.com/repos/rails/rails/issues/31846", "created_at": "2018-01-31 22:54:20", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362098702", "text": "r? @kaspth\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-31 22:54:22", "user": 7468109, "id": 362098702}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362098703", "text": "<img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20> **Warning** <img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20>\n\n* Pull requests are usually filed against the master branch for this repo, but this one is against 5-2-stable. Please double check that you specified the right target!", "created_at": "2018-01-31 22:54:22", "user": 7468109, "id": 362098703}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [780485, 3365, 28146, 77174]}, "text": "This commit fixes a regression where `nil` parameters in the test would\r\nget converted to empty strings in the controller. I added a test to\r\n`4-2-stable` to demonstrate the existing behavior in 3acf0de35533a4d26a1299f63deb2be9875d06c0\r\n\r\nThis commit will fix the regression, but raises a broader issue about\r\nthe behavior of `to_query`.  It seems that our `to_query` implementation\r\ndoesn't generate query strings that round trip via Rack's query parser:\r\n\r\n```\r\nirb(main):011:0> { :foo => nil }.to_query\r\n=> \"foo=\"\r\nirb(main):012:0> Rack::Utils.default_query_parser.parse_nested_query({ :foo => nil }.to_query)\r\n=> {\"foo\"=>\"\"}\r\n```\r\n\r\nI'm not sure if we *should* fix this, but I guess it's something we need\r\nto know about.\r\n\r\n/cc @mistydemeo ", "labels": [], "number": 31845, "updated_at": "2018-02-15 00:41:41", "user": 3124, "closed_at": "None", "id": 293334434, "title": "`nil` test parameters should be `nil` in the controller", "url": "https://api.github.com/repos/rails/rails/issues/31845", "created_at": "2018-01-31 22:25:36", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362095096", "text": "Do you think this would case a different regression now for applications that already changed their tests to match the new behavior?", "created_at": "2018-01-31 22:38:34", "user": 47848, "id": 362095096}, {"reactions": {"+1": [28146]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362095777", "text": "Speaking personally, I adapted my tests by doing `present?` checks instead of `nil?` or truthiness checks, which should apply in both cases.", "created_at": "2018-01-31 22:41:19", "user": 780485, "id": 362095777}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362096339", "text": "@rafaelfranca I don't think so.  To fix this you'd have two options: 1) completely remove the `nil` param from your test, or 2) add `.present?` calls to your controller. I don't think this patch would impact either case.", "created_at": "2018-01-31 22:43:40", "user": 3124, "id": 362096339}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362106839", "text": "AIUI this is expected behaviour: if your test isn't using something like JSON to encode the parameters, it's impossible to encode nil.. you're simulating a request that no browser could make.\r\n\r\nI believe this was a known (and I thought documented) change in behaviour, not a regression.", "created_at": "2018-01-31 23:32:40", "user": 1034, "id": 362106839}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362114965", "text": "@matthewd I'm not sure if it's a known or documented.  I bisected to 394b7be0368cdf992b29c40bf7f501418d630b64 (yes, it's my fault, ugh).  The browser can make such a request, it just omits the parameter.  Presence of the parameter gives you an empty string.  I agree that it doesn't make sense to write a test passing `nil` for a parameter, but a) we don't need to break existing code, b) this only happens with `ActionController::TestCase` which we're actively discouraging, and c) `url_for` will strip `nil` params.  IOW, this test will pass:\r\n\r\n```diff\r\ndiff --git a/actionpack/test/controller/routing_test.rb b/actionpack/test/controller/routing_test.rb\r\nindex ec939e946a..cc0582dc33 100644\r\n--- a/actionpack/test/controller/routing_test.rb\r\n+++ b/actionpack/test/controller/routing_test.rb\r\n@@ -597,6 +597,13 @@ def test_non_controllers_cannot_be_matched\r\n     assert_raise(ActionController::RoutingError) { rs.recognize_path(\"/not_a/show/10\") }\r\n   end\r\n \r\n+  def test_nil_param_encoding\r\n+    rs.draw do\r\n+      get \"post/:id\" => \"post#show\", :as => \"post\"\r\n+    end\r\n+    assert_equal '/post/1', url_for(rs, controller: \"post\", action: \"show\", id: 1, lol: nil, use_route: \"post\")\r\n+  end\r\n+\r\n   def test_should_list_options_diff_when_routing_constraints_dont_match\r\n     rs.draw do\r\n       get \"post/:id\" => \"post#show\", :constraints => { id: /\\d+/ }, :as => \"post\"\r\n```\r\n\r\nIt seems reasonable for people to expect that the param hash passed to `get` in the test case would behave similarly to `url_for` (I think).", "created_at": "2018-02-01 00:15:27", "user": 3124, "id": 362114965}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362120226", "text": "If the caller meant to omit the parameter, they wouldn't've supplied it :smile:\r\n\r\nMy claim is that this can't be a regression, because the previous behaviour was actively broken, in exactly the way that commit intended to fix: it resulted in the key being in `params`, with a value of nil.\r\n\r\nWhile I do feel that key-set-to-empty-string is a closer approximation of key-set-to-nil than key-absent\\*, I think the stronger argument at this point is just that that's the way it is: this behaviour is years old, and has been present for the entire 5.x cycle. We can't change the behaviour in the back-branches, and I don't think it's worth the disruption to change it again in a new release.\r\n\r\n\\* I see the argument for matching `url_for`... but in my mind, the parameter hash approximates a form; a form containing `text_field_tag(\"foo\", nil)` will produce a form submission with `foo=`.", "created_at": "2018-02-01 00:43:57", "user": 1034, "id": 362120226}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365789047", "text": "@matthewd It's possible to produce this with a query string - `'foo'` parses with `parse_nested_query` as `{ \"foo\" => nil }` vs `\"foo=\"` which gives `{ \"foo\" => \"\" }`.\r\n\r\nStdlib is also inconsistent in this - `URI.encode_www_form` gives the same behavior as above, but `URI.decode_www_form` decodes both `foo` and `foo=` to `[[\"foo\", \"\"]]`", "created_at": "2018-02-15 00:20:29", "user": 1191, "id": 365789047}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365792436", "text": "I feel like this is an expected behavior though, as there's no such thing as `nil` in query parameter value. If a browser sending `?rails=` in the URL, I think the expected result is to get `params` with `{ \"rails\" => \"\" }` There's no way the browser could send in any value that would represent nil.\r\n\r\nI'd say it's good thing that we investigated and document this, but I'd rather leave this be and consider the current behavior correct going forward. (a.k.a. wontfix)", "created_at": "2018-02-15 00:41:41", "user": 4912, "id": 365792436}], "assignees": [], "state": "open", "is-pull-request": true}
{"reactions": {"+1": [6443532, 1948197]}, "text": "### Summary\r\n\r\nWhen I was debugging one issue I noticed some inconsistency with session and cookies. Session has method `.to_hash`, but no `.to_h`. And Cookies has `.to_h`, but no `.to_hash`. So I've added them as aliases.", "labels": [], "number": 31844, "updated_at": "2018-01-31 23:13:39", "user": 11101, "closed_at": "2018-01-31 23:13:39", "id": 293320551, "title": "Consistent behavior for session and cookies with to_h and to_hash method", "url": "https://api.github.com/repos/rails/rails/issues/31844", "created_at": "2018-01-31 21:37:21", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362079029", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-31 21:37:24", "user": 7468109, "id": 362079029}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nWhen I was debugging one issue I noticed some inconsistency with session and cookies. Session has method `.to_hash`, but no `.to_h`. And Cookies has `.to_h`, but no `.to_hash`. So I've added them as aliases.\r\n", "labels": [], "number": 31843, "updated_at": "2018-01-31 21:38:25", "user": 11101, "closed_at": "2018-01-31 21:31:41", "id": 293307216, "title": "Consistent behavior for session and cookies with to_h and to_hash method", "url": "https://api.github.com/repos/rails/rails/issues/31843", "created_at": "2018-01-31 20:51:58", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362066539", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @eileencodes (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-31 20:52:01", "user": 7468109, "id": 362066539}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362066541", "text": "<img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20> **Warning** <img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20>\n\n* Pull requests are usually filed against the master branch for this repo, but this one is against 5-1-stable. Please double check that you specified the right target!", "created_at": "2018-01-31 20:52:01", "user": 7468109, "id": 362066541}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362070004", "text": "Can you point you PR to the master branch?", "created_at": "2018-01-31 21:04:45", "user": 47848, "id": 362070004}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362079298", "text": "@rafaelfranca done. New PR opened here: https://github.com/rails/rails/pull/31844. Thanks", "created_at": "2018-01-31 21:38:25", "user": 11101, "id": 362079298}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [7427365]}, "text": "I upgraded our application from `5.2.0.beta2` to `5.2.0.rc1` and can't get the local/disk storage to work with our direct upload configuration.\r\n\r\n```\r\nlocal:\r\n  service: Disk\r\n  root: <%= Rails.root.join(\"tmp/storage\") %>\r\n  host: http://myapp.test\r\n```\r\n\r\nMy tests fail and I suspect it is related to the `host` running in development mode. With beta2, I was able to leave the host out of the configuration and the tests passed.\r\n\r\n**How should our test environment be configured if we want to test direct upload?**", "labels": ["activestorage"], "number": 31842, "updated_at": "2018-03-08 13:52:14", "user": 64581, "closed_at": "2018-03-06 21:27:54", "id": 293277813, "title": "5.2.0 RC1 Configure ActiveStorage for Disk Storage with DirectUpload", "url": "https://api.github.com/repos/rails/rails/issues/31842", "created_at": "2018-01-31 19:13:51", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362043472", "text": "@georgeclaghorn any idea?", "created_at": "2018-01-31 19:28:56", "user": 47848, "id": 362043472}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362048592", "text": "Can you please elaborate on what’s not working?", "created_at": "2018-01-31 19:46:42", "user": 94129, "id": 362048592}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362051785", "text": "Sorry! The system test runs into an error when ActiveStorage pops an alert:\r\n\r\n`Selenium::WebDriver::Error::UnhandledAlertError: unexpected alert open: {Alert text : Error storing \"logo.png\". Status: 0}`\r\n\r\nDigging in shows that the blob is created, but the attachment is not. This is from the test.log:\r\n```\r\nProcessing by ActiveStorage::DirectUploadsController#create as JSON\r\n  Parameters: {\"blob\"=>{\"filename\"=>\"logo.png\", \"content_type\"=>\"image/png\", \"byte_size\"=>14145, \"checksum\"=>\"oaNat/vE3AF0PKzeIIVCzw==\"}, \"subscription_id\"=>\"391526183\", \"direct_upload\"=>{\"blob\"=>{\"filename\"=>\"logo.png\", \"content_type\"=>\"image/png\", \"byte_size\"=>14145, \"checksum\"=>\"oaNat/vE3AF0PKzeIIVCzw==\"}}}\r\n   (0.2ms)  SAVEPOINT active_record_1\r\n  ActiveStorage::Blob Create (0.3ms)  INSERT INTO `active_storage_blobs` (`key`, `filename`, `content_type`, `byte_size`, `checksum`, `created_at`) VALUES ('cZyh9Vk52wvoCgUjduMWrusG', 'logo.png', 'image/png', 14145, 'oaNat/vE3AF0PKzeIIVCzw==', '2018-01-31 14:49:45')\r\n   (0.2ms)  RELEASE SAVEPOINT active_record_1\r\n  Disk Storage (1.4ms) Generated URL for file at key: cZyh9Vk52wvoCgUjduMWrusG (http://donortools2.test/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdDVG9JYTJWNVNTSWRZMXA1YURsV2F6VXlkM1p2UTJkVmFtUjFUVmR5ZFhOSEJqb0dSVlE2RVdOdmJuUmxiblJmZEhsd1pVa2lEbWx0WVdkbEwzQnVad1k3QmxRNkUyTnZiblJsYm5SZmJHVnVaM1JvYVFKQk56b05ZMmhsWTJ0emRXMUpJaDF2WVU1aGRDOTJSVE5CUmpCUVMzcGxTVWxXUTNwM1BUMEdPd1pVIiwiZXhwIjoiMjAxOC0wMS0zMVQxOTo1NDo0NS42MTFaIiwicHVyIjoiYmxvYl90b2tlbiJ9fQ==--a5affbea47b3913d3839213a9a810a9f9c7013de)\r\n```\r\n\r\nDuring the test, I also see activity on my development server:\r\n```\r\nStarted OPTIONS \"/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdDVG9JYTJWNVNTSWRZMXA1YURsV2F6VXlkM1p2UTJkVmFtUjFUVmR5ZFhOSEJqb0dSVlE2RVdOdmJuUmxiblJmZEhsd1pVa2lEbWx0WVdkbEwzQnVad1k3QmxRNkUyTnZiblJsYm5SZmJHVnVaM1JvYVFKQk56b05ZMmhsWTJ0emRXMUpJaDF2WVU1aGRDOTJSVE5CUmpCUVMzcGxTVWxXUTNwM1BUMEdPd1pVIiwiZXhwIjoiMjAxOC0wMS0zMVQxOTo1NDo0NS42MTFaIiwicHVyIjoiYmxvYl90b2tlbiJ9fQ==--a5affbea47b3913d3839213a9a810a9f9c7013de\" for 127.0.0.1 at 2018-01-31 14:49:45 -0500\r\n\r\nActionController::RoutingError (No route matches [OPTIONS] \"/rails/active_storage/disk/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdDVG9JYTJWNVNTSWRZMXA1YURsV2F6VXlkM1p2UTJkVmFtUjFUVmR5ZFhOSEJqb0dSVlE2RVdOdmJuUmxiblJmZEhsd1pVa2lEbWx0WVdkbEwzQnVad1k3QmxRNkUyTnZiblJsYm5SZmJHVnVaM1JvYVFKQk56b05ZMmhsWTJ0emRXMUpJaDF2WVU1aGRDOTJSVE5CUmpCUVMzcGxTVWxXUTNwM1BUMEdPd1pVIiwiZXhwIjoiMjAxOC0wMS0zMVQxOTo1NDo0NS42MTFaIiwicHVyIjoiYmxvYl90b2tlbiJ9fQ==--a5affbea47b3913d3839213a9a810a9f9c7013de\"):\r\n```\r\nI am not sure how to set ActiveStorage's host configuration since the `myapp.test` host is really a server running in development mode.\r\n\r\nSorry if I am missing something obvious!", "created_at": "2018-01-31 19:57:00", "user": 64581, "id": 362051785}, {"reactions": {"+1": [201360]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362262346", "text": "@georgeclaghorn \r\n\r\nI did some research on this Issue, and I couldn't reproduce this error, but I found other problem that could be connected!\r\n\r\nThe problem is that setting `http://localhost:3000` as default host when using DiskService, will not work especially with  SystemTests.\r\n\r\nSystem tests are booting rails app on different port each time, when we generate blob path here https://github.com/rails/rails/blob/master/activestorage/app/controllers/active_storage/blobs_controller.rb#L12    base url is `http://localhost:3000`...but there is nothing running on this url.\r\n\r\nWhen using DiskService we should really get `request.base_url` and set it as the default host, but I can't figure out the smartest way to code this and not to break `active_storage` configs :)\r\n\r\nMaybe you will have some idea :)\r\n\r\n", "created_at": "2018-02-01 13:15:18", "user": 7427365, "id": 362262346}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362280583", "text": "If you inspect the HTML for the file input field the `data-direct-upload-url` attribute is set with the dynamic `request.base_url` rather than the  configured host. So active storage must have some code already to recognize it is in test mode and to overwrite the configured host.", "created_at": "2018-02-01 14:24:07", "user": 64581, "id": 362280583}, {"reactions": {"+1": [201360, 641426, 64581, 2105944, 438465]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362291861", "text": "`Service::DiskService` is initialised with default `host: \"http://localhost:3000\"` so applications running on link other than localhost are broken if host is not defined in `storage.yml`. \r\n\r\nIn real life we cant have same urls for all the environments so defining host here in `storage.yml` is looks like a bad idea.\r\n\r\nRelated Commit - 6fb3ac1536d60bc12cf531e83e4060fe1fdf3d87", "created_at": "2018-02-01 15:00:58", "user": 2105944, "id": 362291861}, {"reactions": {"+1": [1442465, 6263853]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362293455", "text": "direct_uploads для lvh.me:3000 не работает, alert text : Error storing \"logo.png\". Status: 0.\r\nКороче, работает только в localhost:3000, такой проблемы в beta2 не было. Простите =)", "created_at": "2018-02-01 15:06:16", "user": 6263853, "id": 362293455}, {"reactions": {"+1": [438465, 2004247]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366275856", "text": "Totally agree with @ammit. Shouldn't the system take the running server as a default for example?", "created_at": "2018-02-16 15:58:11", "user": 641426, "id": 366275856}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/370934490", "text": "The disk service’s URL methods now generate root-relative paths again (ccac681). The `:host` configuration option is no longer necessary.", "created_at": "2018-03-06 21:27:54", "user": 94129, "id": 370934490}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/371492235", "text": "Thank you @georgeclaghorn 🚀 ", "created_at": "2018-03-08 13:52:14", "user": 7427365, "id": 371492235}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nRails app defined as more (shared models) have defined  in application.rb ```config.api_only = true``` because i want have base app most slim as possible. \r\nThen exists multiple Engines, for example multiple API, CMS, etc. But only one is active per app.\r\n\r\nFor CMS i want to again thick version of Rails. In Engine settings (engine.rb) i re-enable full Rails stack as ```config.api_only = false```\r\n\r\n### Expected behavior\r\nI except that middlewares (as Cookies and Sessions and etc) and route resource generator will generate paths for /new and /edit for every resource.\r\n\r\n### Actual behavior\r\n\"api_only\" is overridden to false but without effect.\r\nI shlould add middlewares back, but there is not way how to force route resource generator to make missing paths.\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.5.0\r\n\r\n### Non working example\r\nBase:\r\n```ruby\r\nmodule CoreApp\r\n  class Application < Rails::Application\r\n    config.load_defaults 5.1\r\n    config.api_only = true\r\n  end\r\nend\r\n```\r\n\r\nEngine:\r\n```ruby\r\nmodule Cms\r\n  class Engine < ::Rails::Engine\r\n    isolate_namespace Cms\r\n    config.api_only = false\r\n  end\r\nend\r\n```", "labels": [], "number": 31841, "updated_at": "2018-01-31 17:51:23", "user": 58521, "closed_at": "2018-01-31 17:26:50", "id": 293171227, "title": "Override api_only in Engine is not possible", "url": "https://api.github.com/repos/rails/rails/issues/31841", "created_at": "2018-01-31 14:10:50", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362007118", "text": "api_only take effect in the application so you can't override in an engine.", "created_at": "2018-01-31 17:26:50", "user": 47848, "id": 362007118}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362008131", "text": "Thanks for your response. As i suppose even ```config.exceptions_app``` can't be overriden, right?", "created_at": "2018-01-31 17:30:14", "user": 58521, "id": 362008131}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362014704", "text": "right.", "created_at": "2018-01-31 17:51:23", "user": 47848, "id": 362014704}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "r? @eileencodes ", "labels": [], "number": 31840, "updated_at": "2018-01-31 13:37:53", "user": 6443532, "closed_at": "2018-01-31 13:34:31", "id": 293157007, "title": "Backport #31838 to 5-2-stable", "url": "https://api.github.com/repos/rails/rails/issues/31840", "created_at": "2018-01-31 13:26:17", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361931250", "text": "<img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20> **Warning** <img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20>\n\n* Pull requests are usually filed against the master branch for this repo, but this one is against 5-2-stable. Please double check that you specified the right target!", "created_at": "2018-01-31 13:26:19", "user": 7468109, "id": 361931250}, {"reactions": {"heart": [6443532]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361933422", "text": "Thanks @bogdanvlviv! ", "created_at": "2018-01-31 13:34:39", "user": 1080678, "id": 361933422}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n1. run rake task to enable cache **rails dev:cache**\r\n2. run **rails c**, type **Rails.cache.class**\r\n```\r\n  irb(main):001:0> Rails.cache.class\r\n  => ActiveSupport::Cache::NullStore\r\n```\r\n\r\n### Expected behavior\r\nIt should return **ActiveSupport::Cache::MemoryStore** as in rails server console:\r\n```\r\nStarted GET \"/\" for 192.168.1.12 at 2018-01-31 19:27:26 +0800\r\n\r\nProcessing by XXXController#index as HTML\r\n  User Load (0.2ms)  SELECT  `users`.* FROM `users` WHERE `users`.`id` = 1 ORDER BY `users`.`id` ASC LIMIT 1\r\n   (0.2ms)  SELECT COUNT(*) FROM `sys_messages` WHERE (viewed=0)\r\n\r\n\r\n[8, 16] in /var/xxx/xxx/xxx-status-server/app/controllers/xxx_controller.rb\r\n    8:     @page_title = \"All device\"\r\n   11:     byebug\r\n=> 12:   end\r\n   13: \r\n   14:   # GET /client_devices/1\r\n   15:   # GET /client_devices/1.json\r\n   16:   def show\r\n(byebug) Rails.cache.class\r\nActiveSupport::Cache::MemoryStore\r\n(byebug) exit\r\n```\r\n### Actual behavior\r\n\r\nin **rails c** console, Rails.cache.class return null cache.\r\n\r\n### System configuration\r\n\r\nRuby version: ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-linux]\r\nRails version: 5.1.4", "labels": ["needs work"], "number": 31839, "updated_at": "2018-02-06 18:58:58", "user": 39784, "closed_at": "2018-02-06 18:58:58", "id": 293126273, "title": "Rails.cache return ActiveSupport::Cache::NullStore in rails console after I enable cache in development", "url": "https://api.github.com/repos/rails/rails/issues/31839", "created_at": "2018-01-31 11:37:28", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361910251", "text": "I can't reproduce your issue.\r\n\r\n```\r\n$ ./bin/rails c\r\nLoading development environment (Rails 5.1.4)\r\nirb(main):001:0> Rails.cache.class\r\n=> ActiveSupport::Cache::NullStore\r\nirb(main):002:0> exit\r\n$ ./bin/rails dev:cache\r\nDevelopment mode is now being cached.\r\n$ ./bin/rails c\r\nLoading development environment (Rails 5.1.4)\r\nirb(main):001:0> Rails.cache.class\r\n=> ActiveSupport::Cache::MemoryStore \r\n``` \r\n\r\nCan you please provide a sample application that reproduces the error?\r\n", "created_at": "2018-01-31 11:53:09", "user": 987638, "id": 361910251}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363465970", "text": "@qichunren try to restart a spring server.", "created_at": "2018-02-06 15:52:33", "user": 5657035, "id": 363465970}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "`as` attribute value should be `style` for stylesheet preload link\r\n\r\nSee https://w3c.github.io/preload/#as-attribute\r\n\r\nhttps://github.com/rails/rails/pull/30744#discussion_r164954159 thanks for the report @mengqing\r\n\r\nshall I backport it to `5-2-stable`?\r\n\r\nr? @eileencodes ", "labels": [], "number": 31838, "updated_at": "2018-01-31 13:12:37", "user": 6443532, "closed_at": "2018-01-31 13:11:16", "id": 293119462, "title": "Fix `as` attribute value for preload link", "url": "https://api.github.com/repos/rails/rails/issues/31838", "created_at": "2018-01-31 11:13:24", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361927648", "text": "Yes please backport to 5-2-stable.", "created_at": "2018-01-31 13:11:31", "user": 1080678, "id": 361927648}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\nTry to have a model in nested namespaces with the same name as a toplevel constant (or any other constant anywhere in a Rails application), in an environment running the autoloader, i.e., normally anything but production.\r\n\r\n### Expected behavior\r\nAutoloader does not confuse the already loaded constant with the requested one.\r\n\r\n### Actual behavior\r\nAutoloader confuses the already loaded constant with the requested one, puts it into the wrong namespace, and stuff breaks in more or less subtle ways.\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.3.3\r\n", "labels": [], "number": 31837, "updated_at": "2018-01-31 11:24:17", "user": 273347, "closed_at": "2018-01-31 11:24:17", "id": 293116459, "title": "Autoloader still fails to handle namespaces", "url": "https://api.github.com/repos/rails/rails/issues/31837", "created_at": "2018-01-31 11:03:11", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361903871", "text": "Thanks for the report, but this is \"still\" expected behaviour: http://guides.rubyonrails.org/autoloading_and_reloading_constants.html#common-gotchas\r\n\r\nIf Ruby doesn't think the constant is missing, we don't get a chance to define it.", "created_at": "2018-01-31 11:24:17", "user": 1034, "id": 361903871}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"+1": [335174]}, "text": "### Steps to reproduce\r\n\r\nI don't known exactly, because I found this bug in production log.\r\n\r\n### Expected behavior\r\n\r\nIn production log I found many same records like this:\r\n`E, [2018-01-30T14:08:39.893202 #12649] ERROR -- : Ignoring message processed after the WebSocket was closed: \"{\\\"command\\\":\\\"message\\\",\\\"data\\\":\\\"{\\\\\\\"command\\\\\\\":\\\\\\\"follow\\\\\\\",\\\\\\\"symbols\\\\\\\":\\\\\\\"ABB,BTCUSD:BITFINEX,AMZN,AAPL\\\\\\\",\\\\\\\"action\\\\\\\":\\\\\\\"follow\\\\\\\"}\\\",\\\"identifier\\\":\\\"{\\\\\\\"channel\\\\\\\":\\\\\\\"TickerChannel\\\\\\\"}\\\"}\")\r\nE, [2018-01-30T14:08:39.975338 #12649] ERROR -- : Ignoring message processed after the WebSocket was closed: \"{\\\"command\\\":\\\"message\\\",\\\"data\\\":\\\"{\\\\\\\"action\\\\\\\":\\\\\\\"unfollow\\\\\\\"}\\\",\\\"identifier\\\":\\\"{\\\\\\\"channel\\\\\\\":\\\\\\\"TickerChannel\\\\\\\"}\\\"}\")`\r\n\r\nIt's about a thousand identical records in log. After that was lost connection to redis. When I restart unicorn everything became good.\r\n\r\n### Actual behavior\r\nI think that happens because message_buffer not cleaned after connection closing.\r\n\r\n### System configuration\r\n**Rails version**: 5.0.2\r\n\r\n**Ruby version**: 2.3.0\r\n", "labels": [], "number": 31836, "updated_at": "2018-01-31 21:13:41", "user": 9034410, "closed_at": "2018-01-31 21:13:41", "id": 293086878, "title": "ActionCable circular websocket_message processing when connection is closed", "url": "https://api.github.com/repos/rails/rails/issues/31836", "created_at": "2018-01-31 09:28:40", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362072484", "text": " You need to give us more information on how to reproduce this issue, otherwise there is nothing we can do. Please read CONTRIBUTING.md file for more information about creating bug reports. Thanks!", "created_at": "2018-01-31 21:13:41", "user": 47848, "id": 362072484}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nWhen client sends handshake it should be able to set \"Sec-WebSocket-Protocol\" header to establish connection, also Server should send \"Sec-WebSocket-Protocol\" header in handshake response\r\n\r\n### Expected behavior\r\nshould support  \"Sec-WebSocket-Protocol\"\r\n\r\n### Actual behavior\r\nNo \"Sec-WebSocket-Protocol\" supported\r\n\r\n### System configuration\r\nRails-5.1.4\r\nRuby-2.4.0", "labels": [], "number": 31835, "updated_at": "2018-01-31 07:20:03", "user": 27242948, "closed_at": "2018-01-31 06:23:28", "id": 293038656, "title": "[ActionCable]  Sec-WebSocket-Protocol header not supported", "url": "https://api.github.com/repos/rails/rails/issues/31835", "created_at": "2018-01-31 05:48:05", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361836170", "text": "Action Cable does use protocol negotiation internally. It's handled automatically and not meant for external consumption.", "created_at": "2018-01-31 06:23:28", "user": 199, "id": 361836170}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361840803", "text": "I did not get your point, can you please explain more. It is working fine in Firefox  but not working in chrome, due to Sec-WebSocket-Protocol not set in response header.\r\n\r\n### Possible Solution\r\n\r\nPlease Update  RFC class at least to return \"Sec-WebSocket-Protocol\" in server response, and think how customize client request post processing to set \"Sec-WebSocket-Protocol\" header value.", "created_at": "2018-01-31 06:52:08", "user": 27242948, "id": 361840803}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361844088", "text": "Hard to say what you're doing, how you're doing it, why, or what you're expecting, so I took a wild guess that you're implementing your own WebSocket client and perhaps expecting to implement your own protocol layer. Apparently not? 😊\r\n\r\nDo investigate the Action Cable code to see exactly how protocols (Sec-WebSocket-Protocol) are handled and negotiated in JavaScript and in the [websocket-driver](https://github.com/faye/websocket-driver-ruby) Ruby library.", "created_at": "2018-01-31 07:11:45", "user": 199, "id": 361844088}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361845487", "text": "Yes I am using   [AngularJS actioncable](https://github.com/angular-actioncable/angular-actioncable) as client and  rails actioncable as API.\r\n", "created_at": "2018-01-31 07:20:03", "user": 27242948, "id": 361845487}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nFix typo\r\n", "labels": [], "number": 31834, "updated_at": "2018-01-31 08:05:34", "user": 1587053, "closed_at": "2018-01-31 05:20:56", "id": 293030791, "title": "Fix typo", "url": "https://api.github.com/repos/rails/rails/issues/31834", "created_at": "2018-01-31 04:53:27", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361823495", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @pixeltrix (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-31 04:53:30", "user": 7468109, "id": 361823495}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361824334", "text": "Thanks! In the future, you can add [ci skip] to your commit message for documentation-only changes to skip the Travis build.", "created_at": "2018-01-31 05:00:05", "user": 13696143, "id": 361824334}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "confirmed the same in 4.2 up to 5.2\r\n\r\n```Ruby\r\nclass Foo < ActiveRecord::Base\r\n  default_scope { where(deleted_at: nil) }\r\n\r\n  def soft_delete!\r\n    update_column :deleted_at, Time.now\r\n  end\r\nend\r\n\r\nfoo = Foo.create!\r\nfoo.soft_delete!\r\nfoo.reload # expected ActiveRecord::RecordNotFound ... but just works\r\n```\r\n\r\nthe sql the reload generates ignores the default scope\r\n... I can make a PR with a failing test and maybe a fix if someone can confirm that this not expected behavior", "labels": [], "number": 31833, "updated_at": "2018-01-31 04:13:18", "user": 11367, "closed_at": "2018-01-31 03:55:30", "id": 293019145, "title": "ActiveRecord default_scope is ignored during reload", "url": "https://api.github.com/repos/rails/rails/issues/31833", "created_at": "2018-01-31 03:28:17", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361816118", "text": "Seems expected to me: `reload` doesn't care how you got the record, it just cares about synchronising with what's in the database.\r\n\r\nThe default scope is an invisible condition applied to your queries when you're looking for records; it isn't involved once you've found one.\r\n\r\nTo me, this isn't substantially different from:\r\n\r\n```ruby\r\nFoo.create! n: 1\r\nfoo = Foo.find_by(n: 1)\r\nfoo.update_column :n, 2\r\nfoo.reload # still there\r\n```\r\n\r\nGenerally, the expectation with a default scope is that you'll end up choosing to retrieve records that it filters out *sometimes*, and when you do, you want them to behave the same as their peers. `save` doesn't refuse to work, and nor does `reload`.\r\n\r\nIf you're writing a test, I'd go with an explicit re-find (`foo = Foo.find(foo.id)`). For anything else, I'm curious to understand the use case where this would be desirable.", "created_at": "2018-01-31 03:55:30", "user": 1034, "id": 361816118}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361818364", "text": "was writing an unrelated test and got confused that it did not raise, not a big deal", "created_at": "2018-01-31 04:13:18", "user": 11367, "id": 361818364}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nif define reader method of ActiveModle::AttributeSet that named attributes, respond_to? raise NoMethodError.\r\n\r\n```\r\nclass Hoge\r\n  include ActiveModel::Model\r\n  include ActiveModel::Attributes\r\n  attribute :hoge\r\nend\r\n\r\nHoge.new.respond_to?(:hoge) # => true\r\nHoge.new.respond_to?(:foo) # => false\r\n\r\nclass Hoge\r\n  attr_reader :attributes # @attributes is instance of ActiveModel::AttributeSet\r\nend\r\n\r\nHoge.new.respond_to?(:hoge) # => true\r\nHoge.new.respond_to?(:foo) # => NoMethodError\r\n# NoMethodError: undefined method `include?' for #<ActiveModel::AttributeSet:0x00007f8e2e621538>\r\n# from /Users/iino/.rbenv/versions/2.4.3/lib/ruby/gems/2.4.0/gems/activemodel-5.2.0.rc1/lib/active_model/attribute_methods.rb:460:in `attribute_method?'\r\n```\r\n\r\n### Expected behavior\r\n\r\nIt should return false.\r\n\r\nuse `key?` instead of `include?`\r\n- https://github.com/rails/rails/blob/v5.2.0.rc1/activemodel/lib/active_model/attribute_methods.rb#L460\r\n\r\n### Actual behavior\r\n\r\nNoMethodError\r\n\r\n### System configuration\r\nRails-5.2.0.rc1\r\nRuby-2.4.3\r\n", "labels": ["activemodel"], "number": 31832, "updated_at": "2018-02-28 05:18:07", "user": 36563, "closed_at": "2018-02-28 05:18:07", "id": 293014222, "title": "if define reader method of ActiveModle::AttributeSet that named attributes, respond_to? raise NoMethodError", "url": "https://api.github.com/repos/rails/rails/issues/31832", "created_at": "2018-01-31 02:55:48", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361817525", "text": "`ActiveModel::Attributes` is not part of the public api, so you will have to use it at your own risk. Internally it sets an `@attributes` instance variable, and your `attr_reader` is accessing that variable.\r\n\r\n`ActiveModel::Attributes` includes `ActiveModel::AttributeMethods`, which is part of the public api. The [documentation](http://api.rubyonrails.org/classes/ActiveModel/AttributeMethods.html) for that module explains that in order to use `ActiveModel::AttributeMethods` you need to:\r\n\r\n> Define an attributes method which returns a hash with each attribute name in your model as hash key and the attribute value as hash value. Hash keys must be strings. \r\n\r\nActiveRecord takes advantage of the internal `@attributes` variable and defines the required `attributes` method like this:\r\n\r\n```rb\r\ndef attributes\r\n  @attributes.to_hash\r\nend\r\n```\r\n\r\nYou could actually do the same, but to be safe you should follow the public documentation and write:\r\n\r\n```rb\r\ndef attributes\r\n  { 'hoge' => hoge }\r\nend\r\n```\r\n\r\nThe short version: I don't think this is actually a bug. \r\n\r\n@rafaelfranca would it make sense to use `@_attributes` or `@internal_attributes` or something along those lines so people are less likely to do something like this? Or maybe we can just close this issue.", "created_at": "2018-01-31 04:06:15", "user": 13696143, "id": 361817525}, {"reactions": {"+1": [13696143, 6261109]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362075730", "text": "I think this is a valid usage and this is how the system was designed to work. Once you add `ActiveModel::Attributes` to you module your source of truth is the `AttributeSet`. It looks like it is missing `include?` method. I'd also change `ActiveModel::Attributes` to define an `attributes` reader.", "created_at": "2018-01-31 21:25:35", "user": 47848, "id": 362075730}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/369124652", "text": "Closed by https://github.com/rails/rails/pull/31926", "created_at": "2018-02-28 05:18:07", "user": 47848, "id": 369124652}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "This allows to efficiently reset counters in batch for any amount of records (generating one query per counter).\r\n\r\n```ruby\r\nAircraft.reset_counters([1, 2, 3], :wheels_count)\r\n```\r\n\r\nGenerated sql (formatted):\r\n```sql\r\nUPDATE \"aircraft\"\r\nSET wheels_count = (\r\n\tSELECT COUNT(*)\r\n\tFROM (\r\n\t\tSELECT aircraft.id FROM \"aircraft\" INNER JOIN \"wheels\" ON \"wheels\".\"wheelable_id\" = \"aircraft\".\"id\" AND \"wheels\".\"wheelable_type\" = 'Aircraft'\r\n\t) subquery_for_counter_cache\r\n\tWHERE (subquery_for_counter_cache.id = aircraft.id)\r\n) WHERE \"aircraft\".\"id\" IN ($1, $2, $3)\r\n``` \r\n\r\nSubquery for count may seem a little more complicated than it should be (maybe there is a better solution, though), but it allows to calculate counts for polymorphic and sti relations.\r\n\r\n\r\nCurrently, [all](http://edgeapi.rubyonrails.org/classes/ActiveRecord/CounterCache/ClassMethods.html#method-i-decrement_counter), [other](http://edgeapi.rubyonrails.org/classes/ActiveRecord/CounterCache/ClassMethods.html#method-i-increment_counter), [methods](http://edgeapi.rubyonrails.org/classes/ActiveRecord/CounterCache/ClassMethods.html#method-i-update_counters) from `CounterCache` module support batching.\r\n", "labels": [], "number": 31831, "updated_at": "2018-02-01 22:45:49", "user": 5657035, "closed_at": "None", "id": 292988930, "title": "Allow to reset cache counters for multiple records", "url": "https://api.github.com/repos/rails/rails/issues/31831", "created_at": "2018-01-31 00:30:00", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361782202", "text": "r? @kamipo\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-31 00:30:04", "user": 7468109, "id": 361782202}], "assignees": [12642, 12642], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "Before this patch, to be able to use webpacker and webconsole we were\ndefining an used default in the script-src policy. White we don't\nimplement the automatic nonce approach defined in\nhttps://github.com/rails/rails/issues/31689 it is better to not have any\ndefault configuration in Rails 5.2.", "labels": [], "number": 31830, "updated_at": "2018-01-30 23:30:17", "user": 47848, "closed_at": "2018-01-30 23:30:14", "id": 292968355, "title": "Disable CSP by default", "url": "https://api.github.com/repos/rails/rails/issues/31830", "created_at": "2018-01-30 22:53:41", "comments": [], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "If a user defines an association to an invalid class/module, eg.:\r\n\r\n    class Comment::Base < ActiveRecord::Base; end\r\n    class Post < ActiveRecord::Base; has_many :comments; end\r\n\r\nwith `Comment` not being a valid model (in this case, it's a module), on access, the error message will be correct but cryptic:\r\n\r\n    Post.comments # => \"undefined method `relation_delegate_class' for Comment:Module\"\r\n\r\nWith this change, the relation will be examined before, and if it doesn't\r\nsupport the expected method, it will raise a friendlier message:\r\n\r\n    Rails could not find a valid model for the :comments association.\r\n    Please provide the :class_name option on the association declaration\r\n\r\nCloses #15811.\r\n\r\nReview summary:\r\n\r\n- [x] move test class PlainKlass location inside file\r\n- [x] better String API usage for error message in Delegation#relation_class_for\r\n- [x] :relation_delegate_class check location (and move the UT)\r\n  - posted analysis; it seems not trivial - requires review\r\n- [x] check against the module or the method\r\n- [x] ~solve conflict~\r\n- [x] fix build\r\n  - [x] review and fix polymorphic case", "labels": [], "number": 31829, "updated_at": "2018-02-20 15:43:44", "user": 1595356, "closed_at": "None", "id": 292924890, "title": "Improve the error (message) for associations to an invalid class", "url": "https://api.github.com/repos/rails/rails/issues/31829", "created_at": "2018-01-30 20:23:44", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361722703", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-30 20:23:46", "user": 7468109, "id": 361722703}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362109120", "text": "Hello everybody! I've addresses the easy notes, and posted my analysis of the bigger problem. For reference, I've put a summary of the progress in the PR description.", "created_at": "2018-01-31 23:44:33", "user": 1595356, "id": 362109120}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362517670", "text": "I've checked the build; I'll review and fix the failures.", "created_at": "2018-02-02 08:22:20", "user": 1595356, "id": 362517670}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362732831", "text": "The build revealed an interesting detail.\r\n\r\nThe class check requires an exception - polymorphic (belongs_to) relationshionships, where the computed class doesn't represent a model (eg. Taggable, from :taggable).\r\n\r\nI've added the exclusion clause. Interestingly, this problem is made very obvious by a 10 years old (!) change (24c2457a269).", "created_at": "2018-02-02 22:55:28", "user": 1595356, "id": 362732831}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/367019048", "text": "Hello! Do I need to do anything additional? The code (app+testing) is complete (at least, to the best of my knowledge), and the (main) build is green.", "created_at": "2018-02-20 15:43:44", "user": 1595356, "id": 367019048}], "assignees": [12642, 12642], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "Document in the guides the new middleware added in #31162\r\n[ci skip]\r\n\r\n", "labels": [], "number": 31828, "updated_at": "2018-01-30 16:27:44", "user": 10076, "closed_at": "2018-01-30 16:27:41", "id": 292846618, "title": "Add ContentSecurityPolicy to list of middleware", "url": "https://api.github.com/repos/rails/rails/issues/31828", "created_at": "2018-01-30 16:24:14", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361648561", "text": "The rendered output looks like this:\r\n\r\n<img width=\"654\" alt=\"snap 2018-01-30 at 8 22 59 am\" src=\"https://user-images.githubusercontent.com/10076/35577705-ff5f901c-0596-11e8-9c57-1d5c8567ddd9.png\">\r\n", "created_at": "2018-01-30 16:24:39", "user": 10076, "id": 361648561}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {"hooray": [199, 840464, 259800]}, "text": "This performance regression which is described in #30680 was caused by\r\nf0ddf87 due to force materialized `LazyAttributeHash`.\r\n\r\nSince 95b86e5, default proc has been removed in the class, so it is no\r\nlonger needed that force materialized.\r\n\r\nAvoiding force materialized will recover marshaling dump/load\r\nperformance.\r\n\r\nBenchmark:\r\n\r\nhttps://gist.github.com/blimmer/1360ea51cd3147bae8aeb7c6d09bff17\r\n\r\nBefore:\r\n\r\n```\r\nit took 0.6248569069430232 seconds to unmarshal the objects\r\n\r\nTotal allocated: 38681544 bytes (530060 objects)\r\n\r\nallocated memory by class\r\n-----------------------------------\r\n  12138848  Hash\r\n  10542384  String\r\n   7920000  ActiveModel::Attribute::Uninitialized\r\n   5600000  ActiveModel::Attribute::FromDatabase\r\n   1200000  Foo\r\n    880000  ActiveModel::LazyAttributeHash\r\n    400000  ActiveModel::AttributeSet\r\n        80  Integer\r\n        72  ActiveRecord::ConnectionAdapters::SQLite3Adapter::SQLite3Integer\r\n        40  ActiveModel::Type::String\r\n        40  ActiveRecord::Type::DateTime\r\n        40  Object\r\n        40  Range\r\n\r\nallocated objects by class\r\n-----------------------------------\r\n    250052  String\r\n    110000  ActiveModel::Attribute::Uninitialized\r\n     70001  Hash\r\n     70000  ActiveModel::Attribute::FromDatabase\r\n     10000  ActiveModel::AttributeSet\r\n     10000  ActiveModel::LazyAttributeHash\r\n     10000  Foo\r\n         2  Integer\r\n         1  ActiveModel::Type::String\r\n         1  ActiveRecord::ConnectionAdapters::SQLite3Adapter::SQLite3Integer\r\n         1  ActiveRecord::Type::DateTime\r\n         1  Object\r\n         1  Range\r\n```\r\n\r\nAfter:\r\n\r\n```\r\nit took 0.1660824950085953 seconds to unmarshal the objects\r\n\r\nTotal allocated: 13883811 bytes (220090 objects)\r\n\r\nallocated memory by class\r\n-----------------------------------\r\n   5743371  String\r\n   4940008  Hash\r\n   1200000  Foo\r\n    880000  ActiveModel::LazyAttributeHash\r\n    720000  Array\r\n    400000  ActiveModel::AttributeSet\r\n        80  ActiveModel::Attribute::FromDatabase\r\n        80  Integer\r\n        72  ActiveRecord::ConnectionAdapters::SQLite3Adapter::SQLite3Integer\r\n        40  ActiveModel::Type::String\r\n        40  ActiveModel::Type::Value\r\n        40  ActiveRecord::Type::DateTime\r\n        40  Object\r\n        40  Range\r\n\r\nallocated objects by class\r\n-----------------------------------\r\n    130077  String\r\n     50004  Hash\r\n     10000  ActiveModel::AttributeSet\r\n     10000  ActiveModel::LazyAttributeHash\r\n     10000  Array\r\n     10000  Foo\r\n         2  Integer\r\n         1  ActiveModel::Attribute::FromDatabase\r\n         1  ActiveModel::Type::String\r\n         1  ActiveModel::Type::Value\r\n         1  ActiveRecord::ConnectionAdapters::SQLite3Adapter::SQLite3Integer\r\n         1  ActiveRecord::Type::DateTime\r\n         1  Object\r\n         1  Range\r\n```\r\n\r\nFixes #30680.", "labels": ["activerecord"], "number": 31827, "updated_at": "2018-02-10 18:38:52", "user": 12642, "closed_at": "2018-02-01 22:52:35", "id": 292628826, "title": "PERF: Recover marshaling dump/load performance", "url": "https://api.github.com/repos/rails/rails/issues/31827", "created_at": "2018-01-30 02:10:19", "comments": [{"reactions": {"+1": [259800, 22599275, 26328, 7634886]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362436968", "text": "Wow, thank you very much for this. Really appreciated.\r\n\r\n@kaspth you mentioned that this will be backported to 5.1, but any chance of it getting backported to 5.0 as well since that's where the performance regression was introduced? The reason I ask is because we can pretty easily upgrade to 5.0.x with the existing work I had done on our application, but 5.1 takes a bit more work and the community usually recommends going up \"one step at a time\".\r\n\r\nThanks for the consideration and, again, thank you very much for taking the time to address this.", "created_at": "2018-02-01 23:31:04", "user": 630449, "id": 362436968}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362934247", "text": "@kamipo thoughts on 👆?", "created_at": "2018-02-04 19:52:29", "user": 350807, "id": 362934247}, {"reactions": {"+1": [630449]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363056758", "text": "Yeah, I'll backport this to 5-0-stable as well in this case since the performance regression was introduced by backporting #25949.", "created_at": "2018-02-05 11:23:29", "user": 12642, "id": 363056758}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363274990", "text": "I don't think we should be backporting to a version which is only supposed to receive security fixes.", "created_at": "2018-02-06 01:04:44", "user": 1529387, "id": 363274990}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363373716", "text": "I wouldn't mind backporting this to 5.0, part of it being personal need from an app still running on it, and also because I think it's in theory still part of the bug fix maintenance window, at least until 5.2 final is released, isn't it?\r\n\r\nThanks for the fix @kamipo!", "created_at": "2018-02-06 10:07:53", "user": 26328, "id": 363373716}, {"reactions": {"+1": [26328, 630449]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363392292", "text": "@carlosantoniodasilva officially only one (most recent) release is supported for bug fixes... but if you're happy to deal with any [probably unlikely] follow-on problems/regressions, go for it :+1:", "created_at": "2018-02-06 11:18:16", "user": 1034, "id": 363392292}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363395439", "text": "Thanks @matthewd, I was mistaken then to say that 5.0 was still on for bug fixes. I did check the branch for backport activity and it seems to receive commits here and there, and as a side note, even though our maintenance page says \"only the latest release series\", it mentions \"currently included series: 5.0.Z\", which was unfortunately just the bit that I checked before commenting earlier. Will see about updating that page then.", "created_at": "2018-02-06 11:32:26", "user": 26328, "id": 363395439}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363925237", "text": "@carlosantoniodasilva just to clarify the thread above, do you plan to backport to 5.0? Or should I look into how to monkeypatch on a fork we use until we can get up to 5.1?\r\n\r\nThanks!", "created_at": "2018-02-07 22:00:03", "user": 630449, "id": 363925237}, {"reactions": {"+1": [630449]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363929436", "text": "5.0 is still supported (this is why it is in the page). I'm supporting it, but I was planing to the next release to be the last one. I'm fine with backporting this fix.", "created_at": "2018-02-07 22:15:33", "user": 47848, "id": 363929436}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363929520", "text": "@kamipo can you apply the patch to 5-0-stable please?", "created_at": "2018-02-07 22:15:51", "user": 47848, "id": 363929520}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364295230", "text": "Sure, I will do that.", "created_at": "2018-02-09 00:27:17", "user": 12642, "id": 364295230}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364679300", "text": "Thanks @rafaelfranca @kamipo!", "created_at": "2018-02-10 18:38:52", "user": 26328, "id": 364679300}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nLink to W3C reference was broken, this uses the latest URL, along with HTTPS.", "labels": [], "number": 31826, "updated_at": "2018-01-30 02:02:53", "user": 529516, "closed_at": "2018-01-30 02:02:53", "id": 292609428, "title": "Update rails-ujs readme", "url": "https://api.github.com/repos/rails/rails/issues/31826", "created_at": "2018-01-30 00:19:06", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361432830", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @schneems (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-30 00:19:09", "user": 7468109, "id": 361432830}], "assignees": [59744, 59744], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Fixes #31823.\r\n\r\n### Summary\r\n\r\nAs I mentioned in #31823, it looks like the documentation for the `ActionController::TestCase#post` documentation did not get updated when the syntax it was using was deleted in https://github.com/rails/rails/commit/98b8309569a326910a723f521911e54994b112fb.", "labels": [], "number": 31825, "updated_at": "2018-01-29 19:10:45", "user": 780485, "closed_at": "2018-01-29 19:00:49", "id": 292521602, "title": "ActionController::TestCase: fix #post documentation", "url": "https://api.github.com/repos/rails/rails/issues/31825", "created_at": "2018-01-29 18:59:34", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361349519", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @eileencodes (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-29 18:59:37", "user": 7468109, "id": 361349519}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361349923", "text": "Thanks @mistydemeo! 😄 ", "created_at": "2018-01-29 19:00:59", "user": 1080678, "id": 361349923}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361352818", "text": "Thanks for the quick review! ✨ ", "created_at": "2018-01-29 19:10:45", "user": 780485, "id": 361352818}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "# An external mysql database has been connected.\r\n# My schema.rb after running rails db:schema:dump \r\n\r\n This file is auto-generated from the current state of the database. Instead of editing this file, please use the migrations feature of Active Record to incrementally modify your database, and then regenerate this schema definition. Note that this schema.rb definition is the authoritative source for your database schema. If you need to create the application database on another system, you should be using db:schema:load, not running all the migrations from scratch. The latter is a flawed and unsustainable approach (the more migrations you'll amass, the slower it'll run and the greater likelihood for issues).\r\n It's strongly recommended that you check this file into your version control system.\r\n\r\nActiveRecord::Schema.define(version: 0) do\r\n\r\n   Could not dump table \"employees\" because of following NoMethodError \r\n     undefined method `sql_type' for \"int(11)\":String\r\n\r\nend\r\n\r\nOR\r\n\r\nActiveRecord::Schema.define(version: 0) do\r\n\r\n   Could not dump table \"employees\" because of following NoMethodError \r\n     undefined method `type' for \"varchar(20)\":String\r\n\r\nend\r\n\r\n", "labels": [], "number": 31824, "updated_at": "2018-01-30 01:39:41", "user": 30500140, "closed_at": "2018-01-30 01:39:41", "id": 292515219, "title": "sql_type error", "url": "https://api.github.com/repos/rails/rails/issues/31824", "created_at": "2018-01-29 18:38:44", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361409775", "text": "I am not totally sure what you are asking here. Can you clarify what the problem is and include some instructions for how to reproduce it? A sample app that demonstrates the bug would be most helpful.", "created_at": "2018-01-29 22:31:49", "user": 13696143, "id": 361409775}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361446938", "text": "I am trying to connect to an existing mysql. have configured the database.yml accordingly-\r\ndevelopment:\r\n  adapter: mysql2\r\n  encoding: utf8\r\n  pool: 5\r\n  host: localhost\r\n  username: Ruby\r\n  password: ****\r\n  port: 3306\r\n  socket: /var/lib/mysql/mysql.sock\r\n  database: rubyappdb\r\n\r\ntest:\r\n  adapter: mysql2\r\n  encoding: utf8\r\n  pool: 5\r\n  host: localhost\r\n  username: Ruby\r\n  password: ****\r\n  port: 3306\r\n  socket: /var/lib/mysql/mysql.sock\r\n  database: rubyappdb\r\n\r\nproduction:\r\n  adapter: mysql2\r\n  encoding: utf8\r\n  pool: 5\r\n  host: localhost\r\n  username: Ruby\r\n  password: ****\r\n  port: 3306\r\n  socket: /var/lib/mysql/mysql.sock\r\n  database: rubyappdb\r\n\r\nAfter editing the database.yml i tried the rails db:schema:dump which gave me errors and to install mysql2 and mysql2 adapter gem, which i have installed.\r\n\r\nNow the command rails db:schema:dump works but the schema.rb is not filling the schema of the existing mysql database but this-\r\nActiveRecord::Schema.define(version: 0) do\r\n\r\nCould not dump table \"employees\" because of following NoMethodError\r\nundefined method `sql_type' for \"int(11)\":String\r\n\r\nend", "created_at": "2018-01-30 01:33:14", "user": 30500140, "id": 361446938}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361448035", "text": " Please use the mailing list or StackOverflow for questions/help, where a wider community will be able to help you. We reserve the issues tracker for issues only.", "created_at": "2018-01-30 01:39:40", "user": 1034, "id": 361448035}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "The documentation for `ActionController::TestCase` includes the following documentation for the `post` helper: http://api.rubyonrails.org/v5.1/classes/ActionController/TestCase.html\r\n\r\n> You can also send a real document in the simulated HTTP request.\r\n> \r\n> ```ruby\r\n> def test_create\r\n>   json = {book: { title: \"Love Hina\" }}.to_json\r\n>   post :create, json\r\n> end\r\n> ```\r\n\r\nHowever, that syntax appears to have been removed in 98b8309569a326910a723f521911e54994b112fb, shipped as of Rails 5.1. Trying to use the documented syntax results in an `ArgumentError`. The new syntax is not documented, though I assume it might be passing `body: 'string'`.\r\n\r\n### Steps to reproduce\r\n\r\nCreate an ActionController::TestCase test with the following code taken from the documentation:\r\n\r\n```ruby\r\ndef test_create\r\n  json = {book: { title: \"Love Hina\" }}.to_json\r\n  post :create, json\r\nend\r\n```\r\n\r\n### Expected behavior\r\nTest passes.\r\n\r\n### Actual behavior\r\nTest raises `ArgumentError: wrong number of arguments (given 2, expected 1)`.\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.4.2\r\n", "labels": [], "number": 31823, "updated_at": "2018-01-29 19:00:49", "user": 780485, "closed_at": "2018-01-29 19:00:49", "id": 292512570, "title": "ActionController::TestCase#post documentation is incorrect?", "url": "https://api.github.com/repos/rails/rails/issues/31823", "created_at": "2018-01-29 18:29:52", "comments": [], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n1. Clone any your project with existing credentials.yml.enc\r\n2. Forget to put the master.key file\r\n3. rails s\r\n\r\n```\r\n=> Booting Puma\r\n=> Rails 5.2.0.beta2 application starting in development \r\n=> Run `rails server -h` for more startup options\r\nExiting\r\nTraceback (most recent call last):\r\n\t62: from bin/rails:5:in `<main>'\r\n\t61: from bin/rails:5:in `load'\r\n\t60: from /Users/romansuleymanov/Downloads/Honshu/bin/spring:16:in `<top (required)>'\r\n\t59: from /Users/romansuleymanov/Downloads/Honshu/bin/spring:16:in `require'\r\n\t58: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/spring-2.0.2/lib/spring/binstub.rb:31:in `<top (required)>'\r\n\t57: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/spring-2.0.2/lib/spring/binstub.rb:31:in `load'\r\n\t56: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/spring-2.0.2/bin/spring:49:in `<top (required)>'\r\n\t55: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/spring-2.0.2/lib/spring/client.rb:30:in `run'\r\n\t54: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/spring-2.0.2/lib/spring/client/command.rb:7:in `call'\r\n\t53: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/spring-2.0.2/lib/spring/client/rails.rb:28:in `call'\r\n\t52: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/spring-2.0.2/lib/spring/client/rails.rb:28:in `load'\r\n\t51: from /Users/romansuleymanov/Downloads/Honshu/bin/rails:11:in `<top (required)>'\r\n\t50: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-7ae26885d96d/activesupport/lib/active_support/dependencies.rb:283:in `require'\r\n\t49: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-7ae26885d96d/activesupport/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n\t48: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-7ae26885d96d/activesupport/lib/active_support/dependencies.rb:283:in `block in require'\r\n\t47: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\t46: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\t45: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-7ae26885d96d/railties/lib/rails/commands.rb:18:in `<main>'\r\n\t44: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-7ae26885d96d/railties/lib/rails/command.rb:46:in `invoke'\r\n\t43: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-7ae26885d96d/railties/lib/rails/command/base.rb:65:in `perform'\r\n\t42: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/thor-0.20.0/lib/thor.rb:387:in `dispatch'\r\n\t41: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/thor-0.20.0/lib/thor/invocation.rb:126:in `invoke_command'\r\n\t40: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/thor-0.20.0/lib/thor/command.rb:27:in `run'\r\n\t39: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-7ae26885d96d/railties/lib/rails/commands/server/server_command.rb:142:in `perform'\r\n\t38: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-7ae26885d96d/railties/lib/rails/commands/server/server_command.rb:142:in `tap'\r\n\t37: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-7ae26885d96d/railties/lib/rails/commands/server/server_command.rb:147:in `block in perform'\r\n\t36: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-7ae26885d96d/railties/lib/rails/commands/server/server_command.rb:51:in `start'\r\n\t35: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-7ae26885d96d/railties/lib/rails/commands/server/server_command.rb:89:in `log_to_stdout'\r\n\t34: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/rack-2.0.3/lib/rack/server.rb:354:in `wrapped_app'\r\n\t33: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-7ae26885d96d/railties/lib/rails/commands/server/server_command.rb:27:in `app'\r\n\t32: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/rack-2.0.3/lib/rack/server.rb:219:in `app'\r\n\t31: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/rack-2.0.3/lib/rack/server.rb:319:in `build_app_and_options_from_config'\r\n\t30: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/rack-2.0.3/lib/rack/builder.rb:40:in `parse_file'\r\n\t29: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/rack-2.0.3/lib/rack/builder.rb:49:in `new_from_string'\r\n\t28: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/rack-2.0.3/lib/rack/builder.rb:49:in `eval'\r\n\t27: from config.ru:in `<main>'\r\n\t26: from config.ru:in `new'\r\n\t25: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/rack-2.0.3/lib/rack/builder.rb:55:in `initialize'\r\n\t24: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/rack-2.0.3/lib/rack/builder.rb:55:in `instance_eval'\r\n\t23: from config.ru:5:in `block in <main>'\r\n\t22: from config.ru:5:in `require_relative'\r\n\t21: from /Users/romansuleymanov/Downloads/Honshu/config/environment.rb:7:in `<main>'\r\n\t20: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-7ae26885d96d/railties/lib/rails/application.rb:360:in `initialize!'\r\n\t19: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-7ae26885d96d/railties/lib/rails/initializable.rb:60:in `run_initializers'\r\n\t18: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/tsort.rb:205:in `tsort_each'\r\n\t17: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/tsort.rb:226:in `tsort_each'\r\n\t16: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/tsort.rb:347:in `each_strongly_connected_component'\r\n\t15: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/tsort.rb:347:in `call'\r\n\t14: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/tsort.rb:347:in `each'\r\n\t13: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/tsort.rb:349:in `block in each_strongly_connected_component'\r\n\t12: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/tsort.rb:431:in `each_strongly_connected_component_from'\r\n\t11: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/tsort.rb:350:in `block (2 levels) in each_strongly_connected_component'\r\n\t10: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/tsort.rb:228:in `block in tsort_each'\r\n\t 9: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-7ae26885d96d/railties/lib/rails/initializable.rb:61:in `block in run_initializers'\r\n\t 8: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-7ae26885d96d/railties/lib/rails/initializable.rb:32:in `run'\r\n\t 7: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-7ae26885d96d/railties/lib/rails/initializable.rb:32:in `instance_exec'\r\n\t 6: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/mongoid-3ea31956b28b/lib/mongoid/railtie.rb:58:in `block in <class:Railtie>'\r\n\t 5: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/mongoid-3ea31956b28b/lib/mongoid.rb:104:in `load!'\r\n\t 4: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/mongoid-3ea31956b28b/lib/mongoid/config.rb:87:in `load!'\r\n\t 3: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/mongoid-3ea31956b28b/lib/mongoid/config/environment.rb:40:in `load_yaml'\r\n\t 2: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/erb.rb:885:in `result'\r\n\t 1: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/erb.rb:885:in `eval'\r\n(erb):164:in `<main>': undefined method `[]' for nil:NilClass (NoMethodError)\r\n```\r\n\r\n\r\n### Expected behavior\r\nClear message \r\n\r\n\r\nSpent some hours on the solution of the problem. The file is contained in .gitignore... :(", "labels": [], "number": 31822, "updated_at": "2018-01-30 22:48:36", "user": 11719983, "closed_at": "2018-01-29 22:20:56", "id": 292407024, "title": "There is no clear message if there is no master.key file", "url": "https://api.github.com/repos/rails/rails/issues/31822", "created_at": "2018-01-29 13:30:12", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361406957", "text": "Thanks for your report. This issue already fixed with #31348. \r\nIn master, an error message is showed as below. \r\n\r\n```\r\n./bin/rails s -e production\r\n=> Booting Puma\r\n=> Rails 5.2.0.beta2 application starting in production \r\n=> Run `rails server -h` for more startup options\r\nMissing encryption key to decrypt file with. Ask your team for your master key and write it to /home/y-yagi/src/tmp/master/config/master.key or put it in the ENV['RAILS_MASTER_KEY'].\r\nExiting \r\n```\r\n", "created_at": "2018-01-29 22:20:56", "user": 987638, "id": 361406957}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361731111", "text": "Updated last changes but error is reproduces\r\n\r\nRuby 2.5\r\n**Gemfile.lock**\r\nGIT\r\n  remote: https://github.com/rails/rails.git\r\n  revision: 889eb91d5f439eab647fbbef47886c61dc98e4e8\r\n\r\n1. Delete config/master.key\r\n2. Try to start rails (rails s)\r\n3. Get error\r\n\r\n```\r\n=> Booting Puma\r\n=> Rails 5.2.0.beta2 application starting in development \r\n=> Run `rails server -h` for more startup options\r\nExiting\r\nTraceback (most recent call last):\r\n\t62: from bin/rails:5:in `<main>'\r\n\t61: from bin/rails:5:in `load'\r\n\t60: from /Users/romansuleymanov/Projects/Honshu/bin/spring:16:in `<top (required)>'\r\n\t59: from /Users/romansuleymanov/Projects/Honshu/bin/spring:16:in `require'\r\n\t58: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/spring-2.0.2/lib/spring/binstub.rb:31:in `<top (required)>'\r\n\t57: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/spring-2.0.2/lib/spring/binstub.rb:31:in `load'\r\n\t56: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/spring-2.0.2/bin/spring:49:in `<top (required)>'\r\n\t55: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/spring-2.0.2/lib/spring/client.rb:30:in `run'\r\n\t54: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/spring-2.0.2/lib/spring/client/command.rb:7:in `call'\r\n\t53: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/spring-2.0.2/lib/spring/client/rails.rb:28:in `call'\r\n\t52: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/spring-2.0.2/lib/spring/client/rails.rb:28:in `load'\r\n\t51: from /Users/romansuleymanov/Projects/Honshu/bin/rails:11:in `<top (required)>'\r\n\t50: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-889eb91d5f43/activesupport/lib/active_support/dependencies.rb:283:in `require'\r\n\t49: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-889eb91d5f43/activesupport/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n\t48: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-889eb91d5f43/activesupport/lib/active_support/dependencies.rb:283:in `block in require'\r\n\t47: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\t46: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\t45: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-889eb91d5f43/railties/lib/rails/commands.rb:18:in `<main>'\r\n\t44: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-889eb91d5f43/railties/lib/rails/command.rb:46:in `invoke'\r\n\t43: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-889eb91d5f43/railties/lib/rails/command/base.rb:65:in `perform'\r\n\t42: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/thor-0.20.0/lib/thor.rb:387:in `dispatch'\r\n\t41: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/thor-0.20.0/lib/thor/invocation.rb:126:in `invoke_command'\r\n\t40: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/thor-0.20.0/lib/thor/command.rb:27:in `run'\r\n\t39: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-889eb91d5f43/railties/lib/rails/commands/server/server_command.rb:142:in `perform'\r\n\t38: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-889eb91d5f43/railties/lib/rails/commands/server/server_command.rb:142:in `tap'\r\n\t37: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-889eb91d5f43/railties/lib/rails/commands/server/server_command.rb:147:in `block in perform'\r\n\t36: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-889eb91d5f43/railties/lib/rails/commands/server/server_command.rb:51:in `start'\r\n\t35: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-889eb91d5f43/railties/lib/rails/commands/server/server_command.rb:89:in `log_to_stdout'\r\n\t34: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/rack-2.0.3/lib/rack/server.rb:354:in `wrapped_app'\r\n\t33: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-889eb91d5f43/railties/lib/rails/commands/server/server_command.rb:27:in `app'\r\n\t32: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/rack-2.0.3/lib/rack/server.rb:219:in `app'\r\n\t31: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/rack-2.0.3/lib/rack/server.rb:319:in `build_app_and_options_from_config'\r\n\t30: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/rack-2.0.3/lib/rack/builder.rb:40:in `parse_file'\r\n\t29: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/rack-2.0.3/lib/rack/builder.rb:49:in `new_from_string'\r\n\t28: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/rack-2.0.3/lib/rack/builder.rb:49:in `eval'\r\n\t27: from config.ru:in `<main>'\r\n\t26: from config.ru:in `new'\r\n\t25: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/rack-2.0.3/lib/rack/builder.rb:55:in `initialize'\r\n\t24: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/gems/rack-2.0.3/lib/rack/builder.rb:55:in `instance_eval'\r\n\t23: from config.ru:5:in `block in <main>'\r\n\t22: from config.ru:5:in `require_relative'\r\n\t21: from /Users/romansuleymanov/Projects/Honshu/config/environment.rb:7:in `<main>'\r\n\t20: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-889eb91d5f43/railties/lib/rails/application.rb:360:in `initialize!'\r\n\t19: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-889eb91d5f43/railties/lib/rails/initializable.rb:60:in `run_initializers'\r\n\t18: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/tsort.rb:205:in `tsort_each'\r\n\t17: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/tsort.rb:226:in `tsort_each'\r\n\t16: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/tsort.rb:347:in `each_strongly_connected_component'\r\n\t15: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/tsort.rb:347:in `call'\r\n\t14: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/tsort.rb:347:in `each'\r\n\t13: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/tsort.rb:349:in `block in each_strongly_connected_component'\r\n\t12: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/tsort.rb:431:in `each_strongly_connected_component_from'\r\n\t11: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/tsort.rb:350:in `block (2 levels) in each_strongly_connected_component'\r\n\t10: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/tsort.rb:228:in `block in tsort_each'\r\n\t 9: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-889eb91d5f43/railties/lib/rails/initializable.rb:61:in `block in run_initializers'\r\n\t 8: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-889eb91d5f43/railties/lib/rails/initializable.rb:32:in `run'\r\n\t 7: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/rails-889eb91d5f43/railties/lib/rails/initializable.rb:32:in `instance_exec'\r\n\t 6: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/mongoid-d479161ac28c/lib/mongoid/railtie.rb:58:in `block in <class:Railtie>'\r\n\t 5: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/mongoid-d479161ac28c/lib/mongoid.rb:104:in `load!'\r\n\t 4: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/mongoid-d479161ac28c/lib/mongoid/config.rb:87:in `load!'\r\n\t 3: from /Users/romansuleymanov/.rvm/gems/ruby-2.5.0@Honshu/bundler/gems/mongoid-d479161ac28c/lib/mongoid/config/environment.rb:40:in `load_yaml'\r\n\t 2: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/erb.rb:885:in `result'\r\n\t 1: from /Users/romansuleymanov/.rvm/rubies/ruby-2.5.0/lib/ruby/2.5.0/erb.rb:885:in `eval'\r\n(erb):164:in `<main>': undefined method `[]' for nil:NilClass (NoMethodError)\r\n```", "created_at": "2018-01-30 20:55:26", "user": 11719983, "id": 361731111}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361761191", "text": "Can you please provide a sample application that reproduces the error?\r\n", "created_at": "2018-01-30 22:48:36", "user": 987638, "id": 361761191}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "With #31615 `type_for_attribute` accepts\r\na symbol as well as a string. `has_attribute?` and `attribute_alias`\r\nalso accept either. Since these methods already call `to_s` on the argument,\r\nwe no longer need to do that at the call site.\r\n", "labels": [], "number": 31821, "updated_at": "2018-01-29 21:05:14", "user": 13696143, "closed_at": "2018-01-29 20:56:54", "id": 292389803, "title": "Avoid extra calls to to_s", "url": "https://api.github.com/repos/rails/rails/issues/31821", "created_at": "2018-01-29 12:30:48", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361231217", "text": "r? @pixeltrix\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-29 12:30:50", "user": 7468109, "id": 361231217}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nAdd configuration for host per edge guides:\r\n```\r\n# storage.yml\r\nlocal:\r\n  service: Disk\r\n  root: <%= Rails.root.join(\"storage\") %>\r\n  host: http://app:3000\r\n```\r\nrun bin/rails\r\n\r\n### Expected behavior\r\nRails should start without errors\r\n\r\n### Actual behavior\r\nRails fails on boot with ```ArgumentError: unknown keyword: host``` (see full backtrace below)\r\n\r\n### System configuration\r\n**Rails version**:\r\n5.2.0.beta2\r\n**Ruby version**:\r\n2.5.0\r\n### Backtrace\r\n```\r\n(service: app) (step: app_tests) rails aborted!\r\n(service: app) (step: app_tests) ArgumentError: Cannot load `Rails.config.active_storage.service`:\r\n(service: app) (step: app_tests) unknown keyword: host\r\n(service: app) (step: app_tests) /usr/local/bundle/gems/activestorage-5.2.0.beta2/lib/active_storage/service/disk_service.rb:14:in `initialize'\r\n/usr/local/bundle/gems/activestorage-5.2.0.beta2/lib/active_storage/service.rb:61:in `new'\r\n/usr/local/bundle/gems/activestorage-5.2.0.beta2/lib/active_storage/service.rb:61:in `build'\r\n(service: app) (step: app_tests) /usr/local/bundle/gems/activestorage-5.2.0.beta2/lib/active_storage/service/configurator.rb:17:in `build'\r\n/usr/local/bundle/gems/activestorage-5.2.0.beta2/lib/active_storage/service/configurator.rb:8:in `build'\r\n/usr/local/bundle/gems/activestorage-5.2.0.beta2/lib/active_storage/service.rb:51:in `configure'\r\n/usr/local/bundle/gems/activestorage-5.2.0.beta2/lib/active_storage/engine.rb:64:in `block (2 levels) in <class:Engine>'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:426:in `instance_exec'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:426:in `block in make_lambda'\r\n(service: app) (step: app_tests) /usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:198:in `block (2 levels) inhalting'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:606:in `block (2 levels) in default_terminator'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:605:in `catch'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:605:in `block in default_terminator'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:199:in `block in halting'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:513:in `block in invoke_before'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:513:in `each'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:513:in `invoke_before'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:131:in `run_callbacks'\r\n(service: app) (step: app_tests) /usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/reloader.rb:89:in `prepare!'\r\n/usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/application/finisher.rb:63:in `block in <module:Finisher>'\r\n/usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/initializable.rb:32:in `instance_exec'\r\n/usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/initializable.rb:32:in `run'\r\n/usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/initializable.rb:61:in `block in run_initializers'\r\n/usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/initializable.rb:60:in `run_initializers'\r\n(service: app) (step: app_tests) /usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/application.rb:360:in `initialize!'\r\n/app/config/environment.rb:5:in `<main>'\r\n/usr/local/bundle/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/usr/local/bundle/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `block in require'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `require'\r\n/usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/application.rb:336:in `require_environment!'\r\n/usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/application.rb:518:in `block in run_tasks_blocks'\r\n/usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/commands/rake/rake_command.rb:23:in `block in perform'\r\n/usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/commands/rake/rake_command.rb:20:in `perform'\r\n/usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/command.rb:48:in `invoke'\r\n/usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/commands.rb:18:in `<main>'\r\n/usr/local/bundle/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/usr/local/bundle/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `block in require'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n(service: app) (step: app_tests) /usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `require'\r\nbin/rails:4:in `<main>'\r\n\r\nCaused by:\r\nArgumentError: unknown keyword: host\r\n(service: app) (step: app_tests) /usr/local/bundle/gems/activestorage-5.2.0.beta2/lib/active_storage/service/disk_service.rb:14:in `initialize'\r\n(service: app) (step: app_tests) /usr/local/bundle/gems/activestorage-5.2.0.beta2/lib/active_storage/service.rb:61:in `new'\r\n(service: app) (step: app_tests) /usr/local/bundle/gems/activestorage-5.2.0.beta2/lib/active_storage/service.rb:61:in `build'\r\n/usr/local/bundle/gems/activestorage-5.2.0.beta2/lib/active_storage/service/configurator.rb:17:in `build'\r\n/usr/local/bundle/gems/activestorage-5.2.0.beta2/lib/active_storage/service/configurator.rb:8:in `build'\r\n/usr/local/bundle/gems/activestorage-5.2.0.beta2/lib/active_storage/service.rb:51:in `configure'\r\n/usr/local/bundle/gems/activestorage-5.2.0.beta2/lib/active_storage/engine.rb:64:in `block (2 levels) in <class:Engine>'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:426:in `instance_exec'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:426:in `block in make_lambda'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:198:in `block (2 levels) in halting'\r\n(service: app) (step: app_tests) /usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:606:in `block (2 levels) indefault_terminator'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:605:in `catch'\r\n(service: app) (step: app_tests) /usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:605:in `block in default_terminator'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:199:in `block in halting'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:513:in `block in invoke_before'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:513:in `each'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:513:in `invoke_before'\r\n(service: app) (step: app_tests) /usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:131:in `run_callbacks'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/reloader.rb:89:in `prepare!'\r\n/usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/application/finisher.rb:63:in `block in <module:Finisher>'\r\n/usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/initializable.rb:32:in `instance_exec'\r\n(service: app) (step: app_tests) /usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/initializable.rb:32:in `run'\r\n/usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/initializable.rb:61:in `block in run_initializers'\r\n(service: app) (step: app_tests) /usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/initializable.rb:60:in `run_initializers'\r\n/usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/application.rb:360:in `initialize!'\r\n/app/config/environment.rb:5:in `<main>'\r\n/usr/local/bundle/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n(service: app) (step: app_tests) /usr/local/bundle/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `block in require'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `require'\r\n(service: app) (step: app_tests) /usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/application.rb:336:in `require_environment!'\r\n/usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/application.rb:518:in `block in run_tasks_blocks'\r\n/usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/commands/rake/rake_command.rb:23:in `block in perform'\r\n/usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/commands/rake/rake_command.rb:20:in `perform'\r\n(service: app) (step: app_tests) /usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/command.rb:48:in `invoke'\r\n/usr/local/bundle/gems/railties-5.2.0.beta2/lib/rails/commands.rb:18:in `<main>'\r\n/usr/local/bundle/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n(service: app) (step: app_tests) /usr/local/bundle/gems/bootsnap-1.1.8/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `block in require'\r\n/usr/local/bundle/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n```\r\n", "labels": [], "number": 31820, "updated_at": "2018-01-29 14:33:28", "user": 704554, "closed_at": "2018-01-29 14:33:28", "id": 292379916, "title": "ArgumentError: unknown keyword: host", "url": "https://api.github.com/repos/rails/rails/issues/31820", "created_at": "2018-01-29 11:55:20", "comments": [{"reactions": {"+1": [704554]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361263535", "text": "Hey @seocahill the change that requires `host` is in `master` and not yet in Rails 5.2 beta. We should be releasing a final version soon or another beta soon. For now you can remove the `host` option and that should work, or use Rails linked to master. ", "created_at": "2018-01-29 14:33:28", "user": 1080678, "id": 361263535}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### If association is a hash-like object preloading fails\r\n\r\nIf you pass a hash-like object to preload associations (for example ActionController::Parameters)\r\npreloader will fail with the ArgumentError.\r\nThis change allows passing objects that may be converted to a Hash,\r\nSymbol or String into a preloader\r\n\r\n### Other Information\r\n\r\n` bundle exec ruby -Itest test/cases/associations/eager_test.rb` passes\r\n", "labels": [], "number": 31819, "updated_at": "2018-03-03 19:51:57", "user": 213166, "closed_at": "None", "id": 292336822, "title": "If association is a hash-like object preloading fails", "url": "https://api.github.com/repos/rails/rails/issues/31819", "created_at": "2018-01-29 09:28:34", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361187139", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @eileencodes (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-29 09:28:37", "user": 7468109, "id": 361187139}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361220292", "text": "`bundle exec rake test:sqlite3` passes", "created_at": "2018-01-29 11:41:12", "user": 213166, "id": 361220292}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362156400", "text": "thank you for the review @composerinteralia, I've made requested changes", "created_at": "2018-02-01 04:39:26", "user": 213166, "id": 362156400}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/370174845", "text": "@bpohoriletz it might be worth rebasing this on `master` so you can get a passing travis build.\r\n@eileencodes I left an initial review, but this still needs review by a committer.", "created_at": "2018-03-03 19:51:57", "user": 13696143, "id": 370174845}], "assignees": [1080678, 1080678], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "This example was added in abdf546ad6d02ecb95766e73cd3c645a48c954de\r\nbut was inconsistent with `composed_of :balance` definition in the\r\n'Customer'.\r\n\r\nRelated to #31346, https://github.com/rails/rails/pull/31346#issuecomment-361169424\r\n\r\nr? @kamipo ", "labels": [], "number": 31818, "updated_at": "2018-01-29 09:19:46", "user": 6443532, "closed_at": "2018-01-29 09:17:36", "id": 292331463, "title": "Fix the example of 'finding records by a value object'", "url": "https://api.github.com/repos/rails/rails/issues/31818", "created_at": "2018-01-29 09:09:50", "comments": [], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "I think this is a joke, although not a great one.\r\nIt's mildly unprofessional, so I think we\r\nshould get rid of it.\r\n", "labels": [], "number": 31817, "updated_at": "2018-01-28 22:54:44", "user": 13696143, "closed_at": "2018-01-28 22:52:51", "id": 292246816, "title": "Remove joke in security guide [ci skip]", "url": "https://api.github.com/repos/rails/rails/issues/31817", "created_at": "2018-01-28 22:46:15", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361103444", "text": "r? @schneems\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-28 22:46:17", "user": 7468109, "id": 361103444}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361103923", "text": "Thanks", "created_at": "2018-01-28 22:52:58", "user": 59744, "id": 361103923}], "assignees": [59744, 59744], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Fixes #31703", "labels": [], "number": 31816, "updated_at": "2018-01-28 21:42:15", "user": 13696143, "closed_at": "2018-01-28 21:10:45", "id": 292236197, "title": "Remove out-of-date references to jQuery [ci skip]", "url": "https://api.github.com/repos/rails/rails/issues/31816", "created_at": "2018-01-28 20:38:03", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361093759", "text": "r? @pixeltrix\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-28 20:38:11", "user": 7468109, "id": 361093759}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "It makes sense to be as strict as possible\r\nwith headers from the outside world, but I\r\nbelieve the primary concern is CRLF injection.\r\nAllowing @ to support Apache's mod_unique_id\r\n(see #31644) seems OK to me, but I definitely\r\nwant to get confirmation from an expert.", "labels": [], "number": 31815, "updated_at": "2018-01-30 01:46:35", "user": 13696143, "closed_at": "2018-01-30 01:45:03", "id": 292224294, "title": "Allow @ in X-Request-Id header", "url": "https://api.github.com/repos/rails/rails/issues/31815", "created_at": "2018-01-28 17:59:39", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361082150", "text": "r? @georgeclaghorn\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-28 17:59:47", "user": 7468109, "id": 361082150}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "```ruby\r\nadd_index :products, :price, order: \"DESC NULLS LAST\"\r\n```\r\n\r\nDumps as:\r\n```diff\r\n- t.index [\"price\"], name: \"index_products_on_price\", order: :desc, opclass: :LAST\r\n+ t.index [\"price\"], name: \"index_products_on_price\", order: \"DESC NULLS LAST\"\r\n\r\n\r\n```\r\n\r\nRelated https://github.com/rails/rails/pull/31796.\r\nr? @matthewd ", "labels": [], "number": 31814, "updated_at": "2018-01-30 00:04:27", "user": 5657035, "closed_at": "2018-01-29 23:48:35", "id": 292219682, "title": "Dump correctly index nulls order for PostgreSQL", "url": "https://api.github.com/repos/rails/rails/issues/31814", "created_at": "2018-01-28 16:56:28", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361426994", "text": "Thanks!", "created_at": "2018-01-29 23:48:37", "user": 47848, "id": 361426994}], "assignees": [1034, 1034], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "This is a deeper and more correct report of #31200 after some deep investigation of the issue.\r\n\r\n### Steps to reproduce\r\nIn a new rails application generate a controller and implement it like follows:\r\n```\r\nrails new stream_test\r\ncd stream_test\r\nbin/rails g controller Home index\r\n```\r\n\r\n```ruby\r\nclass HomeController < ApplicationController\r\n  include ActionController::Live\r\n\r\n  def index\r\n    11.times { response.stream.write('a') }\r\n    ensure\r\n      response.stream.close\r\n  end\r\nend\r\n```\r\nThen run the controller test\r\n```\r\nbin/rails test\r\n```\r\n### Expected behavior\r\nThe test should succeed\r\n\r\n### Actual behavior\r\nThe test will just hang forever. This is because under the hood when streaming responses with `ActionController::Live` we are adding the responses to a `SizedQueue` with size `10`. In a real context, the browser will consume the data as soon as it is generated thus freeing space in the queue; in a rack test context, however, we are expecting the whole response to be returned without actually consuming it as it is processed. So if the test includes more than `10` writes on the stream, the tests will hang forever.\r\n\r\nI can see three possible solutions:\r\n * Disable streaming in test environments\r\n * Substitute the `SizedQueue` with an infinite `Queue` in test environments\r\n * Consume the response in async.\r\n\r\nThe third option is arguably the best solution, but it is also the most complex one. I'm also not sure where it should be implemented, it could require changes in the `rack-test` gem.\r\n\r\nAny other thoughts?\r\n\r\n### System configuration\r\n**Rails version**:\r\nLastest master (Rails 5.2.0.beta2) at the time of writing. Commit: `a88eb9087260cca256c6faba40bf538d4a0289b3`\r\n**Ruby version**:\r\nruby 2.4.2p198 (2017-09-14 revision 59899) [x86_64-darwin16]\r\n", "labels": [], "number": 31813, "updated_at": "2018-01-28 16:35:37", "user": 64094, "closed_at": "None", "id": 292217998, "title": "Testing an ActionController::Live controller leads to a deadlock", "url": "https://api.github.com/repos/rails/rails/issues/31813", "created_at": "2018-01-28 16:34:15", "comments": [], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "This is something of a work in progress that starts to address #31219.\r\n\r\n`Post.where('id = ?', 1)` used to generate this query:\r\n\r\n```sql\r\n SELECT  \"posts\".* FROM \"posts\" WHERE (\"id\" = 1) LIMIT ?  [[\"LIMIT\", 11]]\r\n```\r\n\r\nnow it will generate this query with a bind parameter:\r\n\r\n```sql\r\nSELECT  \"posts\".* FROM \"posts\" WHERE \"posts\".\"id\" = ? LIMIT ?  [[\"id\", 1], [\"LIMIT\", 11]]\r\n```\r\n\r\nI did the same thing for some other simple cases:\r\n\r\n```ruby\r\nPost.where('id != ?', 1)\r\nPost.where('id <> ?', 1)\r\nPost.where('id <= ?', 1)\r\nPost.where('id >= ?', 1)\r\nPost.where('id < ?', 1)\r\nPost.where('id > ?', 1)\r\n```\r\n\r\nIt also works with associations:\r\n\r\n```ruby\r\nPost.joins(:comments).where('comments.id = ?', 1)\r\nComment.joins(:post).where('comments.id = ?', 1)\r\n```\r\n\r\nAnd we can use `includes` without explicitly calling `references`:\r\n\r\n```ruby\r\nPost.includes(:comments).where('comments.id = ?', 1)\r\n```\r\n\r\nThere are cases that this does NOT cover, and I am unsure how many of them we should try to cover:\r\n- Keyword binds: `where('id = :id', id: 1) - this one seems doable,\r\n- Quoted table and column names: `where('\"posts\".\"id\" = ?', 1)- not sure if it makes sense to deal with this\r\n- Multiple conditions with `AND` or `OR` - Maybe not? This might get out of hand\r\n- Expressions with \"LIKE\", \"IN\", \"SIMILAR TO\"\r\n\r\nI'm guessing ideal solution is somewhere between what I have now and a library that parses SQL where clauses into ASTs 😄 .", "labels": [], "number": 31812, "updated_at": "2018-03-18 22:25:23", "user": 13696143, "closed_at": "2018-03-18 22:25:23", "id": 292205473, "title": "Use bind params for basic where strings", "url": "https://api.github.com/repos/rails/rails/issues/31812", "created_at": "2018-01-28 13:43:19", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361067011", "text": "r? @sgrif \r\nI know you have thought about this a bit", "created_at": "2018-01-28 14:27:54", "user": 13696143, "id": 361067011}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361068294", "text": "This is probably a dumb question, but why do we need to parse this much? I was hoping we could pass all placeholders straight through as bind parameters without caring how they're being used at all. (And deriving the type, where necessary, from the supplied value.)", "created_at": "2018-01-28 14:46:20", "user": 1034, "id": 361068294}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361071836", "text": "I don't think that is a dumb question at all. We definitely don't want to make changes like this if there isn't a good reason. \r\n\r\nMy understanding is that it has to do with prepared statements.\r\n\r\nFor the query `Post.where(\"id = ?\", 1)`:\r\n\r\nIf we pass `[\"id = ?\", 1]` to `sanitize_sql` (as we currently do), we get back the string `\"id = 1\"`. With that we end up making a query that cannot be prepared:\r\n\r\n```sql\r\n SELECT  \"posts\".* FROM \"posts\" WHERE (id = 1) LIMIT ?  [[\"LIMIT\", 11]]\r\n```\r\n\r\nIf we do some parsing we can skip `sanitize_sql` and just make the relevant Arel node with an `Arel::Nodes::BindParam`. Then we end up with a preparable query:\r\n\r\n```sql\r\nSELECT  \"posts\".* FROM \"posts\" WHERE \"posts\".\"id\" = ? LIMIT ?  [[\"id\", 1], [\"LIMIT\", 11]]\r\n```\r\n\r\nThis is also the query you get when you use the hash syntax: `Post.where(id: 1)`.\r\n\r\nThis should give more context: https://github.com/rails/rails/commit/cbcdecd2c55fca9613722779231de2d8dd67ad02\r\n\r\nI also think it would be good to do some benchmarking on this. I'm guessing there is a known way do to that, but I don't know what it is.\r\n", "created_at": "2018-01-28 15:38:21", "user": 13696143, "id": 361071836}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361108120", "text": "Right; my question is whether we can convert `[\"id = ?\", 1]` directly into something like `Arel::Nodes::LiteralSequence.new([Arel::Nodes::SqlLiteral.new(\"id = \"), Arel::Nodes::BindParam.new(ActiveRecord::Relation::QueryAttribute.new(\"_xx\", 1, ActiveModel::Type::Integer.new))])`, without needing to specifically recognise the contained operation(s) or columns.", "created_at": "2018-01-28 23:51:44", "user": 1034, "id": 361108120}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361108391", "text": "Got it. I have no idea, but now I have something to go dig into. Thanks!", "created_at": "2018-01-28 23:55:15", "user": 13696143, "id": 361108391}, {"reactions": {"heart": [13696143]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361108840", "text": ":+1: (note that I invented `LiteralSequence`)", "created_at": "2018-01-29 00:01:18", "user": 1034, "id": 361108840}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361483703", "text": "@matthewd that suggestion is working great so far, and I'm really happy to be learning more about arel.\r\n\r\nI do have a question about whether it makes sense to turn basically every string passed to `where` into one of these `LiteralSequence`s, or if we want to limit it to some subset. It would be fairly simple at this point to split on `?` and turn them all into `BindParam`s (although there are still some cases I am unsure about like `where('id IN (?)', [1,2,3])`). But I worry about the prepared statement cache filling up if all these queries become preparable.\r\n\r\nA related problem, we could end up with multiple versions of essentially the same query in the cache:\r\n\r\n```rb\r\nPost.where(id: 1)\r\n#=> SELECT  \"posts\".* FROM \"posts\" WHERE \"posts\".\"id\" = ? LIMIT ?  [[\"id\", 1], [\"LIMIT\", 11]]\r\n\r\nPost.where('id = ?' 1)\r\n#=> SELECT  \"posts\".* FROM \"posts\" WHERE id = ? LIMIT ?  [[\"id\", 1], [\"LIMIT\", 11]]\r\n\r\nPost.where('posts.id = ?' 1)\r\n#=> SELECT  \"posts\".* FROM \"posts\" WHERE posts.id = ? LIMIT ?  [[\"id\", 1], [\"LIMIT\", 11]]\r\n```\r\n\r\nOne thing that could help is to modify `ConnectionAdapters::StatementPool` to eject by some combination of frequency and age, rather than ejecting the statement inserted longest ago. I would be glad to look into that if you think it makes sense.", "created_at": "2018-01-30 05:44:50", "user": 13696143, "id": 361483703}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361494386", "text": "> we could end up with multiple versions of essentially the same query in the cache\r\n\r\nThat part's fine; it's strictly better than we have now (under at least some conditions, where an embedded-literal-carrying expression ends up in a cacheable query), and is [approximately, under sane application behaviour] bounded to the number of call sites.\r\n\r\n> every string passed to where\r\n\r\nThis may ultimately nudge up against #27947.. though `where` is somewhat unique among https://rails-sqli.org/ because its argument is always a condition-expression of some form: no-one could be passing a user-supplied string under the belief it can only reference an existing column, for example. (Speaking of that PR, see https://github.com/rails/rails/pull/27947#issuecomment-335977614 for a half-thought that ties in here.)\r\n\r\n> `where('id IN (?)', [1,2,3])`\r\n\r\nThis is fine to do the simple thing (i.e., treat it identically to `where('id IN (?,?,?)', 1, 2, 3)`). I'd ultimately like to do other, smarter things (`id = ANY($1::int[])` in PostgreSQL, for example)... but it's all about building in layers, and `where(id: [1,2,3])` already produces the three-bind version. Changing that one day would be nice, but it can be separate from this goal.\r\n\r\n> modify `ConnectionAdapters::StatementPool` to eject by some combination of frequency and age\r\n\r\nI don't think we have any concrete idea of how big/full people's statement pools currently get. This does seem worth exploring, though I suspect a lot of people who are using PostgreSQL and whose applications are large enough to risk filling the pool, are likely using pgbouncer in transaction pooling mode, and therefore have prepared statements turned off entirely.", "created_at": "2018-01-30 06:54:39", "user": 1034, "id": 361494386}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361495303", "text": "> though `where` is somewhat unique among https://rails-sqli.org/ because its argument is always a condition-expression of some form: no-one could be passing a user-supplied string under the belief it can only reference an existing column, for example.\r\n\r\n@mastahyeti do you have any thoughts on that point? I think the sensible goal is that basically everything else in https://rails-sqli.org/ should transition to requiring `Arel.sql` as `order` now does... but I'm feeling a bit hesitant about `where`: there's nothing the caller could've meant to provide *other than* an SQL fragment.", "created_at": "2018-01-30 06:59:52", "user": 1034, "id": 361495303}, {"reactions": {"+1": [1034]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361648006", "text": ">> though where is somewhat unique among https://rails-sqli.org/ because its argument is always a condition-expression of some form: no-one could be passing a user-supplied string under the belief it can only reference an existing column, for example.\r\n\r\n> @mastahyeti do you have any thoughts on that point? I think the sensible goal is that basically everything else in https://rails-sqli.org/ should transition to requiring Arel.sql as order now does... but I'm feeling a bit hesitant about where: there's nothing the caller could've meant to provide other than an SQL fragment.\r\n\r\nI think I agree. The main purpose of `#where` is t accept SQL. It might be good to think about cases like `Users.where(params[:column] => params[:value])` though?", "created_at": "2018-01-30 16:23:10", "user": 1144197, "id": 361648006}, {"reactions": {"+1": [1144197]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361697493", "text": "I didn't think there was an injection risk with the hash syntax. With `Users.where(params[:column] => params[:value])` those values should get quoted.\r\n\r\nFor strings we could consider string + other arguments as relatively safe,\r\nsince somebody using the bind arguments is less likely to interpolate bad things directly into the string.\r\n```rb\r\nUser.where('id = ?', 1)\r\n```\r\nBut passing a single string argument is unsafe and requires wrapping with Arel.sql():\r\n```rb\r\nUser.where(Arel.sql(\"id = #{i_promise_this_is_not_user_input}\"))\r\n```\r\n\r\n@matthewd Thoughts?\r\n", "created_at": "2018-01-30 18:57:52", "user": 13696143, "id": 361697493}, {"reactions": {"+1": [1144197]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361834058", "text": "I'm reluctant to assume a simple string contains dangerous interpolation, just because I'm reluctant to assume a simple string contains any interpolation at all. \r\n\r\nI think we'd be getting in the way of too many `'NOT active'`s and `publish_at <= now()`s, trying to defend against something that is well-known to be Bad Code 101. (And by that I don't just mean \"that's so bad they deserve the risk / don't deserve protection\", but rather \"someone doing that will just as happily paste the `Arel.sql` call in there too\": I'd love to save them, but I don't think this mechanism can help.)\r\n\r\nI believe the hash form is safe within reason, particularly now that Parameters doesn't inherit from Hash: the key should always get quoted as a column name (which still seems a data-risky thing to expose to user input, but is clearly the author's intent), and the value will be safely handled as a query value (at worst, an array -- but barring a rather unusual query, that's unlikely to expose more than the client could've achieved with two separate requests containing single values).", "created_at": "2018-01-31 06:09:14", "user": 1034, "id": 361834058}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/367544563", "text": "@matthewd I played around with this for a bit, but without great results. The current version looks like this: https://github.com/composerinteralia/rails/compare/master...composerinteralia:where-binds\r\n\r\nThe idea was to put shared logic related to bind variables in `SqlLiteral`, then use collectors to get either a string for `#santize_sql_array`, or a `LiteralSequence` for `#where`. This doesn't seem to have improved `#where` in any meaningful way, and it made `#sanitize_sql_array` quite a bit slower. If I leave `#sanitize_sql_array` alone, which I think I have to, I end up largely duplicating that method to generate the `LiteralSequence` for `#where`.\r\n\r\nI'm happy to keep working on this if you think I should, but at the moment I do not have a good solution in mind. If I am way off, we could also just close this and maybe come back to it later.", "created_at": "2018-02-22 02:15:26", "user": 13696143, "id": 367544563}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/374057956", "text": "I'm not actively working on this at the moment. Going to close for now to avoid clutter.", "created_at": "2018-03-18 22:25:23", "user": 13696143, "id": 374057956}], "assignees": [1529387, 1529387], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nThis pull request addresses \"undefined method supports_foreign_tables?\" errors\r\nby setting `supports_foreign_tables?` method in AbstractAdapter.\r\n\r\nUnlike `bundle exec rake test`, `bin/test` does not skip adapter specific test files.\r\n\r\nRelated to #31549\r\n\r\n```ruby\r\n$ cd activerecord\r\n$ bin/test\r\nUsing sqlite3\r\nTraceback (most recent call last):\r\n\t11: from bin/test:5:in `<main>'\r\n\t10: from bin/test:5:in `require_relative'\r\n\t 9: from /home/yahonda/git/rails/tools/test.rb:26:in `<top (required)>'\r\n\t 8: from /home/yahonda/git/rails/railties/lib/rails/test_unit/runner.rb:39:in `run'\r\n\t 7: from /home/yahonda/git/rails/railties/lib/rails/test_unit/runner.rb:50:in `load_tests'\r\n\t 6: from /home/yahonda/git/rails/railties/lib/rails/test_unit/runner.rb:50:in `each'\r\n\t 5: from /home/yahonda/git/rails/railties/lib/rails/test_unit/runner.rb:50:in `block in load_tests'\r\n\t 4: from /home/yahonda/git/rails/activesupport/lib/active_support/dependencies.rb:283:in `require'\r\n\t 3: from /home/yahonda/git/rails/activesupport/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n\t 2: from /home/yahonda/git/rails/activesupport/lib/active_support/dependencies.rb:283:in `block in require'\r\n\t 1: from /home/yahonda/git/rails/activesupport/lib/active_support/dependencies.rb:283:in `require'\r\n/home/yahonda/git/rails/activerecord/test/cases/adapters/postgresql/foreign_table_test.rb:6:in `<top (required)>': undefined method `supports_foreign_tables?' for #<ActiveRecord::ConnectionAdapters::SQLite3Adapter:0x000055f3ec3c47c8> (NoMethodError)\r\nDid you mean?  supports_foreign_keys?\r\n```\r\n\r\n```ruby\r\n$ cd activerecord\r\n$ ARCONN=mysql2 bin/test\r\nUsing mysql2\r\nTraceback (most recent call last):\r\n\t11: from bin/test:5:in `<main>'\r\n\t10: from bin/test:5:in `require_relative'\r\n\t 9: from /home/yahonda/git/rails/tools/test.rb:26:in `<top (required)>'\r\n\t 8: from /home/yahonda/git/rails/railties/lib/rails/test_unit/runner.rb:39:in `run'\r\n\t 7: from /home/yahonda/git/rails/railties/lib/rails/test_unit/runner.rb:50:in `load_tests'\r\n\t 6: from /home/yahonda/git/rails/railties/lib/rails/test_unit/runner.rb:50:in `each'\r\n\t 5: from /home/yahonda/git/rails/railties/lib/rails/test_unit/runner.rb:50:in `block in load_tests'\r\n\t 4: from /home/yahonda/git/rails/activesupport/lib/active_support/dependencies.rb:283:in `require'\r\n\t 3: from /home/yahonda/git/rails/activesupport/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n\t 2: from /home/yahonda/git/rails/activesupport/lib/active_support/dependencies.rb:283:in `block in require'\r\n\t 1: from /home/yahonda/git/rails/activesupport/lib/active_support/dependencies.rb:283:in `require'\r\n/home/yahonda/git/rails/activerecord/test/cases/adapters/postgresql/foreign_table_test.rb:6:in `<top (required)>': undefined method `supports_foreign_tables?' for #<ActiveRecord::ConnectionAdapters::Mysql2Adapter:0x0000563d22f93160> (NoMethodError)\r\nDid you mean?  supports_foreign_keys?\r\n$\r\n```", "labels": [], "number": 31811, "updated_at": "2018-01-28 21:11:16", "user": 73684, "closed_at": "2018-01-28 21:11:16", "id": 292195003, "title": "Define `supports_foreign_tables?` in AbstractAdapter", "url": "https://api.github.com/repos/rails/rails/issues/31811", "created_at": "2018-01-28 10:41:16", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361053373", "text": "r? @georgeclaghorn\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-28 10:41:23", "user": 7468109, "id": 361053373}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": " I added missing tests for `ActiveStorage::Blob#image?` and `ActiveStorage::Blob#video?`!\r\nThank you!", "labels": [], "number": 31810, "updated_at": "2018-01-29 00:27:01", "user": 7028383, "closed_at": "2018-01-29 00:27:01", "id": 292184790, "title": "Added tests for ActiveStorage::Blob#image? and ActiveStorage::Blob#video?", "url": "https://api.github.com/repos/rails/rails/issues/31810", "created_at": "2018-01-28 07:24:53", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361043748", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @schneems (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-28 07:24:56", "user": 7468109, "id": 361043748}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361096526", "text": "Can you please squash your commits?", "created_at": "2018-01-28 21:13:40", "user": 94129, "id": 361096526}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361109235", "text": "@georgeclaghorn Sorry, I squashed them!", "created_at": "2018-01-29 00:06:10", "user": 7028383, "id": 361109235}], "assignees": [59744, 59744], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "", "labels": [], "number": 31809, "updated_at": "2018-01-28 01:59:42", "user": 1825322, "closed_at": "2018-01-28 01:59:42", "id": 292168389, "title": "Rename local variable name `rows_affected` to `affected_rows` in `persistence.rb`", "url": "https://api.github.com/repos/rails/rails/issues/31809", "created_at": "2018-01-28 01:32:36", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361031791", "text": "Thanks, but it is fine as is.", "created_at": "2018-01-28 01:59:42", "user": 12642, "id": 361031791}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "`#one` asserts that the relation contains exactly one record, and\r\nreturns it. If there are no records or more than one, an\r\n`ActiveRecord::NoRecordFound` or `ActiveRecord::MultipleRecordsFound`\r\nexception is raised, respectively.\r\n\r\nThis is a concept borrowed from other ORM tools. Is useful when a\r\ndata schema has a \"many\" relationship, but only a single record is\r\nexpected in some situation.\r\n\r\nDue to potential confusion with `ActiveRecord::Relation#one?`, I\r\nalso suggest the name `#single`.", "labels": [], "number": 31808, "updated_at": "2018-01-27 05:01:55", "user": 7873686, "closed_at": "2018-01-27 05:01:55", "id": 292082236, "title": "Introduce `ActiveRecord::Relation#one`", "url": "https://api.github.com/repos/rails/rails/issues/31808", "created_at": "2018-01-27 02:28:15", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360952999", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @schneems (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-27 02:28:26", "user": 7468109, "id": 360952999}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360960567", "text": "Thanks for bringing attention back to this!\r\n\r\nWhile I'm still partial to the name `one`, I think #26206 is on the right track by adding it to Enumerable first.", "created_at": "2018-01-27 05:01:54", "user": 1034, "id": 360960567}], "assignees": [59744, 59744], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "We locked Minitest to 5.11.1 in #31799\r\nbecause 5.11.2 included a breaking change.\r\nThe change was fixed in 5.11.3, so we no\r\nlonger need to lock in the version.", "labels": [], "number": 31807, "updated_at": "2018-01-27 05:21:09", "user": 13696143, "closed_at": "2018-01-27 03:46:04", "id": 292069307, "title": "Relax minitest versions", "url": "https://api.github.com/repos/rails/rails/issues/31807", "created_at": "2018-01-27 00:13:15", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360940162", "text": "r? @georgeclaghorn\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-27 00:13:17", "user": 7468109, "id": 360940162}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360942404", "text": "Is there any way to stop the previous build when I push up new commits?", "created_at": "2018-01-27 00:31:00", "user": 13696143, "id": 360942404}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Fixes https://github.com/rails/rails/issues/31801.\r\n\r\nI decided to raise early (in `transactions.rb`) to avoid creation of blank transaction.\r\n\r\nr? @rafaelfranca ", "labels": [], "number": 31806, "updated_at": "2018-01-28 14:59:12", "user": 5657035, "closed_at": "None", "id": 292064468, "title": "Raise error for subsequent record #destroy's", "url": "https://api.github.com/repos/rails/rails/issues/31806", "created_at": "2018-01-26 23:41:54", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361019428", "text": "Destroying the same record multiple times is a programming error; I don't think it's worth optimising away the empty transaction, especially at the cost of putting the check somewhere less intuitive. \r\n\r\nThere are already three checks for mutating a destroyed record in `persistence.rb`, which suggests this one should live there too:\r\n\r\nhttps://github.com/rails/rails/blob/a5b3d5bf4345e7c51aae5a181beabe8dc1c28955/activerecord/lib/active_record/persistence.rb#L458\r\n\r\nhttps://github.com/rails/rails/blob/a5b3d5bf4345e7c51aae5a181beabe8dc1c28955/activerecord/lib/active_record/persistence.rb#L636-L638\r\n\r\nhttps://github.com/rails/rails/blob/a5b3d5bf4345e7c51aae5a181beabe8dc1c28955/activerecord/lib/active_record/persistence.rb#L697", "created_at": "2018-01-27 22:11:24", "user": 432189, "id": 361019428}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361020463", "text": "Should `delete` also raise an error when called on a destroyed record? It doesn't trigger callbacks, so it's not required to resolve https://github.com/rails/rails/issues/31801, but it seems inconsistent for one to raise and not the other.\r\n\r\n```ruby\r\nrecord.delete && record.destroy # raises\r\n\r\nrecord.destroy && record.delete # doesn't raise??\r\n```", "created_at": "2018-01-27 22:27:15", "user": 432189, "id": 361020463}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361033533", "text": "@eugeneius Thanks for review! Agree. Updated my PR.", "created_at": "2018-01-28 02:38:46", "user": 5657035, "id": 361033533}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361069156", "text": "I'm a bit torn on this.. `save` doesn't care if there's nothing to save, and explicitly does still run callbacks in that case.\r\n\r\nIf this is going to raise, I do think it needs a deprecation. We even have tests that assert the current behaviour.\r\n\r\nMostly I just don't see a benefit to adding the extra conditional. A callback that truly cares about only running once needs to independently consider that fact: just because we know this instance hasn't been `destroy`ed doesn't mean another (in this process, or in another process) hasn't.", "created_at": "2018-01-28 14:59:12", "user": 1034, "id": 361069156}], "assignees": [47848, 47848], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "~Just messing around with travis at the moment to see if I can sort out the failing railties suite~\r\n\r\nHoping for lots of green dots", "labels": [], "number": 31805, "updated_at": "2018-01-28 00:01:31", "user": 13696143, "closed_at": "2018-01-27 15:02:23", "id": 292043595, "title": "Get travis build passing", "url": "https://api.github.com/repos/rails/rails/issues/31805", "created_at": "2018-01-26 21:55:55", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360915186", "text": "r? @eileencodes\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-26 21:55:57", "user": 7468109, "id": 360915186}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360921093", "text": "With this change we end up using the pre-installed bundler 1.16.0. For 2.5.0 `av:ujs` and `railties` now pass, but `guides` failed.", "created_at": "2018-01-26 22:23:44", "user": 13696143, "id": 360921093}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360927949", "text": "I think skipping the bundler cache solved it. Going to squash this into one commit now.", "created_at": "2018-01-26 22:57:36", "user": 13696143, "id": 360927949}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360928749", "text": "I don't think we want to disable the bundler cache. The builds are already slow, I'm not excited to make all builds slower.", "created_at": "2018-01-26 23:01:39", "user": 47848, "id": 360928749}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360929047", "text": "Yeah, I hear you there.\r\n\r\nRemoving these got everything passing except `guides` on 2.5.0\r\n```\r\n  - \"travis_retry gem update --system\"\r\n  - \"travis_retry gem install bundler\"\r\n```\r\n", "created_at": "2018-01-26 23:03:11", "user": 13696143, "id": 360929047}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360930474", "text": "https://github.com/travis-ci/travis-ci/issues/9062", "created_at": "2018-01-26 23:10:54", "user": 13696143, "id": 360930474}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360985930", "text": "Ah, it looks like `guides` fails when we don't update bundler because there is a problem with bundler 1.16.0. https://github.com/rails/rails/pull/31023 https://github.com/bundler/bundler/issues/6072 https://github.com/travis-ci/travis-ci/issues/8969", "created_at": "2018-01-27 13:46:00", "user": 13696143, "id": 360985930}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360990454", "text": "@composerinteralia yea it's not an accident that we've locked bundler on the travis builds. We did it because the guides test scripts don't pass and until bundler releases a fix for the bug that caused that we can't use it, unfortunately.  I'm going to close this for now and we'll keep an eye on bundler. Thanks for the PR. ", "created_at": "2018-01-27 15:02:23", "user": 1080678, "id": 360990454}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360994080", "text": "@eileencodes any other suggestions for getting the travis build passing on `master`?\r\nI'm happy to keep working on this, either as part of this PR or in a separate PR.\r\n\r\nUsing bundler 1.16.1 for `guides` and 1.16.0 for everything else does pass, but I understand if that is not the approach we want to take. Thanks for the review!", "created_at": "2018-01-27 15:58:46", "user": 13696143, "id": 360994080}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360995103", "text": "@y-yagi it looks like you were also digging into this. Did you come up with anything? Happy to help if I can!", "created_at": "2018-01-27 16:14:09", "user": 13696143, "id": 360995103}, {"reactions": {"+1": [13696143]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361026087", "text": "I suspect this is Travis's bug. So I'm waiting for a response from Travis.", "created_at": "2018-01-28 00:01:31", "user": 987638, "id": 361026087}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "* ruby 2.2.9p480 (2017-12-15 revision 61259) [x86_64-linux]\r\n* mysql2 gem 0.4.10\r\n\r\n# rails 4.2.10\r\n\r\n* mysql server 5.7.21\r\n\r\n```ruby\r\nclass Homu01 < ActiveRecord::Migration\r\n  def change\r\n    create_table :homu01 do |t|\r\n      t.column :createdts01, :timestamp, :null => false\r\n      t.column :createdts02, :timestamp, :null => false\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n```sql\r\nCREATE TABLE `homu01` (`id` int(11) auto_increment PRIMARY KEY, `createdts01` datetime NOT NULL, `createdts02` datetime NOT NULL) ENGINE=InnoDB\r\n```\r\n\r\n```\r\nmysql> desc homu01;\r\n+-------------+----------+------+-----+---------+----------------+\r\n| Field       | Type     | Null | Key | Default | Extra          |\r\n+-------------+----------+------+-----+---------+----------------+\r\n| id          | int(11)  | NO   | PRI | NULL    | auto_increment |\r\n| createdts01 | datetime | NO   |     | NULL    |                |\r\n| createdts02 | datetime | NO   |     | NULL    |                |\r\n+-------------+----------+------+-----+---------+----------------+\r\n3 rows in set (0.00 sec)\r\n\r\n```\r\n\r\n# rails 5.1.4\r\n\r\n```ruby\r\nclass Homu01 < ActiveRecord::Migration[4.2]\r\n  def change\r\n    create_table :homu01 do |t|\r\n      t.column :createdts01, :timestamp, :null => false\r\n      t.column :createdts02, :timestamp, :null => false\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n## mysql server 5.5.59\r\n\r\n```sql\r\nCREATE TABLE `homu01` (`id` int NOT NULL AUTO_INCREMENT PRIMARY KEY, `createdts01` timestamp NOT NULL, `createdts02` timestamp NOT NULL) ENGINE=InnoDB\r\n```\r\n\r\n```\r\nmysql> desc homu01;\r\n+-------------+-----------+------+-----+---------------------+-----------------------------+\r\n| Field       | Type      | Null | Key | Default             | Extra                       |\r\n+-------------+-----------+------+-----+---------------------+-----------------------------+\r\n| id          | int(11)   | NO   | PRI | NULL                | auto_increment              |\r\n| createdts01 | timestamp | NO   |     | CURRENT_TIMESTAMP   | on update CURRENT_TIMESTAMP |\r\n| createdts02 | timestamp | NO   |     | 0000-00-00 00:00:00 |                             |\r\n+-------------+-----------+------+-----+---------------------+-----------------------------+\r\n3 rows in set (0.00 sec)\r\n```\r\n\r\n## mysql server 5.7.21\r\n\r\n```\r\n$ rake db:migrate RAILS_ENV=development\r\nconfig.eager_load is set to nil. Please update your config/environments/*.rb files accordingly:\r\n\r\n  * development - set it to false\r\n  * test - set it to false (unless you use a tool that preloads your test environment)\r\n  * production - set it to true\r\n\r\n== 20180126144548 Homu01: migrating ===========================================\r\n-- adapter_name()\r\n   -> 0.0000s\r\n-- adapter_name()\r\n   -> 0.0000s\r\n-- create_table(:homu01, {:id=>:integer})\r\nrake aborted!\r\nStandardError: An error has occurred, all later migrations canceled:\r\n\r\nMysql2::Error: Invalid default value for 'createdts02': CREATE TABLE `homu01` (`id` int NOT NULL AUTO_INCREMENT PRIMARY KEY, `createdts01` timestamp NOT NULL, `createdts02` timestamp NOT NULL) ENGINE=InnoDB\r\n/home/xxxxx/.rvm/gems/ruby-2.2.7/gems/mysql2-0.4.10/lib/mysql2/client.rb:120:in `_query'\r\n/home/xxxxx/.rvm/gems/ruby-2.2.7/gems/mysql2-0.4.10/lib/mysql2/client.rb:120:in `block in query'\r\n/home/xxxxx/.rvm/gems/ruby-2.2.7/gems/mysql2-0.4.10/lib/mysql2/client.rb:119:in `handle_interrupt'\r\n/home/xxxxx/.rvm/gems/ruby-2.2.7/gems/mysql2-0.4.10/lib/mysql2/client.rb:119:in `query'\r\n/home/xxxxx/.rvm/gems/ruby-2.2.7/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract_mysql_adapter.rb:214:in `block (2 levels) in execute'\r\n/home/xxxxx/.rvm/gems/ruby-2.2.7/gems/activesupport-5.1.4/lib/active_support/dependencies/interlock.rb:46:in `block in permit_concurrent_loads'\r\n/home/xxxxx/.rvm/gems/ruby-2.2.7/gems/activesupport-5.1.4/lib/active_support/concurrency/share_lock.rb:185:in `yield_shares'\r\n.\r\n.\r\n.\r\n```\r\n\r\nI tried this.\r\n\r\n```diff\r\n$ hg diff\r\ndiff --git a/db/migrate/20180126144548_homu01.rb b/db/migrate/20180126144548_homu01.rb\r\n--- a/db/migrate/20180126144548_homu01.rb\r\n+++ b/db/migrate/20180126144548_homu01.rb\r\n@@ -1,4 +1,4 @@\r\n-class Homu01 < ActiveRecord::Migration[4.2]\r\n+class Homu01 < ActiveRecord::Migration[5.1]\r\n   def change\r\n     create_table :homu01 do |t|\r\n       t.column :createdts01, :timestamp, :null => false\r\n```\r\n\r\nBut no change.\r\n\r\nAccording to [stackoverflow](https://stackoverflow.com/questions/42020422/mysql-server-5-7-17-multiple-timestamp-not-null-fields-on-table),\r\nMySQL team said [Not a Bug](https://bugs.mysql.com/bug.php?id=80163).\r\n\r\nI don't know why SQL type was changed from Rails 4.2 **datetime** to Rails 5.1 **timestamp**.\r\n", "labels": [], "number": 31804, "updated_at": "2018-01-27 06:42:28", "user": 200784, "closed_at": "None", "id": 292008424, "title": "Multiple timestamp causes db migrate error on Rails 5.1.4 and MySQL 5.7", "url": "https://api.github.com/repos/rails/rails/issues/31804", "created_at": "2018-01-26 19:35:38", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360898480", "text": "@kamipo can you take a look since you are our MySQL expert?", "created_at": "2018-01-26 20:40:43", "user": 47848, "id": 360898480}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360964766", "text": "This change is for dumping native timestamp types correctly which was introduced at #23553.\r\n\r\nHistorically, TIMESTAMP type has nonstandard behaviors for default values and NULL-value.\r\nBut the nonstandard behaviors are deprecated and will be removed in a future MySQL release.\r\n\r\nSo please enable `explicit_defaults_for_timestamp` on your server.\r\n\r\nhttps://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_explicit_defaults_for_timestamp", "created_at": "2018-01-27 06:42:28", "user": 12642, "id": 360964766}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "\r\nFixes #31694 \r\n\r\nIn some cases, `remove_unloadable_constants!` could get stuck because unloading a constant might cause an autoloaded constant to be re-added to `autoloaded_constants`. See #31694 for a detailed description and a demo app. \r\n\r\nI chose to use `.uniq!` instead of swapping `Array` for `Set` because: \r\n\r\n- `Array` operations are faster, and it might make a difference for really big apps \r\n- `Set` has a slightly different API, so if anyone is using `autoloaded_constants`, they might get a needless incompatibility if we switch it to `Set`.\r\n", "labels": [], "number": 31803, "updated_at": "2018-03-16 15:55:52", "user": 2231765, "closed_at": "2018-01-26 18:45:09", "id": 291910816, "title": "Fix infinite loop when unloading autoloaded modules ", "url": "https://api.github.com/repos/rails/rails/issues/31803", "created_at": "2018-01-26 14:04:55", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360792932", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kaspth (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-26 14:04:58", "user": 7468109, "id": 360792932}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360869963", "text": "Thanks!", "created_at": "2018-01-26 18:45:58", "user": 47848, "id": 360869963}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "", "labels": [], "number": 31802, "updated_at": "2018-01-26 11:35:51", "user": 987638, "closed_at": "2018-01-26 11:35:44", "id": 291872062, "title": "[WIP] Fix UJS build", "url": "https://api.github.com/repos/rails/rails/issues/31802", "created_at": "2018-01-26 11:20:59", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360762997", "text": "Puma's log:\r\n\r\n```\r\n/home/travis/.rvm/gems/ruby-2.5.0/bin/bundle:23:in `load': cannot load such file -- /home/travis/.rvm/rubies/ruby-2.5.0/lib/ruby/gems/2.5.0/gems/bundler-1.16.1/exe/bundle (LoadError)\r\n\tfrom /home/travis/.rvm/gems/ruby-2.5.0/bin/bundle:23:in `<main>'\r\n\tfrom /home/travis/.rvm/gems/ruby-2.5.0/bin/ruby_executable_hooks:15:in `eval'\r\n\tfrom /home/travis/.rvm/gems/ruby-2.5.0/bin/ruby_executable_hooks:15:in `<main>'\r\n```\r\nhttps://travis-ci.org/rails/rails/jobs/333677473#L1003\r\n\r\nI guess that it is the effect of 2.5.0 archive changed. \r\nRef: https://github.com/travis-ci/travis-ci/issues/8969#issuecomment-360288970\r\n", "created_at": "2018-01-26 11:35:44", "user": 987638, "id": 360762997}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nJust simply destroy any record multiple times.\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  ...\r\n  after_destroy do\r\n    puts \"User#after_destroy\"\r\n  end\r\nend\r\n\r\n>> u = User.create\r\n>>\r\n>> u.destroy\r\n   (0.1ms)  begin transaction\r\n  ReadMark Destroy (0.1ms)  DELETE FROM \"read_marks\" WHERE \"read_marks\".\"reader_id\" = ? AND \"read_marks\".\"reader_type\" = ?  [[\"reader_id\", 7], [\"reader_type\", \"User\"]]\r\n  User Destroy (0.2ms)  DELETE FROM \"users\" WHERE \"users\".\"id\" = ?  [[\"id\", 7]]\r\nUser#after_destroy\r\n   (1.6ms)  commit transaction\r\n=> #<User id: 7, name: nil, email: nil, created_at: \"2018-01-26 10:23:39\", updated_at: \"2018-01-26 10:23:39\">\r\n>>\r\n>> u.destroy\r\n   (0.1ms)  begin transaction\r\n  ReadMark Destroy (0.2ms)  DELETE FROM \"read_marks\" WHERE \"read_marks\".\"reader_id\" = ? AND \"read_marks\".\"reader_type\" = ?  [[\"reader_id\", 7], [\"reader_type\", \"User\"]]\r\nUser#after_destroy\r\n   (0.1ms)  commit transaction\r\n=> #<User id: 7, name: nil, email: nil, created_at: \"2018-01-26 10:23:39\", updated_at: \"2018-01-26 10:23:39\">\r\n```\r\n\r\n### Expected behavior\r\nAfter first `.destroy`, next calls should be no-ops -  callbacks should not be called, queries for destroying associations should not be fired. Is this intended behavior? Looks a bit counter-intuitive. Callbacks will have dangerous actions, assuming that record is deleted only once. And no need to perform needless db queries again.\r\n\r\n### Actual behavior\r\nCallbacks are called, queries for destroying associations fired multiple times.\r\n\r\n### System configuration\r\n**Rails version**: master\r\n\r\nIf this sounds reasonable, will submit a PR.\r\n", "labels": [], "number": 31801, "updated_at": "2018-01-26 18:38:45", "user": 5657035, "closed_at": "None", "id": 291863489, "title": "Destroying record multiple times repeatedly runs callbacks", "url": "https://api.github.com/repos/rails/rails/issues/31801", "created_at": "2018-01-26 10:47:45", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360865571", "text": "Yeah, it sounds reasonable to me. I'd just raise an exception if the record is already destroyed, silently doing nothing seems wrong to me.", "created_at": "2018-01-26 18:29:22", "user": 47848, "id": 360865571}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360868115", "text": "> I'd just raise an exception if the record is already destroyed\r\n\r\nMakes sense. I'm preparing a PR.", "created_at": "2018-01-26 18:38:45", "user": 5657035, "id": 360868115}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "This is a tiny fix — the Associations Basics guide originally included a sample migration that defined a foreign key with `t.integer :author_id`. I've replaced this with `t.references :author`.\r\n\r\nIn addition, since `add_reference` adds an index by default now, I've removed explicit mention of adding an index on foreign key columns.", "labels": [], "number": 31800, "updated_at": "2018-01-26 18:36:17", "user": 12194123, "closed_at": "2018-01-26 18:36:16", "id": 291797593, "title": "Fix example migrations in Associations guide", "url": "https://api.github.com/repos/rails/rails/issues/31800", "created_at": "2018-01-26 04:32:38", "comments": [], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [13696143]}, "text": "### Summary\r\nTo workaround `undefined method `error?' for` reported at https://travis-ci.org/rails/rails/jobs/333456146\r\n\r\nBy taking a look at CI history and compare Minitest version. The last successful one uses  `5.11.1` and the first failed one uses `5.11.2`, which has been released on 1/25 https://rubygems.org/gems/minitest/versions/5.11.2\r\n\r\n[Last successful one](https://travis-ci.org/rails/rails/jobs/333180697)\r\n[First failed one](https://travis-ci.org/rails/rails/jobs/333456162)\r\n\r\nThis pull request locks Minitest version to make CI green in the meantime. We will need to investigate and address later.\r\n\r\n", "labels": [], "number": 31799, "updated_at": "2018-01-27 00:38:06", "user": 73684, "closed_at": "2018-01-26 03:33:03", "id": 291786917, "title": "Lock Minitest 5.11.1", "url": "https://api.github.com/repos/rails/rails/issues/31799", "created_at": "2018-01-26 03:05:50", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360671770", "text": "r? @kaspth\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-26 03:06:07", "user": 7468109, "id": 360671770}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360672034", "text": "cc @y-yagi and @zenspider ", "created_at": "2018-01-26 03:08:07", "user": 73684, "id": 360672034}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360675198", "text": "👍 ", "created_at": "2018-01-26 03:32:52", "user": 12642, "id": 360675198}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360675617", "text": "From this commit: https://github.com/seattlerb/minitest/commit/1146f43e56e8b6decd2c8ddd88d9fd9b9d3deedb\r\n\r\n`Test` now inherits from `Runnable` instead of `Result`. `Runnable` doesn't have an `error?` method, so https://github.com/rails/rails/blob/master/activesupport/lib/active_support/testing/isolation.rb#L36 fails", "created_at": "2018-01-26 03:36:29", "user": 13696143, "id": 360675617}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360939326", "text": "Sorry about this. The fixed has been released and the version lock can be reverted.", "created_at": "2018-01-27 00:07:01", "user": 9832, "id": 360939326}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360943259", "text": "Thanks for the fix and release.", "created_at": "2018-01-27 00:38:06", "user": 73684, "id": 360943259}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "I just found that `to` variable has never been used since the file has created, so I just removed it!\r\nThank you! 👍 ", "labels": [], "number": 31798, "updated_at": "2018-01-27 10:45:21", "user": 7028383, "closed_at": "2018-01-27 10:45:21", "id": 291774264, "title": "remove unused variable to in mirror_service_test.rb", "url": "https://api.github.com/repos/rails/rails/issues/31798", "created_at": "2018-01-26 01:39:22", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360976393", "text": "Inlined `#upload` and merged in https://github.com/rails/rails/commit/a5b3d5bf4345e7c51aae5a181beabe8dc1c28955.", "created_at": "2018-01-27 10:45:20", "user": 94129, "id": 360976393}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Followup to https://github.com/rails/rails/pull/28773.\r\n\r\nMySQL supports descending indexes from 8.0.1 onwards:\r\nhttps://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-1.html\r\n\r\nr? @kamipo", "labels": [], "number": 31797, "updated_at": "2018-01-26 01:01:51", "user": 432189, "closed_at": "2018-01-26 01:01:51", "id": 291766515, "title": "Update note on MySQL index order support [ci skip]", "url": "https://api.github.com/repos/rails/rails/issues/31797", "created_at": "2018-01-26 00:49:47", "comments": [], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "## Use case\r\n\r\nWhen using `ORDER BY \"column\"` in PostgreSQL, `NULL` values will come last.\r\nWhen using `ORDER BY \"column\" DESC`, `NULL`s will come first. But this is often not useful (e.g. I want to show all products sorted by price in descending order, but those without price to show last). \r\n\r\nI can tell where I want my NULLs, by saying\r\n```sql\r\n... ORDER BY price DESC NULLS LAST\r\n```\r\n\r\nBut indexes should specify this as well. Without this PR, this can be done by\r\n```ruby\r\nadd_index :products, :price, order: \"DESC NULLS LAST\"\r\n```\r\nWhile this correctly creates index on postgresql, it is not correctly dumped into `schema.rb` and requires to have postgresql for all other environments for `DESC NULLS LAST` to work.\r\n\r\n## Solution \r\n\r\nNulls order can be explicitly specified in `add_index` as:\r\n```ruby\r\n  add_index :products, :price, order: :desc, nulls: :last\r\n```\r\n", "labels": [], "number": 31796, "updated_at": "2018-01-28 15:28:43", "user": 5657035, "closed_at": "2018-01-25 22:57:14", "id": 291738615, "title": "Add support for PostgreSQL nulls order to add_index", "url": "https://api.github.com/repos/rails/rails/issues/31796", "created_at": "2018-01-25 22:29:54", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360622405", "text": "r? @kaspth\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-25 22:29:57", "user": 7468109, "id": 360622405}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360628609", "text": "Thank you for the pull request but we prefer to not implement database specific things in the schema.rb. If you need potgresql specific things you should be using structure.sql instead of schema.rb.", "created_at": "2018-01-25 22:57:14", "user": 47848, "id": 360628609}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360631555", "text": "@rafaelfranca How about operator classes and expression indexes, which are only supported for postgresql?   Type indexes are only supported by mysql. http://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_index", "created_at": "2018-01-25 23:10:38", "user": 5657035, "id": 360631555}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360633029", "text": "For those it is fine since it was not possible to do the same thing before, but as you already pointed it is possible to use:\r\n\r\n```\r\nadd_index :products, :price, order: \"DESC NULLS LAST\"\r\n```\r\n\r\nSo there is no reason to add more code just to make the schema.rb support a database specific feature.", "created_at": "2018-01-25 23:17:24", "user": 47848, "id": 360633029}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360960853", "text": "`NULLS FIRST`/`LAST` is SQL:2003.\r\n\r\nTeaching the schema dumper to produce the `\"DESC NULLS LAST\"` form seems like the best solution to me. Null placement is specific to an individual column's order, not a property of the index overall... and the combined string also matches how you'd spell it as an argument to `.order` when writing the query.", "created_at": "2018-01-27 05:08:53", "user": 1034, "id": 360960853}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360984452", "text": "@matthewd Took into account your comments. Can you please review updates on my local branch https://github.com/rails/rails/compare/master...fatkodima:index-nulls-order ?\r\nI can't reopen this pr to force push my updates for review here.", "created_at": "2018-01-27 13:19:29", "user": 5657035, "id": 360984452}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361071154", "text": "Yeah, that looks fair to me. You'll need to open a new PR; just link back to this one for context.", "created_at": "2018-01-28 15:28:42", "user": 1034, "id": 361071154}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Since #29504, mysql2 adapter lost ability to insert zero value on\r\nprimary key due to enforce `NO_AUTO_VALUE_ON_ZERO` disabled.\r\nThat is for using `DEFAULT` on auto increment column, but we can use\r\n`NULL` instead in that case.", "labels": [], "number": 31795, "updated_at": "2018-01-26 03:42:32", "user": 12642, "closed_at": "2018-01-26 03:42:28", "id": 291730729, "title": "Bring back ability to insert zero value on primary key for fixtures", "url": "https://api.github.com/repos/rails/rails/issues/31795", "created_at": "2018-01-25 22:00:07", "comments": [], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n_Use enum in model with integer status_\r\n\r\n```\r\nclass Woop < ApplicationRecord\r\n  enum status: [ :step_1, :step_2, :step_3 ]\r\n\r\n  before_update :do_something\r\n\r\n  def do_something\r\n    puts status_before_type_cast\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nShould display the integer value of the status\r\n\r\n### Actual behavior\r\n\r\nDisplays the written value of the status. The method however work in other cases, when not in the before_update callback.\r\n\r\n### System configuration\r\n**Ruby 2.3.0**\r\n\r\n**Rails 5.1.4**\r\n", "labels": [], "number": 31794, "updated_at": "2018-01-29 13:31:04", "user": 18609937, "closed_at": "2018-01-29 13:31:04", "id": 291708483, "title": "before_type_cast method does not work in before_update callback", "url": "https://api.github.com/repos/rails/rails/issues/31794", "created_at": "2018-01-25 20:40:41", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361002005", "text": "Assuming this accurately describes the issue you reported, I'm unable to reproduce it.\r\n\r\n```\r\n# frozen_string_literal: true\r\n\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"5.1.4\"\r\n  gem \"sqlite3\"\r\n  gem 'pry'\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# Ensure backward compatibility with Minitest 4\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.integer :status, :default => 0, index: true\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  enum status: [ :open, :closed, :pending ]\r\n\r\n  before_update :check_status_cast\r\n\r\n  private\r\n\r\n  def check_status_cast\r\n    raise unless status_before_type_cast.is_a?(Integer)\r\n  end\r\n\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_enum_cast\r\n    post = Post.create!\r\n    assert post.update_attributes(:status => 1)\r\n  end\r\nend\r\n```\r\n\r\nIf that doesn't accurately describe your bug, please advise :) ", "created_at": "2018-01-27 17:54:50", "user": 2028176, "id": 361002005}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361027339", "text": "Not only when callback, but also when you specified enum label to attribute, _before_type_cast returns enum's label. \r\n\r\n```ruby  \r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"activerecord\", \"5.1.4\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :woops, force: true do |t|\r\n    t.integer :status\r\n  end\r\nend\r\n\r\nclass Woop < ActiveRecord::Base\r\n  enum status: [ :step_1, :step_2, :step_3 ]\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_enum_cast\r\n    w = Woop.create!(status: :step_1)\r\n    w.status = :step_2\r\n    assert_equal w.status_before_type_cast, :step_2\r\n  end\r\nend\r\n``` \r\n\r\nThis is intentional behavior when label is specified.  \r\n\r\nRef: \r\n* https://github.com/rails/rails/blob/a5b3d5bf4345e7c51aae5a181beabe8dc1c28955/activerecord/test/cases/enum_test.rb#L258..L266 \r\n* https://github.com/rails/rails/commit/c51f9b61ce1e167f5f58f07441adcfa117694301\r\n", "created_at": "2018-01-28 00:22:53", "user": 987638, "id": 361027339}, {"reactions": {"heart": [987638]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361245710", "text": "Hi, \r\n\r\nOk, this is the intentional behaviour. A bit surprised by it though !\r\n\r\nThanks.\r\n\r\nNicolas", "created_at": "2018-01-29 13:31:04", "user": 18609937, "id": 361245710}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n1. Inside lib folder make a folder `test`\r\n2. Inside test folder make a class `test.rb` that includes `a.rb` module\r\n3. Inside test folder make a module `a.rb`\r\n\r\n### Expected behavior\r\nIt should autoload since the lib directory and its subdirectories are in auto load paths correctly.\r\n\r\n### Actual behavior\r\n\r\nError  `load_missing_constant': Unable to autoload constant Test::A`\r\n\r\nThis happens because class name `test` is same as folder name `test`. When I changed folder name from test to something else, it worked fine.\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 4.2.8\r\n**Ruby version**:\r\nruby 2.3.4p301 (2017-03-30 revision 58214) [x86_64-darwin16]", "labels": [], "number": 31793, "updated_at": "2018-01-25 19:03:15", "user": 10669375, "closed_at": "2018-01-25 19:02:59", "id": 291675444, "title": "Rails autoloading cannot load constant when folder name is same as class name ", "url": "https://api.github.com/repos/rails/rails/issues/31793", "created_at": "2018-01-25 18:47:52", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360566221", "text": "`test.rb` should be inside `lib` (the root of the autoload directory) not under `test`. If you put under test you class or module needs to be called `Test::Test`.", "created_at": "2018-01-25 19:02:59", "user": 47848, "id": 360566221}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nA minimal reproduction app can be found here: https://github.com/michaelherold/rails_constants_bug\r\n\r\nWithin that repository, there is a readme that contains all of the solutions I attempted and includes a  workaround that mostly works.\r\n\r\nI don't think there's a way to reproduce this in a single file since it requires the autoloader to show the problem. I can add a test case to Rails itself if that would be easier to understand.\r\n\r\n### Expected behavior\r\n\r\nRails' autoloading correctly loads a series of constants that live in the following places:\r\n\r\n```\r\napp/\r\n  workflows/\r\n    base.rb      #=> defines the Workflows::Base class\r\n    null.rb      #=> inherits from Workflows::Base\r\n    workflows.rb #=> defines a `Workflows.find` helper method\r\n```\r\n\r\nIn a Rails console:\r\n\r\n```\r\nirb(main):001:0> Workflows::Null.ancestors.include?(Workflow::Base)\r\n=> true\r\n```\r\n\r\n### Actual behavior\r\n\r\nThe autoloader cannot load the `Workflows::Base` constant, despite it looking in the correct location.\r\n\r\nIn a Rails console:\r\n\r\n```\r\nirb(main):001:0> Workflows::Null.ancestors.include?(Workflow::Base)\r\nLoadError: Unable to autoload constant Base, expected /Users/michael/code/ruby/constants_bug/app/workflows/base.rb to define it\r\n        from app/workflows/null.rb:2:in `<module:Workflows>'\r\n        from app/workflows/null.rb:1:in `<top (required)>'\r\n        from (irb):1\r\n```\r\n\r\nThe weirdest part of this is if you drop `byebug` into the body of the `Workflows::Base` class, you can see that it loaded, but is not, for some reason, added to the environment.\r\n\r\n### System configuration\r\n\r\n**Rails version**: 5.1.4 and 5.2.0.beta2\r\n\r\n**Ruby version**: 2.4.2\r\n", "labels": [], "number": 31792, "updated_at": "2018-01-26 09:39:02", "user": 424833, "closed_at": "2018-01-26 09:39:02", "id": 291646388, "title": "Rails autoloading cannot load constant despite loading the file it lives in", "url": "https://api.github.com/repos/rails/rails/issues/31792", "created_at": "2018-01-25 17:10:34", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360731422", "text": "Per the error, it is looking for `Base`. `base.rb` isn't defining that, though; it's defining `Workflows::Base`.\r\n\r\nThe autoloader uses *subdirectories* of `app/` as its roots, so `app/workflows/base.rb` is a top-level file, and expected to define a top-level `Base` constant.\r\n\r\nAs you noted in workaround 1, you can fix this by moving the files down one level. You don't need to put them in `app/models`, though: you could use `app/workflows/workflows`, or `app/anything-you-like/workflows`.\r\n\r\nThe default layout is intended to provide the filesystem separation you want... you're just running into issues because you also want constant-namespace separation. I think the Railsier way to arrange these would be `app/workflows/null_workflow.rb`, defining a `NullWorkflow` class, with no namespace.", "created_at": "2018-01-26 09:39:02", "user": 1034, "id": 360731422}], "assignees": [3387, 3387], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "I wanted to check if this is something we want to do before getting too far into it, but this would add 4 methods to chain onto `where`:\r\n\r\n```rb\r\nPost.where.greater_than(:id, 42)\r\nPost.joins(:comments).where.greater_than('comments.id', 42)\r\n\r\nPost.where.less_than(:id, 42)\r\n\r\nPost.where.greater_than_or_equal(:id, 42)\r\n\r\nPost.where.less_than_or_equal(:id, 42)\r\n```\r\n\r\nThis is another possibility, but I think it would be difficult to handle strings, since string arguments\r\nto where are treated as SQL strings:\r\n\r\n```rb\r\nPost.where(:id).greater_than(42)\r\n\r\nPost.where(\"id\").greater_than(42) # <- This would be difficult to deal with\r\n```\r\n\r\nThoughts?\r\n\r\n", "labels": [], "number": 31791, "updated_at": "2018-01-25 17:59:34", "user": 13696143, "closed_at": "2018-01-25 16:40:41", "id": 291634159, "title": "WIP - Add comparison methods for where [ci skip]", "url": "https://api.github.com/repos/rails/rails/issues/31791", "created_at": "2018-01-25 16:35:24", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360522680", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-25 16:35:30", "user": 7468109, "id": 360522680}, {"reactions": {"+1": [13696143]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360524367", "text": "Thank you so much. This was proposed when we added `where.not` and we decided that we don't want to complicate the framework adding all those helpers.", "created_at": "2018-01-25 16:40:41", "user": 47848, "id": 360524367}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "![2018-01-25--1516896933_1366x768_scrot](https://user-images.githubusercontent.com/31135896/35399960-59f92630-01d4-11e8-9f8f-8957af00674b.png)\r\n", "labels": [], "number": 31790, "updated_at": "2018-01-30 19:53:37", "user": 31135896, "closed_at": "2018-01-30 19:53:37", "id": 291633380, "title": "Bundle erro", "url": "https://api.github.com/repos/rails/rails/issues/31790", "created_at": "2018-01-25 16:33:08", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360523963", "text": " Can you please provide a sample application that reproduces the error?", "created_at": "2018-01-25 16:39:23", "user": 47848, "id": 360523963}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361662782", "text": "This looks like a problem with the way your development environment is set up, rather than an issue with rails. Your best bet is to search or post on StackOverflow, where lots of people are ready to help with this sort of problem. 😸 ", "created_at": "2018-01-30 17:06:30", "user": 13696143, "id": 361662782}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nThe issue I am facing is during my request tests when I am writing an assertion like:\r\n`expect(response.body).to include \"O' Reilly\"`\r\n\r\nthe body of the response is, of course, escaped.\r\nThis brings to the issue that, following testing guides, I have to escape my expected text or unescape the body:\r\n\r\n`expect(CGI.unescapeHTML(response.body)).to include \"O' Reilly\"`\r\n\r\nor\r\n\r\n`expect(response.body).to include CGI.escapeHTML(\"O' Reilly\")`\r\n\r\nThis means including un-necessary code to my tests and polluting them with non necessary calls to escape or unescape functions which generate noise.\r\n\r\nThe situation gets even worse when using FactoryBot, which generates, from time to time, names with characters which get escaped, bringing us to the situation of having tests that randomly fail.\r\n\r\nMy Pull Request is a proposal to have an additional field that we can use, so that we can always call `expect(response.body_html).to include \"O' Reilly\"` and not care anymore about escaping/unescaping.\r\n\r\nThis solution I propose here is a backward compatible solution, with the addition of a new method, but I'd rather prefer to override the `body` method and add an `escaped_body` method which returns the body of the request:\r\n\r\n```\r\ndef body\r\n  CGI.unescapeHTML(super)\r\nend\r\n\r\ndef unescaped_body\r\n  CGI.escapeHTML(body)\r\nend\r\n```\r\n\r\nthis solution would have the advantage of being able to use a much more clear `expect(response.body).to include \"O' Reilly\"` and only use the `unescaped_body` method in particular cases; however this has the disadvantage of introducing a breaking change.\r\n\r\nI'd like a feedback if you think this change would be useful and in which direction I should proceed, in that case I'll proceed by completing my Pull Request with all the necessary tests and stuff 😃 \r\n\r\nThanks for your time!", "labels": [], "number": 31789, "updated_at": "2018-02-12 16:13:43", "user": 1319150, "closed_at": "2018-02-12 16:13:43", "id": 291624552, "title": "Provide an unescaped version of the body for tests", "url": "https://api.github.com/repos/rails/rails/issues/31789", "created_at": "2018-01-25 16:08:59", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360528342", "text": "For security reasons we should always return the body in the same way it will be rendered by the browser, escaped. Otherwise think a script tag was being escaped but it wasn't meaning that your application has a security issue in that page. But I'm fine to add a method to return the `unescaped_body` (I'd go with this name, not with `body_html`).", "created_at": "2018-01-25 16:53:21", "user": 47848, "id": 360528342}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360787744", "text": "I see your point. \r\nI added a new method and a test for it.\r\nThanks for the feedback", "created_at": "2018-01-26 13:42:50", "user": 1319150, "id": 360787744}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360975038", "text": "To me this feels like it should be more focused on body *text*, likely as something that lives in rails-dom-testing. If we're going to be indifferent to HTML escaping (and blindly assume the response is HTML to begin with, incidentally), wouldn't we also want to ignore other irrelevant distinctions, like newline vs space?", "created_at": "2018-01-27 10:17:53", "user": 1034, "id": 360975038}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364972672", "text": "After @matthewd I think I need to reflect more on this issue an find an alternative way to solve my issue. Thanks.", "created_at": "2018-02-12 16:13:43", "user": 1319150, "id": 364972672}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "replace a event with an event", "labels": [], "number": 31788, "updated_at": "2018-01-25 12:59:34", "user": 8337530, "closed_at": "2018-01-25 12:59:34", "id": 291557855, "title": "fix grammar", "url": "https://api.github.com/repos/rails/rails/issues/31788", "created_at": "2018-01-25 12:45:29", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360456576", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @sgrif (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-25 12:45:38", "user": 7468109, "id": 360456576}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360458758", "text": "This change is in vendored JS library, which is fixed in upstream already - https://github.com/thoov/mock-socket/commit/042d46067cdc33e3a1cd11f25dc245f9e33d4730. Maybe it will be better to pull new upstream version.", "created_at": "2018-01-25 12:55:06", "user": 193936, "id": 360458758}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360459694", "text": "yes, you should pull the latest version.", "created_at": "2018-01-25 12:59:34", "user": 8337530, "id": 360459694}], "assignees": [1529387, 1529387], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "The syntax highlight of FormHelper#fields was broken as the following URL so I fixed it.\r\nThis commit fixes typo and adjusts output example to other example's format.\r\nhttp://api.rubyonrails.org/v5.1/classes/ActionView/Helpers/FormHelper.html#method-i-fields", "labels": [], "number": 31787, "updated_at": "2018-01-25 08:30:53", "user": 4456532, "closed_at": "2018-01-25 08:30:48", "id": 291482612, "title": "Fix typo in API document FormHelper#fields", "url": "https://api.github.com/repos/rails/rails/issues/31787", "created_at": "2018-01-25 08:07:05", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360391037", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-25 08:07:08", "user": 7468109, "id": 360391037}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360396270", "text": "Wups, thanks!", "created_at": "2018-01-25 08:30:53", "user": 350807, "id": 360396270}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Using `assert_respond_to` and `refute_respond_to` wherever possible to make things cleaner and more consistent. This will also give us better default failure messages.", "labels": [], "number": 31786, "updated_at": "2018-01-26 18:50:56", "user": 13696143, "closed_at": "2018-01-26 18:15:31", "id": 291429527, "title": "Use respond_to test helpers", "url": "https://api.github.com/repos/rails/rails/issues/31786", "created_at": "2018-01-25 02:28:35", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360341150", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @pixeltrix (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-25 02:28:44", "user": 7468109, "id": 360341150}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360344645", "text": "We use `assert_not` over `refute`.\r\n\r\nUsing the specific assertions is definitely an improvement, though.\r\n\r\nI do wonder whether we want to keep the existing string descriptions; the ones I saw in a brief scroll seem no more insightful than the new default message would be.", "created_at": "2018-01-25 02:50:27", "user": 1034, "id": 360344645}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360345494", "text": "@matthewd Thanks! I didn't realize there was a preference for `assert_not`. I will go ahead and change all the `refute_respond_to`s to `assert_not_respond_to`s. I can also change the remaining `refutes` to `assert_not`s.\r\n\r\nYou are right about the existing string descriptions. I will take another pass over this and get rid of any that are not helpful (update: got rid of them all).\r\n\r\nLet me know if I should squash this into one commit.", "created_at": "2018-01-25 02:56:04", "user": 13696143, "id": 360345494}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360348542", "text": "It looks like `bundle exec rake test:ujs` has been timing out since f03889136adc01c202b17a14562fbd9a72db9997\r\n\r\n`\"bundle exec rackup test/ujs/config.ru -p 4567 -s puma\"` is taking longer than 5 seconds. I am having the same problem locally, but I can't figure out why it is suddenly slower.\r\n\r\nIt looks like railties on 2.5.0 has been failing for a while as well.", "created_at": "2018-01-25 03:16:57", "user": 13696143, "id": 360348542}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360640963", "text": "I found a whole bunch more places to use `assert_predicate` and `assert_not_predicate`, and also `assert_empty` and `assert_not_empty`.", "created_at": "2018-01-25 23:58:48", "user": 13696143, "id": 360640963}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360664356", "text": "@rafaelfranca it looks like a lot of these test are failing on master as well. I couldn't recreate the failures locally, but they seem to have been failing on travis since 8c42d1b6e537a50ae085a8669e604fca1729d56b", "created_at": "2018-01-26 02:16:11", "user": 13696143, "id": 360664356}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360674299", "text": "Nevermind, it looks like https://github.com/rails/rails/pull/31799 will take care of it. I will rebase on that once it gets merged in.", "created_at": "2018-01-26 03:25:46", "user": 13696143, "id": 360674299}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [8669582]}, "text": "### Steps to reproduce\r\nI think this is a bug but I'm not 100% sure if it is. I was certainly surprised by this behavior.\r\n\r\n### Expected behavior\r\nI would expect the result to be something similar to this\r\n\r\n| original string | function | expected string |\r\n| ------------- | ----------| -----------------|\r\n| TEST_CASE_HERE | `camelize` | TestCaseHere |\r\n| TEST_CASE_HERE | `camelize(:lower)` | testCaseHere|\r\n\r\n### Actual behavior\r\n\r\n```ruby\r\n\"TEST_CASE_HERE\".camelize\r\n=> \"TESTCaseHere\"\r\n\"TEST_CASE_HERE\".camelize(:lower)\r\n=> \"tESTCaseHere\"\r\n```\r\n\r\n### System configuration\r\n**Rails version**:\r\n`5.1.4`\r\n**Ruby version**:\r\n`2.4.1`", "labels": [], "number": 31785, "updated_at": "2018-01-24 22:03:55", "user": 5459225, "closed_at": "2018-01-24 21:46:08", "id": 291366404, "title": "Camelize returning wrong string for UPPERCASE_STRING", "url": "https://api.github.com/repos/rails/rails/issues/31785", "created_at": "2018-01-24 21:29:30", "comments": [{"reactions": {"+1": [5459225]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360284286", "text": "Thank you for the report. It is not a bug. camelize expects the string to be lowercase and with `_`. Like the documentation points. `camelize` is the inverse of `underscore`. And `\"TestCaseHere\".underscore` is `\"test_case_here\"`.", "created_at": "2018-01-24 21:46:08", "user": 47848, "id": 360284286}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360286316", "text": "Hey there @rafaelfranca, I appreciate the quick response. I think the docs might be out of date because the SSL example they give makes it seem like it would behave like I've listed\r\n\r\n>As a rule of thumb you can think of camelize as the inverse of underscore, though there are cases where that does not hold: \"SSLError\".underscore.camelize gives back \"SslError\". To support cases such as this, Active Support allows you to specify acronyms in config/initializers/inflections.rb:\r\n\r\nhttp://guides.rubyonrails.org/active_support_core_extensions.html#camelize", "created_at": "2018-01-24 21:53:39", "user": 5459225, "id": 360286316}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360288686", "text": "It only behaves like you think in that case because you are calling `underscore` in in `SSLError` and that returns `ssl_error` And `ssl_error` is downcased. `\"TEST_CASE_HERE\".underscore.camelize` will return what you want, but it doesn't means that `\"TEST_CASE_HERE\".camelize` should to.", "created_at": "2018-01-24 22:02:20", "user": 47848, "id": 360288686}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360289137", "text": "Ah, okay, that's right. 👍 \r\n\r\nThanks for all your help.", "created_at": "2018-01-24 22:03:55", "user": 5459225, "id": 360289137}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Most of the time the `table` and `predicate_builder`\r\npassed to `Relation.new` are exactly the\r\n`arel_table` and `predicate_builder` of the\r\ngiven `klass`. This uses `klass.arel_table`\r\nand `klass.predicate_builder` as the defaults,\r\nso we don't have to pass them in most cases.\r\n\r\nThis does change the signaure of both Relation and\r\nAssocationRelation. Are we ok with that?", "labels": [], "number": 31784, "updated_at": "2018-01-24 23:11:38", "user": 13696143, "closed_at": "2018-01-24 23:04:35", "id": 291335615, "title": "Avoid passing unnecessary arguments to relation", "url": "https://api.github.com/repos/rails/rails/issues/31784", "created_at": "2018-01-24 19:44:25", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360250903", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @georgeclaghorn (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-24 19:44:28", "user": 7468109, "id": 360250903}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360295256", "text": "`ActiveRecord::ConnectionAdapters::ConnectionHandlerTest#test_forked_child_recovers_from_disconnected_parent` is failing for 2.3.5 sqlite3_mem. I am getting this same failure locally on `master` on both 2.3.1 and 2.4.2, so maybe unrelated to my change?", "created_at": "2018-01-24 22:27:34", "user": 13696143, "id": 360295256}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360296693", "text": "Added in this commit: https://github.com/rails/rails/commit/1280ad6d19fa56e9bf6d6a261c1231326cb3d8c3", "created_at": "2018-01-24 22:33:09", "user": 13696143, "id": 360296693}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360304254", "text": "I fixed that test on master.", "created_at": "2018-01-24 23:04:28", "user": 47848, "id": 360304254}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  gem \"rails\", github: \"rails/rails\", branch: 'master'\r\n  gem \"sqlite3\"\r\n  gem 'pg'\r\nend\r\n\r\nrequire 'pg'\r\nrequire \"active_record\"\r\nrequire 'active_support'\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"postgresql\", database: \"hacky\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps(null: false)\r\n  end\r\n\r\n  create_table :comments, force: true do |t|\r\n    t.integer :post_id\r\n    t.timestamps(null: false)\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_fails_with_distinct_size\r\n    post = Post.create!\r\n    post.comments << Comment.create!\r\n\r\n    assert Post\r\n      .joins(:comments).where(Post.arel_table[:created_at].gteq(4.days.ago))\r\n      .order(Comment.arel_table[:created_at].desc).distinct.size, 1\r\n  end\r\n\r\n  def test_fails_with_includes_size\r\n    post = Post.create!\r\n    post.comments << Comment.create!\r\n\r\n    assert Post.includes(:comments)\r\n      .joins(:comments).where(Post.arel_table[:created_at].gteq(4.days.ago))\r\n      .order(Comment.arel_table[:created_at].desc).size, 1\r\n  end\r\n\r\n  def test_fails_with_includes_count\r\n    post = Post.create!\r\n    post.comments << Comment.create!\r\n\r\n    assert Post.includes(:comments)\r\n      .joins(:comments).where(Post.arel_table[:created_at].gteq(4.days.ago))\r\n      .order(Comment.arel_table[:created_at].desc).count, 1\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Expected behavior\r\nI expect both cases to be successful and return result 1. First case I reference in the order the table I joined and I distinct count it. This is a very common query.\r\n\r\nSecond case is more of an odd thing. For some reason the `size` does a distinct which also triggers the same bug (I believe). When using count without includes it works but when using includes and count (third case) we get again a distinct and it fails.\r\n\r\n### Actual behavior\r\nException is raised\r\n```\r\nActiveRecord::StatementInvalid: PG::InvalidColumnReference: ERROR:  for SELECT DISTINCT, ORDER BY expressions must appear in select list\r\n```\r\n\r\n### System configuration\r\n**Rails version**: master\r\n**Ruby version**: 2.4.3\r\n**Possible broken by**: https://github.com/rails/rails/commit/6beb4de7dd5205d9b08ce4eedbe383cb0b18540d", "labels": ["activerecord"], "number": 31783, "updated_at": "2018-01-25 09:30:13", "user": 1540483, "closed_at": "2018-01-25 05:23:32", "id": 291272893, "title": "PostgreSQL with DISTINCT ORDER raises PG::InvalidColumnReference", "url": "https://api.github.com/repos/rails/rails/issues/31783", "created_at": "2018-01-24 16:28:19", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360391401", "text": "Thanks, @kamipo any chance it can be back ported to 5-1-stable?", "created_at": "2018-01-25 08:08:57", "user": 1540483, "id": 360391401}, {"reactions": {"+1": [23869]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360410763", "text": "Yeah, backported in 6df9b69b2363734175d8869393e83e6ce8b4d7b6.", "created_at": "2018-01-25 09:30:13", "user": 12642, "id": 360410763}], "assignees": [], "state": "closed", "is-pull-request": false}
