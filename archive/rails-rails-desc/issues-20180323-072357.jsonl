{"reactions": {}, "text": "Do you have ability to uploading files from a remote location via URL?", "labels": [], "number": 32327, "updated_at": "2018-03-23 06:07:44", "user": 1852877, "closed_at": "None", "id": 307912907, "title": "Uploading files from a remote location", "url": "https://api.github.com/repos/rails/rails/issues/32327", "created_at": "2018-03-23 06:07:44", "comments": [], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nIf the options passed in don't have a default key, there's no point in\r\ncreating an array from those empty results when we can just go straight\r\nto creating an empty array.\r\n\r\n### Other Information\r\n\r\nBenchmarks:\r\n```ruby\r\nmaster_version with false\r\n{:FREE=>-2497, :T_STRING=>52, :T_ARRAY=>2000, :T_HASH=>1000, :T_IMEMO=>1}\r\nmaster_version with true\r\n{:FREE=>-3001, :T_ARRAY=>2000, :T_HASH=>1000}\r\nfast_version with false\r\n{:FREE=>-1001, :T_ARRAY=>1000}\r\nfast_version with true\r\n{:FREE=>-3001, :T_ARRAY=>2000, :T_HASH=>1000}\r\nWarming up --------------------------------------\r\nmaster_version with false\r\n                       104.985k i/100ms\r\nmaster_version with true\r\n                       118.737k i/100ms\r\nfast_version with false\r\n                       206.013k i/100ms\r\nfast_version with true\r\n                       107.005k i/100ms\r\nCalculating -------------------------------------\r\nmaster_version with false\r\n                          1.970M (±24.6%) i/s -      8.924M in   5.010302s\r\nmaster_version with true\r\n                          2.152M (±12.4%) i/s -     10.686M in   5.051588s\r\nfast_version with false\r\n                          5.613M (±19.6%) i/s -     26.782M in   5.003740s\r\nfast_version with true\r\n                          2.027M (±15.8%) i/s -      9.951M in   5.065670s\r\n\r\nComparison:\r\nfast_version with false:  5613159.2 i/s\r\nmaster_version with true:  2152354.4 i/s - 2.61x  slower\r\nfast_version with true:  2027296.0 i/s - 2.77x  slower\r\nmaster_version with false:  1969824.9 i/s - 2.85x  slower\r\n```\r\n\r\nBenchmark code:\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update\r\n                your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  gem \"benchmark-ips\"\r\n  gem \"rails\"\r\nend\r\n\r\ndef allocate_count\r\n  GC.disable\r\n  before = ObjectSpace.count_objects\r\n  yield\r\n  after = ObjectSpace.count_objects\r\n  after.each { |k,v| after[k] = v - before[k] }\r\n  after[:T_HASH] -= 1 # probe effect - we created the before hash.\r\n  GC.enable\r\n  result = after.reject { |k,v| v == 0 }\r\n  GC.start\r\n  result\r\nend\r\n\r\ndef master_version(key)\r\n  Array({}.delete(:default)).compact\r\nend\r\n\r\ndef fast_version(key)\r\n  if key\r\n    Array({}.delete(:default)).compact\r\n  else\r\n    []\r\n  end\r\nend\r\n\r\ndef test\r\n  puts \"master_version with false\"\r\n  puts allocate_count { 1000.times { master_version(false) } }\r\n  puts \"master_version with true\"\r\n  puts allocate_count { 1000.times { master_version(true) } }\r\n  puts \"fast_version with false\"\r\n  puts allocate_count { 1000.times { fast_version(false) } }\r\n  puts \"fast_version with true\"\r\n  puts allocate_count { 1000.times { fast_version(true) } }\r\n\r\n  Benchmark.ips do |x|\r\n    x.report(\"master_version with false\")  { master_version(false) }\r\n    x.report(\"master_version with true\") { master_version(true) }\r\n    x.report(\"fast_version with false\")    { fast_version(false) }\r\n    x.report(\"fast_version with true\")   { fast_version(true) }\r\n    x.compare!\r\n  end\r\nend\r\n\r\ntest\r\n```", "labels": [], "number": 32326, "updated_at": "2018-03-23 05:44:04", "user": 1635820, "closed_at": "None", "id": 307898203, "title": "Only create an array with default options if we have default options", "url": "https://api.github.com/repos/rails/rails/issues/32326", "created_at": "2018-03-23 04:22:10", "comments": [], "assignees": [], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "I do not know if this is a bug or a misunderstanding on my part. I apologise if it is the latter but would appreciate a pointer in the right direction.\r\n\r\n### Steps to reproduce\r\n\r\nCreate two models where one references the other and the latter is a subclass of the first (pluralized):\r\n\r\n```\r\nrails g model Outers::Inner name:string\r\nrails g model Outer outer_inner:references\r\n# Change app/model/outer.rb to include:\r\n#    belongs_to :outers_inner, class_name: 'Outers::Inner'\r\nrails db:migrate\r\n```\r\n\r\nChange the name of one of the automatically generated fixtures. Eg, in `test/fixtures/outers.yml`:\r\n\r\n```yaml\r\n# one: # old\r\nthree: # new\r\n  outers_inner: one\r\n```\r\n\r\nRun `rails db:fixtures:load`.\r\n\r\n### Expected behavior\r\n\r\nThe fixtures are generated as they are defined in the fixtures files.\r\n\r\nNote that this works correctly if the fixture files have not been changed from the templates and the resultant models can be used correctly.\r\n\r\n### Actual behavior\r\n\r\n```bash\r\n$ rails db:fixtures:load\r\nrails aborted!\r\nActiveRecord::Fixture::FixtureError: table \"outers\" has no column named \"name\".\r\n/.../bin/rails:9:in `require'\r\n/.../minitest_test/bin/rails:9:in `<top (required)>'\r\n/.../minitest_test/bin/spring:15:in `<top (required)>'\r\nbin/rails:3:in `load'\r\nbin/rails:3:in `<main>'\r\nTasks: TOP => db:fixtures:load\r\n(See full trace by running task with --trace)\r\n```\r\n\r\nWhen it encounters the line in the fixtures file `outers_inner: one` it appears to be trying to create an instance of the `Outer` model with the details for the `Outers::Inner` fixture. If, however, there is an `Outer` fixture with the same name there is no problem.\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.5.0 (also 2.4.1p111)\r\n", "labels": ["activerecord"], "number": 31782, "updated_at": "2018-01-29 22:31:52", "user": 4415912, "closed_at": "2018-01-29 22:31:52", "id": 291205795, "title": "Fixtures for models referencing nested models attempts to create instances of the wrong model", "url": "https://api.github.com/repos/rails/rails/issues/31782", "created_at": "2018-01-24 13:19:46", "comments": [{"reactions": {"+1": [4415912, 208019]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360959922", "text": "Fixture loads files in subdirectories with the same name as the fixture name. \r\nIn this case, files under the `fixtures/outers` are regarded as the fixture of `Outer` model. This is intentional behavior. \r\n\r\nAs a workaround, you can fix by changing fixture name of `Outers::Inner` model from `outers/inners.yml` to `outers_inners.yml`.\r\n\r\n```yml \r\n# test/fixtures/outers_inners.yml\r\n_fixture:\r\n  model_class: Outers::Inner\r\n\r\none:\r\n  name: MyString\r\n```  \r\n\r\nBy specifying `model_class`, the fixture will be recognized even if file name changes.\r\n", "created_at": "2018-01-27 04:45:47", "user": 987638, "id": 360959922}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361259385", "text": "Thanks, @y-yagi, that looks like exactly what I need.\r\n\r\nI didn't realise that fixtures could be defined in subdirectories but with a large number I can see that that makes perfect sense.", "created_at": "2018-01-29 14:20:03", "user": 4415912, "id": 361259385}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361409786", "text": "Thanks for your confirmation. I close this because it is intentional behavior. \r\nIf you have that there is a better approach, please feel free to make a PR. Thanks!\r\n", "created_at": "2018-01-29 22:31:52", "user": 987638, "id": 361409786}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n`activejob/lib/active_job/configured_job.rb` does not have any test cases so I just added two tests for `#perform_now` and `#perform_later`.\r\n\r\nThank you! 👍 \r\n", "labels": [], "number": 31781, "updated_at": "2018-01-24 11:27:14", "user": 7028383, "closed_at": "2018-01-24 11:27:14", "id": 291167576, "title": "Added test cases for active_job/configured_job.rb", "url": "https://api.github.com/repos/rails/rails/issues/31781", "created_at": "2018-01-24 11:03:52", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360102008", "text": "Thanks, but `ConfiguredJob` is not public API, and it is covered by `ActiveJob::Core::ClassMethods#set`.", "created_at": "2018-01-24 11:27:14", "user": 12642, "id": 360102008}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\nAre there any plans to set the blob's metadata column type as json? Somehow I miss the possibility to directly query the attachments for specific filter data. The steps to reproduce the problem are shown on the following lines.\r\n\r\n### Expected behavior\r\nHaving a json data type we could directly query the blob's custom metadata, without having to initialize the object and loop them to classify. It would give the freedom of saving custom data, enum like information for example (whenever an attachment is expired, or it is banned by the system, or any special category).\r\nFor PostgreSQL users it would look something like:\r\n\r\n```ruby\r\nevent = Event.last\r\nevent.images.joins(:blob).where(\"active_storage_blobs.metadata->>'banned_date' = ?\", nil)\r\n\r\n```\r\n\r\nFor MySQL:\r\n\r\n```ruby\r\nevent = Event.last\r\nevent.images.joins(:blob).where(\"JSON_EXTRACT(active_storage_blobs.metadata, '$.banned_date') = ?\", nil)\r\n\r\n```\r\n\r\n\r\n### Actual behavior\r\nQuerying metadata directly is not possible:\r\n\r\n```ruby\r\nevent.images.joins(:blob).where(\"active_storage_blobs.metadata->>'analyzed' = ?\", true)\r\n=> #<ActiveStorage::Attachment::ActiveRecord_AssociationRelation:0x2afa2cdf9f34>\r\n\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 5.2.0.beta2\r\n\r\n**Ruby version**: 2.4.1p111\r\n", "labels": ["activestorage"], "number": 31780, "updated_at": "2018-01-25 04:20:21", "user": 10326293, "closed_at": "2018-01-25 04:17:35", "id": 291125820, "title": "Blob's metadata column casted as json", "url": "https://api.github.com/repos/rails/rails/issues/31780", "created_at": "2018-01-24 08:44:39", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360356381", "text": "> Are there any plans to set the blob's metadata column type as json?\r\n\r\nNo, sorry. Blob metadata isn’t intended to be queryable.", "created_at": "2018-01-25 04:17:34", "user": 94129, "id": 360356381}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "change past tense to present tense.", "labels": [], "number": 31779, "updated_at": "2018-01-24 18:58:26", "user": 8337530, "closed_at": "2018-01-24 18:58:26", "id": 291104309, "title": "fix grammar", "url": "https://api.github.com/repos/rails/rails/issues/31779", "created_at": "2018-01-24 07:04:29", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360039689", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @eileencodes (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-24 07:04:36", "user": 7468109, "id": 360039689}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360237538", "text": "This is correct as-is. The sentence is hypothetical.", "created_at": "2018-01-24 18:58:26", "user": 94129, "id": 360237538}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "It appears that `where.not` does not query `nil` values. Here is what I observed...\r\n\r\nUsing `activerecord (= 5.1.4)`\r\n\r\n```\r\n2.3.3 :008 > User.pluck(:xxx_id).get_counts\r\n   (1.4ms)  SELECT \"users\".\"xxx_id\" FROM \"users\"\r\n => {nil=>273, \"ABC\"=>1, \"DEF\"=>1, \"GHI\"=>1, \"JKL\"=>1, \"MNO\"=>1, \"PQR\"=>1, \"STU\"=>1} \r\n2.3.3 :009 > User.where.not(xxx_id: 'xyz').count\r\n   (1.4ms)  SELECT COUNT(*) FROM \"users\" WHERE (\"users\".\"xxx_id\" != $1)  [[\"xxx_id\", \"xyz\"]]\r\n => 7 # ?????? This ought to be 280\r\n2.3.3 :010 > User.count\r\n   (1.7ms)  SELECT COUNT(*) FROM \"users\"\r\n => 280 \r\n```\r\n\r\nSome definitions from `schema.rb` (not sure if relevant):\r\n```\r\n    t.string \"xxx_id\"\r\n    t.index [\"xxx_id\"], name: \"index_users_on_xxx_id\", unique: true\r\n```", "labels": [], "number": 31778, "updated_at": "2018-01-24 02:21:40", "user": 1053956, "closed_at": "2018-01-24 02:21:39", "id": 291057916, "title": "\"where.not\" does not include records with nil ", "url": "https://api.github.com/repos/rails/rails/issues/31778", "created_at": "2018-01-24 01:56:04", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359999139", "text": "This is the expected behavior. See https://github.com/rails/rails/issues/26084#issuecomment-238350275.", "created_at": "2018-01-24 02:21:39", "user": 94129, "id": 359999139}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nUpdated a link to use https to avoid a redirect.\r\n\r\n### Other Information\r\n\r\n[ci skip]", "labels": [], "number": 31777, "updated_at": "2018-01-24 01:12:06", "user": 5591107, "closed_at": "2018-01-24 01:04:57", "id": 291045663, "title": "Updated link to use HTTPS", "url": "https://api.github.com/repos/rails/rails/issues/31777", "created_at": "2018-01-24 00:45:01", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359982125", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @rafaelfranca (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-24 00:45:03", "user": 7468109, "id": 359982125}, {"reactions": {"+1": [5591107]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359982736", "text": "At least we have another same link in https://github.com/rails/rails/blob/master/railties/RDOC_MAIN.rdoc", "created_at": "2018-01-24 00:48:28", "user": 12642, "id": 359982736}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359985770", "text": "Sorry for my mistake!", "created_at": "2018-01-24 01:04:57", "user": 5591107, "id": 359985770}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359987051", "text": "I'm fine using HTTPS. Can you address both links?", "created_at": "2018-01-24 01:12:06", "user": 12642, "id": 359987051}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\nAs of yesterday, 1/22/2018, I had a small demo application working with the activestorage, properly uploading files to S3, and able to display links to those files.\r\n\r\n Today, after making no changes whatsoever other than bundle:update, the application has stopped working.\r\n\r\n(Guidelines for creating a bug report are [available\r\nhere](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report))\r\n\r\n### Expected behavior\r\nUpon attaching data to a model, there should be a record inserted into active_storage_attachments, and a record inserted into active_storage_blobs.\r\n\r\n### Actual behavior\r\nA record gets inserted into active_storage_blobs, but **nothing gets inserted into active_storage_attachments**.  Hence when doing a Show, the system cannot find the attached data.  \r\n\r\n### System configuration\r\nRails 5.2.0.beta2  .  ruby 2.3.1p112 (2016-04-26 revision 54768) [x86_64-linux]\r\n\r\n[ActiveStorageFailure.txt](https://github.com/rails/rails/files/1658051/ActiveStorageFailure.txt)\r\n\r\n", "labels": ["activestorage"], "number": 31776, "updated_at": "2018-02-22 00:52:42", "user": 3085037, "closed_at": "None", "id": 291040223, "title": "ActiveStorage not inserting record into active_storage_attachments", "url": "https://api.github.com/repos/rails/rails/issues/31776", "created_at": "2018-01-24 00:14:26", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359983158", "text": "Can you share your demo application or another minimal application that reproduces the issue?", "created_at": "2018-01-24 00:50:33", "user": 94129, "id": 359983158}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/367521881", "text": "@legacy370 I ran into this same issue today. I solved it by adding this to my controller wherever I save the parent object (such a a `Post`) with `images` as the attachment name. This wasn't super obvious, but after some experimenting it solved my issue.\r\n\r\n`@post.images.attach(params[:post][:images])`\r\n\r\nHope that helps!", "created_at": "2018-02-22 00:08:20", "user": 7333, "id": 367521881}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\nin the documentation there is always a symbol as the name of an enum\r\n```\r\nclass Conversation < ActiveRecord::Base\r\n  enum status: [ :active, :archived ]\r\nend\r\n```\r\nand in the code activerecord/lib/active_record/enum.rb#157 its forced to be a symbol\r\n```\r\nname        = name.to_sym\r\n```\r\nbut later forced to a string key for the hash:\r\n```\r\ndefined_enums[name.to_s] = enum_values\r\n```\r\n### Expected behavior\r\n```\r\nConversation.defined_enums.include?(:status)\r\n=> true \r\n```\r\n### Actual behavior\r\n```\r\nConversation.defined_enums.include?(:status)\r\n=> false\r\nConversation.defined_enums.include?(\"status\")\r\n=> true \r\n```\r\n### System configuration\r\n**Rails version**: 4.2.8\r\n**Ruby version**: 2.3.3p222\r\n", "labels": [], "number": 31775, "updated_at": "2018-01-23 20:19:20", "user": 208315, "closed_at": "2018-01-23 20:19:20", "id": 290965503, "title": "ActiveRecord::Enum #defined_enums uses string as hash key??", "url": "https://api.github.com/repos/rails/rails/issues/31775", "created_at": "2018-01-23 19:33:59", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359917285", "text": "`defined_enums` is private API of the framework and should not be used in applications. We chose to only store strings keys there to have an unified API (only checking for string keys not symbol and strings keys)/", "created_at": "2018-01-23 20:19:20", "user": 47848, "id": 359917285}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Postgresql expects ORDER BY expressions to appear in SELECT when using DISTINCT.\r\n\r\n### Steps to reproduce\r\n\r\n_Might need to change ActiveRecord::Base.establish_connection parameters_\r\n\r\n```\r\n# frozen_string_literal: true\r\n\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(\r\n  adapter: \"postgresql\",\r\n  username: \"postgres\",\r\n  password: \"\",\r\n  database: \"postgres\"\r\n)\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.integer :author_id\r\n  end\r\n\r\n  create_table :authors, force: true do |t|\r\n    t.string :full_name\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  belongs_to :author\r\nend\r\n\r\nclass Author < ActiveRecord::Base\r\n  has_many :posts\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_includes_order_count\r\n    author = Author.create!(full_name: \"Foo Bar\")\r\n    Post.create!(author: author)\r\n\r\n    Post.includes(:author).order(\"authors.full_name\").limit(10).count\r\n  end\r\n\r\n  def test_each_slice\r\n    Post.includes(:author).order(\"authors.full_name\").each_slice(3) do |slice|\r\n      # Do something with slice\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nIt should count the results without failing.\r\n\r\n### Actual behavior\r\n```\r\nActiveRecord::StatementInvalid: PG::InvalidColumnReference: ERROR:  for SELECT DISTINCT, ORDER BY expressions must appear in select list\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Tested on 5.1.4 and 5.2.0.beta2\r\n\r\n**Ruby version**: ruby 2.4.0p0 (2016-12-24 revision 57164) [x86_64-darwin16]\r\n\r\n### Related commits\r\nhttps://github.com/rails/rails/commit/a265d4b29cf9c1be84603ec53a6f8b17b53321a9\r\nhttps://github.com/rails/rails/commit/c6cd9a59f200863ccfe8ad1d9c5a8876c39b9c5c\r\n\r\n### Possible solution (untested)\r\nUse DISTINCT ON the first order column when `column_name` is `:all`, `distinct` is `true` and there is at least one order value.\r\n\r\nhttps://www.postgresql.org/docs/9.5/static/sql-select.html\r\n> SELECT DISTINCT eliminates duplicate rows from the result.\r\n> SELECT DISTINCT ON eliminates rows that match on all the specified expressions.\r\n> SELECT ALL (the default) will return all candidate rows, including duplicates.\r\n\r\nMaybe there is a more efficient way to do this and I am not sure about the implications of `distinct_on` on non-postgresql database.\r\n\r\nChange\r\nhttps://github.com/rails/rails/blob/master/activerecord/lib/active_record/relation/calculations.rb#L393\r\n\r\nFor something like\r\n```\r\n  def build_count_subquery(relation, column_name, distinct)\r\n    if column_name == :all\r\n      relation.select_values = [ Arel.sql(FinderMethods::ONE_AS_ONE) ] unless distinct\r\n    else\r\n      column_alias = Arel.sql(\"count_column\")\r\n      relation.select_values = [ aggregate_column(column_name).as(column_alias) ]\r\n    end\r\n\r\n    ar_relation = relation.arel\r\n\r\n    if column_name == :all && distinct && order_values.any?\r\n      ar_relation = ar_relation.distinct_on(Arel.sql(order_values.first))\r\n    end\r\n\r\n    subquery = ar_relation.as(Arel.sql(\"subquery_for_count\"))\r\n    select_value = operation_over_aggregate_column(column_alias || Arel.star, \"count\", false)\r\n\r\n    Arel::SelectManager.new(subquery).project(select_value)\r\n  end\r\n```\r\n", "labels": [], "number": 31774, "updated_at": "2018-02-02 19:48:01", "user": 315979, "closed_at": "2018-01-23 21:17:56", "id": 290953105, "title": "Postgresql query with includes, order, limit fails with PG::InvalidColumnReference", "url": "https://api.github.com/repos/rails/rails/issues/31774", "created_at": "2018-01-23 18:53:38", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359933670", "text": "I don't think that we should make `order` implicitly change the behavior of `distinct`. It's up to you to make sure your query is actually valid. You can create a `DISTINCT ON` clause by passing a SQL string to `select`.", "created_at": "2018-01-23 21:17:56", "user": 1529387, "id": 359933670}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359942642", "text": "@sgrif Aight, I thought it was more of supporting Postgresql correctly for common operations (see second test + it has been a regression for us).\r\n\r\nThanks for your answer\r\n\r\n**Edit**\r\nThis has been fixed by https://github.com/rails/rails/commit/6df9b69b2363734175d8869393e83e6ce8b4d7b6", "created_at": "2018-01-23 21:49:45", "user": 315979, "id": 359942642}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\nAn untested path introduced in https://github.com/rails/rails/pull/31331 led to a crash when a comment was added within an `alter_table` block. The array of processes must be flattened before each can be called.", "labels": [], "number": 31773, "updated_at": "2018-01-24 23:45:59", "user": 5495713, "closed_at": "2018-01-24 11:23:02", "id": 290940788, "title": "Postgresql bulk_change_table should flatten procs array", "url": "https://api.github.com/repos/rails/rails/issues/31773", "created_at": "2018-01-23 18:12:28", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359880184", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @georgeclaghorn (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-23 18:12:31", "user": 7468109, "id": 359880184}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359880608", "text": "Found this while working through comments on https://github.com/rails/rails/pull/31628. cc @matthewd ", "created_at": "2018-01-23 18:13:57", "user": 5495713, "id": 359880608}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360100968", "text": ":+1:", "created_at": "2018-01-24 11:22:55", "user": 1034, "id": 360100968}], "assignees": [1034, 1034], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "\r\n", "labels": [], "number": 31772, "updated_at": "2018-01-24 10:45:44", "user": 28496781, "closed_at": "2018-01-24 10:45:44", "id": 290862364, "title": "Rails Installer link broken on getting started section of ruby on rails website.", "url": "https://api.github.com/repos/rails/rails/issues/31772", "created_at": "2018-01-23 14:41:57", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359928578", "text": "Assuming you're referring to http://railsinstaller.org/ — that's not owned or managed by the Rails team. \r\n\r\nThis can probably be closed.", "created_at": "2018-01-23 20:59:49", "user": 2028176, "id": 359928578}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360091952", "text": "Thanks for an issue. @joshmn is correct.  Rails installer is not managed by the Rails team.  \r\nSeems issue was already created in Rails Installer 's repo.  https://github.com/railsinstaller/website/issues/59\r\nLet's check that.\r\n", "created_at": "2018-01-24 10:45:43", "user": 987638, "id": 360091952}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "I am using Rails action mailer. I need to send a email with document(doc, docx, txt, pdf) as attachment.  \r\n\r\n**Expected behavior**\r\nWhen I am attaching txt and pdf files, the content in that file are viewing properly. But when I am trying to attach .doc or docx files, the content in that files are not displaying(it is converting into encoding format). Why this behaviour. \r\n\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.2.6\r\n\r\n`def send_email(email, file)\r\n  @email = email\r\n  attachments['document.docx'] = File.read(file.path)\r\n  mail(from: @email, to: \"aa@gmail.com\", subject: \"Document attachment\")\r\nend\r\n`\r\n\r\n`attachments['document.docx'] = { mime_type: 'application/zip', content: File.read(file.path) }\r\nattachments['document.docx'] = { 'Content-Type' => 'text/html', content: File.read(file.path) }\r\nattachments['document.docx'] = { 'Content-Type' => 'text/html', content: File.read(file.path), 'Content-Transfer-Encoding' => '7bit' }\r\n`\r\n\r\n\r\nTried those things also separately, but nothing worked out :-(.\r\n\r\nIs there any way to attach document files in email using rails action mailer.\r\n\r\nPlease guide me. Thanks in advance.\r\n\r\n", "labels": [], "number": 31771, "updated_at": "2018-01-23 12:45:31", "user": 20486201, "closed_at": "2018-01-23 12:45:31", "id": 290811081, "title": "Email attachment for document files using rails action mailer", "url": "https://api.github.com/repos/rails/rails/issues/31771", "created_at": "2018-01-23 12:01:43", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359779586", "text": "Please use Stack Overflow or the [rubyonrails-talk](https://groups.google.com/forum/#!forum/rubyonrails-talk) for questions, where a wider community will be able to help you. We reserve the issue tracker for bugs.", "created_at": "2018-01-23 12:45:31", "user": 94129, "id": 359779586}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "We scoped capybara to `~> 2.15`, but we don't have any scope on the `selenium-webdriver`.\r\n\r\nI've spend few hours trying to figure out why system tests are not working on the chrome, but they are working the FF. At the end, I found out that any version of selenium-webdriver larger then `3.6` raises this error with chrome(chrome version is 63.0.3239.132 )\r\n\r\n<img width=\"790\" alt=\"screen shot 2018-01-23 at 09 16 35\" src=\"https://user-images.githubusercontent.com/7427365/35266193-c6a84724-0022-11e8-9668-dae71d06aec4.png\">\r\n\r\n\r\nHere is dummy repo that causes this problem on my machine https://github.com/dixpac/capybara_ghostery\r\n\r\nAlso, maybe we could upgrade `capybara` dependency to the latest `~> 2.17`...but I suppose there is a reason why capybara is scoped to `2.15`...so didn't want to touch it :)\r\n", "labels": [], "number": 31770, "updated_at": "2018-01-24 08:23:05", "user": 7427365, "closed_at": "2018-01-23 20:53:11", "id": 290757002, "title": "Restrict selenium-webdriver to 3.6", "url": "https://api.github.com/repos/rails/rails/issues/31770", "created_at": "2018-01-23 08:58:08", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359723196", "text": "r? @eileencodes\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-23 08:58:11", "user": 7468109, "id": 359723196}, {"reactions": {"heart": [7427365]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359926664", "text": "Thank you so much but rails should not care about those things. If selenium-webdriver fixes the bug that is preventing it work with chrome webdriver we don't want to release a new version of rails just to remove this restriction in the Gemfile. If `selenium-webdriver` doesn't work, open an issue there and change your application to use a version that works.", "created_at": "2018-01-23 20:53:11", "user": 47848, "id": 359926664}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360055208", "text": "@rafaelfranca I understand, I will see what I can do on the `selenium-webdriver` gem side.\r\n\r\nMy main motivation here was that default system test configuration is not working (_selenium chrome_). When you run `rails new ...` and try system tests they fail(if bundle picks up latest `selenium-webdriver`). \r\nSo didn't want people to think that system tests are not working properly because `selenium-webdriver`, after all it's added as default dependency in `Gemfile` 😃 ", "created_at": "2018-01-24 08:23:05", "user": 7427365, "id": 360055208}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [290611]}, "text": "Previous change didn’t expand this array of arguments. \r\n\r\nSorry for the mistake!\r\n", "labels": [], "number": 31769, "updated_at": "2018-01-30 02:40:12", "user": 296279, "closed_at": "2018-01-30 01:30:16", "id": 290753695, "title": "yarnpkg: correct exec syntax", "url": "https://api.github.com/repos/rails/rails/issues/31769", "created_at": "2018-01-23 08:45:52", "comments": [], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Our use case is that we have a model without a table to use with different searches, so instead of drawing endless forms in HTML we can use `simple_form` or similar to quickly draw pretty forms just having a `Hash`.\r\n\r\nOur current set up looks like this:\r\n```ruby\r\nclass AbstractModel < ApplicationRecord\r\n  self.abstract_class = true\r\n\r\n  def self.attribute_names\r\n    @attribute_names ||= attribute_types.keys\r\n  end\r\n\r\n  def self.load_schema!\r\n    @columns_hash ||= Hash.new\r\n\r\n    # Copied from activerecord-5.0.0/lib/active_record/attributes.rb\r\n    attributes_to_define_after_schema_loads.each do |name, (type, options)|\r\n      if type.is_a?(Symbol)\r\n        type = ActiveRecord::Type.lookup(type, **options.except(:default))\r\n      end\r\n\r\n      define_attribute(name, type, **options.slice(:default))\r\n\r\n      # Improve Model#inspect output\r\n      @columns_hash[name.to_s] =\r\n        ActiveRecord::ConnectionAdapters::Column.new(name.to_s, options[:default])\r\n    end\r\n\r\n    # Apply serialization decorators\r\n    attribute_types.each do |name, type|\r\n      decorated_type = attribute_type_decorations.apply(name, type)\r\n      define_attribute(name, decorated_type)\r\n    end\r\n  end\r\n\r\n  def persisted?\r\n    false\r\n  end\r\nend\r\n\r\nclass Market::CompanySearch < AbstractModel\r\n  attribute :keywords, :text, :default => nil\r\n  attribute :kind,     :text, :default => []\r\n\r\n  serialize :kind\r\n\r\n  has_many :categories, :class_name => 'Market::Category'\r\n  has_many :industries, :class_name => 'Market::Industry'\r\n\r\n  def query\r\n    attrs = { :keywords => self.keywords, :with => { :status => Market::Company.statuses[:approved], :public => true } }\r\n\r\n    attrs[:with].merge!(:category_ids => self.category_ids) if self.category_ids.present?\r\n    attrs[:with].merge!(:industry_ids => self.industry_ids) if self.industry_ids.present?\r\n    attrs[:with].merge!(:kind => self.kind) if self.kind.present?\r\n\r\n    attrs\r\n  end\r\n\r\n  def execute(params = {})\r\n    ::Market::Company.sunspot_fetch(params.merge(query))\r\n  end\r\nend\r\n```\r\n\r\nWe now have to create models similar to `Market::CompanySearch`, but even a `Company` could have many different searches, creating classes and configs for them all is quite exhausting while the forms often differ slightly.\r\n\r\nMy idea was to do this like that:\r\n```ruby\r\nclass Search < AbstractModel\r\n  attribute :keywords, :text, :default => nil\r\n\r\n  def self.from_hash(params = {})\r\n    new.tap do |instance|\r\n      instance.singleton_class.class_eval do\r\n        params.each_pair do |key, value|\r\n          unless instance.attributes.key?(key.to_s)\r\n            attribute key, type_from_value(value)\r\n          end\r\n\r\n          instance.try(\"#{key}=\", value)\r\n        end\r\n      end\r\n    end\r\n  end\r\n\r\n  def self.type_from_value(value)\r\n    case value\r\n      when Boolean\r\n        :boolean\r\n      when String\r\n        :string\r\n      # ...\r\n      else\r\n        :text\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nSo each instance of `Search` could have custom attributes, which didn't work as the instance is not aware of attribute changes. Was wondering if this concept has a right to be live and if someone from Rails/AR developers could help me with this.", "labels": [], "number": 31768, "updated_at": "2018-01-23 10:17:59", "user": 126732, "closed_at": "2018-01-23 10:17:59", "id": 290723851, "title": "Ability to add attributes to the singleton class", "url": "https://api.github.com/repos/rails/rails/issues/31768", "created_at": "2018-01-23 06:33:27", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359744573", "text": "Thanks, but we don’t take feature requests in the issue tracker. Please use the [Rails Core mailing list](https://groups.google.com/forum/#!forum/rubyonrails-core) for feature requests, where a wider community will be able to help you. We reserve the Rails issue tracker only for bugs in Rails. ", "created_at": "2018-01-23 10:17:59", "user": 987638, "id": 359744573}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nThis adds support for [PostgreSQL enum types](https://www.postgresql.org/docs/8.3/static/datatype-enum.html) in migrations and in the ruby schema. \r\n\r\n### Other Information\r\n\r\nAdds 3 methods for migrations:\r\n\r\n- `create_enum :ebook_format, [:pdf, :epub]`\r\nThis would generate\r\n```SQL\r\nCREATE TYPE ebook_format AS ENUM('pdf', 'epub')\r\n```\r\n\r\n- `drop_enum :ebook_format`\r\nThis would generate\r\n```SQL\r\nDROP TYPE ebook_format\r\n```\r\n\r\n- `add_enum_value :ebook_format, :mobi` \r\nThis would generate\r\n```SQL\r\nALTER TYPE ebook_format ADD VALUE 'mobi'\r\n```\r\nThis method also accepts `:before` or `:after`options, to insert the new value in a specific position.\r\n\r\nIt also adds PostgreSQL enum support for the ruby schema. The would be represented in the schema as:\r\n```ruby\r\ncreate_enum :ebook_format, values: ['pdf', 'epub']\r\n``` \r\n", "labels": [], "number": 31767, "updated_at": "2018-01-23 22:37:19", "user": 2571283, "closed_at": "2018-01-23 22:37:19", "id": 290706208, "title": "Add PostgreSQL enum support", "url": "https://api.github.com/repos/rails/rails/issues/31767", "created_at": "2018-01-23 04:32:26", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359673644", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @rafaelfranca (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-23 04:32:36", "user": 7468109, "id": 359673644}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359955413", "text": "Thank you for the pull request but we avoid to add database specific types to the Active Record migration helpers.", "created_at": "2018-01-23 22:37:19", "user": 47848, "id": 359955413}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n### Expected behavior\r\nTell us what should happen\r\nAll jobs fails with PG::ConnectionBad  exception\r\n\r\n### Actual behavior\r\nJob fails with exception : \r\n    PG::ConnectionBad (connection is closed)\r\n\r\n### System configuration\r\n**Rails version**:  Rails 5.2.0.beta2\r\n**Ruby version**: ruby 2.4.3p205\r\n**Pg gem version**: pg-0.21.0\r\n**Resque config**:  'config/resque.rb'\r\n\r\n\r\n\r\n\r\n> require \"redis\"\r\n> Resque.before_fork = Proc.new do |job|\r\n>    ActiveRecord::Base.connection.disconnect!\r\n> end\r\n\r\n>Resque.after_fork = Proc.new do |job|\r\n>    ActiveRecord::Base.establish_connection\r\n>end\r\n\r\n", "labels": [], "number": 31766, "updated_at": "2018-02-01 03:47:23", "user": 2328027, "closed_at": "2018-01-24 14:38:57", "id": 290686471, "title": "PG::ConnectionBad on activejob(resque adapter) after upgrading to rails 5.2.0.beta2", "url": "https://api.github.com/repos/rails/rails/issues/31766", "created_at": "2018-01-23 02:24:31", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359655640", "text": "Thanks for the report!\r\n\r\nCould you create a new demo application that shows the problem?", "created_at": "2018-01-23 02:43:42", "user": 1034, "id": 359655640}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359675061", "text": "Please see demo application\r\n\r\nhttps://github.com/bituinb/xyz \r\n\r\nMy local dev is using Postgres 9.5.2 and mac OSX 10.9.5\r\n\r\nInstruction is in readme\r\n\r\nThank you", "created_at": "2018-01-23 04:44:19", "user": 2328027, "id": 359675061}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360164861", "text": "Perfect, thank you. :heart:\r\n\r\nThis was a bug in #31173; fixed in 1280ad6d19fa56e9bf6d6a261c1231326cb3d8c3.\r\n\r\nFYI, you don't actually need those before/after fork blocks any more -- that's what that PR does -- but they certainly shouldn't break your application 😅, so this was a good catch.", "created_at": "2018-01-24 15:09:34", "user": 1034, "id": 360164861}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362149977", "text": "Thanks!!", "created_at": "2018-02-01 03:47:14", "user": 2328027, "id": 362149977}], "assignees": [1034, 1034], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Sorry, my carelessness in 4819b2a0ec84511a8fe87213b1e1befa21584a7c.\r\n\r\n[ci skip]", "labels": [], "number": 31765, "updated_at": "2018-01-22 22:43:24", "user": 6261109, "closed_at": "2018-01-22 22:13:21", "id": 290634517, "title": "remove text repetition", "url": "https://api.github.com/repos/rails/rails/issues/31765", "created_at": "2018-01-22 22:10:56", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359586278", "text": "r? @kamipo\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-22 22:10:58", "user": 7468109, "id": 359586278}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "This works (catching a deserialization error) in my ActiveJob\r\n\r\n```\r\nclass MyJob < ActiveJob::Base\r\n    rescue_from(StandardError) do |ex|\r\n      App::ErrorNotifier.new(ex: ex).notify\r\n      raise ex\r\n    end\r\n\r\n    rescue_from(ActiveJob::DeserializationError) do |ex|        #this is hit first. good. \r\n      App::ErrorNotifier.new(ex: ex).notify\r\n      if ex.cause == ActiveRecord::ConnectionTimeoutError\r\n        raise\r\n      end\r\n    end\r\n   ...\r\n```\r\n\r\nHowever...what if i want to put the rescue_from(ActiveJob::DeserializationError)  into a base class i can use in all my AJs?  I tried this: \r\n\r\n```\r\nclass MyJob < ApplicationJob\r\n    rescue_from(StandardError) do |ex|\r\n      App::ErrorNotifier.new(ex: ex).notify\r\n      raise ex\r\n    end\r\n   ...\r\n\r\nclass ApplicationJob < ActiveJob::Base\r\n    rescue_from(ActiveJob::DeserializationError) do |ex|    #i want this to be hit first\r\n      App::ErrorNotifier.new(ex: ex).notify\r\n      if ex.cause == ActiveRecord::ConnectionTimeoutError\r\n        raise\r\n      end\r\n    end\r\n```\r\n\r\nBut when the job raises a DeserializationError, it's always caught in the top level class, in the StandardError rescue_from.   I do see that it's because the rescue_from(SE) is called last here:\r\n\r\n``` \r\n # put the new handler at the end because the list is read in reverse\r\n       self.rescue_handlers += [[key, options[:with]]]\r\n```\r\n\r\nMy question is how do i do this correctly?  How can i get the rescue_from(ActiveJob::DeserializationError) to be handled generically for all my AJs (before other exceptions are handled)?\r\n\r\n\r\n\r\n", "labels": [], "number": 31764, "updated_at": "2018-01-22 21:56:20", "user": 352161, "closed_at": "2018-01-22 21:56:20", "id": 290626086, "title": "In ActiveJob, how to rescue_from in a base class?", "url": "https://api.github.com/repos/rails/rails/issues/31764", "created_at": "2018-01-22 21:41:51", "comments": [{"reactions": {"+1": [352161]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359580712", "text": "Please use StackOverflow for questions/help, where a wider community will be able to help you. We reserve the issues tracker for issues only.", "created_at": "2018-01-22 21:56:19", "user": 47848, "id": 359580712}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "The bottom line in the image of `ActionController::UnknownFormat`is not\r\ntruncated. Now the text does not say it is.\r\n\r\n[ci skip]\r\n", "labels": [], "number": 31763, "updated_at": "2018-01-22 21:27:50", "user": 6261109, "closed_at": "2018-01-22 21:24:49", "id": 290617218, "title": "Update guide text not to contradict image", "url": "https://api.github.com/repos/rails/rails/issues/31763", "created_at": "2018-01-22 21:13:57", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359566738", "text": "r? @kamipo\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-22 21:14:00", "user": 7468109, "id": 359566738}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nWith the latest Rails 5.2 (and 5.1 too), we can't manually build `HasOneThroughAssociation` records with `HasOneThroughAssociation#build_record` method.\r\n\r\nWhen called, the method raises (see sample app below) : \r\n\r\n```\r\nNameError: undefined local variable or method `through_association' for #<ActiveRecord::Associations::HasOneThroughAssociation:0x007fa209d2f7a0>\r\n```\r\n\r\nUnlike the `HasManyThroughAssociation` object, `HasOneThroughAssociation` does not seem to define the `#through_association` accessor needed by the `ThroughAssociation` mixin in its `#build_record` method.\r\n\r\n\r\n#### Sample app : \r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :comments, force: true do |t|\r\n  end\r\n\r\n  create_table :post_comments, force: true do |t|\r\n    t.integer :post_id\r\n    t.integer :comment_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_one :post_comment\r\n  has_one :comment, through: :post_comment\r\nend\r\n\r\nclass PostComment < ActiveRecord::Base\r\n  belongs_to :post\r\n  belongs_to :comment\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    error = assert_raises NameError do\r\n      Post.new.association(:comment).send(:build)\r\n    end\r\n\r\n    assert_match /undefined local variable or method `through_association' for #<ActiveRecord::Associations::HasOneThroughAssociation/, error.message\r\n  end\r\nend\r\n```\r\n\r\n#### Temporary fix\r\n\r\nAs a temporary fix, I use the following patch in my app, which works for my case.\r\nIf it seems usable in Rails as a fix for the issue, I'm ready to submit a PR including the patch directly into `HasOneThroughAssociation`\r\n\r\n```ruby\r\nmodule HasOneThroughAssociationPatch\r\n  private\r\n\r\n  def through_association\r\n    @through_association ||= owner.association(through_reflection.name)\r\n  end\r\nend\r\n\r\nActiveRecord::Associations::HasOneThroughAssociation.prepend(HasOneThroughAssociationPatch)\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe following call should allow building `has_one :through` association records :\r\n\r\n```\r\nassociation(:comment).build(content: \"Comment content\")\r\n```\r\n\r\n### Actual behavior\r\n\r\nThe method raises a `NameError` as described above.\r\n\r\n### System configuration\r\n**Rails version**: 5.2.0.beta\r\n\r\n**Ruby version**: 2.4.1\r\n", "labels": [], "number": 31762, "updated_at": "2018-01-23 07:16:18", "user": 792772, "closed_at": "2018-01-22 20:26:11", "id": 290517876, "title": "Issue with HasOneThroughAssociation#build_record, missing #through_association method / accessor", "url": "https://api.github.com/repos/rails/rails/issues/31762", "created_at": "2018-01-22 16:00:50", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359697564", "text": "@kamipo ok that was fast, thanks for the patch", "created_at": "2018-01-23 07:16:18", "user": 792772, "id": 359697564}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n`'::A::B::C'.constantize` used to return `::A::C` if it was not yet loaded and there is no matching constant, though `'::A::D'.constantize` would not return `::D` in the same conditions, but would fail. Should this be fixed?\r\n", "labels": [], "number": 31761, "updated_at": "2018-02-01 16:59:03", "user": 5202503, "closed_at": "None", "id": 290459408, "title": "Inflector.constantize should not remove intermediate modules if constants aren't loaded yet", "url": "https://api.github.com/repos/rails/rails/issues/31761", "created_at": "2018-01-22 13:08:00", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359418289", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @georgeclaghorn (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-22 13:08:03", "user": 7468109, "id": 359418289}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359571194", "text": "r? @fxn ", "created_at": "2018-01-22 21:29:30", "user": 47848, "id": 359571194}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359596538", "text": "ACK!", "created_at": "2018-01-22 22:45:13", "user": 3387, "id": 359596538}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362331088", "text": "ping", "created_at": "2018-02-01 16:59:03", "user": 5202503, "id": 362331088}], "assignees": [3387, 3387], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "I have two - possibly controversial - issues with transaction and I wanted to gather some feedback before submitting patches.\r\n\r\n## Deprecate ActiveRecord::Transaction\r\n\r\nI'm not entirely happy, that you can call `.transaction` directly on a model, but it happens to affect all other models sharing the same database connection within the transaction block. I just tried to call `User.connection.transaction` (using Postgres) and it seems to work exactly like I expect it to. This way would make the actual behavior a lot clearer in my not so humble opinion.\r\n\r\nTo repeat it in code:\r\n```ruby\r\n# Deprecate\r\nUser.transaction do\r\n  # things\r\nend\r\n\r\n# Recommend instead, works already\r\nUser.connection.transaction do\r\n  # things\r\nend\r\n```\r\n\r\n## Allow rolling back transactions without raising an exception\r\n\r\nI do like that exceptions automatically rollback transactions. But I also think it's fine to use transactions for business logic which might not be exceptional. I think this violates the \"Don't use exceptions for control flow\" rule. Do you think it would be worth yielding an object which would allow to mark the transaction to be rolled back?\r\n\r\n```ruby\r\nUser.transaction do |transaction|\r\n  # things\r\n  transaction.mark_rollback!\r\n  # this will still be executed\r\nend\r\n```\r\n\r\nWhat do you think about this?", "labels": [], "number": 31760, "updated_at": "2018-01-22 22:52:08", "user": 36442, "closed_at": "2018-01-22 22:52:08", "id": 290412265, "title": "Rollback transactions without exceptions? Deprecate ActiveRecord::Transaction?", "url": "https://api.github.com/repos/rails/rails/issues/31760", "created_at": "2018-01-22 10:15:23", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359572036", "text": "+1 to the \"Rollback transactions without exceptions?\" idea. \r\n\r\nI think transactions should work something around this: \r\n\r\n```ruby\r\n# In the model...\r\nclass Model < ApplicationRecord\r\n\r\n  def some_method(...)\r\n    ...\r\n    Transaction do\r\n      ActiveRecordRollback unless user.save\r\n      ActiveRecordRollback unless invite.save\r\n    end\r\n    user, invite\r\n    ...\r\n  end\r\n\r\nend\r\n\r\n# In the controller\r\nclass SomeController < ApplicationController\r\n\r\n  def some_action\r\n    ...\r\n    If user && invite\r\n      # All OK, render json etc\r\n    else\r\n      # Something went wrong... render errors\r\n      # render json: user.errors or render json: invite.errors or both some how...\r\n    end\r\n    ...\r\n  end\r\n\r\nend\r\n```", "created_at": "2018-01-22 21:32:36", "user": 2280800, "id": 359572036}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359598303", "text": "`User.transaction` is the same as `User.connection.transaction` so I don't see why we should go through a deprecation cycle for this. https://github.com/rails/rails/blob/05b7b80bcaeeb0357cdb6143fbeca1b3c73b5fb9/activerecord/lib/active_record/transactions.rb#L212.\r\n\r\nThe transaction affects all models sharing the same connection because this is how databases works. Active Record abstracts databases but users should still know how databases works.\r\n\r\n> I think this violates the \"Don't use exceptions for control flow\" rule\r\n\r\nWe are fine with violating that rule in this case. But if you fell strong about this please work in a PR explaining why it is better.\r\n\r\nAlso, thank you so much for the issue but we don't take feature request on the issue tracker. We recommend you to try to implement the feature and send us a pull request or if you are in doubt if the feature will be accepts ask in Rails Core mailing list for feedback.", "created_at": "2018-01-22 22:52:08", "user": 47848, "id": 359598303}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Add order option to \"find_in_batches\" and \"find_each\"\r\n\r\nCurrently, if \"primary_key\" does not exist, \"find_in_batches\" and \"find_each\" will result in an error.\r\nSince there may be cases where \"primary_key\" does not exist when performing batch processing,\r\nI think that it can be solved by adding an order option.", "labels": [], "number": 31759, "updated_at": "2018-01-22 23:36:12", "user": 32502544, "closed_at": "2018-01-22 23:36:12", "id": 290391153, "title": "Active record: Add order option to \"find_in_batches\" and \"find_each\"", "url": "https://api.github.com/repos/rails/rails/issues/31759", "created_at": "2018-01-22 08:58:37", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359611490", "text": "Thanks, but we don’t take feature requests in the issue tracker. Feel free to open a PR or seek feedback in the [rubyonrails-core](https://groups.google.com/forum/#!forum/rubyonrails-core) mailing list.", "created_at": "2018-01-22 23:36:12", "user": 94129, "id": 359611490}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Rails 5.1 introduce an `ActiveSupport::Duration::Scalar` class as\r\na wrapper around a numeric value as a way of ensuring a duration\r\nwas the outcome of an expression. However the implementation was\r\nmissing support for modulo operations. This commit adds support\r\nfor those operations and should result in a duration being\r\nreturned from expressions involving them.\r\n\r\nFixes #29603 and #29743.\r\n\r\n### Summary\r\n\r\nProvide a general description of the code changes in your pull\r\nrequest... were there any bugs you had fixed? If so, mention them. If\r\nthese bugs have open GitHub issues, be sure to tag them here as well,\r\nto keep the conversation linked together.\r\n\r\n### Other Information\r\n\r\nIf there's anything else that's important and relevant to your pull\r\nrequest, mention that information here. This could include\r\nbenchmarks, or other information.\r\n\r\nIf you are updating any of the CHANGELOG files or are asked to update the\r\nCHANGELOG files by reviewers, please add the CHANGELOG entry at the top of the file.\r\n\r\nFinally, if your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails!\r\n", "labels": [], "number": 31758, "updated_at": "2018-01-22 08:14:03", "user": 32763284, "closed_at": "None", "id": 290381328, "title": "Add missing support for modulo operations on durations", "url": "https://api.github.com/repos/rails/rails/issues/31758", "created_at": "2018-01-22 08:13:59", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359352187", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @georgeclaghorn (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-22 08:14:03", "user": 7468109, "id": 359352187}], "assignees": [94129, 94129], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "`define_attribute_methods` splats the arguments,\r\nthen calls out to `define_attribute_method` for\r\neach. When defining a singule attribute, using\r\nthe singular version of the method saves us an\r\narray and an extra method call.\r\n\r\n\r\n", "labels": [], "number": 31757, "updated_at": "2018-01-22 04:07:01", "user": 13696143, "closed_at": "2018-01-22 03:50:40", "id": 290340731, "title": "Use singular define_attribute_method", "url": "https://api.github.com/repos/rails/rails/issues/31757", "created_at": "2018-01-22 03:27:51", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359315406", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @georgeclaghorn (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-22 03:27:53", "user": 7468109, "id": 359315406}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Created by mistake. Should have been created against my fork. ", "labels": [], "number": 31756, "updated_at": "2018-01-22 02:20:01", "user": 2571283, "closed_at": "2018-01-21 23:10:31", "id": 290315297, "title": "Postgresql enum type support", "url": "https://api.github.com/repos/rails/rails/issues/31756", "created_at": "2018-01-21 23:10:25", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359290165", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @pixeltrix (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-21 23:10:37", "user": 7468109, "id": 359290165}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Update the guide on autoloading (which is out of date with current practice and code) to include autoload_paths, eager_load_paths and eager_load in production.\r\n", "labels": [], "number": 31755, "updated_at": "2018-02-03 17:29:15", "user": 18395, "closed_at": "2018-01-25 23:38:47", "id": 290307036, "title": "Clarify autoload_paths and eager_load in guides per current usage.", "url": "https://api.github.com/repos/rails/rails/issues/31755", "created_at": "2018-01-21 21:24:16", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359282250", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @sgrif (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-21 21:24:18", "user": 7468109, "id": 359282250}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360182218", "text": "I edited the PR to be a lot more succinct and clear. The reasoning (which I removed) I put here:\r\n\r\n----\r\n\r\nI agree with #27268 (which this addresses) that the guide on autoloading is a bit out of date with regard to autoload_paths and eager_load. \r\n\r\nI've run into this issue before (typically in upgrade / cross-compatibility situations) but not regularly enough to keep it in mind. Each time I've had to piece together how autoloading works. I've pieced it together (again) from:\r\n\r\n* issues like https://github.com/rails/rails/issues/13142\r\n* stack overflows https://stackoverflow.com/questions/38198668/rails-5-load-lib-files-in-production\r\n* blog posts like https://collectiveidea.com/blog/archives/2016/07/22/solutions-to-potential-upgrade-problems-in-rails-5\r\n*  and [this one](https://blog.bigbinary.com/2016/08/29/rails-5-disables-autoloading-after-booting-the-app-in-production.html)  \r\n* and other issues like https://github.com/rails/spring/issues/519#issuecomment-348324369) -- though this looks like a workaround for a workaround rather than a fix.\r\n* rails source\r\n\r\nSo I've tried to document for others and my future self how things actually work with recommendations. \r\n", "created_at": "2018-01-24 16:02:05", "user": 18395, "id": 360182218}], "assignees": [1529387, 1529387], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\nUsing Ruby 2.5.0 and Rails 5.2.0.beta2, generate a new Rails app via:\r\n\r\n`rails new myapp --webpack=react`\r\n\r\nThen do:\r\n\r\n*  `bin/rails g controller home`  & add an index method in that controller\r\n*  `root 'home#index'` in config/routes.rb\r\n*  `<%= javascript_pack_tag 'application' %>` in application.html.erb\r\n*  `bin/rails s` & `bin/webpack-dev-server` in sep tabs.\r\n\r\nThen go to localhost:3000 and see the following error in the js console: \r\n```\r\nsockjs.js:1601 Refused to connect to 'http://localhost:3035/sockjs-node/info?t=1516563963136' because it violates the following Content Security Policy directive: \"default-src 'self' https:\". Note that 'connect-src' was not explicitly set, so 'default-src' is used as a fallback.\r\n```\r\n![sockjs](https://user-images.githubusercontent.com/74591/35198289-f8a0be7c-feb1-11e7-8fc5-3552e77246dd.jpg)\r\n\r\nIn the meantime, changing `inline: true` to `inline: false` in config/webpacker.yml got rid of the error.  But not sure if that's just a hack.\r\n\r\n### System configuration\r\n**Ruby version**: 2.5.0\r\n\r\n**Rails version**:  5.2.0.beta2\r\n\r\nThank you for any help!\r\n", "labels": [], "number": 31754, "updated_at": "2018-01-21 23:30:29", "user": 74591, "closed_at": "2018-01-21 23:30:29", "id": 290301289, "title": " Rails 5.2.0.beta2 sockjs error: \"Refused to connect to 'http://localhost:3035/sockjs-node/info ...\" ", "url": "https://api.github.com/repos/rails/rails/issues/31754", "created_at": "2018-01-21 20:09:01", "comments": [{"reactions": {"+1": [74591]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359281145", "text": "## Help\r\n\r\nHi @shmay,\r\nYou just need to setup your content security policy:\r\n`app/config/initializers/content_security_policy.rb`\r\n\r\nI suggest you to update it like this:\r\n\r\n```ruby\r\nRails.application.config.content_security_policy do |p|\r\n  p.font_src    :self, :https, :data\r\n  p.img_src     :self, :https, :data\r\n  p.object_src  :none\r\n  p.style_src   :self, :https, :unsafe_inline\r\n\r\n  if Rails.env.development?\r\n    p.script_src :self, :https, :unsafe_eval\r\n    p.default_src :self, :https, :unsafe_eval\r\n    p.connect_src :self, :https, 'http://localhost:3035', 'ws://localhost:3035'\r\n  else\r\n    p.script_src :self, :https\r\n    p.default_src :self, :https\r\n  end\r\nend\r\n```\r\n\r\nThis case you can use unsafe scripts and use Webpack reload functions in Development mode.\r\n\r\n\r\n\r\n## For contributors\r\n\r\nOverall I think that update needed in documentation of [Webpacker](https://github.com/rails/webpacker). Right now if you read docs, you will think that for React everything works out of the box. \r\n\r\nYou can see info about 5.2 security updates only on [Vue](https://github.com/rails/webpacker#vue) and [Angular](https://github.com/rails/webpacker#vue) topics.\r\n\r\nPlus nothing there about web sockets (they should work by default with Webpacker to do a hot reload)\r\n\r\nI wonder if Rails 5.2 with Webpacker gem should pre-generate right security policy for dev mode?", "created_at": "2018-01-21 21:09:15", "user": 1442465, "id": 359281145}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359284568", "text": "Thank you @savroff.  That solved it.  Missed that note about Rails 5.2 in the docs.  I agree that it should \"just work\" out of the box, and perhaps the docs made more clear.", "created_at": "2018-01-21 21:56:04", "user": 74591, "id": 359284568}, {"reactions": {"+1": [1442465]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359291506", "text": "This is issue of webpacker. Please create an issue to [webpacker's issue](https://github.com/rails/webpacker/issues). Thanks.\r\n", "created_at": "2018-01-21 23:30:29", "user": 987638, "id": 359291506}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nPreviously, the `bin/yarn` wrapper would \"unquote\" arguments to yarn like this:\r\n`yarn run add-copyright \"(c) 2017, 2018 MyCompany\"`\r\nThat results in an ARGV of ['run', 'add-copyright', '(c) 2017, 2018 MyCompany'] in the yarn wrapper,\r\nbut a ARGV in the yarn executable of ['run', 'add-copyright', '(c)',  '2017,', '2018', MyCompany']\r\n\r\n### Other Information\r\n\r\nN/A", "labels": [], "number": 31753, "updated_at": "2018-01-22 04:04:22", "user": 296279, "closed_at": "2018-01-22 04:04:22", "id": 290289889, "title": "bin/yarn: Pass through arguments with spaces", "url": "https://api.github.com/repos/rails/rails/issues/31753", "created_at": "2018-01-21 17:29:22", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359265079", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @eileencodes (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-21 17:29:24", "user": 7468109, "id": 359265079}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Fixes #31445.", "labels": [], "number": 31752, "updated_at": "2018-03-19 05:25:31", "user": 21238, "closed_at": "None", "id": 290222926, "title": "Fix `includes` unable to handle joins on case insensitive columns", "url": "https://api.github.com/repos/rails/rails/issues/31752", "created_at": "2018-01-20 21:00:14", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359201786", "text": "r? @schneems\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-20 21:00:24", "user": 7468109, "id": 359201786}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/374104795", "text": "r? @kamipo ", "created_at": "2018-03-19 05:25:30", "user": 21238, "id": 374104795}], "assignees": [12642, 12642], "state": "open", "is-pull-request": true}
{"reactions": {"+1": [5276307, 4546045]}, "text": "Fixes #31670 \r\n", "labels": ["activerecord"], "number": 31751, "updated_at": "2018-01-25 03:43:59", "user": 1161212, "closed_at": "2018-01-25 03:43:59", "id": 290182621, "title": "Clear the transaction state when AR object is duped", "url": "https://api.github.com/repos/rails/rails/issues/31751", "created_at": "2018-01-20 10:41:52", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359162218", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @sgrif (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-20 10:41:54", "user": 7468109, "id": 359162218}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359679149", "text": "Original issue is \"ActiveRecord persisted? returns true after rollback when using duped record\".\r\n\r\nCan you test that issue is fixed?", "created_at": "2018-01-23 05:16:27", "user": 12642, "id": 359679149}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359857530", "text": "@kamipo, here is the test before and after the fix:\r\n\r\n$ git co master \r\nSwitched to branch 'master'\r\nYour branch is up-to-date with 'origin/master'.\r\n$ bundle exec ../persisted_after_rollback.rb\r\nActive Record 5.2.0.beta2\r\n-- create_table(:users, {:force=>true})\r\n   -> 0.0050s\r\nCreate a clone using dup\r\npersisted? = true\r\nCreate a clone using new\r\npersisted? = false\r\n\r\n$ git co clear_transaction_state_when_ar_object_is_duped\r\nSwitched to branch 'clear_transaction_state_when_ar_object_is_duped'\r\n$ bundle exec ../persisted_after_rollback.rb            \r\nActive Record 5.2.0.beta2\r\n-- create_table(:users, {:force=>true})\r\n   -> 0.0050s\r\nCreate a clone using dup\r\npersisted? = false\r\nCreate a clone using new\r\npersisted? = false\r\n", "created_at": "2018-01-23 16:58:21", "user": 1161212, "id": 359857530}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359882269", "text": "Yeah, can you add the test in the commit to catch a future regression?", "created_at": "2018-01-23 18:19:48", "user": 12642, "id": 359882269}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360084873", "text": "@kamipo done", "created_at": "2018-01-24 10:18:22", "user": 1161212, "id": 360084873}], "assignees": [1529387, 1529387], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nFix bug arise from the Pull Request https://github.com/rails/rails/pull/3159 . \r\n\r\n> ![](https://user-images.githubusercontent.com/106567/35179344-d31d31de-fddb-11e7-8834-d887813708f3.png)\r\n> locale_select only appears in I18n.available_locales.count > 1.\r\n> So if users have only one locale, this code will occur error.\r\n>\r\n> &mdash; https://github.com/rails/rails/pull/31596#pullrequestreview-90009273\r\n\r\n### What I did\r\n\r\nIn order to referring undefined variable, check if `<select id=\"locale\">` exists before refreshing ActionMailer Preview body.\r\n\r\n![actionmailer-preview-locale-selection-bug-fix](https://user-images.githubusercontent.com/106567/35179415-40e0a6a0-fddd-11e7-8cd5-e928875018c3.gif)\r\n\r\n@y-yagi Please review this.", "labels": [], "number": 31750, "updated_at": "2018-01-27 05:32:10", "user": 106567, "closed_at": "2018-01-23 10:05:10", "id": 290160895, "title": "Fix locale_selector JS bug in ActionMailer Preview", "url": "https://api.github.com/repos/rails/rails/issues/31750", "created_at": "2018-01-20 03:28:38", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359141647", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @schneems (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-20 03:28:40", "user": 7468109, "id": 359141647}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359145520", "text": "Thanks. But, if `part` does not exist (email is not multipart) and there is more than one locale, changing locale will cause an error. Can you also fix this case?\r\n", "created_at": "2018-01-20 04:51:53", "user": 987638, "id": 359145520}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359221166", "text": "@y-yagi Thank you for review. I coped with the case you pointed out. Can you review it again please?", "created_at": "2018-01-21 03:32:55", "user": 106567, "id": 359221166}, {"reactions": {"+1": [106567]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359226239", "text": "I added a minor comment. Other than that it looks good to me. After fix that, please squash your commits into a single commit.\r\n", "created_at": "2018-01-21 06:00:08", "user": 987638, "id": 359226239}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359357668", "text": "Applied @y-yagi's change request and squashed all commits.", "created_at": "2018-01-22 08:42:54", "user": 106567, "id": 359357668}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359630497", "text": "Fixed data attribute name typo. Confirmed that it works.\r\n\r\n![2018-01-23 09 32 15](https://user-images.githubusercontent.com/106567/35251860-aee500c0-0020-11e8-88af-725757eb24d4.gif)\r\n", "created_at": "2018-01-23 00:58:51", "user": 106567, "id": 359630497}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359741123", "text": "@morygonzalez  Thanks!!", "created_at": "2018-01-23 10:05:26", "user": 987638, "id": 359741123}], "assignees": [59744, 59744], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\n* Fixes doc typos in `actionpack/lib/action_dispatch/routing/mapper.rb`\r\n* Fixes an example given for the `highlight` helper with `sanitize: false`\r\n* Improves the introductory paragraph about sanitization in `text_helper.rb`\r\n\r\n### Other Information\r\n\r\nWith `sanitize: false`, the helper leaves the input HTML alone, but the documentation was incorrectly showing it as sanitized for the `highlight` helper.\r\n\r\nThe introductory sentence about sanitization said \"Most text helpers by default sanitize the given content...\"  However, only 2 of the 11 helpers actually sanitize their given inputs, so I clarified it by adding \"that generate HTML output\" since that was the original reasoning when sanitization was added in 84d387bc0f3f3f6641b08d0ce40e924f09105c19.\r\n\r\nI'm open to any suggestions for clarifying the sanitization description further.", "labels": [], "number": 31749, "updated_at": "2018-01-20 18:56:15", "user": 302377, "closed_at": "2018-01-20 03:58:03", "id": 290159194, "title": "Fix typos and improve text_helper documentation regarding sanitization", "url": "https://api.github.com/repos/rails/rails/issues/31749", "created_at": "2018-01-20 02:58:50", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359139875", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @pixeltrix (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-20 02:58:52", "user": 7468109, "id": 359139875}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nAdded a method `to_csv_str` to generate the equivalent CSV string for an Array, which can then be written to a file to generate the equivalent CSV file for the Array.\r\n\r\n### Other Information\r\n\r\nThis method is to generate a CSV string from an Array of Hashes to create a CSV file from it. The string that it returns, can be written into a file to generate the equivalent CSV for the array.\r\nFor Example, if you have an array of the details of 2 persons as below:\r\n\r\n```\r\npersons = [\r\n  {name: 'Rohit', email: 'rohit@abc.com'},\r\n  {name: 'Amit', email: 'amit@xyz.com'}\r\n]\r\n\r\n```\r\nIf you run the following code:\r\n-> `persons.to_csv_str`\r\nIt will return the following string:\r\n-> `\"name,email\\nRohit,rohit@abc.com\\nAmit,amit@xyz.com\\n\"`\r\nwhich can then be written to a file to get the equivalent CSV file for the Array.", "labels": [], "number": 31748, "updated_at": "2018-02-20 11:04:23", "user": 8477050, "closed_at": "2018-02-20 11:04:23", "id": 290041209, "title": "Added method to generate CSV string from an Array of Hashes", "url": "https://api.github.com/repos/rails/rails/issues/31748", "created_at": "2018-01-19 16:55:41", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359025755", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-19 16:55:44", "user": 7468109, "id": 359025755}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359028079", "text": "It will be great to add test for any new feature. Anyway I'm afraid this is really specific use-case and it doesn't belong to rails. You can start with own gem.", "created_at": "2018-01-19 17:03:50", "user": 193936, "id": 359028079}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366943094", "text": "Thanks for the suggestion, but I agree with @simi that this seems too specific for Active Support.", "created_at": "2018-02-20 11:04:23", "user": 1034, "id": 366943094}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "(This builds on #31741)\r\n\r\nMotivation:\r\n- It has been shown that autoloaded constants are not ensuring that\r\nconstants are only loaded once in the situation where a valid constant\r\nis then edited to be exceptional, then said exception is corrected. In\r\nthis scenario we are seeing the constant being added in an infinite\r\nloop. I tested switching the array to a set and this resoloved the\r\nissue.\r\n\r\nRelated Issues:\r\n- #31694\r\n- #31741\r\n\r\nChanges:\r\n- Change autoloaded constant from array to set.\r\n- Change methods called against this set from array methods to\r\nequivalent array methods.", "labels": [], "number": 31747, "updated_at": "2018-01-26 14:05:11", "user": 2231765, "closed_at": "2018-01-26 14:05:04", "id": 290023060, "title": "Ensure that autoloaded constants is unique (with failing test)", "url": "https://api.github.com/repos/rails/rails/issues/31747", "created_at": "2018-01-19 16:00:19", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359008005", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-19 16:00:25", "user": 7468109, "id": 359008005}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359009290", "text": "If CI fails with a TimeoutError, as it did locally, I'll re-apply the fix\r\n", "created_at": "2018-01-19 16:03:23", "user": 2231765, "id": 359009290}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359087269", "text": "> Error:\r\nDependenciesTest#test_included_constant_that_changes_to_have_exception_then_back_does_not_loop_forever:\r\nTimeout::Error: execution expired\r\n\r\n:ok_hand: \r\n", "created_at": "2018-01-19 20:58:58", "user": 2231765, "id": 359087269}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359623800", "text": "Nice, this looks good to me I will close #31741 go team! 🥇 ", "created_at": "2018-01-23 00:22:04", "user": 289882, "id": 359623800}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360157178", "text": "Here's the fail on CI: https://travis-ci.org/rails/rails/jobs/330880443#L1074\r\n\r\nI can make the revert locally, here's the diff: \r\n\r\n<details>\r\n\r\n```\r\n~/code/rails/activesupport $ git diff\r\ndiff --git a/activesupport/lib/active_support/dependencies.rb b/activesupport/lib/active_support/dependencies.rb\r\nindex 7464b0360e..6313f3e3d8 100644\r\n--- a/activesupport/lib/active_support/dependencies.rb\r\n+++ b/activesupport/lib/active_support/dependencies.rb\r\n@@ -73,7 +73,7 @@ def self.unload_interlock\r\n     # An array of qualified constant names that have been loaded. Adding a name\r\n     # to this array will cause it to be unloaded the next time Dependencies are\r\n     # cleared.\r\n-    mattr_accessor :autoloaded_constants, default: Set.new\r\n+    mattr_accessor :autoloaded_constants, default: []\r\n\r\n     # An array of constant names that need to be unloaded on every request. Used\r\n     # to allow arbitrary constants to be marked for unloading.\r\n@@ -467,7 +467,7 @@ def load_file(path, const_paths = loadable_constants_for_path(path))\r\n         result = Kernel.load path\r\n       end\r\n\r\n-      autoloaded_constants.merge(newly_defined_paths) unless load_once_path?(path)\r\n+      autoloaded_constants.concat(newly_defined_paths) unless load_once_path?(path)\r\n       result\r\n     end\r\n\r\n```\r\n\r\n</details>\r\n<br>\r\n\r\nThen I get this failure locally: \r\n\r\n<details>\r\n\r\n```\r\n~/code/rails/activesupport $ be rake test TEST=test/dependencies_test.rb\r\n/Users/rmosolgo/.rbenv/versions/2.4.1/bin/ruby -w -I\"lib:test\" -I\"/Users/rmosolgo/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/rake-12.2.1/lib\" \"/Users/rmosolgo/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/rake-12.2.1/lib/rake/rake_test_loader.rb\" \"test/dependencies_test.rb\"\r\nRun options: --seed 52111\r\n\r\n# Running:\r\n\r\n................................................................E\r\n\r\nError:\r\nDependenciesTest#test_included_constant_that_changes_to_have_exception_then_back_does_not_loop_forever:\r\nTimeout::Error: execution expired\r\n    /Users/rmosolgo/code/rails/activesupport/lib/active_support/inflector/methods.rb:100:in `underscore'\r\n    /Users/rmosolgo/code/rails/activesupport/lib/active_support/core_ext/string/inflections.rb:128:in `underscore'\r\n    /Users/rmosolgo/code/rails/activesupport/lib/active_support/dependencies.rb:685:in `remove_constant'\r\n    /Users/rmosolgo/code/rails/activesupport/lib/active_support/dependencies.rb:551:in `block in remove_unloadable_constants!'\r\n    /Users/rmosolgo/code/rails/activesupport/lib/active_support/dependencies.rb:551:in `each'\r\n    /Users/rmosolgo/code/rails/activesupport/lib/active_support/dependencies.rb:551:in `remove_unloadable_constants!'\r\n    /Users/rmosolgo/code/rails/activesupport/test/dependencies_test.rb:201:in `block (2 levels) in test_included_constant_that_changes_to_have_exception_then_back_does_not_loop_forever'\r\n    /Users/rmosolgo/.rbenv/versions/2.4.1/lib/ruby/2.4.0/timeout.rb:108:in `timeout'\r\n    /Users/rmosolgo/code/rails/activesupport/test/dependencies_test.rb:199:in `block in test_included_constant_that_changes_to_have_exception_then_back_does_not_loop_forever'\r\n    /Users/rmosolgo/code/rails/activesupport/test/dependencies_test_helpers.rb:12:in `with_loading'\r\n    /Users/rmosolgo/code/rails/activesupport/test/dependencies_test_helpers.rb:22:in `with_autoloading_fixtures'\r\n    /Users/rmosolgo/code/rails/activesupport/test/dependencies_test.rb:194:in `test_included_constant_that_changes_to_have_exception_then_back_does_not_loop_forever'\r\n```\r\n\r\n</details>\r\n<br>\r\n\r\nBut @rafaelfranca, you don't get a failure if you apply the diff above?\r\n\r\nRegarding `Set` vs `Array`, I'm happy to take a different approach. Instead of switching data type, I bet I can track down the source of the duplicate entry and remove it. Would that be a better fix?", "created_at": "2018-01-24 14:44:40", "user": 2231765, "id": 360157178}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360559576", "text": "> But @rafaelfranca, you don't get a failure if you apply the diff above?\r\n\r\nYes. but the real revert also add back the `uniq!` and when I added back the `uniq!` no test fail.\r\n\r\nThis is the pacth:\r\n\r\n<details>\r\n\r\n```diff\r\ndiff --git a/activesupport/lib/active_support/dependencies.rb b/activesupport/lib/active_support/dependencies.rb\r\nindex 7464b0360e..82c10b3079 100644\r\n--- a/activesupport/lib/active_support/dependencies.rb\r\n+++ b/activesupport/lib/active_support/dependencies.rb\r\n@@ -73,7 +73,7 @@ def self.unload_interlock\r\n     # An array of qualified constant names that have been loaded. Adding a name\r\n     # to this array will cause it to be unloaded the next time Dependencies are\r\n     # cleared.\r\n-    mattr_accessor :autoloaded_constants, default: Set.new\r\n+    mattr_accessor :autoloaded_constants, default: []\r\n \r\n     # An array of constant names that need to be unloaded on every request. Used\r\n     # to allow arbitrary constants to be marked for unloading.\r\n@@ -467,7 +467,8 @@ def load_file(path, const_paths = loadable_constants_for_path(path))\r\n         result = Kernel.load path\r\n       end\r\n \r\n-      autoloaded_constants.merge(newly_defined_paths) unless load_once_path?(path)\r\n+      autoloaded_constants.concat newly_defined_paths unless load_once_path?(path)\r\n+      autoloaded_constants.uniq!\r\n       result\r\n     end\r\n ```\r\n</detail>", "created_at": "2018-01-25 18:40:14", "user": 47848, "id": 360559576}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360792961", "text": "🤦‍♂️ I'm sorry, I got so excited about finding a fix that I didn't look carefully at the diff. I think there's a different usage of `<<` which is _not_ followed by a `.uniq!`. Let me start a new PR: https://github.com/rails/rails/pull/31803", "created_at": "2018-01-26 14:05:04", "user": 2231765, "id": 360792961}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "", "labels": ["actionpack"], "number": 31746, "updated_at": "2018-01-20 15:19:14", "user": 27655, "closed_at": "2018-01-20 15:19:14", "id": 289909498, "title": "Polymorphic URL should default to HTTPS if force_ssl = true", "url": "https://api.github.com/repos/rails/rails/issues/31746", "created_at": "2018-01-19 09:19:34", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358909906", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-19 09:19:37", "user": 7468109, "id": 358909906}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358998287", "text": "Hey @johnnyshields looks like this broke a whole bunch of tests that don't have access to the `Rails` constant. Can you take a look at those?", "created_at": "2018-01-19 15:30:27", "user": 1080678, "id": 358998287}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358999070", "text": "Actually, we can't access the Rails configuration inside ActionPack which is why the tests are failing. Railties isn't (and shouldn't be) a dependency of AP, so this patch isn't going to work as is.", "created_at": "2018-01-19 15:33:15", "user": 1080678, "id": 358999070}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359168231", "text": "One option is `if defined?(Rails) && Rails.config.force_ssl` but that seems like quite a hackish solution. Is there any other way I can access the config? ", "created_at": "2018-01-20 12:33:35", "user": 27655, "id": 359168231}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359176480", "text": "Without looking closely, this sounds like the wrong place to do it: I'd expect this to be right next to something that's defaulting the host, and to only apply in that case. Maybe finding that place will hold a clue for getting the value, as well?", "created_at": "2018-01-20 14:46:26", "user": 1034, "id": 359176480}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359178576", "text": "@matthewd I think you're right, it should go at least near somewhere in the model-specific url helper and ideally in the part with the host. I'll take a closer look later.", "created_at": "2018-01-20 15:19:14", "user": 27655, "id": 359178576}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nI am switching old systems created with php to Rails.\r\nI want to use the table 'servicename_user' of the previous system in the User model.\r\nThere is no problem with the console or controller, but when I try to create the rspec test, I get the following error message:\r\n\r\n```shell\r\nFailure/Error: it { should validate_presence_of(:email) }\r\n\r\n  LoadError:\r\n    Unable to autoload constant USER, expected /Users/injung/Github/api/app/models/user.rb to define it\r\n```\r\n\r\nHowever, my user.rb file is located exactly where the error message was mentioned.\r\nFor reference, the test was written as follows.\r\n\r\n```ruby\r\nrequire_relative '../../app/models/user'\r\n\r\ndescribe User, type: :model do\r\n  context 'validation' do\r\n    it { should validate_presence_of(:author) }\r\n    it { should validate_presence_of(:email) }\r\n  end\r\nend\r\n```\r\n\r\nThe user model is as follows.\r\n\r\n```ruby\r\nclass User < ApplicationRecord\r\n  self.table_name = 'servicename_user'\r\nend\r\n```\r\n\r\nI have explicitly set the table name, but it does not load properly.\r\n\r\n### Expected behavior\r\n\r\nNo error message should be displayed.\r\n\r\n### Actual behavior\r\n\r\nLoadError raises\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.5.0\r\n", "labels": [], "number": 31745, "updated_at": "2018-01-21 11:05:02", "user": 8934513, "closed_at": "2018-01-19 09:58:55", "id": 289901738, "title": "Unable to autoload constant", "url": "https://api.github.com/repos/rails/rails/issues/31745", "created_at": "2018-01-19 08:48:54", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358919601", "text": "It was STI issue. I used type column but didn't set \r\n\r\n```ruby\r\nself.inheritance_column = :_type_disabled\r\n```", "created_at": "2018-01-19 09:58:55", "user": 8934513, "id": 358919601}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nUsing [warn](https://ruby-doc.org/core-2.5.0/Kernel.html#method-i-warn) will give people the option to disable the error output if desired.", "labels": [], "number": 31744, "updated_at": "2018-01-20 23:19:04", "user": 2053901, "closed_at": "2018-01-20 23:19:04", "id": 289864394, "title": "Make bin/yarn use warn", "url": "https://api.github.com/repos/rails/rails/issues/31744", "created_at": "2018-01-19 05:09:19", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358868257", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kaspth (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-19 05:09:22", "user": 7468109, "id": 358868257}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359209991", "text": "Thank you for the pull request. This is duplicated with #31096. We don't want people to disable that output.\r\n", "created_at": "2018-01-20 23:19:04", "user": 987638, "id": 359209991}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nUsing [warn](https://ruby-doc.org/core-2.5.0/Kernel.html#method-i-warn) will allow people to disable the error output if desired.\r\n", "labels": [], "number": 31743, "updated_at": "2018-01-19 05:06:12", "user": 2053901, "closed_at": "2018-01-19 05:00:32", "id": 289862412, "title": "Make bin/yarn use warn", "url": "https://api.github.com/repos/rails/rails/issues/31743", "created_at": "2018-01-19 04:53:10", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358866361", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @schneems (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-19 04:53:13", "user": 7468109, "id": 358866361}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358866364", "text": "<img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20> **Warning** <img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20>\n\n* Pull requests are usually filed against the master branch for this repo, but this one is against 5-1-stable. Please double check that you specified the right target!", "created_at": "2018-01-19 04:53:13", "user": 7468109, "id": 358866364}, {"reactions": {"+1": [2053901]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358867206", "text": "Please open feature PRs against master.", "created_at": "2018-01-19 05:00:32", "user": 94129, "id": 358867206}], "assignees": [59744, 59744], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nSince we're using `Rails.root` here, we should take full advantage of it and use separate folders.  This issue is flagged as a rubocop issue, so it'll save people from having to deal with 1 rubocop issue.\r\n\r\n### Other Information\r\n\r\nNone\r\n", "labels": [], "number": 31742, "updated_at": "2018-01-19 05:06:18", "user": 2053901, "closed_at": "2018-01-19 04:28:32", "id": 289858995, "title": "Use separate folders in Rails.root call", "url": "https://api.github.com/repos/rails/rails/issues/31742", "created_at": "2018-01-19 04:23:54", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358863217", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @georgeclaghorn (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-19 04:23:57", "user": 7468109, "id": 358863217}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358863218", "text": "<img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20> **Warning** <img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20>\n\n* Pull requests are usually filed against the master branch for this repo, but this one is against 5-1-stable. Please double check that you specified the right target!", "created_at": "2018-01-19 04:23:57", "user": 7468109, "id": 358863218}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358863708", "text": "Thanks, but this isn’t technically necessary. Ruby transparently replaces path separators as needed when performing file operations.\r\n\r\nAs for the Rubocop issue, we have our own style guide and don’t follow Rubocop’s default rules.", "created_at": "2018-01-19 04:28:32", "user": 94129, "id": 358863708}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358863973", "text": "Good to know.  I didn't realize ruby did that (although this same change looks like it's already been merged to master...).", "created_at": "2018-01-19 04:30:47", "user": 2053901, "id": 358863973}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Motivation:\r\n- It has been shown that autoloaded constants are not ensuring that\r\nconstants are only loaded once in the situation where a valid constant\r\nis then edited to be exceptional, then said exception is corrected. In\r\nthis scenario we are seeing the constant being added in an infinite\r\nloop. I tested switching the array to a set and this resoloved the\r\nissue.\r\n\r\nRelate Issue:\r\n- #31694\r\n\r\nChanges:\r\n- Change autoloaded constant from array to set.\r\n- Change methods called against this set from array methods to\r\nequivalent array methods.\r\n\r\n", "labels": [], "number": 31741, "updated_at": "2018-01-23 00:22:23", "user": 289882, "closed_at": "2018-01-23 00:22:23", "id": 289847922, "title": "Ensure that autoloaded constants is unique", "url": "https://api.github.com/repos/rails/rails/issues/31741", "created_at": "2018-01-19 02:59:20", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358852787", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @georgeclaghorn (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-19 02:59:23", "user": 7468109, "id": 358852787}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358856056", "text": "I am kind of at a loss for exactly how to write a regression test for this error. I think I have fairly closely modeled the behavior in my test, but it is not recreating the error as I would expect. I am wondering if it only happens in the context of the rails server...\r\n\r\nI have tested this against the [sample rails app](https://github.com/rmosolgo/constant-loading-issue) @rmosolgo provided and it resolves the issue. ", "created_at": "2018-01-19 03:23:58", "user": 289882, "id": 358856056}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358964002", "text": "FWIW, looks good to me 😬 Thanks for taking a crack at it!", "created_at": "2018-01-19 13:19:46", "user": 2231765, "id": 358964002}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358969677", "text": "I was talking with @eileencodes about testing this, she suggested testing it in the Railsties test suite. I am going to look into that to see if I can get a working test in place.", "created_at": "2018-01-19 13:44:45", "user": 289882, "id": 358969677}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359097498", "text": "I added a couple of commits and opened a PR here so we could see the failing test on CI: \r\n\r\nhttps://github.com/rails/rails/pull/31747\r\n\r\nIs that test sufficient, or should we add a test somewhere else, too?", "created_at": "2018-01-19 21:43:51", "user": 2231765, "id": 359097498}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359623842", "text": "closing in favor of #31747", "created_at": "2018-01-23 00:22:23", "user": 289882, "id": 359623842}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "I just started upgrading one of my apps from 4.2.7.1 to 5.2.0.beta2 today and I've got a couple test cases that no longer pass in the updated environment. It seems like private class methods that are added to a child of `ActiveRecord::Base` via `ActiveSupport::Concern` used to also be available to `ActiveRecord::Relation`, but this no longer seems to be the case. Making these methods public will make the tests pass (protected will also fail). I'd expect that these test don't change between versions.\r\n\r\nApologies if this is intended behavior and addressed elsewhere, but I couldn't find anything when I searched for the issue.\r\n\r\n### Steps to reproduce\r\n\r\nRun `ruby -Ilib:test bug_template.rb` with the script below twice, once using Rails version 4.2.7.1 and again with 5.2.0.beta2. Any test depending on `::week_start` will fail in 5 but pass in 4.\r\n\r\n## bug_template.rb\r\n```# frozen_string_literal: true\r\n\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", '= 4.2.7.1'\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.timestamps\r\n  end\r\n\r\n  create_table :articles, force: true do |t|\r\n    t.timestamps\r\n  end\r\nend\r\n\r\n# The only difference between TimeFilters and TimeFiltersFixed\r\n# is the -Fixed module's class_methods are public instead of private.\r\n\r\nmodule TimeFilters\r\n  extend ActiveSupport::Concern\r\n\r\n  included do\r\n    scope :created_this_week, ->{ where('created_at >= ?', week_start) }\r\n    scope :before_2018, ->{ where('created_at < ?', Time.new(2018,1,1)) }\r\n  end\r\n\r\n  class_methods do\r\n    private\r\n\r\n    def week_start\r\n      Time.now.at_beginning_of_week\r\n    end\r\n  end\r\nend\r\n\r\n# `Post.created_with_week` will raise an exception in Rails 5\r\n# but not 4.\r\nclass Post < ActiveRecord::Base\r\n  include TimeFilters\r\nend\r\n\r\nmodule TimeFiltersFixed\r\n  extend ActiveSupport::Concern\r\n\r\n  included do\r\n    scope :created_this_week, ->{ where('created_at >= ?', week_start) }\r\n    scope :before_2018, ->{ where('created_at < ?', Time.new(2018,1,1)) }\r\n  end\r\n\r\n  class_methods do\r\n    # private\r\n\r\n    def week_start\r\n      Time.now.at_beginning_of_week\r\n    end\r\n  end\r\nend\r\n\r\nclass Article < ActiveRecord::Base\r\n  include TimeFiltersFixed\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_post_scope_is_filterable\r\n    post = Post.create!\r\n    assert_equal Post.created_this_week.first, post\r\n  end\r\n\r\n  def test_article_scope_is_filterable\r\n    article = Article.create!\r\n    assert_equal Article.created_this_week.first, article\r\n  end\r\nend\r\n```", "labels": [], "number": 31740, "updated_at": "2018-01-19 02:26:48", "user": 6502108, "closed_at": "None", "id": 289836808, "title": "ActiveRecord::Relation seems to no longer have access to private methods included via a model concern", "url": "https://api.github.com/repos/rails/rails/issues/31740", "created_at": "2018-01-19 01:47:41", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358845891", "text": "The receiver in a scope was changed from `klass` to `relation` itself for consistency at #29301.\r\n\r\nOriginally `default_scope { where('created_at >= ?', week_start) }` didn't work since the receiver in `default_scope` is `relation`.\r\n\r\nAnd also, `arel_attribute` method can not correctly reference a table name alias unless the receiver is `relation`. See 801ccab22a8efc2611300a14a8b373a43aa0de28.", "created_at": "2018-01-19 02:14:23", "user": 12642, "id": 358845891}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358847860", "text": "Thanks for the quick response! That makes sense, it helps a lot to know what the underlying changes are.", "created_at": "2018-01-19 02:26:48", "user": 6502108, "id": 358847860}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nI was annoyed to find out this interface weirdly changed in a breaking way (twice) on minor version, but also seemingly avoided allowing the user to follow the lower interface *for seemingly no reason* and forced the user to use symbols.\r\n\r\n\r\nI know this will need changes, but I wanted to get the ball roling before spending more energy.", "labels": [], "number": 31739, "updated_at": "2018-01-19 04:46:46", "user": 334809, "closed_at": "None", "id": 289830067, "title": "Allow camelize to take a string or an old school boolean", "url": "https://api.github.com/repos/rails/rails/issues/31739", "created_at": "2018-01-19 01:06:23", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358834466", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @sgrif (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-19 01:06:26", "user": 7468109, "id": 358834466}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358839522", "text": "> this interface weirdly changed in a breaking way (twice) on minor version\r\n\r\nCould you expand on that?\r\n\r\n#30039 recently taught it that an exception is more useful than a silent nil, but the rest of the interface seems to have been unchanged for twelve years: https://github.com/rails/rails/commit/4e7c6f58fb14ad8783062303191eebed7699965b#diff-9c7c8274426cb68629b863c3ddf57b2aR15", "created_at": "2018-01-19 01:35:26", "user": 1034, "id": 358839522}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358865639", "text": "Weird, because in my rails console (v4.2.5) when I look at the definition it takes a boolean value, not a symbol. It appeared to be a interface change from 4.2.5 to latest 4.2, but maybe I'm just looking at it wrong. I'll find out more.", "created_at": "2018-01-19 04:46:46", "user": 334809, "id": 358865639}], "assignees": [1529387, 1529387], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "autosave_associated_records_for_association is also generated, so we\r\ncould say 7 here, but seems like that one is not worth mentioning in\r\nthis context.\r\n\r\n### Summary\r\n\r\nProvide a general description of the code changes in your pull\r\nrequest... were there any bugs you had fixed? If so, mention them. If\r\nthese bugs have open GitHub issues, be sure to tag them here as well,\r\nto keep the conversation linked together.\r\n\r\n### Other Information\r\n\r\nIf there's anything else that's important and relevant to your pull\r\nrequest, mention that information here. This could include\r\nbenchmarks, or other information.\r\n\r\nIf you are updating any of the CHANGELOG files or are asked to update the\r\nCHANGELOG files by reviewers, please add the CHANGELOG entry at the top of the file.\r\n\r\nFinally, if your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails!\r\n", "labels": [], "number": 31738, "updated_at": "2018-01-18 23:11:32", "user": 70536, "closed_at": "2018-01-18 23:11:32", "id": 289796927, "title": "Fix minor typo [ci skip]", "url": "https://api.github.com/repos/rails/rails/issues/31738", "created_at": "2018-01-18 22:23:49", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358801876", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kaspth (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-18 22:23:52", "user": 7468109, "id": 358801876}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358803894", "text": "The list was updated in #30125. Looks like there are other affected lines.\r\n\r\n```\r\n% git grep -n 'the declaring class automatically gains'\r\nguides/source/association_basics.md:798:When you declare a `belongs_to` association, the declaring class automatically gains five methods related to the association:\r\nguides/source/association_basics.md:1149:When you declare a `has_one` association, the declaring class automatically gains five methods related to the association:\r\nguides/source/association_basics.md:1422:When you declare a `has_many` association, the declaring class automatically gains 16 methods related to the association:\r\nguides/source/association_basics.md:1955:When you declare a `has_and_belongs_to_many` association, the declaring class automatically gains 16 methods related to the association:\r\n```", "created_at": "2018-01-18 22:32:43", "user": 12642, "id": 358803894}, {"reactions": {"+1": [12642]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358812658", "text": "@kamipo good catch, expanded to fix up all four references.  I made them all use numerals too, although I can undo that if words are preferred for smaller numbers.", "created_at": "2018-01-18 23:07:51", "user": 70536, "id": 358812658}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n**Notice:** The example that I am describing below is not producing the error itself, but consider it as the general idea.\r\n\r\nNow, think of the following stack:\r\n\r\n- A rails **engine**, named e.g. \"core\" which contains all logic. Models, controllers e.t.c, all live there.\r\n- A rails **application** which is (almost) empty, it has no written logic. It is used as a container in order to load the \"core\" engine. Even its Gemfile is (almost) empty, it just defines the \"core\" gem.\r\n\r\nNow, inside the main rails **application** we want to create a custom configuration `.yml` file which will holds some application-wide settings that will be shared amongst the \"core\" engine/gem and any other engines/gems that will be added in the future. So inside our `testapp/config/application.rb` file we define the custom configuration by writing:\r\n\r\n```\r\nmodule Testapp\r\n  class Application < Rails::Application\r\n    ...\r\n    config.custom_conf = config_for(:custom_conf)\r\n    ...\r\n  end\r\nend\r\n```\r\nFinally we create the desired `.yml` file, e.g. `testapp/config/custom_conf.yml`\r\n\r\nNow we want to use this custom configuration inside our \"core\" engine, and specifically inside an initializer that we have created. So inside `core/config/initializer/apartment.rb` we write:\r\n\r\n```\r\nRails.configuration.custom_conf[\"custom_title\"]\r\n```\r\n\r\nThat's all! So now let's scaffold a new \"User\" model **inside the \"core\" engine** by typing to the terminal:\r\n\r\n`bin/rails g model User`\r\n\r\n### Expected behavior\r\nOn rails 5.0.x everything is fine, the generator creates the expected files (migration, model, test, fixture)\r\n\r\n### Actual behavior\r\nOn rails 5.1.x we are getting the following error:\r\n\r\n> /.../ruby-2.4.0/gems/railties-5.1.4/lib/rails/railtie/configuration.rb:95:in 'method_missing': undefined method 'custom_conf' for #<Rails::Application::Configuration:0x000000021139e\r\n\r\nAs we can see from the stack trace printed on the console, when calling the generator, the \"core\" engine will get initialized via the `core/test/dummy` rails application and as a result the code of the engine will be executed without prior some parts of our code be defined (e.g. the custom configuration). This change introduced in rails 5.1.\r\n\r\nSo my question is if there is a configuration in order to overlap this error. I noticed the constant\r\n\r\n`APP_PATH    = File.expand_path('../../test/dummy/config/application', __FILE__)` \r\n\r\nwhich is defined inside `core/bin/rails` file. If I change it to point the main rails application in an external folder the generator works properly. But is this the right practice or other unexpected errors may occur??\r\n\r\nAny thoughts???\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.4.0\r\n", "labels": [], "number": 31737, "updated_at": "2018-01-18 22:41:39", "user": 22303333, "closed_at": "2018-01-18 21:58:12", "id": 289785713, "title": "Railties Generator produces error on rails engine 5.1.x", "url": "https://api.github.com/repos/rails/rails/issues/31737", "created_at": "2018-01-18 21:42:42", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358795208", "text": "You can't develop you engine based in configuration of the app that is going to be mounted. Engine were made to be isolated from the main app so they can't know anything about the main app. If you want to do that (which is not recommended) the `APP_PATH` constant is the right value to change.", "created_at": "2018-01-18 21:58:12", "user": 47848, "id": 358795208}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358805578", "text": "@rafaelfranca I am reporting this, because using configuration from the main application into the engine was not a problem until version 5.0.6. \r\n\r\nBut configuration is just an example I provided. There may be other parts between an engine and the app that may be interacting so:\r\n\r\n>  Engine were made to be isolated from the main app so they can't know anything about the main app\r\n\r\nis not 100% accurate as described inside [http://guides.rubyonrails.org/engines.html](url) at section 4.3 and 4.4!\r\n\r\n> Within an engine, there may come a time where you wish to use things such as initializers, internationalization or other configuration options. The great news is that these things are entirely possible, because a Rails engine shares much the same functionality as a Rails application. In fact, a Rails application's functionality is actually a superset of what is provided by engines!\r\n\r\nAnyway thanks for your answer!\r\n\r\n", "created_at": "2018-01-18 22:39:50", "user": 22303333, "id": 358805578}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "This appears to have slipped in as part of a2827ec. The pope is infallible, why isn't @eileencodes ?", "labels": [], "number": 31736, "updated_at": "2018-01-18 18:32:48", "user": 6261109, "closed_at": "2018-01-18 18:10:46", "id": 289688850, "title": "Use selected_migrations if block_given?", "url": "https://api.github.com/repos/rails/rails/issues/31736", "created_at": "2018-01-18 16:19:40", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358698182", "text": "r? @eileencodes\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-18 16:19:42", "user": 7468109, "id": 358698182}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358700599", "text": "Hey can you update the commit message to remove my handle? Any time someone pushes this commit to their branch I'll get a notification 😄  Thanks for fixing this!", "created_at": "2018-01-18 16:27:09", "user": 1080678, "id": 358700599}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358702016", "text": "Migration with block isn't tested?", "created_at": "2018-01-18 16:31:25", "user": 12642, "id": 358702016}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358719708", "text": "It is tested here https://github.com/rails/rails/blob/master/railties/test/application/rake/migrations_test.rb#L17-L38\r\n\r\nSCOPE sets it so that only bukkits migrations run. I think we don't see a failure because down is ignoring that users was never created ", "created_at": "2018-01-18 17:25:59", "user": 1080678, "id": 358719708}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358732878", "text": "Ah I figured out how to test this. I cherry-picked this commit in to master and added a test in e0ad907ade3bca1c57a32c1987c4080305019845.\r\n\r\nThanks @utilum ", "created_at": "2018-01-18 18:10:46", "user": 1080678, "id": 358732878}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358739242", "text": "Thank YOU. \r\nI amended the commit and pushed it to my branch. Doesn't look like it's changed anything here :(", "created_at": "2018-01-18 18:32:48", "user": 6261109, "id": 358739242}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Looks like a `.size` method of a **Post** model which has_many **Comments** using a counter cache is still broken in Rails 5.0.6. \r\n\r\nI follow up [this issue](https://github.com/rails/rails/issues/28579) to #26940 but im still getting the same exception.\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.integer :comments_count\r\n  end\r\n\r\n  create_table :comments, force: true do |t|\r\n    t.integer :post_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post, counter_cache: true\r\nend\r\n\r\npost = Post.create!\r\npost.comments.size #BOOM!\r\n```\r\n\r\n[Here is test cases reproducing the exception following the template](https://gist.github.com/Rudiney/9e8ee79135fc518413b6c4fa062d0fe8)\r\n\r\n### Expected behavior\r\n`post.size` should return `0`\r\n\r\n### Actual behavior\r\n`TypeError: nil can't be coerced into Integer` exception is thrown \r\n\r\n### System configuration\r\n**Rails version**: 5.0.6\r\n**Ruby version**: tested on both 2.4.1 and 2.5.0\r\n", "labels": [], "number": 31735, "updated_at": "2018-01-19 12:22:03", "user": 307759, "closed_at": "2018-01-19 12:21:51", "id": 289649594, "title": "size method with counter_cache collection is still broken in rails 5.0.6", "url": "https://api.github.com/repos/rails/rails/issues/31735", "created_at": "2018-01-18 14:33:51", "comments": [{"reactions": {"+1": [307759]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358765361", "text": "With the test case you submitted, adding a default of 0 to the comments_count column does solve the problem. Maybe the question is, should ActiveRecord assume that nil.size is 0? nil.to_i is 0, obviously, but size is still being called somewhere.", "created_at": "2018-01-18 20:04:08", "user": 2028176, "id": 358765361}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358775478", "text": "This works correctly in Rails 5.1; https://github.com/rails/rails/pull/26940 was merged, but it wasn't backported.\r\n\r\nAt this point Rails 5.0 is only supported for security issues, so it's unlikely this will be fixed.", "created_at": "2018-01-18 20:42:51", "user": 432189, "id": 358775478}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358951974", "text": "Thanks @joshmn and @eugeneius! \r\n\r\nIm holding to the **default to 0** strategy until i upgrade my Rails version to 5.1", "created_at": "2018-01-19 12:21:51", "user": 307759, "id": 358951974}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nThe issue is a typo (a missing s) in the highlighted section below, which is found in section 5.2 at this link: http://guides.rubyonrails.org/getting_started.html\r\n![screen shot 2018-01-18 at 5 05 55 pm](https://user-images.githubusercontent.com/13763558/35096390-04a39eac-fc72-11e7-84de-28ceb98cfd4a.png)\r\n\r\n### Expected behavior\r\nThe entire code snippet is supposed to lead to the error mentioned in the next steps. Instead...\r\n\r\n### Actual behavior\r\nThis error is found: No route matches [POST] \"/articles/new\"\r\nThis error is further documented here: https://stackoverflow.com/questions/23864868/no-route-matches-post-articles-new\r\n\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 5.1.4\r\n\r\n**Ruby version**:\r\nruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-darwin17]\r\n", "labels": [], "number": 31734, "updated_at": "2018-01-18 23:17:44", "user": 13763558, "closed_at": "2018-01-18 23:17:44", "id": 289599527, "title": "resources typo in code-snippet in the getting-started-guide to rails", "url": "https://api.github.com/repos/rails/rails/issues/31734", "created_at": "2018-01-18 11:43:26", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358814659", "text": "`scope: :article` is correct in this form. \r\nMaybe you missed adding `url: articles_path`, that described in the section. \r\nPlease check `5.2 The first form` whole. Thanks.\r\n", "created_at": "2018-01-18 23:17:44", "user": 987638, "id": 358814659}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "![image](https://user-images.githubusercontent.com/7545977/35092897-bca9a808-fc7b-11e7-9357-5ff29a0848e0.png)\r\n\r\n![image](https://user-images.githubusercontent.com/7545977/35093061-30b6780c-fc7c-11e7-92b6-aebf3574bc5e.png)\r\n", "labels": [], "number": 31733, "updated_at": "2018-01-22 05:41:32", "user": 7545977, "closed_at": "None", "id": 289574200, "title": "[ActionCable] after refresh page, cable did not send subscribe command ", "url": "https://api.github.com/repos/rails/rails/issues/31733", "created_at": "2018-01-18 10:16:59", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359330327", "text": "Can you provide a sample application that reproduces the bug?", "created_at": "2018-01-22 05:41:31", "user": 94129, "id": 359330327}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nThis PR changes .rubocop.yml.\r\n\r\nRegarding the code using `if ... else ... end`, I think the coding style that Rails expects is as follows.\r\n\r\n```ruby\r\nvar = if cond\r\n  a\r\nelse\r\n  b\r\nend\r\n```\r\n\r\nHowever, the current .rubocop.yml setting does not offense for the following code.\r\n\r\n```ruby\r\nvar = if cond\r\n        a\r\n      else\r\n        b\r\n      end\r\n```\r\n\r\nI think that the above code expects offense to be warned.\r\n\r\nMoreover, the layout by autocorrect is unnatural.\r\n\r\n```ruby\r\nvar = if cond\r\n  a\r\n      else\r\n        b\r\n      end\r\n```\r\n\r\nThis PR adds a setting to .rubocop.yml to make an offense warning and autocorrect as expected by the coding style.\r\nAnd this change also fixes `case ... when ... end` together.\r\n\r\nAlso this PR itself is an example that arranges the layout using `rubocop -a`.\r\n\r\n### Other Information\r\n\r\nAutocorrect of `Lint/EndAlignment` cop is `false` by default.\r\nhttps://github.com/bbatsov/rubocop/blob/v0.51.0/config/default.yml#L1443\r\n\r\nThis PR changes this value to `true`.\r\n\r\nAlso this PR has changed it together as it is necessary to enable `Layout/ElseAlignment` cop to make this behavior.\r\n", "labels": [], "number": 31732, "updated_at": "2018-01-19 07:21:13", "user": 13203, "closed_at": "2018-01-19 07:19:21", "id": 289541112, "title": "Enable autocorrect for `Lint/EndAlignment` cop", "url": "https://api.github.com/repos/rails/rails/issues/31732", "created_at": "2018-01-18 08:20:18", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358571554", "text": "r? @rafaelfranca\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-18 08:20:20", "user": 7468109, "id": 358571554}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "in win7.\r\n\r\nC:\\blah11>rails -v\r\nRails 5.1.4\r\n\r\nC:\\blah11>ruby -v\r\nruby 2.4.2p198 (2017-09-14 revision 59899) [x64-mingw32]\r\n\r\nC:\\blah11>\r\n\r\n\r\nC:\\rubytest\\hartl\\ch4>rails new blah11 >nul\r\n\r\nC:\\rubytest\\hartl\\ch4>cd blah11\r\n\r\nC:\\blah11>rails generate controller abc def >nul\r\n\r\nC:\\blah11>rails test\r\nRun options: --seed 57228\r\n\r\n# Running:\r\n\r\n.\r\n\r\nFinished in 0.581000s, 1.7212 runs/s, 1.7212 assertions/s.\r\n1 runs, 1 assertions, 0 failures, 0 errors, 0 skips\r\n\r\nC:\\blah11>\r\n\r\n\r\n\r\nC:\\blah11>wordpad.exe test\\controllers\\abc_controller_test.rb\r\n\r\nC:\\blah11>type test\\controllers\\abc_controller_test.rb\r\nrequire 'test_helper'\r\n\r\nclass AbcControllerTest < ActionDispatch::IntegrationTest\r\n  test \"should get def\" do\r\n    get abc_def_url\r\n    assertttt_response :success\r\n  end\r\n\r\nend\r\n\r\nRails test now will show the error but after it shows the error it displays lots of junk errors.\r\n\r\nC:\\blah11>rails test\r\nRun options: --seed 59902\r\n\r\n# Running:\r\n\r\nE\r\n\r\nError:\r\nAbcControllerTest#test_should_get_def:\r\nNoMethodError: undefined method `assertttt_response' for #<AbcControllerTest:0x00000000052d9c18>\r\nDid you mean?  assert_response\r\n    test/controllers/abc_controller_test.rb:6:in `block in <class:AbcControllerTest>'\r\n\r\n\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/railties-5.1.4/lib/rails/test_unit/reporter.rb:70:in `method': undefined method `test_should_get_def' for class `Minitest::Result' (NameError)\r\n        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/railties-5.1.4/lib/rails/test_unit/reporter.rb:70:in `format_rerun_snippet'\r\n        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/railties-5.1.4/lib/rails/test_unit/reporter.rb:23:in `record'\r\n        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/minitest-5.11.1/lib/minitest.rb:786:in `block in record'\r\n        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/minitest-5.11.1/lib/minitest.rb:785:in `each'\r\n        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/minitest-5.11.1/lib/minitest.rb:785:in `record'\r\n        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/minitest-5.11.1/lib/minitest.rb:334:in `run_one_method'\r\n        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/minitest-5.11.1/lib/minitest.rb:321:in `block (2 levels) in run'\r\n        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/minitest-5.11.1/lib/minitest.rb:320:in `each'\r\n        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/minitest-5.11.1/lib/minitest.rb:320:in `block in run'\r\n        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/minitest-5.11.1/lib/minitest.rb:360:in `on_signal'\r\n        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/minitest-5.11.1/lib/minitest.rb:347:in `with_info_handler'\r\n        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/minitest-5.11.1/lib/minitest.rb:319:in `run'\r\n        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/railties-5.1.4/lib/rails/test_unit/line_filtering.rb:9:in `run'\r\n        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/minitest-5.11.1/lib/minitest.rb:159:in `block in __run'\r\n        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/minitest-5.11.1/lib/minitest.rb:159:in `map'\r\n        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/minitest-5.11.1/lib/minitest.rb:159:in `__run'\r\n        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/minitest-5.11.1/lib/minitest.rb:136:in `run'\r\n        from C:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/minitest-5.11.1/lib/minitest.rb:63:in `block in autorun'\r\n\r\n\r\n", "labels": [], "number": 31731, "updated_at": "2018-01-18 10:27:01", "user": 12636021, "closed_at": "2018-01-18 10:27:00", "id": 289535639, "title": "windows, rails test   displays loads of lines regarding a reporter/minitest, after displaying the error it should show", "url": "https://api.github.com/repos/rails/rails/issues/31731", "created_at": "2018-01-18 07:56:04", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358604183", "text": "Thanks for creating an issue. This issue already fixed with #31624.  \r\nThis issue will occur with using Minitest 5.11.\r\nPlease lock Minitest version until released next version of Rails.\r\n", "created_at": "2018-01-18 10:27:00", "user": 987638, "id": 358604183}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "- Allow `false` for `config.generators.system_tests=`\r\n  I think using `config.generators.system_tests=` with `false` should guarantee the same behavior as with `nil`.\r\n- Mention `config.generators.system_tests` in the \"Configuring Rails Applications\" guide.", "labels": [], "number": 31730, "updated_at": "2018-01-18 20:22:18", "user": 6443532, "closed_at": "2018-01-18 19:54:14", "id": 289450186, "title": "Allow `false` for `config.generators.system_tests=`", "url": "https://api.github.com/repos/rails/rails/issues/31730", "created_at": "2018-01-17 23:23:48", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358483636", "text": "r? @kamipo\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-17 23:23:50", "user": 7468109, "id": 358483636}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [4545990]}, "text": "I'd like to do direct uploads to AWS S3 with client-side encryption so that data is already encrypted when being sent over the wire.\r\n\r\n- Is this feature on the roadmap for ActiveStorage?\r\n- Does that sound like a good idea?", "labels": [], "number": 31729, "updated_at": "2018-01-17 22:32:14", "user": 1047845, "closed_at": "2018-01-17 22:32:14", "id": 289433424, "title": "ActiveStorage client-side encryption", "url": "https://api.github.com/repos/rails/rails/issues/31729", "created_at": "2018-01-17 22:16:15", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358471641", "text": "We reserve the Rails issue tracker only for bugs in Rails. We don't accept feature requests on the issue tracker. Please ask on the [Rails core mailing list](https://groups.google.com/forum/#!forum/rubyonrails-core)", "created_at": "2018-01-17 22:32:14", "user": 1529387, "id": 358471641}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "`Browser` is used in action_dispatch/system_testing/driver.rb only.\r\n\r\nRelated to 51c5bcb\r\n\r\n/cc @eileencodes ", "labels": [], "number": 31728, "updated_at": "2018-01-17 22:17:28", "user": 6443532, "closed_at": "2018-01-17 22:15:24", "id": 289426769, "title": "Move `require \"action_dispatch/system_testing/browser\"` to driver.rb ", "url": "https://api.github.com/repos/rails/rails/issues/31728", "created_at": "2018-01-17 21:52:46", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358460084", "text": "r? @kaspth\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-17 21:52:56", "user": 7468109, "id": 358460084}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358466760", "text": "Thank you for the PR. It doesn't matter were that require is so I'm closing this PR as a cosmetic change.", "created_at": "2018-01-17 22:15:24", "user": 47848, "id": 358466760}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {"hooray": [49549], "+1": [6443532, 941925, 8072432]}, "text": "Rails has some support for multiple databases but it can be hard to\r\nhandle migrations with those. The easiest way to implement multiple\r\ndatabases is to contain migrations into their own folder (\"db/migrate\"\r\nfor the primary db and \"db/seconddb_migrate\" for the second db). Without\r\nthis you would need to write code that allowed you to switch connections\r\nin migrations. I can tell you from experience that is not a fun way to\r\nimplement multiple databases.\r\n\r\nThis refactoring is a pre-requisite for implementing other features\r\nrelated to parallel testing and improved handling for multiple\r\ndatabases.\r\n\r\nThe refactoring here moves the class methods from the `Migrator` class\r\ninto it's own new class `MigrationContext`. The goal was to move the\r\n`migrations_paths` method off of the `Migrator` class and onto the\r\nconnection. This allows users to do the following in their\r\n`database.yml`:\r\n\r\n```\r\ndevelopment:\r\n  adapter: mysql2\r\n  username: root\r\n  password:\r\n\r\ndevelopment_seconddb:\r\n  adapter: mysql2\r\n  username: root\r\n  password:\r\n  migrations_paths: \"db/second_db_migrate\"\r\n```\r\n\r\nMigrations for the `seconddb` can now be store in the\r\n`db/second_db_migrate` directory. Migrations for the primary database\r\nare stored in `db/migrate`\".\r\n\r\nThe refactoring here drastically reduces the internal API for migrations\r\nsince we don't need to pass `migrations_paths` around to every single\r\nmethod. Additionally this change does not require any Rails applications\r\nto make changes unless they want to use the new public API. All of the\r\nclass methods from the `Migrator` class were `nodoc`'d except for the\r\n`migrations_paths` and `migrations_path` getter/setters respectively.\r\n\r\ncc/ @tenderlove ", "labels": ["activerecord"], "number": 31727, "updated_at": "2018-02-01 17:36:16", "user": 1080678, "closed_at": "2018-01-18 14:35:15", "id": 289385703, "title": "Refactor migration to move migrations paths to connection", "url": "https://api.github.com/repos/rails/rails/issues/31727", "created_at": "2018-01-17 19:31:29", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362343236", "text": "@matthewd, this PR is not related to maintaining multiple connections for multiple databases. Migrations are still working with `ActiveRecord::Base.connection`. They are applied one-by-one. It is not possible to apply migration when two connections are running.", "created_at": "2018-02-01 17:36:16", "user": 941925, "id": 362343236}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "  - Remove mention about `ActionView::TemplateHandlers` since this\r\n    module was removed by c1304098cca8a9247a9ad1461a1a343354650843.\r\n    Change word `subclasses` to `nested classes`.\r\n    See c7408a0e40545558872efb4129fe4bf097c9ce2f\r\n  - Remove useless sentence \"Beginning with Rails 2, the standard extensions\r\n    are `.erb` for ERB (HTML with embedded Ruby), and `.builder` for Builder (XML generator).\"", "labels": [], "number": 31726, "updated_at": "2018-01-17 14:40:13", "user": 6443532, "closed_at": "2018-01-17 14:37:41", "id": 289287263, "title": "Update \"Layouts and Rendering in Rails\" guide [ci skip]", "url": "https://api.github.com/repos/rails/rails/issues/31726", "created_at": "2018-01-17 14:35:11", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358322731", "text": "r? @eileencodes\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-17 14:35:22", "user": 7468109, "id": 358322731}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "I had a lot of difficulty making sense of the “Local Precompilation” section of the guide on the Asset Pipeline. I've rewritten it in a way that (IMO) is easier to understand without prior knowledge or experience, without compromising any depth of explanation.\r\n\r\nI hope the team agrees!", "labels": [], "number": 31725, "updated_at": "2018-01-18 11:11:12", "user": 12194123, "closed_at": "None", "id": 289193023, "title": "Clarify language in Asset Pipeline Guide", "url": "https://api.github.com/repos/rails/rails/issues/31725", "created_at": "2018-01-17 09:19:24", "comments": [], "assignees": [], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "Fixes #31723\r\n\r\n```\r\ndavid_balance = customers(:david).balance\r\nCustomer.where(balance: [david_balance]).to_sql\r\n\r\n# Before: WHERE `customers`.`balance` = NULL\r\n# After : WHERE `customers`.`balance` = 50\r\n```\r\n\r\n", "labels": ["activerecord"], "number": 31724, "updated_at": "2018-01-28 22:20:05", "user": 2792624, "closed_at": "2018-01-28 22:20:05", "id": 289187957, "title": "Fix not expanded problem when passing an Array object as argument to the where method using composed_of column.", "url": "https://api.github.com/repos/rails/rails/issues/31724", "created_at": "2018-01-17 09:00:59", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358239741", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @pixeltrix (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-17 09:01:02", "user": 7468109, "id": 358239741}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359920698", "text": "Can you more exercise tests for `customer.address` (mapping size: 2)?\r\nLooks like this only work in case of mapping size: 1.", "created_at": "2018-01-23 20:31:28", "user": 12642, "id": 359920698}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360020304", "text": "@kamipo Added test with multiple mappings.", "created_at": "2018-01-24 04:51:55", "user": 2792624, "id": 360020304}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360024106", "text": "Originally, if mapping size is 1, `Customer.where(fullname: customer.fullname.to_s)` treated as `Customer.where(name: customer.fullname.to_s)`. If mapping size is more than 1, not allowed as invalid value.\r\n\r\nIn this PR, `Customer.where(address: customer.address.country)` will be treated as `Customer.where(address_street: customer.address.country, address_city: customer.address.country, address_country: customer.address.country)`.\r\nAt least it should not be changed to fix #31723.", "created_at": "2018-01-24 05:21:03", "user": 12642, "id": 360024106}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n```ruby\r\n#activerecord/test/models/customer.rb\r\n\r\nclass Customer < ActiveRecord::Base\r\n  composed_of :balance, class_name: \"Money\", mapping: %w(balance amount), converter: Proc.new(&:to_money)\r\nend\r\n\r\nclass Money\r\n  attr_reader :amount, :currency\r\n  def initialize(amount, currency = \"USD\")\r\n    @amount, @currency = amount, currency\r\n  end\r\nend\r\n\r\nCustomer.where(balance: [Money.new(1), Money.new(2)]).to_sql\r\n```\r\n\r\n### Expected behavior\r\n\"SELECT `customers`.* FROM `customers` WHERE `customers`.`balance` IN (1, 2)\"\r\n\r\n### Actual behavior\r\n\"SELECT `customers`.* FROM `customers` WHERE `customers`.`balance` IN (NULL, NULL)\"\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.4.3\r\n", "labels": ["attached PR"], "number": 31723, "updated_at": "2018-01-28 22:20:05", "user": 2792624, "closed_at": "2018-01-28 22:20:05", "id": 289184535, "title": "where method using composed_of columns doesn’t expand an Array object", "url": "https://api.github.com/repos/rails/rails/issues/31723", "created_at": "2018-01-17 08:48:07", "comments": [], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n<pre>\r\n$ rails new test_app\r\n$ cd test_app\r\n$ rails generate migration first_migration\r\nRunning via Spring preloader in process 65119\r\n      invoke  active_record\r\n      create    db/migrate/20180117071603_first_migration.rb\r\n$ mv db/migrate/20180117071603_first_migration.rb db/migrate/2017141707160301_first_migration.rb\r\n$ rails generate migration second_migration\r\nRunning via Spring preloader in process 65128\r\n      invoke  active_record\r\n      create    db/migrate/20180117071645_second_migration.rb\r\n$ ls db/migrate/ | sort -n\r\n20180117071645_second_migration.rb\r\n2017141707160301_first_migration.rb\r\n$ mv db/migrate/20180117071645_second_migration.rb db/migrate/2018141707164501_second_migration.rb\r\n$ rails generate migration third_migration\r\nRunning via Spring preloader in process 65141\r\n      invoke  active_record\r\n      create    db/migrate/2018141707164502_third_migration.rb\r\n$ ls db/migrate/ | sort -n\r\n2017141707160301_first_migration.rb\r\n2018141707164501_second_migration.rb\r\n2018141707164502_third_migration.rb\r\n</pre>\r\n### Expected behavior\r\nmigration should be listed(and executed by `rails db:migrate`) in the order they were created.\r\n\r\n### Actual behavior\r\nmigrations are listed (and executed by `rails db:migrate`) in wrong order.\r\nThis appears to happen after a year boundary(2017/2018)\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: ruby 2.4.2p198 (2017-09-14 revision 59899) [x86_64-darwin15]\r\n", "labels": [], "number": 31722, "updated_at": "2018-01-17 23:08:09", "user": 30031446, "closed_at": "None", "id": 289156356, "title": "Rails generate migration can generate numerically lower timestamp", "url": "https://api.github.com/repos/rails/rails/issues/31722", "created_at": "2018-01-17 06:31:05", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358212645", "text": "> $ mv db/migrate/20180117062308_first_migration.rb db/migrate/20170117062308**01**_first_migration.rb\r\n\r\nIs there a reason why `01` was added in your test case? That's the reason why `sort -n` doesn't work as expected though:\r\n\r\n```\r\n$ echo \"2017011706230801 \\n20180117062351\" | sort \r\n2017011706230801 \r\n20180117062351\r\n\r\n$ echo \"2017011706230801 \\n20180117062351\" | sort -n\r\n20180117062351\r\n2017011706230801 \r\n```\r\n\r\nI feel like if we change the sort order it will break other people's app that rely* the behavior to be this way, so I would love to hear your intention of suffixing it with `01` first.\r\n\r\nThank you!", "created_at": "2018-01-17 06:43:47", "user": 4912, "id": 358212645}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358219852", "text": "Hi!\r\nI've updated the steps to reproduce to highlight the issue.\r\nIf migrations were created with a non-timestamp series last year(2017) and I run a migration this year, it reverts to a timestamp. but if i make the last migration start with 2018 it does not do this.\r\nmoreover the switch causes lower numeric migrations which will run _before_ previous migrations. \r\nSo i have a situation like this in one of my projects:\r\n<pre>\r\n20170710032739_create_assignments.rb\r\n2017210712051234_create_questions.rb\r\n2017210712051235_rename_table_assignments_to_jobs.rb\r\n..\r\n2017210712051256_add_predefined_question.rb\r\n20180115211941_change_question_text_to_text.rb\r\n20180117051458_create_job_users.rb\r\n</pre>\r\nwhich means 20180115211941_change_question_text_to_text and 20180117051458_create_job_users try to run _before_ 2017210712051234_create_questions.rb", "created_at": "2018-01-17 07:26:39", "user": 30031446, "id": 358219852}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358221347", "text": "It's generally expected that if you have the `timestamped_migrations` option turned on, you're using timestamps to order your migrations. If you just always want N+1, you can turn that option off. (Though if you're going to use sequential numbers, and give up the branch-merge benefits of timestamps, I'd personally go for a slightly smaller starting number.)\r\n\r\nHowever, I agree this should probably be using a numeric comparison:\r\n\r\nhttps://github.com/rails/rails/blob/6783bcab7ab11f2ced4b711d3518422e35e3dc01/activerecord/lib/active_record/migration.rb#L935\r\n\r\nWant to open a PR?", "created_at": "2018-01-17 07:34:52", "user": 1034, "id": 358221347}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358480252", "text": "Yeah I'll open a PR. Just have to do some reading about how open a PR right!", "created_at": "2018-01-17 23:08:09", "user": 30031446, "id": 358480252}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n1. In a model, change default scope to include some active record objects and exclude some of them\r\n2. Make another scope that includes all unscoped records as well\r\n3. Try to use reset_counters method for the scope that has the unscoped records\r\n\r\nEg. code snippets\r\n\r\n```\r\nclass Post < ApplicationRecord\r\n  has_many :comments\r\n  default_scope { where(public: true) }\r\n  scope :with_private, -> { unscoped.all }\r\nend\r\n```\r\n\r\n```\r\nclass Comment < ApplicationRecord\r\n  belongs_to :post, counter_cache: true\r\nend\r\n```\r\nNow trying to reset_counters! for a Post that is not in the default scope throws error.\r\nPost.reset_counters(5, :comments) throws ActiveRecord::RecordNotFound exception\r\n\r\n### Expected behavior\r\nreset_counters should work and be able to find the active record by using unscoped\r\n\r\n### Actual behavior\r\nActiveRecord::RecordNotFound: Couldn't find Post with 'id'=5 [WHERE \"posts\".\"public\" = $1]\r\n\r\n### System configuration\r\n**Rails version**: 5.0.6\r\n\r\n**Ruby version**: 2.3.1\r\n", "labels": [], "number": 31721, "updated_at": "2018-01-17 06:07:24", "user": 3635878, "closed_at": "2018-01-17 06:05:20", "id": 289150518, "title": "reset_counters method of Rails counter_cache uses default scope", "url": "https://api.github.com/repos/rails/rails/issues/31721", "created_at": "2018-01-17 05:53:53", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358207089", "text": "Closing this as I found a solution to the problem.\r\nCalling the reset_counters method with the scope does the job.\r\n\r\nEg for above code:\r\n\r\n`Post.with_private.reset_counters(5, :comments)`\r\n", "created_at": "2018-01-17 06:07:23", "user": 3635878, "id": 358207089}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"hooray": [840612, 4083992], "+1": [4083992]}, "text": "### Summary\r\n\r\nThis PR updates the default HSTS max-age value to 31536000 seconds (1 year) to meet the minimum max-age requirement for https://hstspreload.org/.\r\n\r\nThis requirement for the browser preload lists seemed to change in [October 2017](https://github.com/chromium/hstspreload.org/commit/b48ae5ac7c2db1d8a0635ee60a4c68a4b2f9c88e).\r\n\r\nThe HSTS max-age default was once set to 1 year, but it [was lowered](https://github.com/rails/rails/pull/21520/files#r39923850) because at that time 1 year was arbitrary and much more than the 18 week requirement for the browser preload lists. Assuming that the Rails defaults are intended to match the minimum requirements for the browser preload list, it makes sense to update this value. At the very least, the documentation could be updated to indicate that the requirements for the browser preload lists (at least for Chromium/https://hstspreload.org/) have changed.\r\n\r\n### Other Information\r\n\r\nI also noticed that the preload directive is required to be present in the header for https://hstspreload.org/. However, Rails does not add the directive by default. I do not know if it is the intention of the Rails defaults to meet all of the preload list requirements, but if it is then perhaps the existing preload directive option should be set to true.", "labels": [], "number": 31720, "updated_at": "2018-02-25 15:54:08", "user": 616290, "closed_at": "2018-02-24 23:20:22", "id": 289113221, "title": "Update default HSTS max-age value to 1 year", "url": "https://api.github.com/repos/rails/rails/issues/31720", "created_at": "2018-01-17 01:31:47", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358165129", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @rafaelfranca (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-17 01:31:58", "user": 7468109, "id": 358165129}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368205762", "text": "Hello, what's blocking this PR?", "created_at": "2018-02-24 06:51:06", "user": 4083992, "id": 368205762}, {"reactions": {"+1": [4083992]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368264556", "text": "@Fudoshiki I am not sure if there is anything blocking this PR, I just haven't heard from anyone about it.\r\n\r\n@guilleiguaran Need me to rebase?", "created_at": "2018-02-24 22:15:29", "user": 616290, "id": 368264556}, {"reactions": {"+1": [616290]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/368269101", "text": "Thank you, I've merged and backported this to 5-2-stable.", "created_at": "2018-02-24 23:36:21", "user": 160941, "id": 368269101}], "assignees": [160941, 160941], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "\r\n### Summary\r\n\r\nReplacing `ActiveRecord::Base` with a `connection_class` method allows easier re-use of the\r\nDatabaseTasks object in an app that has connections to multiple databases.\r\n\r\n### Other Information\r\n\r\nThere may be other places where we'd want to reduce the `ActiveRecord::Base` 'obsession', but I've omitted them from this PR to focus on the concept of whether this is a pattern Rails-core is interested in.  I create in in response to having to write tasks which cache the current ActiveRecord::Base connection_config, establish a connection to a different database, run the task, then restore the original connection config.", "labels": [], "number": 31719, "updated_at": "2018-02-09 15:49:34", "user": 142914, "closed_at": "None", "id": 289067502, "title": "Proposed Feature: Add DatabaseTasks#connection_class to simplify multiple database apps", "url": "https://api.github.com/repos/rails/rails/issues/31719", "created_at": "2018-01-16 21:47:37", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358118225", "text": "r? @pixeltrix\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-16 21:47:39", "user": 7468109, "id": 358118225}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358121209", "text": "👍  for the idea. I was planing to implement it myself and we have support to multiple databases in our plans for a while now. But is not this already possible with the `database_configuration` option? https://github.com/rails/rails/blob/b6d5e46311d7ea59539c1f45c6ffb269eeb23912/activerecord/lib/active_record/railties/databases.rake#L17", "created_at": "2018-01-16 21:57:57", "user": 47848, "id": 358121209}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358198086", "text": "@rafaelfranca \r\n\r\n> Is not this already possible with the `ActiveRecord::Base.configurations` option?\r\n\r\nIt may be and I just haven't come across code that suggested this would help and so hadn't considered it. Is there a notion of a 'scoped' active configuration that allows ActiveRecord::Base.connection to be different within the task?  \r\n\r\n<details>\r\n  <summary>\r\n(By 'scoped', I exclude workarounds like the below. My point is just that it is a lot of non-obvious code. Click to expand)\r\n  </summary>\r\n\r\n```ruby\r\n# Taken from http://www.ostinelli.net/setting-multiple-databases-rails-definitive-guide/\r\n# Written at Rails 4.2\r\nnamespace :postgres do\r\n  namespace :db do |ns|\r\n    task :drop do\r\n      connection_config = @connection_config\r\n      ActiveRecord::Tasks::DatabaseTasks.drop(connection_config)\r\n    end\r\n\r\n    task :create do\r\n      connection_config = @connection_config\r\n      ActiveRecord::Tasks::DatabaseTasks.create(connection_config)\r\n    end\r\n\r\n    task setup: ['postgres:db:create', 'postgres:db:structure:load', 'postgres:db:seed']\r\n\r\n    task :migrate do\r\n      Rake::Task[:environment].invoke\r\n      Rake::Task['db:load_config'].invoke\r\n      begin\r\n        verbose = ENV[\"VERBOSE\"] ? ENV[\"VERBOSE\"] == \"true\" : true\r\n        version = ENV[\"VERSION\"] ? ENV[\"VERSION\"].to_i : nil\r\n        scope   = ENV['SCOPE']\r\n        verbose_was = ActiveRecord::Migration.verbose\r\n        ActiveRecord::Migration.verbose = verbose\r\n        migrations_paths = Rails.application.paths['db/migrate'].to_a\r\n        ActiveRecord::Migrator.migrate(migrations_paths, version) do |migration|\r\n          scope.blank? || scope == migration.scope\r\n        end\r\n        ActiveRecord::Base.clear_cache!\r\n      ensure\r\n        ActiveRecord::Migration.verbose = verbose_was\r\n      end\r\n      Rake::Task['postgres:db:structure:dump'].invoke\r\n    end\r\n\r\n    namespace :migrate do\r\n      task :down do\r\n        Rake::Task[\"db:migrate:down\"].invoke\r\n      end\r\n\r\n      task :up do\r\n        Rake::Task[\"db:migrate:up\"].invoke\r\n      end\r\n    end\r\n\r\n    task :reset do\r\n      Rake::Task[\"db:reset\"].invoke\r\n    end\r\n\r\n    task :rollback do\r\n      Rake::Task[\"db:rollback\"].invoke\r\n    end\r\n\r\n    task :seed do\r\n      Rails.application.config.paths[\"db/seeds\"].each { |file| load(file) }\r\n    end\r\n\r\n    task :version do\r\n      Rake::Task[\"db:version\"].invoke\r\n    end\r\n\r\n    namespace :structure do\r\n      # Structure tasks call pg_dump and psql to dump/load the structure\r\n      # respectively. Those tasks don't know how to parse our configs, so we\r\n      # override them here.\r\n\r\n      task :load do\r\n        connection_config = @connection_config\r\n        ActiveRecord::Tasks::DatabaseTasks.structure_load(connection_config, ENV[\"DB_STRUCTURE\"])\r\n      end\r\n\r\n      task dump: [:environment] do\r\n        next if Rails.application.config.active_record.dump_schema_after_migration == false\r\n        filename = ENV['DB_STRUCTURE'] || File.join(@db_dir, \"structure.sql\")\r\n\r\n        connection_config = @connection_config\r\n        ActiveRecord::Tasks::DatabaseTasks.structure_dump(connection_config, filename)\r\n\r\n        if ActiveRecord::Base.connection.supports_migrations? &&\r\n            ActiveRecord::SchemaMigration.table_exists?\r\n          File.open(filename, \"a\") do |f|\r\n            f.puts ActiveRecord::Base.connection.dump_schema_information\r\n            f.print \"\\n\"\r\n          end\r\n        end\r\n      end\r\n    end\r\n\r\n    namespace :test do\r\n      task :prepare do\r\n        Rake::Task[\"db:test:prepare\"].invoke\r\n      end\r\n    end\r\n\r\n    # append and prepend proper tasks to all the tasks defined here above\r\n    ns.tasks.each do |task|\r\n      task.enhance [\"postgres:set_custom_config\"] do\r\n        # If multiple tasks from this file are run as a chain (e.g.\r\n        # postgres:db:setup), we need to ensure that each invocation actually\r\n        # executes set_custom_config. To do this, we explicitly reenable it.\r\n        Rake::Task[\"postgres:set_custom_config\"].reenable\r\n        Rake::Task[\"postgres:revert_to_original_config\"].execute\r\n      end\r\n    end\r\n  end\r\n\r\n  task :set_custom_config do\r\n    # save current vars\r\n    @original_config = {\r\n      env_db_structure: ENV[\"DB_STRUCTURE\"],\r\n      config: Rails.application.config.dup\r\n    }\r\n\r\n    # set config variables for custom database\r\n    ENV[\"DB_STRUCTURE\"] = \"db/postgres/structure.sql\"\r\n    Rails.application.config.paths[\"db\"] = [\"db/postgres\"]\r\n    Rails.application.config.paths[\"db/migrate\"] = [\"db/postgres/migrate\"]\r\n    Rails.application.config.paths[\"db/seeds\"] = [\"db/postgres/seeds.rb\"]\r\n    Rails.application.config.paths[\"config/database\"] = [\"config/postgres.yml\"]\r\n    database_configuration = YAML.load(ERB.new(Rails.root.join('config', 'postgres.yml').read).result).with_indifferent_access # rubocop:disable Security/YAMLLoad\r\n    @original_database_configuration = ActiveRecord::Tasks::DatabaseTasks.database_configuration || {}\r\n    (ActiveRecord::Tasks::DatabaseTasks.database_configuration || {}).clear\r\n    ActiveRecord::Tasks::DatabaseTasks.database_configuration = database_configuration\r\n    @original_migrations_paths = ActiveRecord::Tasks::DatabaseTasks.migrations_paths\r\n    ActiveRecord::Tasks::DatabaseTasks.migrations_paths.clear\r\n    ActiveRecord::Tasks::DatabaseTasks.migrations_paths << 'db/postgres/migrate'\r\n    @connection_config = database_configuration[Rails.env].except(:options)\r\n    # Exclude options:\r\n    # If we had default-transaction-read-only=true, the db setup rake task would raise\r\n    #\r\n    # ```\r\n    # PG::ReadOnlySqlTransaction: ERROR:\r\n    #  cannot execute CREATE DATABASE in a read-only transaction:\r\n    #  CREATE DATABASE \"app_test\" ENCODING = 'utf8'\r\n    # ```\r\n    ActiveRecord::Base.establish_connection @connection_config\r\n  end\r\n\r\n  task :revert_to_original_config do\r\n    # reset config variables to original values\r\n    ENV[\"DB_STRUCTURE\"] = @original_config[:env_db_structure]\r\n    Rails.application.config = @original_config[:config]\r\n    ActiveRecord::Tasks::DatabaseTasks.database_configuration.clear\r\n    ActiveRecord::Tasks::DatabaseTasks.database_configuration.update(@original_database_configuration)\r\n    ActiveRecord::Tasks::DatabaseTasks.migrations_paths.clear\r\n    ActiveRecord::Tasks::DatabaseTasks.migrations_paths.concat @original_migrations_paths\r\n    ActiveRecord::Base.connection.disconnect!\r\n    ActiveRecord::Base.establish_connection Rails.application.config_for(:database)\r\n  end\r\nend\r\n```\r\n\r\n</details>", "created_at": "2018-01-17 05:03:34", "user": 142914, "id": 358198086}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358994700", "text": "Hi @bf4! I'm working on some improvements to multiple databases as well. Would your problem be solved if Rails made the rake tasks for you (something I'm currently working on)? Or would you still benefit from the `connection_class`. I'm trying to better understand your use case.", "created_at": "2018-01-19 15:17:51", "user": 1080678, "id": 358994700}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364010694", "text": "@eileencodes (sorry for late reply; the notification got buried).  It would definitely help if Rails made the rake tasks for me, as I wouldn't have come down this road in the first place, I don't think.  I would imagine these changes to be useful to any use of the class.   In my experience, making the connection class configurable and not just `ActiveRecord::Base` avoids a lot of problems here and in other gems :)  I can't really say more without looking at they kinds of things your doing. If it's not public, yet, I'm in the basecamp.", "created_at": "2018-02-08 05:55:45", "user": 142914, "id": 364010694}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364464097", "text": "Cool ok that makes sense to me. One more question - it wasn't clear to me where I as a user of Rails would set the `connection_class` so that the rake tasks know which connection to use. Do you have an example of how you'd use this in your app?", "created_at": "2018-02-09 15:23:25", "user": 1080678, "id": 364464097}, {"reactions": {"+1": [1080678]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364471923", "text": "@eileencodes So, in our app, we made a `db_postgres.rake` task\r\n\r\nour database.yml refers to our mysql db\r\n\r\nwe added a `postgres.yml`\r\n\r\nand our rake task was\r\n\r\n```ruby\r\n# Taken from http://www.ostinelli.net/setting-multiple-databases-rails-definitive-guide/\r\ntask spec: [\"postgres:db:test:prepare\"]\r\n\r\nnamespace :postgres do\r\n  namespace :db do |ns|\r\n\r\n    # append and prepend proper tasks to all the tasks defined here above\r\n    ns.tasks.each do |task|\r\n      task.enhance [\"postgres:set_custom_config\"] do\r\n        # If multiple tasks from this file are run as a chain (e.g.\r\n        # postgres:db:setup), we need to ensure that each invocation actually\r\n        # executes set_custom_config. To do this, we explicitly reenable it.\r\n        Rake::Task[\"postgres:set_custom_config\"].reenable\r\n        Rake::Task[\"postgres:revert_to_original_config\"].execute\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n```ruby\r\n  task :set_custom_config do\r\n    # save current vars\r\n    @original_config = {\r\n      env_db_structure: ENV[\"DB_STRUCTURE\"],\r\n      config: Rails.application.config.dup\r\n    }\r\n\r\n    # set config variables for custom database\r\n    ENV[\"DB_STRUCTURE\"] = \"db/postgres/structure.sql\"\r\n    Rails.application.config.paths[\"db\"] = [\"db/postgres\"]\r\n    Rails.application.config.paths[\"db/migrate\"] = [\"db/postgres/migrate\"]\r\n    Rails.application.config.paths[\"db/seeds\"] = [\"db/postgres/seeds.rb\"]\r\n    Rails.application.config.paths[\"config/database\"] = [\"config/postgres.yml\"]\r\n    database_configuration = YAML.load(ERB.new(Rails.root.join('config', 'postgres.yml').read).result).with_indifferent_access # rubocop:disable Security/YAMLLoad\r\n    @original_database_configuration = ActiveRecord::Tasks::DatabaseTasks.database_configuration || {}\r\n    (ActiveRecord::Tasks::DatabaseTasks.database_configuration || {}).clear\r\n    ActiveRecord::Tasks::DatabaseTasks.database_configuration = database_configuration\r\n    @original_migrations_paths = ActiveRecord::Tasks::DatabaseTasks.migrations_paths\r\n    ActiveRecord::Tasks::DatabaseTasks.migrations_paths.clear\r\n    ActiveRecord::Tasks::DatabaseTasks.migrations_paths << 'db/postgres/migrate'\r\n    @connection_config = database_configuration[Rails.env].except(:options)\r\n    # Exclude options:\r\n    # If we had default-transaction-read-only=true, the db setup rake task would raise\r\n    #\r\n    # ```\r\n    # PG::ReadOnlySqlTransaction: ERROR:\r\n    #  cannot execute CREATE DATABASE in a read-only transaction:\r\n    #  CREATE DATABASE \"myapp_test\" ENCODING = 'utf8'\r\n    # ```\r\n    ActiveRecord::Base.establish_connection @connection_config\r\n  end\r\n\r\n  task :revert_to_original_config do\r\n    # reset config variables to original values\r\n    ENV[\"DB_STRUCTURE\"] = @original_config[:env_db_structure]\r\n    Rails.application.config = @original_config[:config]\r\n    ActiveRecord::Tasks::DatabaseTasks.database_configuration.clear\r\n    ActiveRecord::Tasks::DatabaseTasks.database_configuration.update(@original_database_configuration)\r\n    ActiveRecord::Tasks::DatabaseTasks.migrations_paths.clear\r\n    ActiveRecord::Tasks::DatabaseTasks.migrations_paths.concat @original_migrations_paths\r\n    ActiveRecord::Base.connection.disconnect!\r\n    ActiveRecord::Base.establish_connection Rails.application.config_for(:database)\r\n  end\r\n```\r\n\r\nwhich could have been\r\n\r\n```ruby\r\nPostgresDbTask = Class.new(ActiveRecord::Tasks::DatabaseTask)\r\n```\r\n\r\nand for completeness, here's the rest\r\n\r\n```ruby\r\n    task :drop do\r\n      connection_config = @connection_config\r\n      ActiveRecord::Tasks::DatabaseTasks.drop(connection_config)\r\n    end\r\n\r\n    task :create do\r\n      connection_config = @connection_config\r\n      ActiveRecord::Tasks::DatabaseTasks.create(connection_config)\r\n    end\r\n\r\n    task setup: ['postgres:db:create', 'postgres:db:structure:load', 'postgres:db:seed']\r\n\r\n    task :migrate do\r\n      Rake::Task[:environment].invoke\r\n      Rake::Task['db:load_config'].invoke\r\n      begin\r\n        verbose = ENV[\"VERBOSE\"] ? ENV[\"VERBOSE\"] == \"true\" : true\r\n        version = ENV[\"VERSION\"] ? ENV[\"VERSION\"].to_i : nil\r\n        scope   = ENV['SCOPE']\r\n        verbose_was = ActiveRecord::Migration.verbose\r\n        ActiveRecord::Migration.verbose = verbose\r\n        migrations_paths = Rails.application.paths['db/migrate'].to_a\r\n        ActiveRecord::Migrator.migrate(migrations_paths, version) do |migration|\r\n          scope.blank? || scope == migration.scope\r\n        end\r\n        ActiveRecord::Base.clear_cache!\r\n      ensure\r\n        ActiveRecord::Migration.verbose = verbose_was\r\n      end\r\n      Rake::Task['postgres:db:structure:dump'].invoke\r\n    end\r\n\r\n    namespace :migrate do\r\n      task :down do\r\n        Rake::Task[\"db:migrate:down\"].invoke\r\n      end\r\n\r\n      task :up do\r\n        Rake::Task[\"db:migrate:up\"].invoke\r\n      end\r\n    end\r\n\r\n    task :reset do\r\n      Rake::Task[\"db:reset\"].invoke\r\n    end\r\n\r\n    task :rollback do\r\n      Rake::Task[\"db:rollback\"].invoke\r\n    end\r\n\r\n    task :seed do\r\n      Rails.application.config.paths[\"db/seeds\"].each { |file| load(file) }\r\n    end\r\n\r\n    task :version do\r\n      Rake::Task[\"db:version\"].invoke\r\n    end\r\n\r\n    namespace :structure do\r\n      # Structure tasks call pg_dump and psql to dump/load the structure\r\n      # respectively. Those tasks don't know how to parse makara configs, so we\r\n      # override them here.\r\n\r\n      task :load do\r\n        connection_config = @connection_config\r\n        ActiveRecord::Tasks::DatabaseTasks.structure_load(connection_config, ENV[\"DB_STRUCTURE\"])\r\n      end\r\n\r\n      task dump: [:environment] do\r\n        next if Rails.application.config.active_record.dump_schema_after_migration == false\r\n        filename = ENV['DB_STRUCTURE'] || File.join(@db_dir, \"structure.sql\")\r\n\r\n        connection_config = @connection_config\r\n        ActiveRecord::Tasks::DatabaseTasks.structure_dump(connection_config, filename)\r\n\r\n        if ActiveRecord::Base.connection.supports_migrations? &&\r\n            ActiveRecord::SchemaMigration.table_exists?\r\n          File.open(filename, \"a\") do |f|\r\n            f.puts ActiveRecord::Base.connection.dump_schema_information\r\n            f.print \"\\n\"\r\n          end\r\n        end\r\n      end\r\n    end\r\n\r\n    namespace :test do\r\n      task :prepare do\r\n        Rake::Task[\"db:test:prepare\"].invoke\r\n      end\r\n    end\r\n```", "created_at": "2018-02-09 15:49:33", "user": 142914, "id": 364471923}], "assignees": [6321, 6321], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "I have table posts (Post model) and table languages (Language model). Post has many languages and language belongs to the Post. Languages table has columns - id, post_id and language. I want that language column to be unique, but for a scope of the Post (scope: :post_id). The problem is that if I type same string for all  languages in the form, it validates them insert to the table and there is no error. I have created repo for this:  [https://github.com/innovationsbg/untitled](https://github.com/innovationsbg/untitled)\r\n", "labels": [], "number": 31718, "updated_at": "2018-01-23 15:31:22", "user": 1800839, "closed_at": "None", "id": 289052350, "title": "validates_uniqueness_of with scope does not work", "url": "https://api.github.com/repos/rails/rails/issues/31718", "created_at": "2018-01-16 20:53:26", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358140724", "text": "Assuming below accurately depicts the issue you're having, this test passes correctly. \r\n\r\n```\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"activerecord\", \"5.1.0\"\r\n  gem \"sqlite3\"\r\n  gem 'pry'\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.string :title \r\n  end\r\n\r\n  create_table :languages, force: true do |t|\r\n    t.integer :post_id\r\n    t.string :language \r\n  end\r\n  # test passes with the following constraint\r\n   add_index :languages, [:post_id, :language], :unique => true\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :languages\r\n\r\n  validates :title, presence: true\r\n\r\n  accepts_nested_attributes_for :languages\r\n  validates_associated :languages\r\nend\r\n\r\nclass Language < ActiveRecord::Base\r\n  validates_presence_of :language \r\n  belongs_to :post, :inverse_of => :languages\r\n  validates_uniqueness_of :language, scope: :post_id \r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = Post.new\r\n    post.assign_attributes(:title => \"This is a title\", :languages_attributes => [{:language => \"English\"}, {:language => \"English\"}])\r\n    assert_raises ActiveRecord::RecordInvalid, ActiveRecord::RecordNotUnique do \r\n      post.save!\r\n    end\r\n  end\r\nend\r\n```", "created_at": "2018-01-16 23:19:43", "user": 2028176, "id": 358140724}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358328091", "text": "Your test is not for the correct case. This is the correct case:\r\n`  \r\ndef test_association_stuff\r\n\r\n        post = Post.new\r\n        assert_raises ActiveRecord::RecordInvalid do\r\n            post.assign_attributes(:title => \"This is a title\", :languages_attributes => [{:language => \"English\"}, {:language => \"English\"}])\r\n           post.save!\r\n      end\r\n  end`", "created_at": "2018-01-17 14:52:35", "user": 1800839, "id": 358328091}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358443194", "text": "That makes more sense. That's a bug, I think.\r\n\r\nEnforcing these constraints on your database _does_ make this fail, `add_index :languages, [:post_id, :language], :unique => true` but it should also fail within ActiveRecord I believe.\r\n\r\nI don't even know how to get started with this because of how nested attributes work. If this is indeed a bug and someone wants to give me a lead on how exactly to tackle this I can take a whack at a PR.", "created_at": "2018-01-17 20:59:41", "user": 2028176, "id": 358443194}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358473659", "text": "Can someone please provide a full executable example that fails?", "created_at": "2018-01-17 22:39:45", "user": 1529387, "id": 358473659}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358475635", "text": "@sgrif I updated mine an attempted to reflect OPs reported bug. ", "created_at": "2018-01-17 22:48:16", "user": 2028176, "id": 358475635}, {"reactions": {"+1": [2028176]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358477162", "text": "Thank you", "created_at": "2018-01-17 22:54:52", "user": 1529387, "id": 358477162}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358667248", "text": "Add unique indexes does not fix the problem. Still validation doesn't work and you will get only the MySQL error.", "created_at": "2018-01-18 14:44:17", "user": 1800839, "id": 358667248}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358765697", "text": "@innovationsbg it raises ActiveRecord::RecordNotUnique; I've updated the test case to reflect that for you.", "created_at": "2018-01-18 20:05:23", "user": 2028176, "id": 358765697}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358972781", "text": "Ok, thx, but this still is not the fix, because there is and MySQL error which in the production user will see 500 error, I guess,  and this will not add error to `@post.errors`. I will search a way with custom validation in the model. I just need to see how to get the array of languages in the custom validation method. I see if I use custom validation method with `self.public_methods`, there are most of the validations like `validates_confirmation_of,  validates_length_of`, but not uniqueness validation. And another thing, in the custom validation method with some languages added, it loop through the languages array  twice. I mean validation method is called twice for each language. ", "created_at": "2018-01-19 13:57:12", "user": 1800839, "id": 358972781}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358991183", "text": "This fix the problem: [https://stackoverflow.com/questions/48342466/loop-through-attributes-in-the-custom-validation-method/48343633#48343633](https://stackoverflow.com/questions/48342466/loop-through-attributes-in-the-custom-validation-method/48343633#48343633)", "created_at": "2018-01-19 15:05:57", "user": 1800839, "id": 358991183}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359827157", "text": "The problem is in the `AutosaveAssociation` module. It does not validate the child records while automatically saving them.", "created_at": "2018-01-23 15:31:22", "user": 1840945, "id": 359827157}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {"heart": [199]}, "text": "Fix encoding errors when using the pure-Ruby Redis driver instead of Hiredis. Dodge incompatibilities between UTF-8 and arbitrary value encodings, which rear their heads when the Redis driver tries to build a single command string from incompatibly-encoded keys and values.\r\n\r\n/cc @jeremy", "labels": [], "number": 31717, "updated_at": "2018-01-17 17:28:53", "user": 94129, "closed_at": "2018-01-17 17:28:47", "id": 289043161, "title": "Convert keys to binary in the Redis cache store", "url": "https://api.github.com/repos/rails/rails/issues/31717", "created_at": "2018-01-16 20:20:58", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358096796", "text": "Curious, what the benefit of the pure Ruby Redis client is over hiredis? Is Basecamp testing it out to replace hiredis?", "created_at": "2018-01-16 20:36:30", "user": 350807, "id": 358096796}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358099867", "text": "We don’t use Hiredis currently. I don’t know of any particular reason why; we probably just never set it up.", "created_at": "2018-01-16 20:48:07", "user": 94129, "id": 358099867}, {"reactions": {"+1": [199]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358364302", "text": "@matthewd, I switched to something resembling Active Job’s setup, which resulted in a big simplification. I’m pretty happy with this.", "created_at": "2018-01-17 16:41:14", "user": 94129, "id": 358364302}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n    ## Models\r\n    class Source < ApplicationRecord\r\n      has_many :subscriptions\r\n    end\r\n \r\n    class Subscription < ApplicationRecord\r\n      belongs_to :source\r\n    end\r\n\r\n    ## Controllers\r\n    class SourcesController < ApplicationRecord\r\n      def destroy\r\n        # Find Source and destroy it\r\n      end\r\n    end\r\n\r\n    class SubscriptionsController < ApplicationRecord\r\n      def show\r\n        @source = Source.find(params[:source_id])\r\n        @subscription = nil # Some logic that results in nil for whatever reason\r\n      end\r\n\r\n      def destroy\r\n        # Find Subscription and destroy it\r\n      end\r\n    end\r\n\r\n    ## Routes\r\n    resources :sources do\r\n      resources :subscriptions\r\n    end\r\n\r\n    ## View for Source#show\r\n    # Using the shortcut to generate the URL instead of source_subscription_path(@source, @subscription)\r\n    = link_to 'Unsubscribe', [@source, @subscription], method: :delete\r\n\r\n### Expected behavior\r\n\r\nGenerally, I would expect the `link_to` above to call `Subscriptions#destroy`. However, a bug in my code led to one of the elements being `nil`. I would have expected the `link_to` to raise an error if any element of the array was `nil`\r\n\r\n### Actual behavior\r\n\r\nWhen the link is clicked, `Sources#destroy` gets called instead since the `link_to` uses this to generate the URL: `[@source, nil]`\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.5.0p0\r\n", "labels": [], "number": 31716, "updated_at": "2018-01-19 20:42:09", "user": 428480, "closed_at": "None", "id": 289023954, "title": "link_to url helper has unexpected behavior when an element of the array is nil", "url": "https://api.github.com/repos/rails/rails/issues/31716", "created_at": "2018-01-16 19:15:00", "comments": [{"reactions": {"+1": [5011191, 1269488]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359083280", "text": "This behavior is intentional, although it has changed back and forth a few times.\r\n\r\nHere's the sequence:\r\n\r\n1. Ignore nil: 94d6716324126028b89dde886f160474049b1b0c\r\n2. Raise ArgumentError: dece005f0a8aa1f4210e381efb429eca5d793d91\r\n3. Ignore nil (current): #16755\r\n\r\nGiven this scenario, I think raising ArgumentError is safer and less surprising since ignoring nil could cause data to be deleted.\r\n\r\nWhat do you think, @tenderlove?", "created_at": "2018-01-19 20:41:59", "user": 21238, "id": 359083280}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "Any hint about Google Drive and ActiveStorage?\r\n\r\nMaybe I can PR a doc.", "labels": [], "number": 31715, "updated_at": "2018-01-16 18:19:58", "user": 21275217, "closed_at": "2018-01-16 18:19:58", "id": 289000159, "title": "Google Drive and ActiveStorage.", "url": "https://api.github.com/repos/rails/rails/issues/31715", "created_at": "2018-01-16 17:54:30", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358056717", "text": "Please use Stack Overflow or the [rubyonrails-talk](https://groups.google.com/forum/#!forum/rubyonrails-talk) mailing list for questions, where a wider community will be able to help you. We reserve the issue tracker for bug reports.", "created_at": "2018-01-16 18:19:58", "user": 94129, "id": 358056717}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nCreate a new Rails 5.1.4 app with CRUD operations, create a delete method on your controller, add it to your routes and edit a view that links to that destroy action via a DELETE request.\r\n\r\n### Expected behavior\r\nRails should delete the specified resource from the database.\r\n\r\n### Actual behavior\r\nRails redirects to the page of that same resource.\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.5.0p0\r\n\r\n Here are my controller, routes and view:\r\n![captura de pantalla_2018-01-15_20-30-56](https://user-images.githubusercontent.com/10160626/34971153-784d4f0a-fa3e-11e7-988d-6815a5480c19.png)\r\n\r\nRake routes:\r\n![captura de pantalla_2018-01-15_21-55-05](https://user-images.githubusercontent.com/10160626/34971226-d08ada16-fa3e-11e7-9272-30754866809b.png)\r\n\r\n", "labels": [], "number": 31714, "updated_at": "2018-01-16 04:17:01", "user": 10160626, "closed_at": "2018-01-16 04:17:01", "id": 288778813, "title": "Controller is ignoring delete actions on Rails 5.1.4", "url": "https://api.github.com/repos/rails/rails/issues/31714", "created_at": "2018-01-16 03:55:39", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357849576", "text": "JavaScript was not loading correctly, after moving it to right folder it works without problems.", "created_at": "2018-01-16 04:17:01", "user": 10160626, "id": 357849576}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "This moves browser configuration to its own class and simplifies the `Driver` class to simply ask the browser for its `name`, `options` and `type`, instead of determining all of that within the driver class.\r\n\r\ncc @eileencodes for 👀 ", "labels": ["actionpack"], "number": 31713, "updated_at": "2018-01-17 19:30:56", "user": 8496209, "closed_at": "2018-01-17 19:30:56", "id": 288691661, "title": "Move browser config to its own class", "url": "https://api.github.com/repos/rails/rails/issues/31713", "created_at": "2018-01-15 19:13:27", "comments": [], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nI ran `rails app:update` to update my api-only app from Rails 5.0 to 5.1. The assets initializer is being updated the following way:\r\n\r\n![image](https://user-images.githubusercontent.com/245443/34949339-19127980-fa10-11e7-8201-83b5587b7eb0.png)\r\n\r\n### Expected behavior\r\nI'd not expect my asset path to be extended because I don't use the asset pipeline.\r\n\r\n### Actual behavior\r\nIt adds `node_modules` to the asset path.\r\n\r\n`bin/yarn` is also added by the way even though I don't need it for an api-only app.\r\n\r\n### System configuration\r\n**Rails version**: 5.1\r\n\r\n**Ruby version**: 2.4\r\n", "labels": [], "number": 31712, "updated_at": "2018-01-15 22:24:53", "user": 245443, "closed_at": "2018-01-15 22:24:53", "id": 288631072, "title": "App update extends asset paths for api-only app", "url": "https://api.github.com/repos/rails/rails/issues/31712", "created_at": "2018-01-15 15:26:16", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357802713", "text": "Thanks for creating an issue. This issue already fixed by #28557. \r\nSo latest Rails, will not create `bin/yarn` and `initializers/assets.rb` in `app:update` task. Thanks.\r\n", "created_at": "2018-01-15 22:24:53", "user": 987638, "id": 357802713}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nMy colleague told me that `:inverse_of` option will be automatically detected (documented in `Setting Inverses` section), which I have not noticed.\r\nCurrently auto detection is not documented on `:inverse_of` options. This PR adds docs to options..!", "labels": [], "number": 31711, "updated_at": "2018-01-15 09:00:10", "user": 400558, "closed_at": "None", "id": 288520816, "title": "Add docs for automatic inverse detection to association options", "url": "https://api.github.com/repos/rails/rails/issues/31711", "created_at": "2018-01-15 08:58:07", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357619822", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kaspth (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-15 08:58:10", "user": 7468109, "id": 357619822}], "assignees": [350807, 350807], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "When removing a record from a has many through association, the counter cache was being updated even if the through record halted the callback chain and prevented itself from being destroyed.\r\n\r\nhttps://github.com/rails/rails/pull/31687 would also fix this problem, but in a different way: records which were not destroyed would no longer be returned from `destroy_all`. This approach is more appropriate to backport however, as it doesn't change any public APIs, and I think having test coverage for this case is useful.", "labels": [], "number": 31710, "updated_at": "2018-01-22 07:12:25", "user": 432189, "closed_at": "2018-01-22 07:12:25", "id": 288443415, "title": "Don't update counter cache when through record was not destroyed", "url": "https://api.github.com/repos/rails/rails/issues/31710", "created_at": "2018-01-14 22:01:47", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357546220", "text": "r? @pixeltrix\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-14 22:01:48", "user": 7468109, "id": 357546220}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [22996]}, "text": "The link on https://guides.rubyonrails.org ([`guides/source/index.html.erb`](https://github.com/rails/rails/blob/92703a9ea5d8b96f30e0b706b801c9185ef14f0e/guides/source/index.html.erb)) that points to the Kindle version of Rails Guides is 404.\r\n\r\nAfter reading the Rails Guides contribution docs, I was able to successfully (re-)generate the Kindle docs using:\r\n\r\n    bundle install\r\n    cd guides\r\n    setupkindlerb\r\n    # install kindlegen from https://www.amazon.com/gp/feature.html?docId=1000765211\r\n    rake guides:generate:kindle\r\n\r\nSo the rake tasks and source generation seem to be fine. \r\n\r\nWhat I can tell from generating the Kindle file locally for Edge Rails is that the .mobi file *is* correctly available at `edgeguides.org`: ([ruby_on_rails_guides_562dd04.mobi](http://edgeguides.rubyonrails.org/kindle/ruby_on_rails_guides_562dd04.mobi)), but the link that specifically references the 5.1.4 guide [ruby_on_rails_guides_v5.1.4.mobi](http://edgeguides.rubyonrails.org/kindle/ruby_on_rails_guides_v5.1.4.mobi) does not exist).", "labels": [], "number": 31709, "updated_at": "2018-01-18 23:23:01", "user": 12213, "closed_at": "2018-01-18 23:23:01", "id": 288438658, "title": "Rails Guides - link to ebook (.mobi) version is 404", "url": "https://api.github.com/repos/rails/rails/issues/31709", "created_at": "2018-01-14 20:52:19", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358815645", "text": "Thanks for creating an issue. This is duplicated of #29865. Let's track that.", "created_at": "2018-01-18 23:23:01", "user": 987638, "id": 358815645}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\nCreate a new attached file for an arbitrary record like an user without providing the content-type which is currently allowed\r\n\r\n`User.last.images.attach(io: File.open(Rails.root.join('public','image.png')) , filename: 'image.png' )\r\n`\r\n\r\n### Expected behavior\r\na.) it should raise an error because of the missing content type\r\nor\r\nb.) don't rely on content type in \r\nActiveStorage::Blob\r\ne.g. line 94\r\n```\r\n  def image?\r\n    content_type.start_with?(\"image\")\r\n  end\r\n```\r\n\r\n### Actual behavior\r\ncontent_type is nil and thus the ImageAnalyzer fails\r\n\r\n` NoMethodError: undefined method `start_with?' for nil:NilClass\r\n`\r\n```\r\n2018-01-14T20:09:10.203Z 38019 TID-ow9v73maw WARN: NoMethodError: undefined method `start_with?' for nil:NilClass\r\n2018-01-14T20:09:10.203Z 38019 TID-ow9v73maw WARN: /Users/dcdieci/.rvm/gems/ruby-2.4.3/gems/activestorage-5.2.0.beta2/app/models/active_storage/blob.rb:95:in `image?'\r\n/Users/dcdieci/.rvm/gems/ruby-2.4.3/gems/activestorage-5.2.0.beta2/lib/active_storage/analyzer/image_analyzer.rb:16:in `accept?'\r\n/Users/dcdieci/.rvm/gems/ruby-2.4.3/gems/activestorage-5.2.0.beta2/app/models/active_storage/blob.rb:311:in `block in analyzer_class'\r\n/Users/dcdieci/.rvm/gems/ruby-2.4.3/gems/activestorage-5.2.0.beta2/app/models/active_storage/blob.rb:311:in `each'\r\n/Users/dcdieci/.rvm/gems/ruby-2.4.3/gems/activestorage-5.2.0.beta2/app/models/active_storage/blob.rb:311:in `detect'\r\n/Users/dcdieci/.rvm/gems/ruby-2.4.3/gems/activestorage-5.2.0.beta2/app/models/active_storage/blob.rb:311:in `analyzer_class'\r\n/Users/dcdieci/.rvm/gems/ruby-2.4.3/gems/activestorage-5.2.0.beta2/app/models/active_storage/blob.rb:307:in `analyzer'\r\n/Users/dcdieci/.rvm/gems/ruby-2.4.3/gems/activestorage-5.2.0.beta2/app/models/active_storage/blob.rb:303:in `extract_metadata_via_analyzer'\r\n/Users/dcdieci/.rvm/gems/ruby-2.4.3/gems/activestorage-5.2.0.beta2/app/models/active_storage/blob.rb:252:in `analyze'\r\n/Users/dcdieci/.rvm/gems/ruby-2.4.3/gems/activestorage-5.2.0.beta2/app/jobs/active_storage/analyze_job.rb:6:in `perform'\r\n/Users/dcdieci/.rvm/gems/ruby-2.4.3/gems/activejob-5.2.0.beta2/lib/active_job/execution.rb:39:in `block in perform_now'\r\n/Users/dcdieci/.rvm/gems/ruby-2.4.3/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:109:in `block in run_callbacks'\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**:\r\n5.2.0.beta2/\r\n**Ruby version**:\r\nruby 2.4.3p205 (2017-12-14 revision 61247) [x86_64-darwin16]", "labels": [], "number": 31708, "updated_at": "2018-01-15 18:22:54", "user": 634589, "closed_at": "2018-01-15 18:22:54", "id": 288435867, "title": "ActiveStorage content_type should not be nil", "url": "https://api.github.com/repos/rails/rails/issues/31708", "created_at": "2018-01-14 20:12:59", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357541958", "text": "This will be fixed by #31693.", "created_at": "2018-01-14 20:59:09", "user": 94129, "id": 357541958}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357756912", "text": "Closing because #31693 was merged.", "created_at": "2018-01-15 18:22:54", "user": 94129, "id": 357756912}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"+1": [1100408]}, "text": "I'm having problems debugging `activestorage.js` in development because it's served as a minified version.\r\nThis PR serves unminified version and leaves this process to sprockets or webpack. Not sure if this is the smartest solution to approach this problem since acticestorage js is implemented with webpack.\r\n\r\nr? @javan ", "labels": [], "number": 31707, "updated_at": "2018-02-04 18:21:30", "user": 7427365, "closed_at": "None", "id": 288407483, "title": "Serve unminified activestorage.js version", "url": "https://api.github.com/repos/rails/rails/issues/31707", "created_at": "2018-01-14 13:11:28", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358307474", "text": "I'm open to distributing an unminified version, but the default non-prodcution webpack build is a bit too noisy. Would a source map be useful for you in debugging?", "created_at": "2018-01-17 13:41:09", "user": 5355, "id": 358307474}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358357059", "text": "@javan I agree! \r\nSource-maps would be even better...I've fixed PR to use source-maps. WDYT?", "created_at": "2018-01-17 16:19:27", "user": 7427365, "id": 358357059}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358362659", "text": "Nice! I think we should add `\"app/assets/javascripts/*.js.map\"` to:\r\nhttps://github.com/rails/rails/blob/ffd9902b4464719bd92d49db709d1cf8865337e3/activestorage/package.json#L6-L8\r\n(`*.js` would work as-is, but I'd prefer to be explicit)", "created_at": "2018-01-17 16:36:09", "user": 5355, "id": 358362659}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358364092", "text": "@matthewd, you're not going to like this, are you? :) ", "created_at": "2018-01-17 16:40:35", "user": 5355, "id": 358364092}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358475848", "text": "Since we are already adding the minified version of the file in the repository I don't see why not add the source maps", "created_at": "2018-01-17 22:49:14", "user": 47848, "id": 358475848}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358477342", "text": "I only hesitate because of the file size. `activestorage.js` weighs in at a reasonable ~18 KB, but `activestorage.js.map` is significantly larger at ~116 KB.", "created_at": "2018-01-17 22:55:36", "user": 5355, "id": 358477342}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358481084", "text": "The repo (on my machine) is 3.31GB. I don't think 116K is a huge concern.", "created_at": "2018-01-17 23:11:54", "user": 1529387, "id": 358481084}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358500427", "text": "Indeed I am not :confused:\r\n\r\nI really wish we were building them both at release time. Can't we (say) rely on webpacker to serve it when working from git?\r\n\r\n@sgrif my checkout is 100 MB, plus 170 MB in `.git`. When that's 116 KB that'll change completely in response to any change in the source, it's going to quickly account for a nontrivial portion of total repo weight.", "created_at": "2018-01-18 00:50:57", "user": 1034, "id": 358500427}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358608544", "text": "@javan  I've added explicit `\"app/assets/javascripts/*.js.map\"`entry into the files array!\r\n\r\nRe: size, there is one more option. I could try to convert js from webpack implementation to coffee script and implement it directly inside engine assets", "created_at": "2018-01-18 10:43:37", "user": 7427365, "id": 358608544}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360052875", "text": "Guys, can I do anything on my side to move this forward? 😃 ", "created_at": "2018-01-24 08:12:14", "user": 7427365, "id": 360052875}, {"reactions": {"+1": [7427365]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360151069", "text": "@dixpac, no, sorry, we'll sort this out and make a call. Thank you!\r\n\r\n> I really wish we were building them both at release time\r\n\r\n@matthewd, me too, but that would mean you can't run off master.\r\n\r\n> Can't we (say) rely on webpacker to serve it when working from git?\r\n\r\nNot really.. You can point your app's `package.json` at a GitHub repo, but only if that repo has *its* `package.json` in the root. It worked when activestorage was its own gem (`rails/activestorage`). Doesn't work now that it's in `rails/rails/activestorage`.\r\n\r\nYou *can* run off master now using the asset pipeline because we have a compiled `activestorage.js` in git.", "created_at": "2018-01-24 14:23:56", "user": 5355, "id": 360151069}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360167074", "text": "> You can point your app's package.json at a GitHub repo, but only if that repo has its package.json in the root\r\n\r\nAh, so for webpack you can't use the git repo at all, so it doesn't matter what's precompiled-for-commit vs compiled-for-release?\r\n\r\nIf it's just about Sprockets, that seems surmountable: we force the coffeescript compile for Action Cable. If necessary (this build requires webpack, right?), it seems like we should be able to throw together a sprockets processor that invokes webpack to build this on demand. (Plenty of 'real' sprockets handlers boil down to \"run this external command\")", "created_at": "2018-01-24 15:16:34", "user": 1034, "id": 360167074}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362924005", "text": "I feel like the best middle ground at this point would be making `activestorage.js` unminified as this PR originally did. We'll get more meaningful diffs for the compiled file in git (instead of diffs like https://github.com/rails/rails/commit/f17137b0a1903203b09301b8141b5baf54561ef0), and the need for a source map mostly goes away.\r\n\r\n@matthewd, feel free to \"throw together\" a sprockets processor if that interests you.", "created_at": "2018-02-04 17:29:52", "user": 5355, "id": 362924005}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362927445", "text": "IMO source maps solution is nicer to work with and makes more sense for what we are trying to accomplish. But, serving unminified js will also work I can revert to the original commit :)", "created_at": "2018-02-04 18:19:33", "user": 7427365, "id": 362927445}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362927651", "text": "@dixpac hold tight until we reach some sort of consensus, please.", "created_at": "2018-02-04 18:21:30", "user": 5355, "id": 362927651}], "assignees": [5355, 5355], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "I believe that this was caused by a copy/paste mistake.", "labels": [], "number": 31706, "updated_at": "2018-01-14 13:09:04", "user": 522375, "closed_at": "2018-01-14 13:05:44", "id": 288406144, "title": "Change test case name to FormatValidationTest", "url": "https://api.github.com/repos/rails/rails/issues/31706", "created_at": "2018-01-14 12:51:08", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357509771", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kaspth (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-14 12:51:17", "user": 7468109, "id": 357509771}, {"reactions": {"+1": [522375], "laugh": [522375]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357510571", "text": "👍 This was caused at 60756ad4ece2298e85353ed50853f1d260e0d27a for 9 years.", "created_at": "2018-01-14 13:04:41", "user": 12642, "id": 357510571}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nThis small change makes `ActiveStorage::Variant#processed?` public.\r\nWhat's the reasoning behind it?\r\n\r\nSuppose that you want to execute the processing in the background (e.g. thru ActiveJob); then in your views you want to decide on whether to show the variant (if it's ready) or the original image as a fallback:\r\n\r\n```ruby\r\n<% if image.variant(resize: \"500x500\").processed? %>\r\n  <%= image_tag image.variant(resize: \"500x500\") %>\r\n<% else %>\r\n  <%= image_tag image %>\r\n<% end %>\r\n```\r\n\r\nThat is, maybe, a very simple example.\r\n\r\nNevertheless, I think it could be useful to have this method as a part of public API.", "labels": [], "number": 31705, "updated_at": "2018-01-14 13:05:07", "user": 1516722, "closed_at": "2018-01-14 13:05:07", "id": 288398825, "title": "Make ActiveStorage::Variant#processed? public", "url": "https://api.github.com/repos/rails/rails/issues/31705", "created_at": "2018-01-14 10:47:29", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357503043", "text": "r? @pixeltrix\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-14 10:47:39", "user": 7468109, "id": 357503043}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357510599", "text": "Thanks for the PR, but this use case isn’t particularly compelling. You don’t want to call `processed?` in a view: it entails an HTTP request to a remote service. If that remote service goes down, so will your app.", "created_at": "2018-01-14 13:05:07", "user": 94129, "id": 357510599}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "About my contributions to guides.  You see, I am a new guy to all this web design stuff. I just got some basic knowledge of HTML and started to learn Ruby on Rails. So not only I had to search the web for what that SQL statement [here](http://guides.rubyonrails.org/active_record_basics.html#creating-active-record-models) actually means, but I also found out that this is not SQL statement, but **MySQL** statement which has a slightly different syntax. So, I made some clarifications for that.\r\n\r\nAlso, I think that a link to a viable MySQL tutorial/documentation for people who don't have prior knowledge of Relational Data Bases would be a good thing, but I don't know what should I better pick. So I'm waiting for suggestions in comments.\r\n\r\nAnd another problem for me as a noob was [Contributing to the Rails Documentation](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation) itself. It says to \"open a pull request\", but opening a request is itself requires to make a change to source code and make a personal fork for a project. That was somewhat confusing, as I'm new to GitHub too and I didn't know that at first, I should edit the source code for guides and after that \"fork\" would be created automatically.", "labels": ["docs"], "number": 31704, "updated_at": "2018-01-23 22:40:18", "user": 35389681, "closed_at": "2018-01-23 22:39:41", "id": 288389597, "title": "Clarification for noobs.", "url": "https://api.github.com/repos/rails/rails/issues/31704", "created_at": "2018-01-14 07:36:12", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357494014", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @rafaelfranca (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-14 07:36:25", "user": 7468109, "id": 357494014}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359691660", "text": "@eileencodes @rafaelfranca \r\nOk, I made requested changes (with modifications on my part, please review them). How do I \"squash\" my commits (as this was also requested)? Can I do that from Firefox browser or I have to install some soft (I'm on Windows 10)?", "created_at": "2018-01-23 06:43:24", "user": 35389681, "id": 359691660}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359956172", "text": "Thank you! I squashed using the GitHub feature but I kept the commit credits.", "created_at": "2018-01-23 22:40:18", "user": 47848, "id": 359956172}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "http://edgeguides.rubyonrails.org/asset_pipeline.html contains multiple references to jQuery, and alludes to jQuery still being part of a new stock-standard Rails application.\r\n\r\nFor example:\r\n\r\n> …the jquery-rails gem which comes with Rails as the standard JavaScript library gem…\r\n\r\nAnd:\r\n\r\n> …jQuery is the default JavaScript library from Rails 3.1 onwards…", "labels": [], "number": 31703, "updated_at": "2018-01-28 21:10:45", "user": 1926760, "closed_at": "2018-01-28 21:10:45", "id": 288380972, "title": "Multiple references to jQuery in asset pipeline page of guides", "url": "https://api.github.com/repos/rails/rails/issues/31703", "created_at": "2018-01-14 04:08:28", "comments": [], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\nRun the following test:\r\n```\r\nrequire 'minitest/spec'\r\n\r\nclass Test < ActiveSupport::TestCase\r\n  extend MiniTest::Spec::DSL\r\n\r\n  it 'has nil' do\r\n    assert_no_changes -> { nil } do\r\n    end\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Expected behavior\r\n```\r\n\r\n# Running:\r\n\r\n.\r\n\r\nFinished in 0.001200s, 833.3333 runs/s, 833.3333 assertions/s.\r\n1 runs, 1 assertions, 0 failures, 0 errors, 0 skips\r\n```\r\n### Actual behavior\r\n```\r\n# Running:\r\n\r\nDEPRECATED: Use assert_nil if expecting nil from test/test.rb:7. This will fail in Minitest 6.\r\n.\r\n\r\nFinished in 0.001317s, 759.3014 runs/s, 759.3014 assertions/s.\r\n1 runs, 1 assertions, 0 failures, 0 errors, 0 skips\r\n```\r\n### System configuration\r\n**Rails version**:\r\n5.1.4\r\n**Ruby version**:\r\n2.4.2\r\n**Minitest version**:\r\n5.10.3\r\n", "labels": [], "number": 31702, "updated_at": "2018-01-14 01:07:20", "user": 13992890, "closed_at": "2018-01-14 01:07:20", "id": 288371581, "title": "assert_no_changes raises minitest deprecation warning", "url": "https://api.github.com/repos/rails/rails/issues/31702", "created_at": "2018-01-14 00:33:24", "comments": [{"reactions": {"hooray": [13992890]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357480485", "text": "Thanks for creating an issue. This already fixed by #31069.", "created_at": "2018-01-14 01:07:20", "user": 987638, "id": 357480485}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\nthe code in my rails project like:\r\n```\r\nclass A\r\n  def    a\r\n    puts  '1'\r\n  end\r\nend \r\n\r\nclass  B <A\r\n  before_filter  :g only: [:a]\r\n  def   a\r\n    puts '2'\r\n  end\r\n   \r\n  private\r\n  def  g\r\n    return\r\n  end\r\nend\r\n```\r\ni transfer the action  a in class b, but due to the before_filter, so that i call the method a in his parent. how can i stop call the method if i do not change the method name, thank you very much!\r\n", "labels": [], "number": 31701, "updated_at": "2018-01-13 20:55:05", "user": 35402859, "closed_at": "2018-01-13 20:55:04", "id": 288340739, "title": "how can i not call the action from parent", "url": "https://api.github.com/repos/rails/rails/issues/31701", "created_at": "2018-01-13 16:26:35", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357461960", "text": "First of all, it is hard to understand what is the purpose of the provided code snippet and desired behavior. Probably, \"transfer\" means \"overriding\". Suggest to read docs/guides (e.g. [Conditional Callbacks](http://guides.rubyonrails.org/active_record_callbacks.html#conditional-callbacks)), or use SO first.", "created_at": "2018-01-13 19:59:27", "user": 8161569, "id": 357461960}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357466625", "text": "Please use Stack Overflow or the [rubyonrails-talk](https://groups.google.com/forum/m/#!forum/rubyonrails-talk) mailing list, where a wider community will be able to help you. We reserve the issue tracker for bug reports.", "created_at": "2018-01-13 20:55:04", "user": 94129, "id": 357466625}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "See https://github.com/travis-ci/travis-ci/issues/8836#issuecomment-356362524 for more info.", "labels": [], "number": 31700, "updated_at": "2018-01-18 20:58:27", "user": 987638, "closed_at": "2018-01-18 17:05:39", "id": 288304474, "title": "Temporary workaround for Chrome start failed issue", "url": "https://api.github.com/repos/rails/rails/issues/31700", "created_at": "2018-01-13 05:29:12", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357484885", "text": "Hmmm. av:ujs build is stable with this. But other builds will really unstable...\r\n", "created_at": "2018-01-14 02:57:48", "user": 987638, "id": 357484885}, {"reactions": {"+1": [987638]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358713201", "text": "Fixed in https://github.com/rails/rails/commit/93d7b07549f446d6ed8449608142bbe5ff69be84", "created_at": "2018-01-18 17:05:38", "user": 1080678, "id": 358713201}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Sorry, if I post this in a wrong place, but [Contributing to the Rails Documentation](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation) paragraph says to \"open a pull request\", but opening a request is itself requires to make a change to source code. Which I'm not doing because I just want to make a suggestion about a guide.\r\nSo, that's the **first issue** - [Contributing to the Rails Documentation](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation) instructions should be more clear.\r\n\r\nAnd the **second issue**, that I wanted to tell about is an SQL statement in [Creating Active Record Model](http://guides.rubyonrails.org/active_record_basics.html#creating-active-record-models) tutorial. You see, I am a new guy to all this web design stuff. I just got some basic knowledge of HTML and started to learn Ruby on Rails. So not only I had to search the web for what that SQL statement actually means, but I also found out that this is not SQL statement, but **MySQL** statement which has a slightly different syntax. So, my suggestion is - either put a link to a viable MySQL tutorial/documentation for people who don't have prior knowledge of Relational Data Bases or scrap SQL reference altogether and just write that \"product\" table has two columns with certain properties.\r\n\r\nAgain, sorry if I post this in the wrong section, but that's the only place I figured out my request should go. Where else?", "labels": [], "number": 31699, "updated_at": "2018-01-14 03:12:57", "user": 35389681, "closed_at": "2018-01-14 03:12:57", "id": 288302752, "title": "Rails guide needs some clarification for noobs.", "url": "https://api.github.com/repos/rails/rails/issues/31699", "created_at": "2018-01-13 04:51:42", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357450174", "text": "I think opening a pull request with a [change to the documentation](https://github.com/rails/rails/blob/master/guides/source/active_record_basics.md) might be a good way to request the change you're suggesting. \r\nI read through the section you mention. \r\nBeing explicit about this being a MySQL statement wouldn't hurt - to at least avoid confusion for beginners. \r\nDo you think adding a section that calls out that _some_ knowledge of relational databases would be helpful but is outside the scope of these guides?", "created_at": "2018-01-13 17:05:02", "user": 949308, "id": 357450174}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357485463", "text": "Thanks for your suggestion. But we reserve the Rails issue tracker only for bugs in Rails. \r\nPlease use the [Rails Core mailing list](https://groups.google.com/forum/#!forum/rubyonrails-core) for feature requests or creates a PR. \r\nThanks!\r\n", "created_at": "2018-01-14 03:12:57", "user": 987638, "id": 357485463}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "#30985 caused `object.save` performance regression since calling\r\n`changes` in `changes_applied` is very slow.\r\nWe don't need to call the expensive method in `changes_applied` as long\r\nas `@attributes` is tracked by mutation tracker.\r\n\r\nhttps://gist.github.com/kamipo/1a9f4f3891803b914fc72ede98268aa2\r\n\r\nBefore:\r\n\r\n```\r\nWarming up --------------------------------------\r\ncreate_string_columns\r\n                        73.000  i/100ms\r\nCalculating -------------------------------------\r\ncreate_string_columns\r\n                        722.256  (± 5.8%) i/s -      3.650k in   5.073031s\r\n```\r\n\r\nAfter:\r\n\r\n```\r\nWarming up --------------------------------------\r\ncreate_string_columns\r\n                        96.000  i/100ms\r\nCalculating -------------------------------------\r\ncreate_string_columns\r\n                        950.224  (± 7.7%) i/s -      4.800k in   5.084837s\r\n```\r\n\r\ncc @sgrif @rafaelfranca ", "labels": ["activemodel", "activerecord"], "number": 31698, "updated_at": "2018-01-22 19:45:26", "user": 12642, "closed_at": "2018-01-22 01:46:36", "id": 288294405, "title": "PERF: Recover `changes_applied` performance", "url": "https://api.github.com/repos/rails/rails/issues/31698", "created_at": "2018-01-13 02:11:16", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359542272", "text": ":+1:", "created_at": "2018-01-22 19:45:25", "user": 47848, "id": 359542272}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Currently the previewers in rails shell out to the `mupdf` and `ffmpeg` binaries:\r\n\r\n- https://github.com/rails/rails/blob/master/activestorage/lib/active_storage/previewer/pdf_previewer.rb#L19\r\n- https://github.com/rails/rails/blob/master/activestorage/lib/active_storage/previewer/video_previewer.rb#L19-L20\r\n\r\nUnfortunately, these are both large codebases, parsing complex formats, written in memory unsafe languages, with a history of security issues. [Here](https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=label%3AProj-ffmpeg+Type%3DBug-Security+&colspec=ID+Type+Component+Status+Proj+Reported+Owner+Summary&cells=ids) are 82 security vulnerabilities that Google's OSS-Fuzz has found in ffmpeg alone.\r\n\r\nI'd like to encourage Rails to run these binaries under an OS sandbox so that vulnerabilities in these binaries cannot be used to trivially take over a system. http://nsjail.com/ is a tool that can simplify sandboxing on Linux.", "labels": [], "number": 31697, "updated_at": "2018-01-13 00:56:25", "user": 772, "closed_at": "2018-01-13 00:44:51", "id": 288278730, "title": "Consider sandboxing binaries used in previewers", "url": "https://api.github.com/repos/rails/rails/issues/31697", "created_at": "2018-01-12 23:48:11", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357393921", "text": "I’d love to sandbox third-party previewing/analysis utilities by default, and @dhh and I have discussed it, but I don’t know that it’s practical. We have to support more than just Linux. Please do investigate and open a PR.\r\n\r\nWe could, at minimum, explain how to do it in a guide. Here’s how we use custom previewers and analyzers for sandboxing in Basecamp:\r\n\r\n```ruby\r\n# config/initializers/active_storage.rb\r\nrequire 'active_storage/analyzer/sandboxed_video_analyzer'\r\nrequire 'active_storage/previewer/sandboxed_video_previewer'\r\n\r\nRails.application.configure do\r\n  # Customize analyzers and previewers. Use LXC sandboxes where appropriate.\r\n  if BC3.deployment.online?\r\n    config.active_storage.analyzers = [\r\n      ActiveStorage::Analyzer::ImageAnalyzer,\r\n      ActiveStorage::Analyzer::PDFAnalyzer,\r\n      ActiveStorage::Analyzer::SandboxedVideoAnalyzer.build(config.x.sandboxes.ffmpeg)\r\n    ]\r\n\r\n    config.active_storage.previewers = [\r\n      ActiveStorage::Previewer::SandboxedPDFPreviewer.build(config.x.sandboxes.mupdf),\r\n      ActiveStorage::Previewer::SandboxedVideoPreviewer.build(config.x.sandboxes.ffmpeg)\r\n    ]\r\n  else\r\n    config.active_storage.analyzers.append ActiveStorage::Analyzer::PDFAnalyzer\r\n  end\r\nend\r\n```\r\n\r\n```ruby\r\n# lib/active_storage/previewer/sandboxed_video_previewer.rb\r\nrequire 'active_storage/previewer/video_previewer'\r\nrequire 'active_storage/sandboxing'\r\n\r\nclass ActiveStorage::Previewer::SandboxedVideoPreviewer < ActiveStorage::Previewer::VideoPreviewer\r\n  include ActiveStorage::Sandboxing\r\n\r\n  private\r\n    def draw_relevant_frame_from(file, &block)\r\n      draw bin, sandbox, ffmpeg_path, '-i', file.path, '-y', '-vcodec', 'png',\r\n        '-vf', 'thumbnail', '-vframes', '1', '-f', 'image2', '-', &block\r\n    end\r\nend\r\n```\r\n\r\n```ruby\r\n# lib/active_storage/sandboxing.rb\r\nmodule ActiveStorage::Sandboxing\r\n  extend ActiveSupport::Concern\r\n\r\n  included do\r\n    class_attribute :bin, :sandbox, :tempdir\r\n  end\r\n\r\n  class_methods do\r\n    def build(bin:, sandbox:, tempdir:)\r\n      Class.new(self).tap do |klass|\r\n        klass.bin     = bin\r\n        klass.sandbox = sandbox\r\n        klass.tempdir = tempdir\r\n      end\r\n    end\r\n\r\n    def inspect\r\n      name.presence || \"#{superclass.name}(bin: #{bin.inspect}, sandbox: #{sandbox.inspect}, tempdir: #{tempdir.inspect})\"\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n/cc @rails/security ", "created_at": "2018-01-13 00:44:05", "user": 94129, "id": 357393921}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357395235", "text": "Was closing this intentional? ", "created_at": "2018-01-13 00:54:39", "user": 772, "id": 357395235}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357395436", "text": "Yes. We don’t take feature requests in the issue tracker.", "created_at": "2018-01-13 00:56:25", "user": 94129, "id": 357395436}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"+1": [1211165]}, "text": "### Summary\r\n\r\nWhen a thread has the load interlock and is waiting to check a connection out of the connection pool because there are no free connections and the threads with connections are waiting for the load interlock, an `ActiveRecord::ConnectionTimeoutError` exception will be thrown by the thread waiting for the connection.\r\n\r\nWhen waiting for the connection to check out we should allow autoloading to proceed to avoid this deadlock.\r\n\r\n### Other Information\r\n\r\nRelated to #31035.\r\n", "labels": [], "number": 31696, "updated_at": "2018-03-22 20:50:14", "user": 764206, "closed_at": "None", "id": 288250391, "title": "Prevent deadlocks when waiting for connection from pool.", "url": "https://api.github.com/repos/rails/rails/issues/31696", "created_at": "2018-01-12 21:24:52", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357358241", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @sgrif (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-12 21:24:55", "user": 7468109, "id": 357358241}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357361189", "text": "r? @matthewd ", "created_at": "2018-01-12 21:37:13", "user": 47848, "id": 357361189}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358087748", "text": "My original solution proved to be the wrong direction. I just updated the branch with a working fix. I wasn't sure how to really test this - totally open to suggestions though.", "created_at": "2018-01-16 20:05:00", "user": 764206, "id": 358087748}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/374744162", "text": "So it turns out that this fix isn't sufficient, either. But I'm not really sure how to fix it...\r\n\r\nThe issue is that we're seeing `ActiveRecord::ConnectionTimeoutError`s raised. Our connection pool size is 5.\r\n\r\nWe have 5 threads that look like:\r\n\r\n- have an AR connection checked out of the connection pool\r\n- are blocked inside `ActiveSupport::Concurrency::ShareLock#start_sharing (they're all in the [third_branch](https://github.com/rails/rails/blob/master/activesupport/lib/active_support/concurrency/share_lock.rb#L125))\r\n\r\nWe have one thread that:\r\n\r\n- has the exclusive load lock (obtained by calling `ActiveSupport::Concurrency::ShareLock#start_unloading`)\r\n- is blocked trying to check out connections from the connection pool (inside of a `ActiveSupport::Dependencies.interlock.permit_concurrent_loads` block)\r\n- is trying to checkout connections to clear them (as dictated by the [`before_class_unload` callback defined in AR's railtie](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/railtie.rb#L172))\r\n\r\nSo it seems to make sense why this is happening - `ActiveSupport::Concurrency::ShareLock#busy_for_sharing?` will always be returning true for the 5 threads waiting on the lock since thread 6 holds the exclusive lock (`ActiveSupport::Dependencies.interlock.permit_concurrent_loads` doesn't relinquish the exclusive lock).\r\n\r\n@matthewd, any thoughts?", "created_at": "2018-03-20 20:25:08", "user": 764206, "id": 374744162}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/374821513", "text": "Hrmm.. I don't think I expect threads to be acquiring a connection before they enter the share lock.\r\n\r\nThat sounds like a pretty legitimate deadlock: the reloading can't proceed without cycling all the database connections (to ensure they've caught up with corresponding schema changes, say), and the sharing threads can't continue [and thus eventually give up their connections] because once reloading has started, it isn't safely interruptible. (A reload isn't even safe to occur inside `permit_concurrent_loads`.)\r\n\r\nI think the best we could do from this point would be to have the `before_class_unload` either give up on unavailable connections and leave them to their own devices (which seems like a recipe for intermittent misbehaviour), or bypass their current owner and break them (so the owner will get an exception next time they try to use it, but the unload can continue, confident that no old connections remain valid). Neither sounds particularly exciting, so probably better to avoid getting into the situation in the first place... is that a result of something your code is doing (manual threading & connection management), or can vanilla requests end up there?\r\n\r\n---\r\n\r\nSeparately, this PR looks good; sorry I haven't looked at it earlier. I think the test would be pretty structurally similar to #31035: one test starts `running` then gets stuck trying to obtain a connection from the pool, then another thread begins `loading`. The difference is just that instead of working directly with the monitor, the test will be interacting with the pool -- there should be relevant existing tests in https://github.com/rails/rails/blob/master/activerecord/test/cases/connection_pool_test.rb; I imagine you can find a suitable fit or two, and make copies of those tests in place, with the extra loading thread woven in.", "created_at": "2018-03-21 02:57:42", "user": 1034, "id": 374821513}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/375452960", "text": "@matthewd thanks for all of that info! The issue that isn't fixed by this patch does indeed seem to be caused by us spawning a new thread manually. I've removed the code that was creating the new thread and things seem to be behaving now - thanks for the clue!\r\n\r\n---\r\n\r\nAs for this PR, thanks for the testing advice - I'll work on that in the next day or two.", "created_at": "2018-03-22 20:50:14", "user": 764206, "id": 375452960}], "assignees": [1034, 1034], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nProvide a general description of the code changes in your pull\r\nrequest... were there any bugs you had fixed? If so, mention them. If\r\nthese bugs have open GitHub issues, be sure to tag them here as well,\r\nto keep the conversation linked together.\r\n\r\n### Other Information\r\n\r\nIf there's anything else that's important and relevant to your pull\r\nrequest, mention that information here. This could include\r\nbenchmarks, or other information.\r\n\r\nIf you are updating any of the CHANGELOG files or are asked to update the\r\nCHANGELOG files by reviewers, please add the CHANGELOG entry at the top of the file.\r\n\r\nFinally, if your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails!\r\n", "labels": [], "number": 31695, "updated_at": "2018-01-12 21:06:30", "user": 70536, "closed_at": "2018-01-12 21:06:30", "id": 288245531, "title": "Fix doc typo [ci-skip]", "url": "https://api.github.com/repos/rails/rails/issues/31695", "created_at": "2018-01-12 21:02:48", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357353148", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @eileencodes (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-12 21:02:50", "user": 7468109, "id": 357353148}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [8459, 21275217, 5964462]}, "text": "Hi! \r\n\r\nThanks for your work making Rails so great! I'm having a little trouble with `ActiveSupport::Dependencies` in development and I wonder if you can help me through it. \r\n\r\nThe issue works like this (link to Rails app below): \r\n\r\n- In a controller, reference a constant\r\n- In that module/class definition, reference another constant which is in an autogenerated module \r\n- In that _last_ constant (which is inside a generated module), have some kind of error that prevents the constant from being loaded, for example, a runtime error in the class definition. \r\n- Load a page which triggers the error; see the error page \r\n- After seeing the error page, correct the error \r\n- Reload the page \r\n- The server spins forever :'( \r\n\r\nI've been [hunting this issue](https://github.com/rmosolgo/graphql-ruby/issues/651) for about 10 months in the context of graphql-ruby, but finally had the good sense to investigate it in a plain Rails context. \r\n\r\nI _did_ find a work-around, although it's pretty heavy-handed: \r\n\r\n```ruby\r\n    class UniqueArray < Array\r\n      def <<(other)\r\n        if include?(other)\r\n          self\r\n        else\r\n          super(other)\r\n        end\r\n      end\r\n    end\r\n    ActiveSupport::Dependencies.autoloaded_constants = UniqueArray.new\r\n```\r\n\r\n(I use this wacky class instead of `Set` because `Set` doesn't implement some methods like `.concat`, which are used by `ActiveSupport::Dependencies`.)\r\n\r\nAre you interested in pursuing this issue in Rails? If so, I'm happy to search for a more proper solution and submit a pull request. If you think a certain approach would be best, please let me know and I'd love to look into it! \r\n\r\nThanks for your review!\r\n\r\n### Steps to reproduce\r\n\r\nHere's a Rails app to demonstrate the issue, with instructions in the readme: \r\n\r\nhttps://github.com/rmosolgo/constant-loading-issue\r\n\r\n### Expected behavior\r\n\r\nThe auto-generated module should be unloaded once, then reloaded once. \r\n\r\n### Actual behavior\r\n\r\nAfter the error, the auto-generated module is _in_ `ActiveSupport::Dependencies.autoloaded_constants`, but the constant is _not_ defined in Ruby. So, during `ActiveSupport::Dependencies.remove_constant`, the constant is re-loaded, re-added to `autoloaded_constants`, then removed. Since the constant appears _again_ in `autoloaded_constants`, it is next in line to be removed, and the subsequent call to `remove_constant` starts this process from the beginning. This begins an infinite loop. (Well, not infinite, Ruby would probably run out of memory eventually!)\r\n\r\n### System configuration\r\n\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.4.1\r\n", "labels": [], "number": 31694, "updated_at": "2018-01-26 18:45:09", "user": 2231765, "closed_at": "2018-01-26 18:45:09", "id": 288229150, "title": "Generated modules repeatedly added to autoloaded_constants after an error", "url": "https://api.github.com/repos/rails/rails/issues/31694", "created_at": "2018-01-12 19:55:09", "comments": [{"reactions": {"+1": [21275217]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357831618", "text": "This is a pretty good description, thanks for the app! I am going to dig into some possible approaches.", "created_at": "2018-01-16 01:59:19", "user": 289882, "id": 357831618}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357949450", "text": "Ok, thanks for talking a look!", "created_at": "2018-01-16 12:48:23", "user": 2231765, "id": 357949450}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"heart": [18175]}, "text": "Active Storage relies on content types to expose features to categories of blobs. For example, variants are made available for blobs whose content types identify them as variable images.\r\n\r\nUnfortunately, browsers provide unreliable content types for uploaded files. At Basecamp, we frequently observe browsers submitting image files with the `application/octet-stream` content type. If we relied on declared content types rather than extracting appropriate content types from file data, we would fail to properly display the misidentified image files. We’d fall back to a generic file icon instead of displaying the images themselves.\r\n\r\nThis PR brings content type detection to Active Storage via [Marcel](https://github.com/basecamp/marcel). Marcel uses [MimeMagic](https://github.com/minad/mimemagic/) to extract content types from file data. When MimeMagic chooses a vague content type for a file, Marcel attempts to pick a more specific one from its extension. \r\n\r\nMarcel is production-ready: we’ve used it in production for almost a year, and we’ve used magic number–based content type detection longer. It has an extensive test suite based in part on real edge cases we’ve identified in production.", "labels": [], "number": 31693, "updated_at": "2018-01-17 01:36:33", "user": 94129, "closed_at": "2018-01-15 18:06:18", "id": 288212316, "title": "Extract content types from blob data", "url": "https://api.github.com/repos/rails/rails/issues/31693", "created_at": "2018-01-12 18:49:33", "comments": [], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nCreate a migration with the following steps\r\nadd a foreign key by doing an `add_foreign_key` on a column\r\nthen do an `add_index`  on the same column\r\nrun `rails db:migrate` we get one index on column \r\nwith name `index_on_blah_blah` ---> Behaviour 1\r\n\r\nNow:\r\nCreate a migration\r\ndo `add_foreign_key`\r\nrun `rails db:migrate`\r\ncreate another migration\r\ndo `add_index` on same column\r\nrun `rails db:migrate`\r\nnow we get 2 indexes one `rails_fk_blah_blah` and one `index_on_blah_blah`  ----> Behaviour 2\r\n\r\n\r\n\r\n### Expected behavior\r\nMigrations should get me from state a to state b regardless how i run them right? why is there a difference here?\r\n\r\n**Rails version**: 5.0.2\r\n\r\n**Ruby version**: 2.4.0\r\n", "labels": [], "number": 31692, "updated_at": "2018-01-12 18:26:12", "user": 8532031, "closed_at": "None", "id": 288199575, "title": "Migrations are not idempotent", "url": "https://api.github.com/repos/rails/rails/issues/31692", "created_at": "2018-01-12 17:57:56", "comments": [{"reactions": {"+1": [1174604]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357316556", "text": "Could you create a reproduction script with this template https://github.com/rails/rails/blob/master/guides/bug_report_templates/active_record_master.rb?", "created_at": "2018-01-12 18:26:11", "user": 47848, "id": 357316556}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nBrand new Rails app:\r\n\r\n- `rails new test-logs`\r\n- `rails g scaffold post title:string content:text`\r\n- `rails db:migrate`\r\n- `rails s`\r\n- open http://localhost:3000/posts\r\n\r\n### Expected behavior\r\n\r\nExpected to see the following line in the console:\r\n\r\n```\r\n ↳ app/views/posts/index.html.erb:15\r\n```\r\n\r\n### Actual behavior\r\n\r\nI see this:\r\n\r\n```\r\n↳ /usr/local/opt/rbenv/versions/2.4.2/lib/ruby/2.4.0/monitor.rb:214\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**:  Rails 5.2.0 master at edcd32edadd0d6d6b505f59436d05c6a890d4d7c\r\n\r\n**Ruby version**: ruby 2.4.2p198 (2017-09-14 revision 59899) [x86_64-darwin16]\r\n\r\n**Rbenv version**: rbenv 1.0.0\r\n\r\n**MacOS version**: 10.12.6\r\n\r\n\r\n### Investigation results\r\n\r\nI've done some _puts-debugging_:\r\n\r\n```rubt\r\n# active_record/log_subscriber.rb\r\ndef log_query_source\r\n  p RbConfig::CONFIG[\"rubylibdir\"]\r\n  puts caller_locations.take(30).map { |source| \"#{source.absolute_path}:#{source.lineno}\" }.join(\"\\n\")\r\n  # ...\r\nend\r\n```\r\n\r\nand found the following:\r\n\r\n```\r\n ActiveStorage::Blob Load (0.8ms)  SELECT  \"active_storage_blobs\".* FROM \"active_storage_blobs\" WHERE \"active_storage_blobs\".\"id\" = $1 LIMIT $2  [[\"id\", 3], [\"LIMIT\", 1]]\r\n\"/usr/local/opt/rbenv/versions/2.4.2/lib/ruby/2.4.0\"\r\n/Users/andybarnov/code/rails/activerecord/lib/active_record/log_subscriber.rb:98\r\n/Users/andybarnov/code/rails/activerecord/lib/active_record/log_subscriber.rb:43\r\n/Users/andybarnov/code/rails/activesupport/lib/active_support/subscriber.rb:101\r\n/Users/andybarnov/code/rails/activesupport/lib/active_support/log_subscriber.rb:84\r\n/Users/andybarnov/code/rails/activesupport/lib/active_support/notifications/fanout.rb:104\r\n/Users/andybarnov/code/rails/activesupport/lib/active_support/notifications/fanout.rb:48\r\n/Users/andybarnov/code/rails/activesupport/lib/active_support/notifications/fanout.rb:48\r\n/Users/andybarnov/code/rails/activesupport/lib/active_support/notifications/fanout.rb:48\r\n/Users/andybarnov/code/rails/activesupport/lib/active_support/notifications/instrumenter.rb:44\r\n/Users/andybarnov/code/rails/activesupport/lib/active_support/notifications/instrumenter.rb:29\r\n/Users/andybarnov/code/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:556\r\n/Users/andybarnov/code/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:608\r\n/Users/andybarnov/code/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:588\r\n/Users/andybarnov/code/rails/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:81\r\n/Users/andybarnov/code/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:433\r\n/Users/andybarnov/code/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:55\r\n/Users/andybarnov/code/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:99\r\n/Users/andybarnov/code/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:122\r\n/usr/local/Cellar/rbenv/1.0.0/versions/2.4.2/lib/ruby/2.4.0/monitor.rb:214\r\n/Users/andybarnov/code/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:108\r\n/Users/andybarnov/code/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:99\r\n/Users/andybarnov/code/rails/activerecord/lib/active_record/querying.rb:41\r\n/Users/andybarnov/code/rails/activerecord/lib/active_record/statement_cache.rb:108\r\n/Users/andybarnov/code/rails/activerecord/lib/active_record/core.rb:175\r\n/Users/andybarnov/code/rails/activestorage/app/models/active_storage/blob.rb:41\r\n/Users/andybarnov/code/rails/activestorage/app/controllers/concerns/active_storage/set_blob.rb:12\r\n/Users/andybarnov/code/rails/activesupport/lib/active_support/callbacks.rb:426\r\n/Users/andybarnov/code/rails/activesupport/lib/active_support/callbacks.rb:198\r\n/Users/andybarnov/code/rails/actionpack/lib/abstract_controller/callbacks.rb:34\r\n/Users/andybarnov/code/rails/activesupport/lib/active_support/callbacks.rb:199\r\n  ↳ /usr/local/opt/rbenv/versions/2.4.2/lib/ruby/2.4.0/monitor.rb:214\r\n```\r\n\r\nNote, that `RbConfig::CONFIG[\"rubylibdir\"]` return `/usr/local/opt/rbenv/versions/2.4.2/lib/ruby/2.4.0`, but we the absolute path is different–`/usr/local/Cellar/rbenv/1.0.0/versions/2.4.2/lib/ruby/`.\r\n\r\nLooks like some rbenv dirty magic (or Homebrew) (I'm not an rbenv user, so have no idea).\r\n\r\nAt the same time, `source.path` has the correct prefix (i.e. `/usr/local/opt/rbenv/versions/2.4.2/lib/ruby/2.4.0`).\r\n\r\n/cc @olivierlacan \r\n\r\nP.S. I'm wondering have you heard about [`active_record_query_trace`](https://github.com/ruckus/active-record-query-trace) gem? It does pretty much the same (but is a little bit more configurable). It uses `Rails::BacktraceCleaner` under the hood. Maybe, we could use it here too?", "labels": [], "number": 31691, "updated_at": "2018-02-13 18:51:04", "user": 1516722, "closed_at": "None", "id": 288173440, "title": "ActiveRecord verbose_query_logs + rbenv = wrong source line", "url": "https://api.github.com/repos/rails/rails/issues/31691", "created_at": "2018-01-12 16:26:50", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364792013", "text": "@palkan I want to address this issue this week. It's basically due to the fact that the SQL query is generated by Rails code, we default to ignoring Rails code (to remove noise from the backtrace) and in this case it's a bad idea because Rails can also generate SQL queries. At least for ActiveStorage. \r\n\r\nSo we need to stop ignoring Rails call sites in the backtrace essentially.\r\n\r\nWe didn't want to add a dependency for this feature so I'll take a look at https://github.com/ruckus/active-record-query-trace for sure but it seems to do a lot of Rails internal class reopening which I'm not sure will work in this case.\r\n\r\nMore importantly the reason we didn't use `Rails.backtrace_cleaner` is that this feature comes from ActiveSupport and not ActiveRecord. That would have introduced coupling which is why the feature ended up reinventing backtrace cleaning for its specific purpose. See: https://github.com/rails/rails/pull/26815#pullrequestreview-5342743\r\n\r\nI'm sure we can fix this without introducing a dependency but since `active_record_query_trace` is such a similar implementation I think it'll help to make sure we're doing things right and handling edge cases.", "created_at": "2018-02-11 21:46:39", "user": 65950, "id": 364792013}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364792064", "text": "Thanks so much for the excellent reproduction steps by the way. I really appreciate it. ❤️ ", "created_at": "2018-02-11 21:47:24", "user": 65950, "id": 364792064}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364799524", "text": "@palkan I tried to reproduce this with rbenv 1.1 and Ruby 2.4.0 under Rails 5.2.0 RC1 and failed. The output was normal: \r\n\r\n```\r\nStarted GET \"/posts\" for 127.0.0.1 at 2018-02-11 18:16:19 -0500\r\nProcessing by PostsController#index as HTML\r\n  Rendering posts/index.html.erb within layouts/application\r\n  Post Load (0.1ms)  SELECT \"posts\".* FROM \"posts\"\r\n  ↳ app/views/posts/index.html.erb:15\r\n  Rendered posts/index.html.erb within layouts/application (1.3ms)\r\nCompleted 200 OK in 20ms (Views: 17.3ms | ActiveRecord: 0.1ms)\r\n```", "created_at": "2018-02-11 23:17:46", "user": 65950, "id": 364799524}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364802494", "text": "`/usr/local/opt/rbenv` vs `/usr/local/Celler/rbenv` reminds me of  https://github.com/hsbt/minitest-power_assert/issues/9#issuecomment-305967519.\r\nAre these directories symlinked?\r\ncf. https://github.com/rails/rails/pull/29638#issuecomment-312584283", "created_at": "2018-02-11 23:56:01", "user": 5965113, "id": 364802494}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364832491", "text": "I can reproduce this issue with Ruby 2.4.0.\r\nGiven that \r\n- `/usr/local/rbenv` is symlinked to `/usr/local/Cellar/rbenv/1.1.1`\r\n\r\n```\r\nls -l /usr/local/opt/rbenv\r\nlrwxr-xr-x  1 yskkin  admin  21  8 27 17:57 /usr/local/opt/rbenv -> ../Cellar/rbenv/1.1.1\r\n```\r\n- `/Users/yskkin/projects/rails` points to current mater\r\n- `/Users/yskkin/projects/linked_rails` is symlinked to `/Users/yskkin/projects/rails`\r\n\r\nWhen `Gemfile` is `gem 'rails', github: 'rails/rails'`:\r\n\r\n```\r\n=> Booting Puma\r\n=> Rails 6.0.0.alpha application starting in development\r\n=> Run `rails server -h` for more startup options\r\nPuma starting in single mode...\r\n* Version 3.11.2 (ruby 2.4.0-p0), codename: Love Song\r\n* Min threads: 5, max threads: 5\r\n* Environment: development\r\n* Listening on tcp://localhost:4000\r\nUse Ctrl-C to stop\r\nStarted GET \"/posts\" for ::1 at 2018-02-12 14:26:21 +0900\r\n/usr/local/Cellar/rbenv/1.1.1/versions/2.4.0/lib/ruby/gems/2.4.0/bundler/gems/rails-cfcb92f9eaf7/activemodel/lib/active_model/validations/clusivity.rb:8: warning: already initialized constant ActiveModel::Validations::Clusivity::ERROR_MESSAGE\r\n/usr/local/opt/rbenv/versions/2.4.0/lib/ruby/gems/2.4.0/bundler/gems/rails-cfcb92f9eaf7/activemodel/lib/active_model/validations/clusivity.rb:8: warning: previous definition of ERROR_MESSAGE was here\r\n   (0.5ms)  SELECT \"schema_migrations\".\"version\" FROM \"schema_migrations\" ORDER BY \"schema_migrations\".\"version\" ASC\r\n  ↳ /usr/local/opt/rbenv/versions/2.4.0/lib/ruby/gems/2.4.0/bundler/gems/rails-cfcb92f9eaf7/activerecord/lib/active_record/log_subscriber.rb:98\r\nProcessing by PostsController#index as HTML\r\n  Rendering posts/index.html.erb within layouts/application\r\n  Post Load (0.5ms)  SELECT \"posts\".* FROM \"posts\"\r\n  ↳ /usr/local/opt/rbenv/versions/2.4.0/lib/ruby/gems/2.4.0/bundler/gems/rails-cfcb92f9eaf7/activerecord/lib/active_record/log_subscriber.rb:98\r\n  Rendered posts/index.html.erb within layouts/application (5.0ms)\r\nCompleted 200 OK in 426ms (Views: 392.0ms | ActiveRecord: 0.8ms)\r\n```\r\n\r\nWhen `Gemfile` is `gem 'rails', path: '/Users/yskkin/projects/rails'`, second and succeeding requests reprodece the problem. First request is fine:\r\n\r\n```\r\n=> Booting Puma\r\n=> Rails 6.0.0.alpha application starting in development\r\n=> Run `rails server -h` for more startup options\r\nPuma starting in single mode...\r\n* Version 3.11.2 (ruby 2.4.0-p0), codename: Love Song\r\n* Min threads: 5, max threads: 5\r\n* Environment: development\r\n* Listening on tcp://localhost:4000\r\nUse Ctrl-C to stop\r\nStarted GET \"/posts\" for ::1 at 2018-02-12 14:28:13 +0900\r\n   (0.6ms)  SELECT \"schema_migrations\".\"version\" FROM \"schema_migrations\" ORDER BY \"schema_migrations\".\"version\" ASC\r\n  ↳ /usr/local/opt/rbenv/versions/2.4.0/lib/ruby/gems/2.4.0/gems/web-console-3.5.1/lib/web_console/middleware.rb:135\r\nProcessing by PostsController#index as HTML\r\n  Rendering posts/index.html.erb within layouts/application\r\n  Post Load (0.6ms)  SELECT \"posts\".* FROM \"posts\"\r\n  ↳ app/views/posts/index.html.erb:15\r\n  Rendered posts/index.html.erb within layouts/application (5.9ms)\r\nCompleted 200 OK in 567ms (Views: 545.5ms | ActiveRecord: 1.0ms)\r\n\r\n\r\nStarted GET \"/posts\" for ::1 at 2018-02-12 14:28:20 +0900\r\nProcessing by PostsController#index as HTML\r\n  Rendering posts/index.html.erb within layouts/application\r\n  Post Load (1.1ms)  SELECT \"posts\".* FROM \"posts\"\r\n  ↳ /usr/local/opt/rbenv/versions/2.4.0/lib/ruby/2.4.0/monitor.rb:214\r\n  Rendered posts/index.html.erb within layouts/application (6.6ms)\r\nCompleted 200 OK in 89ms (Views: 83.5ms | ActiveRecord: 1.1ms)\r\n```\r\n\r\nWhen `Gemfile` is `gem 'rails', path: '/Users/yskkin/projects/linked_rails'`, same as the first case.\r\n\r\n```\r\n=> Booting Puma\r\n=> Rails 6.0.0.alpha application starting in development\r\n=> Run `rails server -h` for more startup options\r\nPuma starting in single mode...\r\n* Version 3.11.2 (ruby 2.4.0-p0), codename: Love Song\r\n* Min threads: 5, max threads: 5\r\n* Environment: development\r\n* Listening on tcp://localhost:4000\r\nUse Ctrl-C to stop\r\nStarted GET \"/posts\" for ::1 at 2018-02-12 14:31:14 +0900\r\n/Users/yskkin/projects/rails/activemodel/lib/active_model/validations/clusivity.rb:8: warning: already initialized constant ActiveModel::Validations::Clusivity::ERROR_MESSAGE\r\n/Users/yskkin/projects/linked_rails/activemodel/lib/active_model/validations/clusivity.rb:8: warning: previous definition of ERROR_MESSAGE was here\r\n   (0.6ms)  SELECT \"schema_migrations\".\"version\" FROM \"schema_migrations\" ORDER BY \"schema_migrations\".\"version\" ASC\r\n  ↳ /Users/yskkin/projects/linked_rails/activerecord/lib/active_record/log_subscriber.rb:98\r\nProcessing by PostsController#index as HTML\r\n  Rendering posts/index.html.erb within layouts/application\r\n  Post Load (0.7ms)  SELECT \"posts\".* FROM \"posts\"\r\n  ↳ /Users/yskkin/projects/linked_rails/activerecord/lib/active_record/log_subscriber.rb:98\r\n  Rendered posts/index.html.erb within layouts/application (5.6ms)\r\nCompleted 200 OK in 424ms (Views: 392.6ms | ActiveRecord: 1.0ms)\r\n```", "created_at": "2018-02-12 05:33:00", "user": 5965113, "id": 364832491}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365365803", "text": "Attempt to reproduce with rbenv 1.1.1 and Rails 5.2.0.rc1: \r\n\r\n- Regardless of this issue, any attempt to load Rails results in a problem described here https://github.com/Shopify/bootsnap/issues/75 (Bootsnap doesn't work)\r\n- Disabling Bootsnap and running these commands under Ruby 2.4.2: \r\n\r\n```\r\nrails g scaffold post title content\r\nrails db:migrate\r\nrails s\r\n```\r\n\r\nVisiting `/posts` results in: \r\n\r\n```\r\nStarted GET \"/posts\" for 127.0.0.1 at 2018-02-13 19:42:36 +0100\r\n   (0.4ms)  SELECT \"schema_migrations\".\"version\" FROM \"schema_migrations\" ORDER BY \"schema_migrations\".\"version\" ASC\r\n  ↳ /usr/local/opt/rbenv/versions/2.4.2/lib/ruby/gems/2.4.0/gems/activerecord-5.2.0.rc1/lib/active_record/log_subscriber.rb:98\r\nProcessing by PostsController#index as HTML\r\n  Rendering posts/index.html.erb within layouts/application\r\n  Post Load (0.4ms)  SELECT \"posts\".* FROM \"posts\"\r\n  ↳ /usr/local/opt/rbenv/versions/2.4.2/lib/ruby/gems/2.4.0/gems/activerecord-5.2.0.rc1/lib/active_record/log_subscriber.rb:98 # all queries are logged as generated by this line!\r\n  Rendered posts/index.html.erb within layouts/application (4.0ms)\r\nCompleted 200 OK in 468ms (Views: 453.1ms | ActiveRecord: 0.7ms)\r\n\r\n\r\n``` \r\n\r\nSwitching to ruby 2.5.0 and running `bundle update`:\r\n\r\n* Bootsnap still broken\r\n* Query logging works fine, for the same endpoint: \r\n\r\n```\r\nStarted GET \"/posts\" for 127.0.0.1 at 2018-02-13 19:41:04 +0100\r\n   (0.3ms)  SELECT \"schema_migrations\".\"version\" FROM \"schema_migrations\" ORDER BY \"schema_migrations\".\"version\" ASC\r\n  ↳ /usr/local/Cellar/rbenv/1.1.1/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.rc1/lib/active_record/log_subscriber.rb:98\r\nProcessing by PostsController#index as HTML\r\n  Rendering posts/index.html.erb within layouts/application\r\n  Post Load (0.2ms)  SELECT \"posts\".* FROM \"posts\"\r\n  ↳ app/views/posts/index.html.erb:15 # correct logging! \r\n  Rendered posts/index.html.erb within layouts/application (4.5ms)\r\nCompleted 200 OK in 981ms (Views: 965.4ms | ActiveRecord: 0.4ms)\r\n```", "created_at": "2018-02-13 18:51:04", "user": 12513436, "id": 365365803}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "Should fix #31688 unless someone can point me to a better way to achieve\r\nthis goal. Essentially David's point was that verbose query logging when\r\nenabled in Rails console tends to make things very noisy.\r\n\r\nThat's especially true if we display absolute paths to callsites which\r\nsadly is still the case when we detect a caller that isn't part of the\r\nRails application — think gems.\r\n\r\nRelated to #26815.\r\n\r\nI haven't tested this locally yet so don't merge until the build has run and we can test it out a bit more.", "labels": [], "number": 31690, "updated_at": "2018-01-24 22:04:38", "user": 65950, "closed_at": "2018-01-24 22:04:32", "id": 288144118, "title": "Only enable verbose_query_logs in Rails server", "url": "https://api.github.com/repos/rails/rails/issues/31690", "created_at": "2018-01-12 14:56:02", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357268471", "text": "@olivierlacan \r\n\r\n> a better way to achieve\r\nthis goal\r\n\r\nWhat about setting `verbose_query_logs` to `false` in [`ActiveRecord::Railtie#console`](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/railtie.rb#L55)?", "created_at": "2018-01-12 15:28:19", "user": 1516722, "id": 357268471}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359978296", "text": "@rafaelfranca Updated to use the console block in AR's railtie. Let me know if that works. \r\n\r\nTests look like they're good aside from build errors.", "created_at": "2018-01-24 00:24:32", "user": 65950, "id": 359978296}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360289308", "text": "Awesome! Thank you for working on this", "created_at": "2018-01-24 22:04:38", "user": 47848, "id": 360289308}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {"heart": [4083992, 522375, 672989, 4398227, 8741580, 1442465]}, "text": "The new default CSP was preventing SJR and Turbolinks redirects from working out the box, as described in #31273. The default was changed to unsafe_line in https://github.com/rails/rails/commit/0f7d3b612cc9264a90a1da6820d442099d8641f8, but the proper fix is to use the nonce approach instead.", "labels": [], "number": 31689, "updated_at": "2018-02-22 15:32:23", "user": 2741, "closed_at": "2018-02-22 15:32:23", "id": 288139062, "title": "Upgrade CSP script_src default from unsafe_inline to nonce approach", "url": "https://api.github.com/repos/rails/rails/issues/31689", "created_at": "2018-01-12 14:39:22", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358569263", "text": "The `secureheaders` gem already does exactly this by adding helpers that output [nonce and hash sources](https://w3c.github.io/webappsec-csp/2/#nonce_source) per script tag for each request: https://github.com/twitter/secureheaders\r\n\r\nThey do that by adding a `nonced_javascript_tag` wrapper that appends the nonce automatically. I found that to be very straightforward. Maybe it can inspire your approach.", "created_at": "2018-01-18 08:09:21", "user": 459462, "id": 358569263}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360497950", "text": "Need any help here? I am really interested in getting 5.2.0 out 😊 ", "created_at": "2018-01-25 15:20:49", "user": 87186, "id": 360497950}, {"reactions": {"+1": [87186, 199]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361435884", "text": "This will be a lovely upgrade over what we have, but it's not a blocker for 5.2.", "created_at": "2018-01-30 00:35:45", "user": 2741, "id": 361435884}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "When interacting with Active Record in the console, the verbose_query_log setting adds a lot of noise:\r\n\r\n```\r\nirb(main):009:0> Topic.first.messages\r\n  Topic Load (0.1ms)  SELECT  \"topics\".* FROM \"topics\" ORDER BY \"topics\".\"id\" ASC LIMIT $1  [[\"LIMIT\", 1]]\r\n  ↳ (irb):9\r\n  Message Load (0.3ms)  SELECT  \"messages\".* FROM \"messages\" WHERE \"messages\".\"topic_id\" = $1 LIMIT $2  [[\"topic_id\", 1], [\"LIMIT\", 11]]\r\n  ↳ /Users/david/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/thor-0.20.0/lib/thor/command.rb:27\r\n=> #<ActiveRecord::Associations::CollectionProxy []>\r\n```\r\n\r\nThis feature should be turned off when using the console.\r\n\r\ncc @olivierlacan", "labels": [], "number": 31688, "updated_at": "2018-01-24 22:04:32", "user": 2741, "closed_at": "2018-01-24 22:04:32", "id": 288136984, "title": "Turn off Active Record's verbose_query_logs when using the console", "url": "https://api.github.com/repos/rails/rails/issues/31688", "created_at": "2018-01-12 14:32:25", "comments": [{"reactions": {"+1": [2741, 672989]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357255070", "text": "Yep. That makes sense.  \r\n\r\nWe also need to figure out how to clean that ugly ass absolute path. That’s really unnecessary. :-)\r\n\r\nUpdate: Hmm. And it seems weird that this Message query would come from thor. Seems like a bug.\r\n\r\nOn 12 January 2018 at 15:33:08, David Heinemeier Hansson (notifications@github.com(mailto:notifications@github.com)) wrote:\r\n\r\n>  \r\n> When interacting with Active Record in the console, the verbose_query_log setting adds a lot of noise:\r\n>  \r\n> irb(main):009:0> Topic.first.messages Topic Load (0.1ms) SELECT \"topics\".* FROM \"topics\" ORDER BY \"topics\".\"id\" ASC LIMIT $1 [[\"LIMIT\", 1]] ↳ (irb):9 Message Load (0.3ms) SELECT \"messages\".* FROM \"messages\" WHERE \"messages\".\"topic_id\" = $1 LIMIT $2 [[\"topic_id\", 1], [\"LIMIT\", 11]] ↳ /Users/david/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/thor-0.20.0/lib/thor/command.rb:27 => #<ActiveRecord::Associations::CollectionProxy []>  \r\n>  \r\n> This feature should be turned off when using the console.\r\n>  \r\n>  \r\n> cc @olivierlacan(https://github.com/olivierlacan)\r\n>  \r\n>  \r\n> —\r\n> You are receiving this because you were mentioned.\r\n> Reply to this email directly, view it on GitHub(https://github.com/rails/rails/issues/31688), or mute the thread(https://github.com/notifications/unsubscribe-auth/AAEBnu6D1BSSHANz3ac4HepEzPhr25lYks5tJ20kgaJpZM4RcXqK).\r\n>  \r\n>  \r\n>  \r\n>  \r\n>  \r\n\r\n\r\n", "created_at": "2018-01-12 14:39:42", "user": 65950, "id": 357255070}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\nAs per documentation `destroy_all` should return a collection of destroyed records, but since it uses `each(&:destroy)` it instead returns a collection it attempted to destroy. Made it to match the current documentation but maybe it should have more informative response ( somehow notify about records that failed to be destroyed )\r\n", "labels": [], "number": 31687, "updated_at": "2018-01-13 22:24:51", "user": 1331391, "closed_at": "None", "id": 288135036, "title": "Use map instead of each for ActiveRecord::Relation#destroy_all", "url": "https://api.github.com/repos/rails/rails/issues/31687", "created_at": "2018-01-12 14:26:03", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357251578", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @sgrif (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-12 14:26:07", "user": 7468109, "id": 357251578}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357254795", "text": "Thanks, but this is fine as is.", "created_at": "2018-01-12 14:38:36", "user": 12642, "id": 357254795}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357335903", "text": "In that case we need to change the documentation that say that it sometimes will return some objects that we not destroyed for some reason.", "created_at": "2018-01-12 19:45:41", "user": 47848, "id": 357335903}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357346929", "text": "`Persistence#destroy` will return destroyed object or raise any exception, not return not destroyed object.\r\n\r\nhttps://github.com/rails/rails/blob/604ef720671adf658da2b9c9c4af7ffa350c2162/activerecord/lib/active_record/persistence.rb#L325-L336", "created_at": "2018-01-12 20:35:00", "user": 12642, "id": 357346929}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357351265", "text": ":+1:", "created_at": "2018-01-12 20:54:38", "user": 47848, "id": 357351265}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357352725", "text": "From the documentation for that method:\r\n\r\nhttps://github.com/rails/rails/blob/604ef720671adf658da2b9c9c4af7ffa350c2162/activerecord/lib/active_record/persistence.rb#L321-L323\r\n\r\n`Persistence#destroy` is overridden by `Callbacks#destroy`: https://github.com/rails/rails/blob/604ef720671adf658da2b9c9c4af7ffa350c2162/activerecord/lib/active_record/callbacks.rb#L323\r\n\r\nSo it _is_ possible for `record.destroy` to fail and return `false`.", "created_at": "2018-01-12 21:01:00", "user": 432189, "id": 357352725}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357360640", "text": "hm, you are right. So if we want to change the current behavior, need a CHANGELOG entry since it is a breaking change.", "created_at": "2018-01-12 21:34:50", "user": 12642, "id": 357360640}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357366330", "text": "> need a CHANGELOG entry since it is a breaking change.\r\n\r\nIt's a \"breaking change\" in that it changes the return value... However, given that the return value differs from what is documented, I'd call that a bug fix (which still needs a changelog entry)", "created_at": "2018-01-12 22:00:01", "user": 1529387, "id": 357366330}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357369023", "text": "At least we have another `.each(&:destroy)`. Currently both `klass.destroy(ids)` and `relation.destroy_all` will return matched objects.\r\nIf we will change `relation.destroy_all` to return affected objects, I feel like that behavior will be inconsistently to the other.\r\n\r\nhttps://github.com/rails/rails/blob/f8afb5168aed810a061d081d3941c9dc9bd633c3/activerecord/lib/active_record/persistence.rb#L138-L144", "created_at": "2018-01-12 22:13:15", "user": 12642, "id": 357369023}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357373193", "text": "`Klass.destroy(id)` doesn't document its return value. I agree this should remain consistent. I think it makes sense to change that method as well to be consistent with this one, and change the documentation to mention this.\r\n\r\nIt's also worth mentioning that we can do a deprecation cycle on this pretty easily. I don't think it's worth doing here, this is very clearly a bug, but I wanted to mention it.", "created_at": "2018-01-12 22:34:20", "user": 1529387, "id": 357373193}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357448916", "text": "@rafaelfranca I've added requested changes but I'm actually not sure where to test this. I feel like tests for it should take place in `relations_test.rb` but we need to add some kind of `before_destroy` callback and I'm not sure I should ad it to that file. Can you give me a little hint on how should I do it?", "created_at": "2018-01-13 16:48:20", "user": 1331391, "id": 357448916}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357472007", "text": "You could try using the `FailedBulb` model, which already has a `before_destroy` callback that halts the callback chain:\r\nhttps://github.com/rails/rails/blob/0c743885baba1681ad43376f6444b52a306fdfd9/activerecord/test/models/bulb.rb#L50-L54", "created_at": "2018-01-13 22:24:50", "user": 432189, "id": 357472007}], "assignees": [1529387, 1529387], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "Hi,\r\n\r\nI have been reimplementing a part of my solution (that currently uses Shrine) using ActiveStorage in the 5.2.0 beta2. I think there should be a an easy way to customize how the UploadedFile content_type gets determined, similar to Shrine's DetermineMimeType plugin works.\r\n\r\nhttp://shrinerb.com/rdoc/classes/Shrine/Plugins/DetermineMimeType.html\r\n\r\nSomething like\r\n\r\n```ruby\r\nconfig.active_storage.content_type_analyzer = :mimemagic\r\n```\r\n\r\nMy use case is that in my application users are uploading a lot of files from proprietary hardware that produces binary files that have no extensions (DICOM files). These files can be easily identified by the `file` command or using [mimemagic](https://github.com/minad/mimemagic) but they get the content_type 'application/octet-stream' when uploaded through ActiveStorage because they have no extension. When I try to edit the content_type directly in a custom analyzer I get a checksum error.\r\n\r\nIf somebody knows how to do this then please share or point me in the right direction!\r\n\r\n### System configuration\r\n**Rails version**: Rails 5.2.0.beta2\r\n\r\n**Ruby version**: ruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-darwin17]\r\n", "labels": [], "number": 31686, "updated_at": "2018-01-12 14:21:59", "user": 615, "closed_at": "2018-01-12 14:21:59", "id": 288109834, "title": "Allow customization of how content_type is determined in ActiveStorage", "url": "https://api.github.com/repos/rails/rails/issues/31686", "created_at": "2018-01-12 12:52:10", "comments": [{"reactions": {"+1": [2028176]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357250522", "text": "Thanks, but we don’t take feature requests in the issue tracker.\r\n\r\nI’d recommend opening a PR, but I’m already in the process of adding MimeMagic-based content type extraction. We need it for Basecamp, too.", "created_at": "2018-01-12 14:21:59", "user": 94129, "id": 357250522}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "This PR only changes the guides.\r\n\r\nSince you are not deleting a key from session when you assign nil to that key (`session[key] = nil`), the correct way of deleting a key from session should be `session.delete(key)`.", "labels": [], "number": 31685, "updated_at": "2018-01-12 10:58:58", "user": 274526, "closed_at": "None", "id": 288082178, "title": "Remove key from session by using session.delete", "url": "https://api.github.com/repos/rails/rails/issues/31685", "created_at": "2018-01-12 10:58:43", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357208850", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @rafaelfranca (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-12 10:58:58", "user": 7468109, "id": 357208850}], "assignees": [47848, 47848], "state": "open", "is-pull-request": true}
{"reactions": {"+1": [25305511, 3188392]}, "text": "Hello all, it seems that the new version of [pg gem for postgres](https://rubygems.org/gems/pg/) has been released a few days ago. After updating my gem from 0.21.0 to 1.0.0, I get the following error.\r\n\r\n```\r\n/home/vagrant/.rvm/gems/ruby-2.3.3/gems/activerecord-5.1.4/lib/active_record/\r\nconnection_adapters/connection_specification.rb:188:\r\nin 'rescue in spec': Specified 'postgresql' for database adapter, \r\nbut the gem is not loaded. Add `gem 'pg'` to your Gemfile \r\n(and ensure its version is at the minimum required by ActiveRecord). (Gem::LoadError)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.3.3\r\n", "labels": [], "number": 31684, "updated_at": "2018-01-12 13:28:52", "user": 5508584, "closed_at": "2018-01-12 13:28:52", "id": 288052941, "title": "new pg gem v.1.0.0 incompatible with the rails", "url": "https://api.github.com/repos/rails/rails/issues/31684", "created_at": "2018-01-12 09:15:19", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357209064", "text": "`cat ~/.rbenv/versions/2.4.2/lib/ruby/gems/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/postgresql_adapter.rb|head -3`\r\n\r\n> \\# Make sure we're using pg high enough for type casts and Ruby 2.2+ compatibility\r\n> gem \"pg\", \"~> 0.18\"\r\n> require \"pg\"", "created_at": "2018-01-12 10:59:58", "user": 25305511, "id": 357209064}, {"reactions": {"+1": [5508584, 3188392]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357224438", "text": "@zoonoo fixed in 181836d894b0a198b150583fe4ac97dc70badcea", "created_at": "2018-01-12 12:18:48", "user": 1443426, "id": 357224438}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "This fixes a bug with `ActiveModel::Errors#added?`.  Calling `added?` with an attribute name that was not already a key in the `messages` Hash would unexpectedly add it as a key, with an empty Array as its value.  Now calling `#added?` will not modify `messages`.  \r\n\r\nReplication instructions:\r\n```\r\nclass FakeModel; include ActiveModel::Validations; end\r\nfake_model = FakeModel.new\r\nfake_model.errors.messages.has_key?(:some_attribute) # false\r\nfake_model.errors.added?(:some_attribute, 'some message')\r\nfake_model.errors.messages.has_key?(:some_attribute) # true\r\n```", "labels": [], "number": 31683, "updated_at": "2018-01-12 04:31:18", "user": 3031162, "closed_at": "None", "id": 288005131, "title": "Fix bug with ActiveModel::Errors#added?", "url": "https://api.github.com/repos/rails/rails/issues/31683", "created_at": "2018-01-12 04:31:16", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357140662", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @georgeclaghorn (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-12 04:31:18", "user": 7468109, "id": 357140662}], "assignees": [94129, 94129], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "This fixes several issues in the documentation that I noticed:\r\n\r\n### Corrections\r\n* In asset_tag_helper.rb, the documentation for `audio_tag` and `video_tag` doesn't match the methods' current parameter inputs.  I've updated them, using wording similar to that of other methods in the file.\r\n\r\n### Cleanup\r\n* Throughout the Rails documentation, \"URL\" is written in all-caps, since it's an acronym.  I found a few instances where it was lowercase and capitalized them for consistency.\r\n* Updated two external links in asset_url_helper.rb to use HTTPS\r\n* Fixed one instance where a literal was missing its code markup (`+request+`)\r\n* Added two missing Oxford commas\r\n* Typo fixes:\r\n  * `an resource` → `a resource`\r\n  * `files that exists` → `files that exist`\r\n  * `unobstrusive` → `unobtrusive`\r\n", "labels": [], "number": 31682, "updated_at": "2018-01-12 06:48:24", "user": 302377, "closed_at": "2018-01-12 05:30:38", "id": 287983264, "title": "Fix typos, update documentation", "url": "https://api.github.com/repos/rails/rails/issues/31682", "created_at": "2018-01-12 01:46:34", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357146938", "text": "These all look great, thanks!", "created_at": "2018-01-12 05:30:33", "user": 1034, "id": 357146938}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "It looks like there is no hook that will allow configuring ActiveRecord models based on what columns they have but only when information about columns will be loaded from DB.\r\n\r\nThe problem is that if I ask in the model about available columns, then ActiveRecord will try to connect to DB and load this information. But at that time DB may not be available (or even may not exist!)\r\n\r\nSee https://github.com/ClosureTree/closure_tree/issues/264 for example.\r\n\r\nWe have such internal model extensions in our app too. After upgrade to current 5.2 beta one of them started to ruin even `rake db:create` command, trying to connect to not yet created database:\r\n\r\n```ruby\r\nclass Product < ActiveRecord::Base\r\n  include AttrTainted\r\n\r\n  attr_tainted :name, :address\r\nend\r\n\r\n# This is how most gems works, you know\r\nmodule AttrTainted\r\n  extend ActiveSupport::Concern\r\n\r\n  class_methods do\r\n    def attr_tainted(*list, except: nil, only: list)\r\n      unless column_names.include?(\"attr_tainted\")\r\n        Rails.logger.warn \"You must add jsonb column attr_tainted to #{table_name}\"\r\n        return\r\n      end\r\n      # Do some setup, callbacks, validations, whatever\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nThe target of this PR is to create some hook that may be useful for gems and internal concern modules in applications to configure models at the right time.\r\n\r\nFor now, it looks like this:\r\n\r\n```ruby\r\n    def attr_tainted(*list, except: nil, only: list)\r\n      cattr_reader :attr_tainted_columns, instance_reader: false\r\n      event = \"#{self}.load_schema.active_record\"\r\n      ActiveSupport::Notifications.subscribe(event) do |*, payload|\r\n        unless payload[:model].column_names.include?(\"attr_tainted\")\r\n          Rails.logger.warn \"You must add jsonb column attr_tainted to #{payload[:model].table_name}\"\r\n          next\r\n        end\r\n        # more setup\r\n      end\r\n    end\r\n```\r\n\r\nMaybe it worth to write helper method like `on_configure` which will do all that stuff in it (where it is better to define it?). What do you think?\r\n\r\n## Implementation notes\r\n\r\nI've chosen ActiveSupport Instrumentation as it allows to have multiple hooks for every model and have them called in turn without writing much code.\r\n\r\nActiveSupport Callbacks are designed for defining callbacks at the class level and using at the instance level. I need to define _and_ use callbacks at the class level.\r\n\r\nI'm waiting for your suggestions, advice and corrections! Thanks in advance.", "labels": [], "number": 31681, "updated_at": "2018-01-12 09:22:06", "user": 264400, "closed_at": "2018-01-12 00:02:43", "id": 287937290, "title": "Instrument model schema load", "url": "https://api.github.com/repos/rails/rails/issues/31681", "created_at": "2018-01-11 21:54:41", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357073660", "text": "r? @rafaelfranca\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-11 21:54:53", "user": 7468109, "id": 357073660}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357101671", "text": "Thank you for the pull request. If you don't want Active Record to connect to your database when reading the column information I suggest you to use the schema cache feature http://iempire.ru/2016/12/13/schema-cache/.\r\n\r\nIf the use case if to being defensive about programming errors, sorry but I prefer to not complicate the framework to allow this kind of use cases.\r\n\r\nIn Rails we have features like what you implement like `has_security_token` and `has_secure_password`. They both assume you have a column, if you don't have you will get an error in your test when using the feature. We don't believe an error on the application boot is better and we don't support defensive programming in the framework.", "created_at": "2018-01-12 00:02:43", "user": 47848, "id": 357101671}, {"reactions": {"+1": [264400]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357113030", "text": "We do also have code that needs to run after the columns are known: https://github.com/rails/rails/blob/6783bcab7ab11f2ced4b711d3518422e35e3dc01/activerecord/lib/active_record/attribute_decorators.rb#L50-L56\r\n\r\nInstrumentation is not the right tool for this (it's for.. instrumentation); wrapping the method as above is a fine approach, but maybe we should consider documenting `load_schema!` to allow it. There's some danger from the fact it's called while holding a lock, but not a lot.", "created_at": "2018-01-12 01:08:10", "user": 1034, "id": 357113030}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357185955", "text": "@matthewd, thank you very much for advising `load_schema!`. That is exactly what I'm looked for. I even have it seen yesterday but didn't catch that it can be used for my purpose. So I will create PR for documenting it shortly.\r\n\r\n@rafaelfranca, thanks for the clarification. Schema cache may help in case of my application, but it is not so good for gem creators to force all their users to use it. Also, some gems, such as [awesome_nested_set](https://github.com/collectiveidea/awesome_nested_set) allow the user to have some additional functionality enabled with some additional (not strictly required) columns.", "created_at": "2018-01-12 09:22:05", "user": 264400, "id": 357185955}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [6604216, 127960]}, "text": "### Steps to reproduce\r\nAfter upgrading from Rails 5.0.6 to Rails 5.1.4 I am no longer able to render locals to a layout.  Rendering to a template still works.\r\n\r\n*controllers/users_controller.rb*\r\n```\r\nclass UsersController < ApplicationController\r\n  layout 'application'\r\n\r\n  def index\r\n    render locals: { user_name: 'John' }\r\n  end\r\nend\r\n```\r\n\r\n*views/layouts/application.html.erb*\r\n```\r\n...\r\n<%= user_name %>\r\n...\r\n```\r\n\r\n*views/users/index.html.erb*\r\n```\r\n...\r\n<%= user_name %>\r\n...\r\n```\r\n\r\n### Expected behavior\r\nExpected behavior is user_name appears in both the layout and the index template.\r\n\r\n### Actual behavior\r\n```\r\nActionView::Template::Error: undefined local variable or method 'user_name'\r\n```\r\nis raised by layout.\r\n\r\n### System configuration\r\n**Rails version**:\r\n5.1.4\r\n\r\n**Ruby version**:\r\n2.4.2\r\n", "labels": [], "number": 31680, "updated_at": "2018-02-06 16:19:08", "user": 13992890, "closed_at": "None", "id": 287923807, "title": "Layout can no longer access local variables", "url": "https://api.github.com/repos/rails/rails/issues/31680", "created_at": "2018-01-11 21:05:03", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357405313", "text": "@terencedignon I can confirm that this doesn't work in 5.1.4, but I got the same error when I tried it in 5.0.6, and 4.2.10. Are you sure this was ever possible?", "created_at": "2018-01-13 03:06:49", "user": 13696143, "id": 357405313}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357471925", "text": "@composerinteralia Thanks for the clarifying question.\r\n\r\nYou have to declare the layout in the controller.  This works for 4.2.10 and 5.0.6 and fails for 5.1.4. \r\n\r\nI'll update the steps to reproduce!\r\n```\r\nclass UsersController < ApplicationController\r\n  layout 'application'\r\n\r\n  def index\r\n    render locals: { user_name: 'John' }\r\n  end\r\nend\r\n```", "created_at": "2018-01-13 22:23:29", "user": 13992890, "id": 357471925}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357474971", "text": "Best if you can reproduce using this template: https://github.com/rails/rails/blob/master/guides/bug_report_templates/action_controller_gem.rb", "created_at": "2018-01-13 23:12:47", "user": 13696143, "id": 357474971}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363235624", "text": "I am having the same problem, see my stackoverflow [question](https://stackoverflow.com/questions/48619205/locals-not-working-for-controller-rendering-in-rails-5-1).  It worked in rails 5.0.6 but not rails 5.1.4.", "created_at": "2018-02-05 21:59:42", "user": 1390233, "id": 363235624}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363264843", "text": "I was able to recreate this as well. I can look into it. In the meantime I think you can use `local_assigns[:user_name]` as a workaround.", "created_at": "2018-02-06 00:10:24", "user": 13696143, "id": 363264843}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363287687", "text": "Looks like the new behavior was introduced in https://github.com/rails/rails/commit/d6bac046922fcee05366d26d75349dde70d25f6b.", "created_at": "2018-02-06 02:14:14", "user": 13696143, "id": 363287687}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363303011", "text": "Your workaround works, thank you.", "created_at": "2018-02-06 03:52:59", "user": 1390233, "id": 363303011}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/363309668", "text": "Thanks @composerinteralia, local_assigns works great.  Appreciate you finding the relevant merge as well. ", "created_at": "2018-02-06 04:46:11", "user": 13992890, "id": 363309668}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "", "labels": [], "number": 31679, "updated_at": "2018-01-12 13:42:25", "user": 1026223, "closed_at": "2018-01-12 13:41:10", "id": 287900528, "title": "Fix locale in pluralize", "url": "https://api.github.com/repos/rails/rails/issues/31679", "created_at": "2018-01-11 19:40:41", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357038544", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @eileencodes (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-11 19:40:45", "user": 7468109, "id": 357038544}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357039240", "text": "Hey @maxime-carbonneau thanks for the PR. Do you have more information about what you're fixing? If the code is throwing an error can you tell me what the error is? I think this also needs a test so prevent regressions. ", "created_at": "2018-01-11 19:43:14", "user": 1080678, "id": 357039240}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357040593", "text": "The method ActionView::Helpers::TextHelper#pluralize was misusing String#pluralize. It send locale to the first parameter will it should be send as the second parameter.", "created_at": "2018-01-11 19:47:42", "user": 1026223, "id": 357040593}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357241049", "text": "Nerver mind, I misunderstand how I18n is bind with this method.\r\nSorry. I'm still learning.", "created_at": "2018-01-12 13:41:10", "user": 1026223, "id": 357241049}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357241346", "text": "No worries @maxime-carbonneau!", "created_at": "2018-01-12 13:42:25", "user": 1080678, "id": 357241346}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nMove to version 1.0.0 of the `pg` gem.\r\n\r\n### Expected behavior\r\n\r\nApp should work normally\r\n\r\n### Actual behavior\r\n\r\nThere's an error on startup with the following stacktrace\r\n```\r\n23:23:41 web.1  | /Users/sudhirjonathan/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/connection_specification.rb:188:in `rescue in spec': Specified 'postgresql' for database adapter, but the gem is not loaded. Add `gem 'pg'` to your Gemfile (and ensure its version is at the minimum required by ActiveRecord). (Gem::LoadError)\r\n23:23:41 web.1  | \tfrom /Users/sudhirjonathan/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/connection_specification.rb:185:in `spec'\r\n23:23:41 web.1  | \tfrom /Users/sudhirjonathan/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/connection_pool.rb:880:in `establish_connection'\r\n23:23:41 web.1  | \tfrom /Users/sudhirjonathan/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/activerecord-5.1.4/lib/active_record/connection_handling.rb:58:in `establish_connection'\r\n23:23:41 web.1  | \tfrom /Users/sudhirjonathan/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/activerecord-5.1.4/lib/active_record/railtie.rb:124:in `block (2 levels) in <class:Railtie>'\r\n23:23:41 web.1  | \tfrom /Users/sudhirjonathan/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:69:in `instance_eval'\r\n23:23:41 web.1  | \tfrom /Users/sudhirjonathan/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:69:in `block in execute_hook'\r\n23:23:41 web.1  | \tfrom /Users/sudhirjonathan/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:60:in `with_execution_control'\r\n23:23:41 web.1  | \tfrom /Users/sudhirjonathan/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:65:in `execute_hook'\r\n23:23:41 web.1  | \tfrom /Users/sudhirjonathan/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:50:in `block in run_load_hooks'\r\n23:23:41 web.1  | \tfrom /Users/sudhirjonathan/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:49:in `each'\r\n23:23:41 web.1  | \tfrom /Users/sudhirjonathan/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:49:in `run_load_hooks'\r\n23:23:41 web.1  | \tfrom /Users/sudhirjonathan/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/activerecord-5.1.4/lib/active_record/base.rb:326:in `<module:ActiveRecord>'\r\n23:23:41 web.1  | \tfrom /Users/sudhirjonathan/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/activerecord-5.1.4/lib/active_record/base.rb:25:in `<top (required)>'\r\n23:23:41 web.1  | \tfrom /Users/sudhirjonathan/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n23:23:41 web.1  | \tfrom /Users/sudhirjonathan/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `block in require'\r\n23:23:41 web.1  | \tfrom /Users/sudhirjonathan/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:258:in `load_dependency'\r\n23:23:41 web.1  | \tfrom /Users/sudhirjonathan/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n23:23:41 web.1  | \tfrom config/puma.rb:45:in `block in _load_from'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.4.1\r\n", "labels": [], "number": 31678, "updated_at": "2018-01-11 19:33:55", "user": 21678, "closed_at": "2018-01-11 19:33:55", "id": 287871603, "title": "Errors with pg 1.0.0", "url": "https://api.github.com/repos/rails/rails/issues/31678", "created_at": "2018-01-11 17:59:05", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357013813", "text": "# Log\r\n\r\n```\r\n$ heroku run rails db:migrate             \r\n ▸    heroku-cli: update available from 6.12.17 to 6.15.13-3dce47c\r\nRunning rails db:migrate on ⬢ mcnallydev-quotes... up, run.8365 (Free)\r\nrails aborted!\r\nGem::LoadError: Specified 'postgresql' for database adapter, but the gem is not loaded. Add `gem 'pg'` to your Gemfile (and ensure its version is at the minimum required by ActiveRecord).\r\n/app/vendor/bundle/ruby/2.5.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/connection_specification.rb:188:in `rescue in spec'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/connection_specification.rb:185:in `spec'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/connection_pool.rb:880:in `establish_connection'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activerecord-5.1.4/lib/active_record/connection_handling.rb:58:in `establish_connection'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activerecord-5.1.4/lib/active_record/railtie.rb:124:in `block (2 levels) in <class:Railtie>'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:69:in `instance_eval'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:69:in `block in execute_hook'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:60:in `with_execution_control'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:65:in `execute_hook'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:50:in `block in run_load_hooks'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:49:in `each'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:49:in `run_load_hooks'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activerecord-5.1.4/lib/active_record/base.rb:326:in `<module:ActiveRecord>'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activerecord-5.1.4/lib/active_record/base.rb:25:in `<top (required)>'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `block in require'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:258:in `load_dependency'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n/app/app/models/user.rb:36:in `<top (required)>'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `block in require'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:258:in `load_dependency'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:379:in `block in require_or_load'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:36:in `block in load_interlock'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies/interlock.rb:12:in `block in loading'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/concurrency/share_lock.rb:149:in `exclusive'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies/interlock.rb:11:in `loading'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:36:in `load_interlock'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:357:in `require_or_load'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:510:in `load_missing_constant'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:202:in `const_missing'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/inflector/methods.rb:269:in `const_get'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/inflector/methods.rb:269:in `block in constantize'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/inflector/methods.rb:267:in `each'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/inflector/methods.rb:267:in `inject'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/inflector/methods.rb:267:in `constantize'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:582:in `get'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:613:in `constantize'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise.rb:315:in `get'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise/mapping.rb:83:in `to'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise/mapping.rb:78:in `modules'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise/mapping.rb:95:in `routes'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise/mapping.rb:162:in `default_used_route'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise/mapping.rb:72:in `initialize'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise.rb:345:in `new'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise.rb:345:in `add_mapping'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise/rails/routes.rb:243:in `block in devise_for'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise/rails/routes.rb:242:in `each'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise/rails/routes.rb:242:in `devise_for'\r\n/app/config/routes.rb:17:in `block in <top (required)>'\r\n/app/vendor/bundle/ruby/2.5.0/gems/actionpack-5.1.4/lib/action_dispatch/routing/route_set.rb:426:in `instance_exec'\r\n/app/vendor/bundle/ruby/2.5.0/gems/actionpack-5.1.4/lib/action_dispatch/routing/route_set.rb:426:in `eval_block'\r\n/app/vendor/bundle/ruby/2.5.0/gems/actionpack-5.1.4/lib/action_dispatch/routing/route_set.rb:408:in `draw'\r\n/app/config/routes.rb:1:in `<top (required)>'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:286:in `load'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:286:in `block in load'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:258:in `load_dependency'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:286:in `load'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application/routes_reloader.rb:55:in `block in load_paths'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application/routes_reloader.rb:55:in `each'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application/routes_reloader.rb:55:in `load_paths'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application/routes_reloader.rb:18:in `reload!'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application/routes_reloader.rb:41:in `block in updater'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/file_update_checker.rb:81:in `execute'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application/routes_reloader.rb:42:in `updater'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application/routes_reloader.rb:31:in `execute_if_updated'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application/finisher.rb:128:in `block in <module:Finisher>'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/initializable.rb:30:in `instance_exec'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/initializable.rb:30:in `run'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/initializable.rb:59:in `block in run_initializers'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/initializable.rb:58:in `run_initializers'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application.rb:353:in `initialize!'\r\n/app/config/environment.rb:5:in `<top (required)>'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `block in require'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:258:in `load_dependency'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application.rb:329:in `require_environment!'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application.rb:445:in `block in run_tasks_blocks'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/commands/rake/rake_command.rb:21:in `block in perform'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/commands/rake/rake_command.rb:18:in `perform'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/command.rb:46:in `invoke'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/commands.rb:16:in `<top (required)>'\r\n/app/bin/rails:8:in `require'\r\n/app/bin/rails:8:in `<main>'\r\n\r\nCaused by:\r\nGem::LoadError: can't activate pg (~> 0.18), already activated pg-1.0.0. Make sure all dependencies are added to Gemfile.\r\n/app/vendor/bundle/ruby/2.5.0/gems/bundler-1.15.2/lib/bundler/rubygems_integration.rb:377:in `block (2 levels) in replace_gem'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/postgresql_adapter.rb:2:in `<top (required)>'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `block in require'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:258:in `load_dependency'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/connection_specification.rb:186:in `spec'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activerecord-5.1.4/lib/active_record/connection_adapters/abstract/connection_pool.rb:880:in `establish_connection'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activerecord-5.1.4/lib/active_record/connection_handling.rb:58:in `establish_connection'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activerecord-5.1.4/lib/active_record/railtie.rb:124:in `block (2 levels) in <class:Railtie>'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:69:in `instance_eval'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:69:in `block in execute_hook'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:60:in `with_execution_control'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:65:in `execute_hook'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:50:in `block in run_load_hooks'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:49:in `each'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/lazy_load_hooks.rb:49:in `run_load_hooks'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activerecord-5.1.4/lib/active_record/base.rb:326:in `<module:ActiveRecord>'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activerecord-5.1.4/lib/active_record/base.rb:25:in `<top (required)>'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `block in require'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:258:in `load_dependency'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n/app/app/models/user.rb:36:in `<top (required)>'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `block in require'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:258:in `load_dependency'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:379:in `block in require_or_load'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:36:in `block in load_interlock'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies/interlock.rb:12:in `block in loading'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/concurrency/share_lock.rb:149:in `exclusive'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies/interlock.rb:11:in `loading'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:36:in `load_interlock'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:357:in `require_or_load'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:510:in `load_missing_constant'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:202:in `const_missing'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/inflector/methods.rb:269:in `const_get'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/inflector/methods.rb:269:in `block in constantize'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/inflector/methods.rb:267:in `each'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/inflector/methods.rb:267:in `inject'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/inflector/methods.rb:267:in `constantize'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:582:in `get'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:613:in `constantize'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise.rb:315:in `get'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise/mapping.rb:83:in `to'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise/mapping.rb:78:in `modules'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise/mapping.rb:95:in `routes'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise/mapping.rb:162:in `default_used_route'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise/mapping.rb:72:in `initialize'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise.rb:345:in `new'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise.rb:345:in `add_mapping'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise/rails/routes.rb:243:in `block in devise_for'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise/rails/routes.rb:242:in `each'\r\n/app/vendor/bundle/ruby/2.5.0/gems/devise-4.4.0/lib/devise/rails/routes.rb:242:in `devise_for'\r\n/app/config/routes.rb:17:in `block in <top (required)>'\r\n/app/vendor/bundle/ruby/2.5.0/gems/actionpack-5.1.4/lib/action_dispatch/routing/route_set.rb:426:in `instance_exec'\r\n/app/vendor/bundle/ruby/2.5.0/gems/actionpack-5.1.4/lib/action_dispatch/routing/route_set.rb:426:in `eval_block'\r\n/app/vendor/bundle/ruby/2.5.0/gems/actionpack-5.1.4/lib/action_dispatch/routing/route_set.rb:408:in `draw'\r\n/app/config/routes.rb:1:in `<top (required)>'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:286:in `load'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:286:in `block in load'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:258:in `load_dependency'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:286:in `load'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application/routes_reloader.rb:55:in `block in load_paths'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application/routes_reloader.rb:55:in `each'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application/routes_reloader.rb:55:in `load_paths'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application/routes_reloader.rb:18:in `reload!'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application/routes_reloader.rb:41:in `block in updater'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/file_update_checker.rb:81:in `execute'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application/routes_reloader.rb:42:in `updater'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application/routes_reloader.rb:31:in `execute_if_updated'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application/finisher.rb:128:in `block in <module:Finisher>'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/initializable.rb:30:in `instance_exec'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/initializable.rb:30:in `run'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/initializable.rb:59:in `block in run_initializers'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/initializable.rb:58:in `run_initializers'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application.rb:353:in `initialize!'\r\n/app/config/environment.rb:5:in `<top (required)>'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `block in require'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:258:in `load_dependency'\r\n/app/vendor/bundle/ruby/2.5.0/gems/activesupport-5.1.4/lib/active_support/dependencies.rb:292:in `require'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application.rb:329:in `require_environment!'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/application.rb:445:in `block in run_tasks_blocks'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/commands/rake/rake_command.rb:21:in `block in perform'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/commands/rake/rake_command.rb:18:in `perform'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/command.rb:46:in `invoke'\r\n/app/vendor/bundle/ruby/2.5.0/gems/railties-5.1.4/lib/rails/commands.rb:16:in `<top (required)>'\r\n/app/bin/rails:8:in `require'\r\n/app/bin/rails:8:in `<main>'\r\n```\r\n\r\n# System configuration\r\n\r\n**Rails version**: 5.1.4\r\n**Ruby version**: 2.5.0\r\n\r\n# Gems\r\n\r\n```\r\nFetching gem metadata from https://rubygems.org/..........\r\nFetching gem metadata from https://rubygems.org/.\r\nResolving dependencies......\r\nUsing rake 12.3.0\r\nUsing concurrent-ruby 1.0.5\r\nUsing i18n 0.8.6\r\nUsing minitest 5.11.1\r\nUsing thread_safe 0.3.6\r\nUsing tzinfo 1.2.4\r\nUsing activesupport 5.1.4\r\nUsing builder 3.2.3\r\nUsing erubi 1.7.0\r\nUsing mini_portile2 2.3.0\r\nUsing nokogiri 1.8.1\r\nUsing rails-dom-testing 2.0.3\r\nUsing crass 1.0.3\r\nUsing loofah 2.1.1\r\nUsing rails-html-sanitizer 1.0.3\r\nUsing actionview 5.1.4\r\nUsing rack 2.0.3\r\nUsing rack-test 0.8.2\r\nUsing actionpack 5.1.4\r\nUsing nio4r 2.2.0\r\nUsing websocket-extensions 0.1.3\r\nUsing websocket-driver 0.6.5\r\nUsing actioncable 5.1.4\r\nUsing globalid 0.4.1\r\nUsing activejob 5.1.4\r\nUsing mini_mime 1.0.0\r\nUsing mail 2.7.0\r\nUsing actionmailer 5.1.4\r\nUsing actionpack-action_caching 1.2.0\r\nUsing activemodel 5.1.4\r\nUsing arel 8.0.0\r\nUsing activerecord 5.1.4\r\nUsing annotate 2.7.2\r\nUsing bcrypt 3.1.11\r\nUsing debug_inspector 0.0.3\r\nUsing binding_of_caller 0.8.0\r\nUsing bundler 1.16.1\r\nUsing byebug 9.1.0\r\nUsing coffee-script-source 1.12.2\r\nUsing execjs 2.7.0\r\nUsing coffee-script 2.4.1\r\nUsing method_source 0.9.0\r\nUsing thor 0.20.0\r\nUsing railties 5.1.4\r\nUsing coffee-rails 4.2.2\r\nUsing dalli 2.7.6\r\nUsing orm_adapter 0.5.0\r\nUsing responders 2.4.0\r\nUsing warden 1.2.7\r\nUsing devise 4.4.0\r\nUsing devise_invitable 1.7.2\r\nUsing ffi 1.9.18\r\nUsing font-awesome-rails 4.7.0.3\r\nUsing multi_json 1.13.1\r\nUsing jbuilder 2.7.0\r\nUsing jquery-rails 4.3.1\r\nUsing turbolinks-source 5.1.0\r\nUsing turbolinks 5.1.0\r\nUsing jquery-turbolinks 2.1.0\r\nUsing json 1.8.6\r\nUsing rb-fsevent 0.10.2\r\nUsing rb-inotify 0.9.10\r\nUsing sass-listen 4.0.0\r\nUsing sass 3.5.5\r\nUsing materialize-sass 0.100.2\r\nUsing memcachier 0.0.2\r\nUsing money 6.9.0\r\nUsing monetize 1.7.0\r\nUsing money-rails 1.9.0\r\nUsing nprogress-rails 0.2.0.2\r\nUsing pg 1.0.0\r\nUsing puma 3.11.0\r\nUsing sprockets 3.7.1\r\nUsing sprockets-rails 3.2.1\r\nUsing rails 5.1.4\r\nUsing rails_serve_static_assets 0.0.5\r\nUsing rails_stdout_logging 0.0.5\r\nUsing rails_12factor 0.0.3\r\nUsing rdoc 4.3.0\r\nUsing redcarpet 3.4.0\r\nUsing tilt 2.0.8\r\nUsing sass-rails 5.0.7\r\nUsing sdoc 0.4.2\r\nUsing spring 2.0.2\r\nUsing uglifier 4.1.3\r\nUsing web-console 2.3.0\r\nUsing will_paginate 3.0.12\r\nUsing will_paginate-materialize 0.1.2\r\n```", "created_at": "2018-01-11 18:13:29", "user": 181533, "id": 357013813}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357023947", "text": "It is not supposed yet. Refer #31671", "created_at": "2018-01-11 18:48:59", "user": 73684, "id": 357023947}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "", "labels": [], "number": 31677, "updated_at": "2018-01-11 19:35:02", "user": 360276, "closed_at": "2018-01-11 19:35:01", "id": 287870240, "title": "Getting Started Guide: Ruby 2.3.1p112 -> 2.5.0p0 [ci skip]", "url": "https://api.github.com/repos/rails/rails/issues/31677", "created_at": "2018-01-11 17:54:12", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357008191", "text": "r? @rafaelfranca\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-11 17:54:14", "user": 7468109, "id": 357008191}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357036958", "text": "Thank you for the pull request but we don't need to change this version on the guide.", "created_at": "2018-01-11 19:35:01", "user": 47848, "id": 357036958}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Not 100% sure if this is a bug or a missing feature of ActiveStorage, or I purely just don't know how to do it.\r\n\r\n### Steps to reproduce\r\n\r\nIf I have a method like this in my controller:\r\n~~~\r\ndef show_file\r\n  send_data @user.avatar.blob, filename: @user.avatar.blob.filename, type: @user.avatar.blob.content_type, disposition: 'inline'\r\nend\r\n~~~\r\nIt seems we can't access the blob of the file itself because `blob` is a method to the ActiveStorage blob object. The source: https://github.com/rails/rails/blob/5e8c79a6fafb8d7a84c272b3c9a0474a0d01b471/activestorage/lib/active_storage/attached/one.rb#L67\r\n\r\nTrying to change it so that you send the file instead also does not work:\r\n~~~\r\ndef show_file\r\n  send_file helpers.url_for(@user.avatar), filename: @user.avatar.blob.filename, type: @user.avatar.blob.content_type, disposition: 'inline'\r\nend\r\n~~~\r\n\r\n### Expected behavior\r\nThe file should be accessible in the controller as either data or path.\r\n\r\n### Actual behavior\r\nUsing `send_data` and passing the `blob` method causes empty render for the file.\r\nUsing `send_file` throws an error that the file can't be found even though you can access the file in the browser directly from the value of `url_for(@user.avatar)`.\r\n\r\n### System configuration\r\n**Rails version**: 5.2\r\n\r\n**Ruby version**: 2.4.1\r\n\r\nIs it possible to return an ActiveStorage file using `send_data` or `send_file`?\r\n", "labels": [], "number": 31676, "updated_at": "2018-01-11 17:50:05", "user": 801252, "closed_at": "2018-01-11 17:50:05", "id": 287864399, "title": "Accessing the ActiveStorage file in the controller", "url": "https://api.github.com/repos/rails/rails/issues/31676", "created_at": "2018-01-11 17:34:20", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357007028", "text": "> Is it possible to return an ActiveStorage file using `send_data` or `send_file`?\r\n\r\nIt is, but I’d advise against it. Prefer to redirect to a signed URL for the blob instead:\r\n\r\n```ruby\r\nredirect_to @user.avatar.service_url\r\n```\r\n\r\nIf you must serve the file yourself, download it first:\r\n\r\n```ruby\r\nsend_data @user.avatar.download, filename: @user.avatar.filename, content_type: @user.avatar.content_type\r\n```\r\n\r\nAvoid doing this without a good reason, as it entails reading the entire blob into memory.", "created_at": "2018-01-11 17:50:04", "user": 94129, "id": 357007028}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"+1": [1469823, 6278453]}, "text": "### Summary\r\n\r\nIn the guides some links lead to 404 pages, so I fixed some on them.\r\n\r\nBased on @mdamien broken links detector results: https://gist.github.com/mdamien/25b4f60c24054a40a75b78b199fb0698\r\n", "labels": [], "number": 31675, "updated_at": "2018-01-12 20:05:43", "user": 129149, "closed_at": "2018-01-12 20:05:43", "id": 287814423, "title": "Fix some broken links in guides", "url": "https://api.github.com/repos/rails/rails/issues/31675", "created_at": "2018-01-11 14:56:52", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356958437", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @pixeltrix (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-11 14:56:55", "user": 7468109, "id": 356958437}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nI want to upload a file once, on a model, and also create a record on the active_storage_attachments table linking same file to a diferent model.\r\n\r\nMy first attempt has been the following one:\r\n\r\n```ruby\r\nclass Tax < ApplicationRecord\r\n  has_one_attached :document\r\n  belongs_to :operation\r\nend\r\n\r\nclass Operation < ApplicationRecord\r\n  has_many_attached :documents\r\n  has_many :taxes\r\nend\r\n```\r\n\r\n```ruby\r\ndef create\r\n  @tax = Tax.new(tax_params)\r\n  if @tax.save\r\n    @tax.document.attach(document_param)\r\n    @tax.operation.documents.attach(@tax.document)\r\n    redirect_to home_path\r\n  else\r\n    render :new\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe file should be reflected as attached also for the relation (Operation). A record on active_storage_attachment would do the trick maybe.\r\n\r\n### Actual behavior\r\n\r\nAn ActiveRecord::RecordInvalid error is raised because the blob must exist.\r\n\r\nI could simply do @tax.operation.documents.attach(document_param), but I'm thinking on other contexts where the blob won't be available. ActiveRecord callbacks, for example.\r\n\r\n\r\n### System configuration\r\n**Rails version**: 5.2.0.beta2\r\n\r\n**Ruby version**: 2.4.1p111\r\n", "labels": [], "number": 31674, "updated_at": "2018-01-11 13:59:29", "user": 10326293, "closed_at": "2018-01-11 13:59:29", "id": 287752716, "title": "How to attach same file to multiple models with ActiveStorage", "url": "https://api.github.com/repos/rails/rails/issues/31674", "created_at": "2018-01-11 11:26:53", "comments": [{"reactions": {"+1": [10326293]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356920099", "text": "You can pass a blob to `#attach`:\r\n\r\n```ruby\r\n@tax.operation.documents.attach(@tax.document.blob)\r\n```", "created_at": "2018-01-11 12:28:15", "user": 94129, "id": 356920099}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356941598", "text": "Hi George,\r\n\r\nMany thanks, this solves my problem. I don't know if it should be necessary to exemplify the relation (.blob) in the docs, right in the place where it says: `One file, one blob. You can associate the same blob with multiple application models as well.`. Or maybe it is clear this way, I just escaped the sentence.\r\n\r\nAnyway, closing the issue.\r\n\r\nThanks", "created_at": "2018-01-11 13:59:29", "user": 10326293, "id": 356941598}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"+1": [1169363, 1553760, 414418, 96322, 708845, 1628928, 2447968, 13574856, 44363, 339663, 102580, 21615, 16673179, 1113178, 586656, 150670, 18754820, 52619, 8247575, 3937267, 2184406, 12001541, 5910466, 22461547, 182694, 691159, 36264190, 17400143, 7545589, 139536, 5841177, 1910135, 5381361, 640653, 6877957, 468744, 505971]}, "text": "### Steps to reproduce\r\n1. Ensure `gem \"pg\"` is in `Gemfile`\r\n2. `bundle update`\r\n3. `rails s`\r\n\r\n### Expected behavior\r\nRails server should run\r\n\r\n### Actual behavior\r\n> /.../gems/activerecord-5.1.4/lib/active_record/connection_adapters/connection_specification.rb:188:in `rescue in spec': Specified 'postgresql' for database adapter, but the gem is not loaded. Add `gem 'pg'` to your Gemfile (and ensure its version is at the minimum required by ActiveRecord). (Gem::LoadError)\r\n\r\n### System configuration\r\n**Rails version**:  5.1.4\r\n**Ruby version**: 2.4.3\r\n\r\nThe issue appears to be caused by this line: https://github.com/rails/rails/blob/15ef55efb591e5379486ccf53dd3e13f416564f6/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb#L4", "labels": [], "number": 31673, "updated_at": "2018-03-13 14:53:24", "user": 193831, "closed_at": "2018-01-11 15:00:42", "id": 287712064, "title": "Rails does not work with pg 1.0.0", "url": "https://api.github.com/repos/rails/rails/issues/31673", "created_at": "2018-01-11 09:12:03", "comments": [{"reactions": {"+1": [1541836, 18754820, 22461547]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356902825", "text": "https://github.com/rails/rails/issues/31669", "created_at": "2018-01-11 11:08:27", "user": 194511, "id": 356902825}, {"reactions": {"+1": [194511, 22461547]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356959676", "text": "Thanks @rgarner ", "created_at": "2018-01-11 15:00:53", "user": 193831, "id": 356959676}, {"reactions": {"+1": [5896030]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365107397", "text": "I'm having major issues with this right now. Is there still no fix?", "created_at": "2018-02-13 00:13:27", "user": 31194182, "id": 365107397}, {"reactions": {"hooray": [214322, 194511, 100805, 1709861, 139536, 22420, 14222, 7525989, 11631232, 9802420, 9518407, 20784990], "heart": [214322, 194511, 100805, 1709861, 139536, 22420, 11631232], "+1": [214322, 194511, 100805, 1709861, 139536, 22420, 11631232, 1104186, 20784990, 734589, 671670]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365126536", "text": "It is fixed in the 5.1.5.rc1 release", "created_at": "2018-02-13 01:59:14", "user": 47848, "id": 365126536}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365138063", "text": "thank you!", "created_at": "2018-02-13 03:13:33", "user": 214322, "id": 365138063}, {"reactions": {"+1": [8153, 9012727, 847150]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/371851592", "text": "I solved it by putting this in the Gemfile:\r\n\r\n`gem 'pg', '~> 0.21'`", "created_at": "2018-03-09 15:50:14", "user": 845175, "id": 371851592}, {"reactions": {"+1": [671670]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/372099518", "text": "@nadavb pg version 1.0.0 should work fine with rails 5.1.5 and newer.", "created_at": "2018-03-11 08:53:01", "user": 193831, "id": 372099518}, {"reactions": {"laugh": [199]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/372693380", "text": "are you king?\r\nthnx bro!", "created_at": "2018-03-13 14:53:23", "user": 9012727, "id": 372693380}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\nI'm trying to create a logout link for the devise gem. It works when link_to is not a block but stops working once it is a block\r\n\r\nWorking code:\r\n```<%= link_to('Logout', destroy_user_session_path, method: :delete) %>```\r\n\r\nWorking html:\r\n```<a rel=\"nofollow\" data-method=\"delete\" href=\"/users/sign_out\">Logout</a>```\r\n\r\nFaulty code: \r\n```\r\n<%= link_to destroy_user_session_path, method: :delete do %>\r\n  <div class=\"button-class\">\r\n    <span class=\"icon-Logout---white icon\"></span>\r\n    SIGN OUT\r\n  </div>\r\n<% end %>\r\n```\r\n\r\nFaulty html:\r\n```\r\n<a rel=\"nofollow\" data-method=\"delete\" href=\"/users/sign_out\">\r\n  <div class=\"button-class\">\r\n    <span class=\"icon-Logout---white icon\"></span>\r\n    SIGN OUT\r\n  </div>\r\n</a>\r\n```\r\n\r\n### Expected behavior\r\nThis link should send a DELETE request to /user/sign_out \r\n\r\n### Actual behavior\r\nThis link sends a GET request to /user/sign_out, returning with the error 'No route matches [GET] \"/users/sign_out\"'\r\n\r\n### System configuration\r\n**Rails version**:\r\n4.2.9\r\n\r\n**Ruby version**:\r\n2.4.1", "labels": [], "number": 31672, "updated_at": "2018-01-12 23:11:01", "user": 6128569, "closed_at": "2018-01-12 23:11:01", "id": 287600277, "title": "link_to block does not forward :method => :delete", "url": "https://api.github.com/repos/rails/rails/issues/31672", "created_at": "2018-01-10 22:31:11", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356760970", "text": " Can you please provide a sample application that reproduces the error?", "created_at": "2018-01-10 22:37:18", "user": 47848, "id": 356760970}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357095912", "text": "`data-method=\"delete\"` is present in the \"faulty html\"\r\nWas that a mistake?", "created_at": "2018-01-11 23:31:06", "user": 50668, "id": 357095912}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357379712", "text": "It wasn't a mistake. However, I got around to fix this. \r\n\r\nTurns out I had an issue where my <a> link was located at a different location than the contents of the <a> link. This was due to styling related changes. \r\n\r\nI'm not yet sure why this led to it converting from 'delete' to 'get' but correcting the style in my code helped fix this", "created_at": "2018-01-12 23:11:01", "user": 6128569, "id": 357379712}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"+1": [1391014, 885003, 1860816, 1680080, 8197963, 192247, 4867, 808276, 14028, 12213, 16547662, 1109076, 7486451, 6479522, 13746666, 7292, 747215, 365602, 284987, 7684116, 18687492]}, "text": "### Summary\r\n\r\npg-1.0.0 is just released and most Gemfiles don't restrict it's version. But the version is checked when connecting to the database, which leads to the following error, when after `bundle update`:\r\n```\r\nGem::LoadError: can't activate pg (~> 0.18), already activated pg-1.0.0\r\n```\r\nSee also this pg issue: https://bitbucket.org/ged/ruby-pg/issues/270/pg-100-x64-mingw32-rails-server-not-start\r\n\r\nPreparation for pg-1.0 was done in commit f28a331, but the pg version constraint was not yet relaxed.\r\n\r\nThe second commit switches the queue_classic repository to an open pull request, in order to enable testing on pg-1.0.0. I'm not sure if this is desired, so take it a proposal only!\r\n\r\n### Rails Version Information\r\n\r\nThe patch is now backported to rails-5.0 and rails-5.1, so that pg-1.0.0 will work together with rails-5.0.7+ and 5.1.5+. Until these versions are released please add a gem version constraint to the Gemfile like:\r\n```\r\ngem \"pg\", \"~> 0.18\"\r\n```\r\n\r\n__Edit:__ Update information about rails-5.0 and 5.1.", "labels": [], "number": 31671, "updated_at": "2018-02-02 17:00:18", "user": 176234, "closed_at": "2018-01-11 19:40:44", "id": 287563753, "title": "PostgreSQL: Allow pg-1.0 gem to be used with ActiveRecord", "url": "https://api.github.com/repos/rails/rails/issues/31671", "created_at": "2018-01-10 20:17:26", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356723663", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @sgrif (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-10 20:17:29", "user": 7468109, "id": 356723663}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356727703", "text": "Thanks! I don't like having to point to a third-party fork of a repository because if the person removes it the Rails build will start to fail. I'll fork in my account and apply that commit so we can control the fork we are pointing to.", "created_at": "2018-01-10 20:33:05", "user": 47848, "id": 356727703}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356736739", "text": "I fixed two more gem references to pg, which caused the first CI run to fail.", "created_at": "2018-01-10 21:06:44", "user": 176234, "id": 356736739}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357553069", "text": "Since both Rails v5.0 and v5.1 already [support](https://github.com/rails/rails/pull/28522#issuecomment-288478606) pg v1, this PR should also be backported there.", "created_at": "2018-01-14 23:44:35", "user": 216339, "id": 357553069}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357605227", "text": "@glebm This PR is already backported to rails-5.0 and 5.1.", "created_at": "2018-01-15 07:48:09", "user": 176234, "id": 357605227}, {"reactions": {"+1": [216339, 2057, 43523, 34378, 657766]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358179663", "text": "Can we get a patch version bump to push this change out? As someone who generates new rails apps pretty often, this is pretty annoying at the moment.", "created_at": "2018-01-17 02:56:58", "user": 1680080, "id": 358179663}, {"reactions": {"+1": [1113178, 5965113]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362643131", "text": "> @larskanis This PR is already backported to rails-5.0 and 5.1.\r\n\r\nMaybe it should be added in the Changelog : https://github.com/rails/rails/blob/v5.1.5.rc1/activerecord/CHANGELOG.md\r\n", "created_at": "2018-02-02 17:00:18", "user": 3433835, "id": 362643131}], "assignees": [1529387, 1529387], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "```ruby\r\nuser = User.new(name: 'test')\r\nbegin\r\n  ActiveRecord::Base.transaction do\r\n    user.save!\r\n    new_user = user.dup\r\n    new_user.name = nil # invalid record\r\n    new_user.save!\r\n  end\r\nrescue\r\n  nil\r\nend\r\n```\r\nThis code works correctly when a `new_user` is valid record.\r\nWhen `new_user` validation fails, the transaction rolls back but `user.persisted?` returns true.\r\n\r\nI investigated this issue and concluded that after the cloning of the record, the status of the transaction is not cleared and, because of this, the code for restoring the status of the record after the rollback is not working correctly.\r\n\r\nI can propose a patch for resolve this issue:\r\n[fix_persisted_is_false_after_rollback.patch.gz](https://github.com/rails/rails/files/1620189/fix_persisted_is_false_after_rollback.patch.gz)\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nbegin\r\n  require 'bundler/inline'\r\nrescue LoadError => e\r\n  $stderr.puts 'Bundler version 1.10 or later is required. Please update your Bundler'\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem 'rails', github: 'rails/rails'\r\n  gem 'sqlite3'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :users, force: true do |t|\r\n    t.string :name\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  validates :name, presence: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_persisted_is_false_after_rollback\r\n    user = User.new(name: 'test')\r\n\r\n    begin\r\n      ActiveRecord::Base.transaction do\r\n        user.save!\r\n        new_user = user.dup\r\n        new_user.name = nil\r\n        new_user.save!\r\n      end\r\n    rescue\r\n      nil\r\n    end\r\n\r\n    assert !user.persisted?\r\n  end\r\nend\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 5.0.6\r\n\r\n**Ruby version**: 2.4.2\r\n", "labels": [], "number": 31670, "updated_at": "2018-01-25 03:43:59", "user": 1161212, "closed_at": "2018-01-25 03:43:59", "id": 287553328, "title": "ActiveRecord persisted? returns true after rollback when using duped record", "url": "https://api.github.com/repos/rails/rails/issues/31670", "created_at": "2018-01-10 19:40:07", "comments": [{"reactions": {"+1": [1161212]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359146924", "text": "@yoreek You may want to submit your fix as a pull request so that you can receive feedbacks.", "created_at": "2018-01-20 05:24:27", "user": 21238, "id": 359146924}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"heart": [3800237], "+1": [153459, 966935, 157270, 1741198, 19933275, 102580, 21615, 1113178, 150670, 12001541, 182694, 8123661, 4998456, 5277962]}, "text": "### Steps to reproduce\r\n\r\n* Start a new Rails project with ActiveRecord 5.1.4\r\n* Add `gem postgres, '1.0.0'` to the Gemfile\r\n* `bundle`\r\n* Start `bundle exec rails s`\r\n* Visit the root page\r\n\r\n### Expected behavior\r\nThe default public page should display\r\n\r\n### Actual behavior\r\n`Gem::LoadError can't activate pg (~> 0.18), already activated pg-1.0.0. Make sure all dependencies are added to Gemfile.`\r\n\r\nit appears that a squiggly [version check](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb#L4) is made in `postgresql_adapter.rb` that fails now `pg` has recently released `1.0.0`.\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n**Ruby version**: 2.4.1\r\n", "labels": [], "number": 31669, "updated_at": "2018-02-13 00:36:08", "user": 194511, "closed_at": "2018-01-10 18:28:20", "id": 287529251, "title": "AR 5.1.4 causes `Gem::LoadError` with pg 1.0.0 (wants '~> 0.18')", "url": "https://api.github.com/repos/rails/rails/issues/31669", "created_at": "2018-01-10 18:14:25", "comments": [{"reactions": {"+1": [116234]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356691001", "text": "I have opened an same issue on pg repository because I have a problem to start the server, but with different description if I try with Rails 5.1.4 and 5.2.0.beta2.\r\n[https://bitbucket.org/ged/ruby-pg/issues/270/pg-100-x64-mingw32-rails-server-not-start](https://bitbucket.org/ged/ruby-pg/issues/270/pg-100-x64-mingw32-rails-server-not-start)", "created_at": "2018-01-10 18:22:22", "user": 10075337, "id": 356691001}, {"reactions": {"+1": [116234, 194511, 708845, 391449, 13574856, 245443, 160919, 3891, 10674840, 32508244, 1512399, 6184, 478564, 150670, 52619, 12001541, 188498, 572372, 4998456, 640653]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356692719", "text": "Thank you for the issue. Rails still don't support pg 1.0.", "created_at": "2018-01-10 18:28:20", "user": 47848, "id": 356692719}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358631804", "text": "@rafaelfranca is there an ETA for getting support? Also I'm curious as to why the maintainers of the PG gem didn't test/coordinate their 1.0.0 release with Rails.", "created_at": "2018-01-18 12:26:44", "user": 27655, "id": 358631804}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358700377", "text": "Refer #31671 ", "created_at": "2018-01-18 16:26:26", "user": 73684, "id": 358700377}, {"reactions": {"+1": [1431996, 11085141, 5199826, 3024789, 69235, 67437, 1470863, 378162]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358711255", "text": "It is already supported in the stable branches, just not released yet", "created_at": "2018-01-18 17:00:04", "user": 47848, "id": 358711255}, {"reactions": {"+1": [12289711]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361448323", "text": "This seems to be a bug due to an [incorrect version spec](https://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb#L4). (I.e, it doesn't have to do with supporting pg 1.0.0 or not.)\r\n\r\nIf a bug fix version is due out sooner than the stable branches, could we accept a fix for this?", "created_at": "2018-01-30 01:41:09", "user": 150670, "id": 361448323}, {"reactions": {"hooray": [2476690, 16150, 478564, 275284], "+1": [1541836, 12289711, 2110497, 16236972, 596578, 2079110, 31194182, 101297, 478564, 4998456, 4186462, 1541474], "laugh": [1541836]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362609493", "text": "After updating to [Rails 5.1.5.rc1](http://weblog.rubyonrails.org/2018/2/1/Rails-5-1-5-rc1-has-been-released/), this problem seems to be resolved.\r\n\r\nIt seems `pg 1.0` support isn't mentioned in the [ActiveRecord 5.1.5.rc1 changelog](https://github.com/rails/rails/blob/v5.1.5.rc1/activerecord/CHANGELOG.md) though - should it be?\r\n\r\nThanks a lot!", "created_at": "2018-02-02 15:00:15", "user": 1068525, "id": 362609493}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365111043", "text": "It seems to be an issue with Ruby gems onWindows (there are different errors pulling up in linux). My friend's Mac works fine with 0.18.0..\r\n\r\nUpdated to 5.1.5.rc1 now and tried uninstall/reinstall 0.18.0 and 1.0.0 and a new error comes now: \r\n\r\nC:/Ruby25-x64/lib/ruby/2.5.0/rubygems/core_ext/kernel_require.rb:135:in `require': cannot load such file -- bundler/dep_proxy (LoadError)", "created_at": "2018-02-13 00:33:58", "user": 31194182, "id": 365111043}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n```ruby\r\n> ActiveSupport::TimeZone.country_zones('GB')\r\n=> [#<ActiveSupport::TimeZone:0x00007f8c20349d48 @name=\"Edinburgh\", @utc_offset=nil, @tzinfo=#<TZInfo::DataTimezone: Europe/London>>]\r\n```\r\n\r\n### Expected behavior\r\n\r\n```ruby\r\nActiveSupport::TimeZone.country_zones('GB').map(&:name) == ['London']\r\n```\r\n\r\nThe `ActiveSupport::TimeZone` returned for the UK (ISO 3166-1 Alpha2 code 'GB') is Edinburgh. I believe most UK nationals would expect this to return the 'London' timezone.\r\n\r\n### Actual behavior\r\n\r\n```ruby\r\nActiveSupport::TimeZone.country_zones('GB').map(&:name) == ['Edinburgh']\r\n```\r\n\r\nIt seems `load_country_zones`, which is called from `country_zones`, returns the first entry from `MAPPING` for the country code, via the tz identifier for 'GB' - 'Europe/London' (line 271):\r\n\r\nhttps://github.com/rails/rails/blob/e97221a32d02cb0691760fc1783da74e4c3a371a/activesupport/lib/active_support/values/time_zone.rb#L267-L276\r\n\r\nAnd in `MAPPING` Edinburgh is added before London:\r\n\r\nhttps://github.com/rails/rails/blob/e97221a32d02cb0691760fc1783da74e4c3a371a/activesupport/lib/active_support/values/time_zone.rb#L70-L72\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 5.2.0.beta2\r\n\r\n**Ruby version**:\r\nruby 2.4.3p205 (2017-12-14 revision 61247) [x86_64-darwin17]", "labels": [], "number": 31668, "updated_at": "2018-02-19 12:30:48", "user": 165826, "closed_at": "2018-02-19 12:30:48", "id": 287421196, "title": "ActiveSupport::TimeZone.country_zones('GB') returns Edinburgh instead of London", "url": "https://api.github.com/repos/rails/rails/issues/31668", "created_at": "2018-01-10 12:45:52", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356695478", "text": "cc @pixeltrix ", "created_at": "2018-01-10 18:37:50", "user": 47848, "id": 356695478}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357085701", "text": "There is also problem that http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html MAPPING constant doesn't include all the zone identifiers as TZInfo has. Example:\r\n\r\n``` ruby\r\n# Zone identifiers for Australia\r\nau_zone_identifiers = TZInfo::Country.get(\"AU\").zone_identifiers\r\nau_zone_identifiers.map {|i| ActiveSupport::TimeZone::MAPPING.key(i) }\r\n# => [nil, nil, \"Hobart\", nil, \"Canberra\", \"Sydney\", nil, \"Brisbane\", nil, \"Adelaide\", \"Darwin\", \"Perth\", nil]\r\n```", "created_at": "2018-01-11 22:42:32", "user": 1401799, "id": 357085701}, {"reactions": {"+1": [165826]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366445967", "text": "@MattFenelon I think the right thing to do here is return both Edinburgh and London.\r\n\r\n@alpracka for those without mappings we still return a timezone object but it has the tzid as the name. Don't really want to add mappings for every timezone.", "created_at": "2018-02-17 14:46:38", "user": 6321, "id": 366445967}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "- Remove AppGeneratorTest#test_active_storage_install\r\nThe test is added by 67db41aa7f17c2d34eb5a914ac7a6b2574930ff4,\r\n since #31534 this test doesn't test anything\r\n\r\n\r\n- Remove redundant assertions in SharedGeneratorTests\r\nThese assertions is added by 4a835aa3236eedb135ccf8b59ed3c03e040b8b01.\r\nFollows 67db41aa7f17c2d34eb5a914ac7a6b2574930ff4, #31534\r\n\r\nr? @y-yagi ", "labels": [], "number": 31667, "updated_at": "2018-01-10 11:40:20", "user": 6443532, "closed_at": "2018-01-10 11:38:56", "id": 287389987, "title": "Clean up railties tests", "url": "https://api.github.com/repos/rails/rails/issues/31667", "created_at": "2018-01-10 10:49:56", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356570045", "text": "Looks good to me. Please squash your commits into a single commit?", "created_at": "2018-01-10 11:02:33", "user": 987638, "id": 356570045}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356571626", "text": "Yes. I just squashed.", "created_at": "2018-01-10 11:09:20", "user": 6443532, "id": 356571626}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356577978", "text": "Thanks!", "created_at": "2018-01-10 11:39:05", "user": 987638, "id": 356577978}], "assignees": [987638, 987638], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Hi,\r\n\r\ni am using ruby-pg gem(0.18.4) for PostgreSQL connection. i am writing below line to run SQL queries in PostgreSQL.  `result = connection.exec(sql)`. \r\n\r\ni have a model called `Test`. it has serialized column like `serialize :meta`. i am storing the `result` into MySQL into serialized column `meta`\r\n\r\nWhen i query meta column using Active Record `Test.select('meta').where(:id=> 726345)`. it is throwing error `PG::Error Exception: result has been cleared`\r\n\r\ndata in MySQL row is : \r\n```\r\n---------------------------------------------------------------------\r\nID          Name                meta\r\n------------------------------------------------------------------------\r\n726345      test               - :status: :success\r\n                                 :result: !ruby/object:PG::Result {}\r\n-------------------------------------------------------------------------\r\n```\r\n\r\ni found out the problem with empty PG::Result object. i have a lot of rows in MYSQL like above. how can i query those records ?\r\n\r\n### System configuration\r\nRails version: 5.1\r\nRuby version:2.2.5\r\nMySQL version:5.6\r\n\r\n\r\nany help ??", "labels": [], "number": 31666, "updated_at": "2018-01-10 10:18:06", "user": 29749983, "closed_at": "2018-01-10 10:18:06", "id": 287355156, "title": "PG::Error : result has been cleared rails serilization", "url": "https://api.github.com/repos/rails/rails/issues/31666", "created_at": "2018-01-10 08:41:55", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356558458", "text": " Please use the mailing list or StackOverflow for questions/help, where a wider community will be able to help you. We reserve the issues tracker for issues only.", "created_at": "2018-01-10 10:18:06", "user": 1034, "id": 356558458}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "use Activesupport::Concern\r\n", "labels": [], "number": 31665, "updated_at": "2018-01-11 06:57:21", "user": 22001475, "closed_at": "None", "id": 287347944, "title": "use activesupport concern for file initializbale under railties", "url": "https://api.github.com/repos/rails/rails/issues/31665", "created_at": "2018-01-10 08:10:38", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356529978", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @schneems (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-10 08:10:41", "user": 7468109, "id": 356529978}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356843634", "text": "Any comment on why this change was made? :)", "created_at": "2018-01-11 06:57:21", "user": 148708, "id": 356843634}], "assignees": [59744, 59744], "state": "open", "is-pull-request": true}
{"reactions": {"+1": [2248622, 9421128, 69448]}, "text": "### Background\r\n\r\nWhile investigating some issues with a project we're working on, we came to the realization that the default HTTP status code for redirects generated by the `redirect` method in `routes.rb` is `301 Moved Permanently`:\r\n* https://github.com/rails/rails/blob/v5.1.4/actionpack/lib/action_dispatch/routing/redirection.rb#L187\r\n\r\nWhile this behavior [is documented](http://guides.rubyonrails.org/routing.html#redirection), that note is easy to overlook or forget about, and the behavior is rather surprising to us for a couple reasons:\r\n\r\n* It's different from the default status that `redirect_to` returns in controllers, which is `302 Found`:\r\n  * https://github.com/rails/rails/blob/v5.1.4/actionpack/lib/action_controller/metal/redirecting.rb#L118\r\n* It doesn't seem like a \"safe\" default because many browsers effectively cache 301 redirects forever unless you can get the user to clear their browser cache. The following links go into more detail about why 301 redirects are often problematic:\r\n  * [301 Redirects: The Horror That Cannot Be Uncached](http://getluky.net/2010/12/14/301-redirects-cannot-be-undon/)\r\n  * [thomasrutter's answer to \"How long do browsers cache HTTP 301s?\"\r\non StackOverflow](https://stackoverflow.com/a/21396547/582414)\r\n\r\nIt appears that this behavior has always been the case since the `redirect` method was first introduced in Rails 3.\r\n\r\nWith respect to the issues that initiated this discovery -- because we had effectively set up a bunch of permanent 301 redirects in our routes, it will require much more effort for us to change or undo many of those redirects. In the case where some to these redirects went to URLs we don't have direct control over, it will be difficult for us to change them. Quoting the StackOverflow link I mentioned previously:\r\n> If you don't have control over the site where the previous redirect target went to, then you are outta luck. Try and beg the site owner to redirect back to you.\r\n\r\n### Request for Consideration\r\n\r\n* Is there a reason why `301 Moved Permanently` was chosen as the default HTTP status over `302 Found`?\r\n* Even though it would be a change to long-standing behavior, would you consider changing the default to 302, which in our opinion would be a \"safer\" default?\r\n\r\nBefore opening this issue I tried to see if anyone else ever raised a similar concern in the past and could not find anything similar, which is a bit surprising to me since the current default behavior has permanent effects. For that reason I'm wondering whether I'm missing something?", "labels": [], "number": 31664, "updated_at": "2018-01-30 18:03:12", "user": 480318, "closed_at": "None", "id": 287280370, "title": "Default redirect status of 301 Moved Permanently for routes", "url": "https://api.github.com/repos/rails/rails/issues/31664", "created_at": "2018-01-10 00:51:12", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356465055", "text": "I will also note that commit message for the documentation of the 301 behavior also seems to indicate that the behavior seemed surprising to the committer as well, which is why the committer added the note: https://github.com/rails/rails/commit/d6c7185d77158caee933e84b247e37bb6a67bf58\r\n> I had to try out myself to realize that it's 301, so this should be helpful to everyone.\r\n\r\n  ", "created_at": "2018-01-10 01:01:37", "user": 480318, "id": 356465055}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356499824", "text": "I would have thought that this was a sane default. If I was registering a redirect in my routes file it would generally be for legacy routes that I want to maintain for existing bookmarks or inbound links. They're generally static and meant to be permanent. If I wanted them to be temporary I think it makes sense that it should be done on an opt-in basis.", "created_at": "2018-01-10 04:56:13", "user": 1100408, "id": 356499824}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359208522", "text": "This seems misdirected, and worth changing, and I'd be happy to submit a patch.", "created_at": "2018-01-20 22:54:04", "user": 6261109, "id": 359208522}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359968583", "text": "+1 default should be temporary. I've been stung by this default too. A default should not create a permanently irreversible situation. For years people thought permanent redirects were \"better\" for SEO/Google juice reasons, but today those reasons don't hold water. \r\n\r\n- https://moz.com/blog/301-redirection-rules-for-seo\r\n- https://searchengineland.com/google-no-pagerank-dilution-using-301-302-30x-redirects-anymore-254608\r\n ", "created_at": "2018-01-23 23:34:04", "user": 69448, "id": 359968583}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360584382", "text": "This is going to cause a huge breaking change if people is expecting the default to be 301. Maybe we should introduce a new `temporary_redirect` helper? Or we could require the `status` to be always defined.\r\n\r\n@matthewd thoughts?", "created_at": "2018-01-25 20:05:14", "user": 47848, "id": 360584382}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360621863", "text": "How about using a [new framework default](https://github.com/rails/rails/blob/8c42d1b6e537a50ae085a8669e604fca1729d56b/railties/lib/rails/generators/rails/app/templates/config/initializers/new_framework_defaults_5_2.rb.tt)?", "created_at": "2018-01-25 22:28:02", "user": 432189, "id": 360621863}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360728800", "text": "Personally I think the current behaviour makes sense: if it's defined at the route level, I expect it to be as much of a forward-looking statement as any other cacheable response.\r\n\r\n@rafaelfranca if you want to change it, though, I doubt it'd really be a big deal for people to start returning 302s instead of 301s -- by my same logic, the route's not going to change, so it doesn't matter if people keep requesting it. A config option could also work to grandfather existing apps; even for the rare app that might care, the chances of them encountering a 3rd party gem that also cares in the other direction seem vanishingly small.", "created_at": "2018-01-26 09:27:50", "user": 1034, "id": 360728800}, {"reactions": {"+1": [480318]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361680486", "text": "I would like to add that developers can use redirects for lots of different reasons. Assuming how any given feature is going to be used can be a dangerous game.\r\n\r\nIn my case, our company acquired another company. Both products provide hosted websites on customer-specific subdomains, but with different top-level domains. \r\n\r\nPost acquisition, these sites would be transfered one-by-one as customers where migrated and ready. The transfer itself was controlled at the DNS level (mapping the specific subdomain at the old TLD to a Rails app configured to support subdomains on both the old and new TLD). \r\n\r\nThose requests would hit our server still using the old top-level domain, so we initially we used a route-based rule to map requests for the old top-level-domain to a request for the new top-level-domain. \r\n\r\nWhere we hit a snag is that customers sometimes change their minds. After making this change we had multiple customers give the go ahead the transfer their site from the old system to the new system. That resulted in a DNS change, which resulted in a 301-redirect to the new domain. \r\n\r\nUnfortunately, in a few cases, we had customers that \"forgot something\" or otherwise needed to get back to their old websites. At first we thought, no problem, we'll just remove the DNS rule and everything will go back to how it was before the redirect. But it didn't. Especially for the customers who wanted to go back to their old website, they simple could not do it, even after the DNS change. The 301 redirect was permanently cached in their browsers. We were able to work with those customer contacts to get them to clear their browser cache or use another browser, but this was fraught with problems because they are not very technical users. DNS is a mystery to them. It made us look bad. And compounding that any visitors to their website during this transition were similarly \"stuck\" redirecting to a new-partially migrated site.\r\n\r\nSo after doing a bit more research, we found that (1) Rails route redirects are 301's, unlike the controller level \"redirect_to\" method which is a 302 (which was a surprise), (2) 301 Redirects are more permanent than we thought and can in fact be almost impossible to reverse, and (3) in most cases the previously perceived SEO benefits of 301 redirects over 302 redirects simply do not exist anymore.\r\n\r\nIn my opinion, using 301 redirects in routes by default is setting a trap for developers to step into. It's an extremely difficult problem to fix once you run into it. And it is deceptively easy to run into this one by accident.\r\n\r\nThat said, I also understand the need to not change anything that has previously been a default. In this case, the danger of switching from 301 to 302 is low. It could result in additional requests if a developer relies on most clients to have cached the 301. But clients get updated and caches get cleared all the time, so it's not like one can *assume* your redirect is going to be cached. It's not something you can rely on anyway.\r\n\r\nBut conversely, the idea that a default setting would create a situation where 100's of thousands of end users need to clear their browser cache, or else they can't reach your site anymore? That's a huge problem.\r\n\r\nJust my 2 cents. I hope adding a bit more first-hand, real-world experience helps explain why I believe the current 301 redirect default is a real problem and poses a real danger to developers.\r\n\r\nThank you for your consideration.\r\n", "created_at": "2018-01-30 18:03:12", "user": 69448, "id": 361680486}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "Added a test around `NO_AUTO_VALUE_ON_ZERO`:\r\n\r\n- The mysql `NO_AUTO_VALUE_ON_ZERO` mode should be disabled when inserting fixtures in bulk, this PR adds a test to make sure we don't remove it by mistake\r\n- If we live this mode enabled, a statement like this wouldn't work and a `Duplicate entry '0' for key 'PRIMARY'` error will be raised. That's because `DEFAULT` on auto_increment will return 0\r\n\r\n```sql\r\nINSERT INTO `aircraft` (`id`, `name`, `wheels_count`) VALUES (DEFAULT, 'first', 2), (DEFAULT, 'second', 3)\r\n```", "labels": [], "number": 31663, "updated_at": "2018-01-18 20:31:43", "user": 8122246, "closed_at": "2018-01-18 20:24:30", "id": 287261290, "title": "Added a test around `NO_AUTO_VALUE_ON_ZERO`:", "url": "https://api.github.com/repos/rails/rails/issues/31663", "created_at": "2018-01-09 23:05:56", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356443662", "text": "r? @kaspth\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-09 23:05:58", "user": 7468109, "id": 356443662}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356443867", "text": "`NO_AUTO_ON_ZERO` shouldn't affect `DEFAULT`, only an explicit value of `0` being given.", "created_at": "2018-01-09 23:06:59", "user": 1529387, "id": 356443867}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356444187", "text": "I suspect this is there due to some applications using the value of `0` in their fixtures. I'm in favor of this change, but I'm not sure if we need a deprecation cycle (nor do I know how we would go about adding one)", "created_at": "2018-01-09 23:08:31", "user": 1529387, "id": 356444187}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357541003", "text": "Looks `DEFAULT` on auto_increment will return 0, so `NO_AUTO_VALUE_ON_ZERO ` affects `DEFAULT` on primary key.\r\n\r\n```\r\nroot@localhost [test] > select @@sql_mode;\r\n+-----------------------+\r\n| @@sql_mode            |\r\n+-----------------------+\r\n| NO_AUTO_VALUE_ON_ZERO |\r\n+-----------------------+\r\n1 row in set (0.00 sec)\r\n\r\nroot@localhost [test] > create table users (id int auto_increment primary key, name varchar(255));\r\nQuery OK, 0 rows affected (0.04 sec)\r\n\r\nroot@localhost [test] > INSERT INTO users (id, name) VALUES (DEFAULT, 'David');\r\nQuery OK, 1 row affected (0.00 sec)\r\n\r\nroot@localhost [test] > select * from users;\r\n+----+-------+\r\n| id | name  |\r\n+----+-------+\r\n|  0 | David |\r\n+----+-------+\r\n1 row in set (0.00 sec)\r\n\r\nroot@localhost [test] > INSERT INTO users (id, name) VALUES (DEFAULT, 'Rafael');\r\nERROR 1062 (23000): Duplicate entry '0' for key 'PRIMARY'\r\n```", "created_at": "2018-01-14 20:46:06", "user": 12642, "id": 357541003}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357756449", "text": "Thanks for looking @kamipo ! \r\n\r\nWe probably shouldn't get rid of it then, that's why @kirs added it. Unless objection I will modify this PR to just add a test that covers this case", "created_at": "2018-01-15 18:20:21", "user": 8122246, "id": 357756449}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357776568", "text": "👍  to add the test", "created_at": "2018-01-15 20:01:36", "user": 47848, "id": 357776568}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358396315", "text": "Added the test, travis is having a hard time since yesterday but the failures aren't related", "created_at": "2018-01-17 18:23:52", "user": 8122246, "id": 358396315}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "The comments in [`BlobsController`](https://github.com/rails/rails/blob/d749b5d0e8a659f2018a3acdd0061ec6b57b7f7e/activestorage/app/controllers/active_storage/blobs_controller.rb#L5) and [`VariantsController`](https://github.com/rails/rails/blob/af0caadb8d9781770399c1804976af4a71d1313b/activestorage/app/controllers/active_storage/variants_controller.rb#L5) mention `security-through-obscurity`, altho I would argue that this is no security at all, since the signed keys returned from `ActiveStorage::Variation.encode` are not unique, and thus the variant key of one stored file, can be reused for another file.\r\n\r\nFor example; a website provides you thumbnails, where upon purchase you get access to the download page. The signed key then being used, can be reused for any other image, by replacing the signed key part in the thumbnail URL.\r\n\r\nI might be misunderstanding the \"security-through-obscurity\" case here, and it could be that this is the designed behavior, but I would say it would be better to generate these signed keys with an additional variable parameter (filename maybe), so that the signed key for `1000x1000` is not for every file the same.\r\n\r\n**Rails version**: 5.2.0.beta2\r\n\r\n**Ruby version**: 2.4.1p111\r\n", "labels": ["activestorage"], "number": 31662, "updated_at": "2018-01-09 23:25:05", "user": 351038, "closed_at": "None", "id": 287254466, "title": "ActiveStorage's signed keys not unique, e.g. can be reused for other variants", "url": "https://api.github.com/repos/rails/rails/issues/31662", "created_at": "2018-01-09 22:35:53", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356444256", "text": "Security-through-obscurity refers more to the signed blob ID than the signed variation key, even though the comment on `VariantsController` suggests otherwise. (It should be edited not to do that.)\r\n\r\nAs I see it, variations are generally harmless. The point of the key is primarily to have a convenient way to reference one in a URL.", "created_at": "2018-01-09 23:08:51", "user": 94129, "id": 356444256}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356447511", "text": "> As I see it, variations are generally harmless.\r\n\r\nMaybe, but in some occasions they're not; like the example I gave above. And I can give more examples like it, but it all boils down to that sometimes not all variants are equal.\r\n\r\n> The point of the key is primarily to have a convenient way to reference one in a URL.\r\n\r\nI figured it was for preventing users to request any variant they want, but it is just for convenience, then why does it has to be encoded at all?\r\n\r\nThen also, what is the static part doing in the variant key?\r\n\r\n```\r\neyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBFZz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--d8898284494e573d3806c5d773a4f831b8cd862a\r\n^ static hash                                                                     ^ encoded 1000x1000\r\n```\r\n\r\nAnyway; if the file (digest) would be a variable in generating the signature, the issue would not exist. I can try and open a PR with this proposed change?", "created_at": "2018-01-09 23:25:05", "user": 351038, "id": 356447511}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n`ActiveRecord::Base::Preloader.new.preload(order, order_items: { order_subitems: [] })`\r\n\r\n### Expected behavior\r\nExpected to preload given associations for `order`.\r\n\r\n### Actual behavior\r\nFails with error `undefined method compact for #Order...`\r\n\r\n### System configuration\r\n**Rails version**:\r\n5.2.0.beta2\r\n\r\nThis happens due to this commit https://github.com/rails/rails/commit/4bb4824ae711b7b550e8e33b428110575adaefac#diff-8bdf4d71fc80d5866e82a8024bb148d2 dated 18 Sep 2017.\r\nIf before preloader would work for a single object via `Array.wrap` now it only works for arrays.\r\n\r\nTo be fair comments for this method do state that it works for arrays, not single objects. But it worked this way ever since rails 3.\r\nAnd this change is breaking a lot of stuff for me.\r\nIf you guys decide to keep this, at least put a big bold deprecation in release notes.", "labels": ["activerecord"], "number": 31661, "updated_at": "2018-01-09 22:27:52", "user": 2538374, "closed_at": "2018-01-09 22:24:46", "id": 287245274, "title": "Preloader behaviour change in Rails 5.2", "url": "https://api.github.com/repos/rails/rails/issues/31661", "created_at": "2018-01-09 22:00:13", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356434995", "text": "Thanks for the report. I've restored the passing single record support in b8e5d4f9dffb35b7b0ca2f583cb1c9258a7d7cbe.", "created_at": "2018-01-09 22:27:52", "user": 12642, "id": 356434995}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "I hit a duplicate key constraint when there is none:\r\n```\r\nirb(main):004:0> User.where(text_id: 'XXXXXXX').count\r\n   (1.0ms)  SELECT COUNT(*) FROM \"users\" WHERE \"users\".\"text_id\" = $1  [[\"text_id\", \"XXXXXXX\"]]\r\n=> 1\r\nirb(main):005:0> User.where(text_id: 'XXXXXXX').update_all(email: 'ZZZZZZ')\r\n  SQL (1.2ms)  UPDATE \"users\" SET \"email\" = 'ZZZZZZ' WHERE \"users\".\"text_id\" = $1  [[\"text_id\", \"XXXXXXX\"]]\r\nActiveRecord::RecordNotUnique: PG::UniqueViolation: ERROR:  duplicate key value violates unique constraint \"index_users_on_email\"\r\nDETAIL:  Key (email)=(ZZZZZZ) already exists.\r\n```\r\n\r\nI suspect, I am encountering something similar to https://hcmc.uvic.ca/blogs/index.php?blog=22&p=8105&more=1&c=1&tb=1&pb=1 because the 2 values are indeed different:\r\n```\r\nirb(main):016:0> User.select(\"MAX(email)\")\r\n  User Load (1.0ms)  SELECT MAX(email) FROM \"users\"\r\n=> #<ActiveRecord::Relation [#<User id: nil, max: \"WWWMMM\">]>\r\nirb(main):017:0> User.select(\"nextval(email)\")\r\n  User Load (6.9ms)  SELECT nextval(email) FROM \"users\"\r\nActiveRecord::StatementInvalid: PG::FeatureNotSupported: ERROR:  cross-database references are not implemented: \"KKKOOO\"\r\n: SELECT nextval(email) FROM \"users\"\r\n```\r\n\r\nAny authoritative advice on how to fix this cleanly through Rails?\r\nI tried this but it did not help:\r\n```\r\n    remove_index :users, :email\r\n    add_index :users, :email, unique: true\r\n```\r\n  \r\nMy environment:\r\n```\r\n    rails (5.0.6)\r\n    pg (0.21.0)\r\n    activemodel (= 5.0.6)\r\n    activerecord (= 5.0.6)\r\n    activesupport (= 5.0.6)\r\n```", "labels": [], "number": 31660, "updated_at": "2018-01-09 23:38:38", "user": 1053956, "closed_at": "2018-01-09 23:38:38", "id": 287242446, "title": "Invalid PG:UniqueViolation. Index out of sync?", "url": "https://api.github.com/repos/rails/rails/issues/31660", "created_at": "2018-01-09 21:50:15", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356427344", "text": "https://stackoverflow.com/questions/244243/how-to-reset-postgres-primary-key-sequence-when-it-falls-out-of-sync appears to provide a more comprehensive solution. Unfortunately, my index is not on `id` and is not numeric as far as I understand.", "created_at": "2018-01-09 21:57:20", "user": 1053956, "id": 356427344}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356428022", "text": "Appears related to https://github.com/balderdashy/waterline/issues/830, although, once again, mine is an index on a text field, so I am not sure if those `setval +1` solutions apply.", "created_at": "2018-01-09 22:00:10", "user": 1053956, "id": 356428022}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356450056", "text": "I ended up re-creating the record. At first I was able to reproduce the error but, after a few experiments, it went away (I suspected mine was an issue like https://stackoverflow.com/questions/6422211/rails-3-validating-email-uniqueness-and-case-sensitive-fails/6422771#6422771).", "created_at": "2018-01-09 23:38:38", "user": 1053956, "id": 356450056}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nWhen I upgraded from Rails 5.1 to 5.2 and tried to install ActiveStorage, the migrations rake task was not found because I had not added the engine.\r\n\r\nAdding this reminder in the guides or in the ActiveStorage readme could save time for other developers.\r\n\r\nThis was the issue I referenced: [https://github.com/rails/rails/issues/31245](https://github.com/rails/rails/issues/31245)\r\n", "labels": [], "number": 31659, "updated_at": "2018-01-10 07:49:34", "user": 1964212, "closed_at": "2018-01-10 02:38:24", "id": 287216005, "title": "Update active_storage_overview.md", "url": "https://api.github.com/repos/rails/rails/issues/31659", "created_at": "2018-01-09 20:15:18", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356401119", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @eileencodes (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-09 20:15:20", "user": 7468109, "id": 356401119}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356426101", "text": "You can use `[ci skip]` for documentation PRs. See yellow note [here]( http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation).", "created_at": "2018-01-09 21:52:29", "user": 5657035, "id": 356426101}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356430445", "text": "@fatkodima my mistake, thanks for pointing that out", "created_at": "2018-01-09 22:09:21", "user": 1964212, "id": 356430445}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356482286", "text": "Closing since `bin/rails app:update` could have solved my problem", "created_at": "2018-01-10 02:38:24", "user": 1964212, "id": 356482286}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356525641", "text": "No problem, thanks for taking a look 👍", "created_at": "2018-01-10 07:49:34", "user": 350807, "id": 356525641}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "I'm opening this early (before [arel's related PR](https://github.com/rails/arel/pull/519) gets merged) to get more chances for this feature to be seen and merged and to get recommendations for implementation of this and related PR.\r\n\r\nRelated discussion was in https://github.com/rails/rails/issues/939.\r\n\r\n**Examples**:\r\n\r\n**Customers** table:\r\n\r\n| id | customer_name | city | country |\r\n| --- | --- | --- | --- |\r\n| 1 | Alfreds Futterkiste | Berlin | Germany |\r\n| 2 | Ana Trujillo Emparedados y helados | México D.F. | Mexico |\r\n| 3 | Antonio Moreno Taquería | México D.F. | Mexico |\r\n\r\n**Suppliers** table:\r\n\r\n| id | supplier_name | city | country |\r\n| --- | --- | --- | --- |\r\n| 1 | Exotic Liquid | London | UK |\r\n| 2 | New Orleans Cajun Delights | New Orleans | USA |\r\n| 3 | Grandma Kelly's Homestead | Ann Arbor | USA |\r\n\r\n\r\n```\r\nCustomer.select(:city).where(country: \"Mexico\")\r\n  .union(Supplier.select(:city).where(country: \"USA\"))\r\n  .order(:city).pluck(:city)\r\n   (0.5ms)  SELECT `customers`.`city` FROM (( SELECT `customers`.`city` FROM `customers` WHERE `customers`.`country` = 'Mexico' ) UNION ( SELECT `suppliers`.`city` FROM `suppliers` WHERE `suppliers`.`country` = 'USA' )) customers ORDER BY `customers`.`city` ASC\r\n=> [\"Ann Arbor\", \"México D.F.\", \"New Orleans\"]\r\n```\r\n\r\n`UNION ALL` is done through `:unique` option:\r\n```\r\nCustomer.select(:city)\r\n  .union(Supplier.select(:city), unique: false)\r\n  .order(:city).pluck(:city)\r\n   (0.4ms)  SELECT `customers`.`city` FROM (( SELECT `customers`.`city` FROM `customers` ) UNION ALL ( SELECT `suppliers`.`city` FROM `suppliers` )) customers ORDER BY `customers`.`city` ASC\r\n=> [\"Ann Arbor\", \"Berlin\", \"London\", \"México D.F.\", \"México D.F.\", \"New Orleans\"]\r\n```\r\n\r\nUnfortunately, `INTERSECT` and `EXCEPT` can not be exposed, because at least mysql don't support them both and sqlite don't support `ALL` with them. Despite that, also seems like they are used much less frequently.\r\n  \r\n**TODO**:\r\n- [ ] documentation\r\n- [ ] tests\r\n- [ ] arel's [related PR](https://github.com/rails/arel/pull/519)\r\n\r\n  ", "labels": [], "number": 31658, "updated_at": "2018-01-10 13:05:45", "user": 5657035, "closed_at": "None", "id": 287209116, "title": " [wip] Support UNION [ALL]", "url": "https://api.github.com/repos/rails/rails/issues/31658", "created_at": "2018-01-09 19:51:54", "comments": [], "assignees": [], "state": "open", "is-pull-request": true}
{"reactions": {"+1": [2746307]}, "text": "### Steps to reproduce\r\n- Have minitest 5.11.1 included in Gemfile\r\n- Create testsuite with two tests that fail\r\n- execute `rake test`\r\n\r\n### Expected behavior\r\n-- Testsuite should show two failed tests\r\n-- Error should not be presented\r\n\r\n### Actual behavior\r\n- After first test fails testsuite execution stops with exception raised \r\n\r\nMy example:\r\n```\r\nF\r\n\r\nFailure:\r\nSearchServiceTest#test_with_parent_product [/Users/sk/code/amzstore/test/services/search_service_test.rb:36]:\r\nExpected: 8\r\n  Actual: 1\r\n\r\n\r\nTraceback (most recent call last):\r\n\t18: from /Users/sk/.rvm/gems/ruby-2.5.0@amzstore_gems/gems/minitest-5.11.1/lib/minitest.rb:63:in `block in autorun'\r\n\t17: from /Users/sk/.rvm/gems/ruby-2.5.0@amzstore_gems/gems/minitest-5.11.1/lib/minitest.rb:136:in `run'\r\n\t16: from /Users/sk/.rvm/gems/ruby-2.5.0@amzstore_gems/gems/minitest-5.11.1/lib/minitest.rb:159:in `__run'\r\n\t15: from /Users/sk/.rvm/gems/ruby-2.5.0@amzstore_gems/gems/minitest-5.11.1/lib/minitest.rb:159:in `map'\r\n\t14: from /Users/sk/.rvm/gems/ruby-2.5.0@amzstore_gems/gems/minitest-5.11.1/lib/minitest.rb:159:in `block in __run'\r\n\t13: from /Users/sk/.rvm/gems/ruby-2.5.0@amzstore_gems/gems/railties-5.2.0.beta2/lib/rails/test_unit/line_filtering.rb:10:in `run'\r\n\t12: from /Users/sk/.rvm/gems/ruby-2.5.0@amzstore_gems/gems/minitest-5.11.1/lib/minitest.rb:319:in `run'\r\n\t11: from /Users/sk/.rvm/gems/ruby-2.5.0@amzstore_gems/gems/minitest-5.11.1/lib/minitest.rb:347:in `with_info_handler'\r\n\t10: from /Users/sk/.rvm/gems/ruby-2.5.0@amzstore_gems/gems/minitest-5.11.1/lib/minitest.rb:360:in `on_signal'\r\n\t 9: from /Users/sk/.rvm/gems/ruby-2.5.0@amzstore_gems/gems/minitest-5.11.1/lib/minitest.rb:320:in `block in run'\r\n\t 8: from /Users/sk/.rvm/gems/ruby-2.5.0@amzstore_gems/gems/minitest-5.11.1/lib/minitest.rb:320:in `each'\r\n\t 7: from /Users/sk/.rvm/gems/ruby-2.5.0@amzstore_gems/gems/minitest-5.11.1/lib/minitest.rb:321:in `block (2 levels) in run'\r\n\t 6: from /Users/sk/.rvm/gems/ruby-2.5.0@amzstore_gems/gems/minitest-5.11.1/lib/minitest.rb:334:in `run_one_method'\r\n\t 5: from /Users/sk/.rvm/gems/ruby-2.5.0@amzstore_gems/gems/minitest-5.11.1/lib/minitest.rb:785:in `record'\r\n\t 4: from /Users/sk/.rvm/gems/ruby-2.5.0@amzstore_gems/gems/minitest-5.11.1/lib/minitest.rb:785:in `each'\r\n\t 3: from /Users/sk/.rvm/gems/ruby-2.5.0@amzstore_gems/gems/minitest-5.11.1/lib/minitest.rb:786:in `block in record'\r\n\t 2: from /Users/sk/.rvm/gems/ruby-2.5.0@amzstore_gems/gems/railties-5.2.0.beta2/lib/rails/test_unit/reporter.rb:24:in `record'\r\n\t 1: from /Users/sk/.rvm/gems/ruby-2.5.0@amzstore_gems/gems/railties-5.2.0.beta2/lib/rails/test_unit/reporter.rb:71:in `format_rerun_snippet'\r\n/Users/sk/.rvm/gems/ruby-2.5.0@amzstore_gems/gems/railties-5.2.0.beta2/lib/rails/test_unit/reporter.rb:71:in `method': undefined method `test_with_parent_product' for class `Minitest::Result' (NameError)\r\n```\r\n\r\n### Workaround\r\nLock older version of minitest\r\n`gem 'minitest', '5.10.3' `\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 5.2.0.beta2\r\n\r\n**Ruby version**:\r\nruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-darwin15]\r\n\r\n  ", "labels": [], "number": 31657, "updated_at": "2018-01-09 18:44:42", "user": 544377, "closed_at": "2018-01-09 18:44:42", "id": 287188067, "title": "test_unit/reporter from beta2 version doesn't work nicely with minitest 5.11", "url": "https://api.github.com/repos/rails/rails/issues/31657", "created_at": "2018-01-09 18:36:38", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356376445", "text": "Seems like a copy of #31624 \r\nSorry, closing this issue", "created_at": "2018-01-09 18:44:42", "user": 544377, "id": 356376445}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  has_one_attached :avatar\r\n\r\n  validates_each :avatar do |record, attr, value|\r\n    record.errors.add attr unless record.avatar.attachment.blob.content_type.starts_with?('image/')\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nA non-image avatar should not be saved.\r\n\r\n### Actual behavior\r\nsaved.\r\n\r\n### System configuration\r\n**Rails version**: master@428939b\r\n\r\n**Ruby version**: 2.5.0\r\n", "labels": [], "number": 31656, "updated_at": "2018-02-16 00:28:53", "user": 378625, "closed_at": "2018-01-09 13:45:27", "id": 286993777, "title": "ActiveStorage attachment validations not working", "url": "https://api.github.com/repos/rails/rails/issues/31656", "created_at": "2018-01-09 07:29:19", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356287702", "text": "Active Storage doesn’t support blob validations yet, so this is the expected behavior.", "created_at": "2018-01-09 13:45:27", "user": 94129, "id": 356287702}, {"reactions": {"+1": [18199403, 9873, 1333173, 14993041, 2309469, 2605793, 378625, 1688308, 4984384]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/364212046", "text": "Any plans on supporting validation?", "created_at": "2018-02-08 18:54:04", "user": 71851, "id": 364212046}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366094950", "text": "```\r\nif avatar.attached? && !avatar.attachment.blob.content_type.in?(%w(image/png image/jpeg))\r\n    errors.add(:avatar, 'Must be an image file')\r\nend\r\n```\r\n\r\nThis works for me.", "created_at": "2018-02-15 23:19:03", "user": 16481334, "id": 366094950}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366095479", "text": "That won’t prevent the blob from being stored.", "created_at": "2018-02-15 23:21:34", "user": 94129, "id": 366095479}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366108494", "text": "I've used this code for now. I believe this will remove the attachment, blob, and file:\r\n\r\n```\r\n  validate :logo_validation\r\n\r\n  def logo_validation\r\n    if logo.attached?\r\n      if logo.blob.byte_size > 1000000\r\n        logo.purge\r\n        errors[:base] << 'Too big'\r\n      elsif !logo.blob.content_type.starts_with?('image/')\r\n        logo.purge\r\n        errors[:base] << 'Wrong format'\r\n      end\r\n    end\r\n  end\r\n\r\n```", "created_at": "2018-02-16 00:28:53", "user": 64581, "id": 366108494}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "admin@edwin-Vostro-3900:~/hyrux/yaya_app/my_app$ rake db:create\r\nDatabase 'db/development.sqlite3' already exists\r\nDatabase 'db/test.sqlite3' already exists\r\nadmin@edwin-Vostro-3900:~/hyrux/yaya_app/my_app$ rake db:migrate\r\nadmin@edwin-Vostro-3900:~/hyrux/yaya_app/my_app$ rake hydra:server\r\nrake aborted!\r\nDon't know how to build task 'hydra:server' (see --tasks)\r\n/var/lib/gems/2.3.0/gems/rake-12.3.0/exe/rake:27:in `<top (required)>'\r\n(See full trace by running task with --trace)\r\n###\r\n\r\n Steps to reproduce\r\n\r\n(Guidelines for creating a bug report are [available\r\nhere](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report))\r\n\r\n### Expected behavior\r\nTell us what should happen\r\n\r\n### Actual behavior\r\nTell us what happens instead\r\n\r\n### System configuration\r\n**Rails version**:\r\n\r\n**Ruby version**:\r\n", "labels": [], "number": 31655, "updated_at": "2018-01-09 13:47:33", "user": 33340707, "closed_at": "2018-01-09 13:47:33", "id": 286991040, "title": "When I am running \"rake hydra:server\", I am getting the following error", "url": "https://api.github.com/repos/rails/rails/issues/31655", "created_at": "2018-01-09 07:14:21", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356288217", "text": "We reserve the issue tracker for bug reports. For support questions, please use [Stack Overflow](https://stackoverflow.com) or the [rubyonrails-talk](https://groups.google.com/forum/#!forum/rubyonrails-talk) mailing list, where a wider community will be able to help you.", "created_at": "2018-01-09 13:47:33", "user": 94129, "id": 356288217}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nI was passing a symbol in one of the arguments, but there was no error raised, no log, nothing helping me to find out the issue.\r\n\r\n### Expected behavior\r\n\r\nHave at lease a warning in the log file, or an error raised breaking the code.\r\n\r\n### Actual behavior\r\n\r\nThe `[ActiveJob] Enqueued <job name> (Job ID: <job id>) to Sidekiq(<queue name>) with arguments: \"<argument list>\"` log appears, but the web UI of my background job library remains empty and nothing happens.\r\n\r\n### System configuration\r\n**Rails version**: 4.2\r\n\r\n**Ruby version**: 2.4\r\n", "labels": [], "number": 31654, "updated_at": "2018-01-10 08:24:00", "user": 478564, "closed_at": "2018-01-10 08:24:00", "id": 286986414, "title": "Silent failure when an ActiveJob::SerializationError occured", "url": "https://api.github.com/repos/rails/rails/issues/31654", "created_at": "2018-01-09 06:48:31", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356377306", "text": " Can you please provide a sample application that reproduces the error?", "created_at": "2018-01-09 18:48:01", "user": 47848, "id": 356377306}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356532801", "text": "Thank you @rafaelfranca for suggesting me to create an app to reproduce it. Doing so I figured out that we have some tricky code hiding this error 😞.", "created_at": "2018-01-10 08:24:00", "user": 478564, "id": 356532801}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "1) https://en.wikipedia.org/wiki/Subdomain\r\n2) Line 262 of the same guide\r\n3) extra spaces", "labels": [], "number": 31653, "updated_at": "2018-01-11 17:13:35", "user": 10832262, "closed_at": "2018-01-11 13:47:14", "id": 286984327, "title": "Fix typos [ci skip]", "url": "https://api.github.com/repos/rails/rails/issues/31653", "created_at": "2018-01-09 06:36:33", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356193719", "text": "r? @kamipo\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-09 06:36:35", "user": 7468109, "id": 356193719}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "There is concern that only blob are deleted depending on the `before_destroy` definition order which throws abort.\r\n\r\nFor example following code doesn't destroy an user, and keep a record of `active_storage_attachments`, but a record of `active_storage_blobs` is destroyed.\r\n\r\n```ruby\r\nclass User < ApplicationRecord\r\n  has_one_attached :avatar\r\n  \r\n  before_destroy { throw(:abort) }\r\n\r\n  # Currently it works fine if there is a code on lower line\r\n  # has_one_attached :avatar\r\nend\r\n```\r\n\r\nrefs:\r\n[carrierwave/activerecord.rb · carrierwaveuploader/carrierwave](https://github.com/carrierwaveuploader/carrierwave/blob/16c0eb5a7869d49930e165bc6a519033f067e9c6/lib/carrierwave/orm/activerecord.rb#L57)\r\n[paperclip/has_attached_file.rb · thoughtbot/paperclip](https://github.com/thoughtbot/paperclip/blob/7edb35a2a9a80c9598dfde235c7e593c023fc914/lib/paperclip/has_attached_file.rb#L95-L97)", "labels": ["activestorage"], "number": 31652, "updated_at": "2018-01-09 15:02:23", "user": 4456532, "closed_at": "2018-01-09 15:02:23", "id": 286962347, "title": "Change Active Storage destroy callbacks", "url": "https://api.github.com/repos/rails/rails/issues/31652", "created_at": "2018-01-09 03:48:56", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356175063", "text": "cc @georgeclaghorn ", "created_at": "2018-01-09 04:13:45", "user": 4456532, "id": 356175063}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356284642", "text": "@georgeclaghorn Thanks for your review!\r\nI changed it and squashed.", "created_at": "2018-01-09 13:32:47", "user": 4456532, "id": 356284642}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356289481", "text": "@georgeclaghorn Thanks! I added a changelog.", "created_at": "2018-01-09 13:52:23", "user": 4456532, "id": 356289481}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [4083992]}, "text": "Followup to https://github.com/rails/rails/pull/31289.\r\n\r\nInstead of providing a configuration option to set the hash function, switch to SHA-1 for new apps and allow upgrading apps to opt in later via `new_framework_defaults_5_2.rb`.\r\n\r\n@georgeclaghorn, does this address your concern from https://github.com/rails/rails/pull/31289 about cache invalidations for existing apps? Upgrading to 5.2 wouldn't change anything, but flipping the setting later would still invalidate every key. If busting the cache is a complete no-go, you could just never do that.\r\n  ", "labels": [], "number": 31651, "updated_at": "2018-01-12 22:03:33", "user": 432189, "closed_at": "2018-01-12 22:03:33", "id": 286894490, "title": "Use SHA-1 for non-sensitive digests by default", "url": "https://api.github.com/repos/rails/rails/issues/31651", "created_at": "2018-01-08 21:31:41", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356102958", "text": "r? @sgrif\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-08 21:31:43", "user": 7468109, "id": 356102958}], "assignees": [1529387, 1529387], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nThis is a simple change that allows a `filename` to be passed to `Blob#service_url`, in the same way as `expires_in` and `disposition`. \r\n\r\n### Other Information\r\n\r\nThis is useful when we have several representations that share the same underlying file, each one with a different name, and we need to provide a different download URL based on that name instead of using the file's, for each of them.\r\n\r\nr? @georgeclaghorn", "labels": ["activestorage"], "number": 31650, "updated_at": "2018-01-09 00:39:14", "user": 813033, "closed_at": "2018-01-08 15:35:06", "id": 286770309, "title": "Allow overriding filename in `Blob#service_url`", "url": "https://api.github.com/repos/rails/rails/issues/31650", "created_at": "2018-01-08 14:53:45", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355987733", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @georgeclaghorn (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-08 14:53:55", "user": 7468109, "id": 355987733}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "[Section 2.5 of the Guides on the Asset Pipeline](http://guides.rubyonrails.org/asset_pipeline.html#preprocessing) state:\r\n\r\n> In development mode, or **if the asset pipeline is disabled**, when these files are requested they are processed... and then sent back to the browser as JavaScript and CSS respectively.\r\n\r\nBut if you “disable the asset pipeline” [according to the guide’s instructions](http://guides.rubyonrails.org/asset_pipeline.html#what-is-the-asset-pipeline-questionmark),\r\n\r\n```\r\n$ rails new foo --skip-sprockets\r\n```\r\n\r\nthen out-of-the-box, accessing any page that uses `layouts/application.html.erb` raises the following error in console (in development):\r\n\r\n    ActionController::RoutingError (No route matches [GET] \"/javascripts/application.js\"):\r\n\r\nor returns 404 (in production).\r\n\r\nAm I misunderstanding the terminology used here? What is this quote intended to mean?", "labels": [], "number": 31649, "updated_at": "2018-01-29 07:52:10", "user": 12194123, "closed_at": "None", "id": 286669136, "title": "Error in Rails Guides? (Asset Pipeline: Preprocessing) ", "url": "https://api.github.com/repos/rails/rails/issues/31649", "created_at": "2018-01-08 07:49:35", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356566899", "text": "@rule I attempted to reproduce your issue in development mode with Rails Version 4.2.6. The above issue can be fixed by uncommenting  require \"sprockets/railtie\" in application.rb.\r\n\r\nYour application.rb should have:\r\n\r\nrequire \"sprockets/railtie\"\r\n", "created_at": "2018-01-10 10:49:59", "user": 3373927, "id": 356566899}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356571647", "text": "Doesn't un-commenting that line simply re-enable the asset pipeline?\r\n\r\n> You will have to remove the comment operator on that line to later enable the asset pipeline:\r\n>\r\n> ```bash\r\n> # require \"sprockets/railtie\"\r\n> ```\r\n\r\nI'm not just trying to make it work; I'm trying to understand what the guides mean when they say \r\n\r\n> if the asset pipeline is disabled, when these files [the default `/app/assets/**/application.{js,css}`] are requested they are processed... and then sent back to the browser as JavaScript and CSS respectively.\r\n\r\nFrom my understanding, the guides appear to be in error, and I am open to submitting a PR, though I would prefer to be wrong and be shown why.", "created_at": "2018-01-10 11:09:25", "user": 12194123, "id": 356571647}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356571772", "text": "Ugh fat fingers.", "created_at": "2018-01-10 11:10:03", "user": 12194123, "id": 356571772}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361134931", "text": "This does seem like a bug.\r\n\r\n### Steps to reproduce\r\n\r\n```\r\nrails new foo --skip-sprockets\r\ncd foo/\r\nbin/setup\r\nbin/rails generate scaffold posts\r\nbin/rails db:migrate\r\nbin/rails server\r\n```\r\n\r\nVisit `http://localhost:3000/posts` \r\n\r\n### Expected behavior\r\nPage should load without errors\r\n\r\n### Actual behavior\r\n404s for`javascripts/application.js` and `stylesheets.css`\r\nAlso, the generated destroy button doesn't work, since the relevant javascript is not on the page.\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4 and 5.0.6\r\n\r\n**Ruby version**: 2.31\r\n", "created_at": "2018-01-29 04:04:32", "user": 13696143, "id": 361134931}, {"reactions": {"+1": [13696143]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361138107", "text": "The paragraph in section 2.5 sounds like it's just wrong; \"if the asset pipeline is disabled\", then \"when these files are requested\", \"they are processed by\" absolutely nothing: it's the asset pipeline that arranges said processing -- whether it's at runtime, or during a precompile.\r\n\r\nTo @composerinteralia's point, I think it's fair to say that the scaffolds depend on the default javascript, and if you opt out of the asset pipeline, you're obliged to make your own arrangements to get it in there. Concretely, I don't think it would be valuable for us to specifically handle that combination of options by generating `public/javascripts/application.js` etc.", "created_at": "2018-01-29 04:34:24", "user": 1034, "id": 361138107}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361138629", "text": "@matthewd even without scaffolds, the default layout still has `stylesheet_link_tag` and `javascript_link_tag`. Would it make sense to remove or comment out those lines when we pass `--skip-sprockets`? If so I can make the PR.", "created_at": "2018-01-29 04:39:14", "user": 13696143, "id": 361138629}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361151665", "text": "Hmm.. I'm not sure. I guess my main point is that while a few years ago, someone using `--skip-sprockets` might reasonably have meant \"keep off my lawn; I'm using hand-crafted `.js` files\", today I think it's far more likely someone using that option is avoiding sprockets in favour of the new hotness -- whether that be webpack(er) or otherwise. Given that, I think I'm pretty happy to generate an application with the requested hole in the middle of it, instead of making any effort to route around; there's something to be said for leaving the edges of said hole rough/obvious.", "created_at": "2018-01-29 06:28:54", "user": 1034, "id": 361151665}, {"reactions": {"+1": [13696143]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361165057", "text": "Thanks for looking into this, @composerinteralia and @matthewd. Before we get too far down this rabbit hole, though, I'd like to get some finality on the original question — what should the guides say?\r\n\r\n> \"if the asset pipeline is disabled\", then \"when these files are requested\", \"they are processed by\" absolutely nothing: it's the asset pipeline that arranges said processing\r\n\r\nThank you! The sentence we're quoting begins, “In development mode, or if the asset pipeline is disabled,” when it appears it should just say, “In development mode.” In any case, the section it comes from is really about **preprocessing** (_i.e.,_ transpilation from, say, CoffeeScript to JS before concatenation/minification — not to be confused with **precompilation**), but then it takes a detour into how things behave in this case or that, and appears to be describing precompilation instead.\r\n\r\nI'm going to work on a PR to rewrite this section (and possibly rename it, to avoid confusion with \"precompilation\"), unless anyone has any objections.\r\n\r\n---\r\n\r\n> there's something to be said for leaving the edges of said hole rough/obvious.\r\n\r\nI think that if a built-in option for `rails new` results in a broken app, there should at least be a mention or warning of it in the generator output.", "created_at": "2018-01-29 07:52:10", "user": 12194123, "id": 361165057}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "", "labels": [], "number": 31648, "updated_at": "2018-01-08 07:15:24", "user": 31045807, "closed_at": "2018-01-08 06:16:55", "id": 286642883, "title": "Fix rubocop space before comma", "url": "https://api.github.com/repos/rails/rails/issues/31648", "created_at": "2018-01-08 04:51:31", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355884089", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @rafaelfranca (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-08 04:51:44", "user": 7468109, "id": 355884089}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "From [Section 3.3 of the Edge Guides on the Asset Pipeline](http://edgeguides.rubyonrails.org/asset_pipeline.html#turning-debugging-off):\r\n\r\n> Debug mode can also be enabled in Rails helper methods:\r\n> \r\n> ```erb\r\n> <%= stylesheet_link_tag \"application\", debug: true %>\r\n> <%= javascript_include_tag \"application\", debug: true %>\r\n> ```\r\n> \r\n> The `:debug` option is redundant if debug mode is already on.\r\n\r\nWhen I try this in Rails 5.1, it simply adds a `debug=\"true\"` HTML attribute to the corresponding tag, rather than enabling debug mode on the specified tag helper. Furthermore, the [Edge API documentation](http://edgeapi.rubyonrails.org/classes/ActionView/Helpers/AssetTagHelper.html#method-i-javascript_include_tag) makes no mention of a `debug` option.\r\n\r\nI've also looked into the source for the `javascript_include_tag` method as far back as it goes in the repo ([4.1-stable](https://github.com/rails/rails/blob/4-1-stable/actionview/lib/action_view/helpers/asset_tag_helper.rb)), and I see no mention of such an option.\r\n\r\nAm I missing something, or is this information incorrect? If so, would the team accept a PR amending this portion of the guides?", "labels": [], "number": 31647, "updated_at": "2018-01-07 13:59:06", "user": 12194123, "closed_at": "2018-01-07 13:59:06", "id": 286471768, "title": "Error in Rails Guides? (Asset Pipeline: tag helpers' `debug` option)", "url": "https://api.github.com/repos/rails/rails/issues/31647", "created_at": "2018-01-06 09:14:39", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355786338", "text": "The debug option is (supposed to be) implemented in [sprockets-rails](https://github.com/rails/sprockets-rails). Do you not use Sprockets in your app?", "created_at": "2018-01-06 23:35:13", "user": 94129, "id": 355786338}, {"reactions": {"+1": [94129]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355824658", "text": "Thanks! This was a bug in sprockets-rails; [I've submitted a PR for it](https://github.com/rails/sprockets-rails/pull/418).", "created_at": "2018-01-07 13:59:06", "user": 12194123, "id": 355824658}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\nGemfile\r\n```rb\r\nsource \"https://rubygems.org\"\r\n\r\ngem \"rails\"\r\n```\r\n\r\nRun `bundle install`. Afterwards your `Gemfile.lock` looks like:\r\n\r\n```\r\nGEM\r\n  remote: https://rubygems.org/\r\n  specs:\r\n    actioncable (5.1.4)\r\n      actionpack (= 5.1.4)\r\n      nio4r (~> 2.0)\r\n      websocket-driver (~> 0.6.1)\r\n    actionmailer (5.1.4)\r\n      actionpack (= 5.1.4)\r\n      actionview (= 5.1.4)\r\n      activejob (= 5.1.4)\r\n      mail (~> 2.5, >= 2.5.4)\r\n      rails-dom-testing (~> 2.0)\r\n    actionpack (5.1.4)\r\n      actionview (= 5.1.4)\r\n      activesupport (= 5.1.4)\r\n      rack (~> 2.0)\r\n      rack-test (>= 0.6.3)\r\n      rails-dom-testing (~> 2.0)\r\n      rails-html-sanitizer (~> 1.0, >= 1.0.2)\r\n    actionview (5.1.4)\r\n      activesupport (= 5.1.4)\r\n      builder (~> 3.1)\r\n      erubi (~> 1.4)\r\n      rails-dom-testing (~> 2.0)\r\n      rails-html-sanitizer (~> 1.0, >= 1.0.3)\r\n    activejob (5.1.4)\r\n      activesupport (= 5.1.4)\r\n      globalid (>= 0.3.6)\r\n    activemodel (5.1.4)\r\n      activesupport (= 5.1.4)\r\n    activerecord (5.1.4)\r\n      activemodel (= 5.1.4)\r\n      activesupport (= 5.1.4)\r\n      arel (~> 8.0)\r\n    activesupport (5.1.4)\r\n      concurrent-ruby (~> 1.0, >= 1.0.2)\r\n      i18n (~> 0.7)\r\n      minitest (~> 5.1)\r\n      tzinfo (~> 1.1)\r\n    arel (8.0.0)\r\n    builder (3.2.3)\r\n    concurrent-ruby (1.0.5)\r\n    crass (1.0.3)\r\n    erubi (1.7.0)\r\n    globalid (0.4.1)\r\n      activesupport (>= 4.2.0)\r\n    i18n (0.9.1)\r\n      concurrent-ruby (~> 1.0)\r\n    loofah (2.1.1)\r\n      crass (~> 1.0.2)\r\n      nokogiri (>= 1.5.9)\r\n    mail (2.7.0)\r\n      mini_mime (>= 0.1.1)\r\n    method_source (0.9.0)\r\n    mini_mime (1.0.0)\r\n    mini_portile2 (2.3.0)\r\n    minitest (5.11.1)\r\n    nio4r (2.2.0)\r\n    nokogiri (1.8.1)\r\n      mini_portile2 (~> 2.3.0)\r\n    rack (2.0.3)\r\n    rack-test (0.8.2)\r\n      rack (>= 1.0, < 3)\r\n    rails (5.1.4)\r\n      actioncable (= 5.1.4)\r\n      actionmailer (= 5.1.4)\r\n      actionpack (= 5.1.4)\r\n      actionview (= 5.1.4)\r\n      activejob (= 5.1.4)\r\n      activemodel (= 5.1.4)\r\n      activerecord (= 5.1.4)\r\n      activesupport (= 5.1.4)\r\n      bundler (>= 1.3.0)\r\n      railties (= 5.1.4)\r\n      sprockets-rails (>= 2.0.0)\r\n    rails-dom-testing (2.0.3)\r\n      activesupport (>= 4.2.0)\r\n      nokogiri (>= 1.6)\r\n    rails-html-sanitizer (1.0.3)\r\n      loofah (~> 2.0)\r\n    railties (5.1.4)\r\n      actionpack (= 5.1.4)\r\n      activesupport (= 5.1.4)\r\n      method_source\r\n      rake (>= 0.8.7)\r\n      thor (>= 0.18.1, < 2.0)\r\n    rake (12.3.0)\r\n    sprockets (3.7.1)\r\n      concurrent-ruby (~> 1.0)\r\n      rack (> 1, < 3)\r\n    sprockets-rails (3.2.1)\r\n      actionpack (>= 4.0)\r\n      activesupport (>= 4.0)\r\n      sprockets (>= 3.0.0)\r\n    thor (0.20.0)\r\n    thread_safe (0.3.6)\r\n    tzinfo (1.2.4)\r\n      thread_safe (~> 0.1)\r\n    websocket-driver (0.6.5)\r\n      websocket-extensions (>= 0.1.0)\r\n    websocket-extensions (0.1.3)\r\n\r\nPLATFORMS\r\n  ruby\r\n\r\nDEPENDENCIES\r\n  rails\r\n\r\nBUNDLED WITH\r\n   1.16.1\r\n```\r\n\r\nThe actual code change for this should be straight forward and I would be willing to contribute if this is approved as a legitimate change.\r\n\r\n### Expected behavior\r\nOnly runtime dependencies are installed by using [`add_development_dependency`](http://guides.rubygems.org/specification-reference/#add_development_dependency).\r\n\r\n### Actual behavior\r\nAs you can see from `Gemfile.lock` there are many testing and development dependencies installed, e.g. `minitest` and  `rails-dom-testing`. With `add_development_dependency` these will not be installed.\r\n\r\n### System configuration\r\n**Rails version**: Any version\r\n\r\n**Ruby version**: Any version\r\n", "labels": [], "number": 31646, "updated_at": "2018-01-06 06:52:05", "user": 780132, "closed_at": "2018-01-06 06:52:05", "id": 286451115, "title": "development dependencies are installed when running bundle install", "url": "https://api.github.com/repos/rails/rails/issues/31646", "created_at": "2018-01-06 02:08:57", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355728063", "text": "`minitest` and `rails-dom-testing` aren’t “development dependencies” in the sense Rubygems uses the phrase. They’re required to use Rails—`rails test` won’t work without them. We intend for them to be installed with `rails`.", "created_at": "2018-01-06 06:50:23", "user": 94129, "id": 355728063}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Using `activerecord (= 5.0.6)`...\r\n\r\n`User.select([:kind, '4 as \"coeff\"']).sum('coeff')`\r\n\r\nshould not produce\r\n\r\n```\r\nActiveRecord::StatementInvalid: PG::UndefinedColumn: ERROR:  column \"coeff\" does not exist\r\nLINE 1: SELECT SUM(coeff) FROM \"users\"\r\n                   ^\r\n: SELECT SUM(coeff) FROM \"users\"\r\n```\r\n\r\nsince `coeff` is defined. Am I missing something?\r\n\r\n(I double-checked https://apidock.com/rails/v4.0.2/ActiveRecord/QueryMethods/select)", "labels": [], "number": 31645, "updated_at": "2018-01-09 23:44:23", "user": 1053956, "closed_at": "2018-01-08 07:22:36", "id": 286441977, "title": "Cannot use custom fields in :sum operation", "url": "https://api.github.com/repos/rails/rails/issues/31645", "created_at": "2018-01-06 00:28:12", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355787546", "text": "You could do `User.select([:kind, '4 as \"coeff\"']).sum {|x| x[:coeff]}`. Although this doesn't do the sum in the query 😅 \r\n\r\nFor the example you have given, couldn't you do `User.count * 4`? Or do you have a specific scenario?\r\n", "created_at": "2018-01-07 00:00:40", "user": 3327152, "id": 355787546}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355897048", "text": "Please use the [mailing list](https://groups.google.com/forum/#!forum/rubyonrails-talk) or StackOverflow for questions/help, where a wider community will be able to help you. We reserve the issues tracker for issues only. Thanks.", "created_at": "2018-01-08 07:22:36", "user": 987638, "id": 355897048}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356428951", "text": "I ended up using `User.sum(\"kind * coeff\")` with `coeff` being an inline `CASE-END` query. My original intent was to keep the query readable. This does the job but the query ended up being less than readable. Machine-assisted assembly helps though.", "created_at": "2018-01-09 22:03:33", "user": 1053956, "id": 356428951}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "While using Apache + Passenger, we pass a request ID to our app using [mod_request_id](https://httpd.apache.org/docs/2.4/mod/mod_unique_id.html). This library uses the @ symbol as part of its alphabet, as documented in this paragraph:\r\n\r\n>The UNIQUE_ID environment variable is constructed by encoding the 144-bit (32-bit IP address, 32 bit pid, 32 bit time stamp, 16 bit counter, 32 bit thread index) quadruple using the alphabet `[A-Za-z0-9@-]` in a manner similar to MIME base64 encoding, producing 24 characters. The MIME base64 alphabet is actually `[A-Za-z0-9+/]` however + and / need to be specially encoded in URLs, which makes them less desirable.\r\n\r\nThe `make_request_id` method removes the @ symbol from any request ID passed through `X-Request-Id`.\r\n\r\nhttps://github.com/rails/rails/blob/9a130ee465fd8bd933d62a766ac1abcbb818b0be/actionpack/lib/action_dispatch/middleware/request_id.rb#L31\r\n\r\nAny chance `make_request_id` could be loosened up a bit to accommodate request IDs generated by this common library?", "labels": [], "number": 31644, "updated_at": "2018-02-16 12:52:41", "user": 2764, "closed_at": "2018-02-16 12:52:41", "id": 286416357, "title": "ActionDispatch::RequestId#make_request_id strips characters used by common request ID modules", "url": "https://api.github.com/repos/rails/rails/issues/31644", "created_at": "2018-01-05 21:57:15", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366227597", "text": "Fixed by #31815", "created_at": "2018-02-16 12:52:41", "user": 987638, "id": 366227597}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Seem to have an issue where a single test that makes multiple posts to the same controller action, with different params, does not seem to receive the subsequent changes in params. For example, if I have a very simple rails project with just a single controller, with a single action, and a single test that tests that action, the params do not seem to change between posts to that action. \r\n\r\nHere is the controller:\r\n```\r\nclass TestController < ApplicationController\r\n  def index\r\n    render json: { my_string: params[:string_param], my_int: params[:int_param] }\r\n  end\r\nend\r\n```\r\n\r\nHere is the spec:\r\n```\r\nrequire 'rails_helper'\r\n\r\nRSpec.describe TestController, type: :controller do\r\n\r\n  it 'should return the params that are passed in' do\r\n    request.content_type = 'application/json'\r\n\r\n    post :index, params: { string_param: 'test1', int_param: 1 }\r\n\r\n    expect(response.status).to eq(200)\r\n    json_response = JSON.parse(response.body)\r\n    expect(json_response['my_string']).to eq('test1')\r\n    expect(json_response['my_int']).to eq(1)\r\n\r\n    post :index, params: { string_param: 'test2', int_param: 2 }\r\n\r\n    expect(response.status).to eq(200)\r\n    json_response = JSON.parse(response.body)\r\n    expect(json_response['my_string']).to eq('test2')\r\n    expect(json_response['my_int']).to eq(2)\r\n  end\r\n\r\nend\r\n```\r\n\r\nThis test will fail on `expect(json_response['my_string']).to eq('test2')` because the controller will return the params passed in on the first post and `my_string` will be `\"test1\"`, not `\"test2\"`.\r\n\r\nAlternatively your spec could look like this and you get the same behavior:\r\n```\r\nrequire 'rails_helper'\r\n\r\nRSpec.describe TestController, type: :controller do\r\n\r\n  it 'should return the params that are passed in' do\r\n    post :index, params: { string_param: 'test1', int_param: 1 }, as: :json\r\n\r\n    expect(response.status).to eq(200)\r\n    json_response = JSON.parse(response.body)\r\n    expect(json_response['my_string']).to eq('test1')\r\n    expect(json_response['my_int']).to eq(1)\r\n\r\n    post :index, params: { string_param: 'test2', int_param: 2 }, as: :json\r\n\r\n    expect(response.status).to eq(200)\r\n    json_response = JSON.parse(response.body)\r\n    expect(json_response['my_string']).to eq('test2')\r\n    expect(json_response['my_int']).to eq(2)\r\n  end\r\n\r\nend\r\n```\r\n\r\nI have tried using `format: :json` instead of `as: :json`, but then my integers are converted into strings and the spec will fail on the line `expect(json_response['my_int']).to eq(1)` because `my_int` is coming back as `\"1\"`, not `1`.\r\n\r\nI have verified with `Rails.logger.info(params.inspect)` in the controller action that, indeed, the params on the 2nd post are the same as the ones passed in on the first post. \r\n\r\nAnyone know what's going on here? Is this a bug with Rails or RSpec? Should I be making an issue over a the RSpec gem repo instead of Rails?", "labels": [], "number": 31643, "updated_at": "2018-01-08 15:46:47", "user": 955108, "closed_at": "None", "id": 286406188, "title": "JSON params not changing on multiple posts to controller action", "url": "https://api.github.com/repos/rails/rails/issues/31643", "created_at": "2018-01-05 21:11:15", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355738431", "text": "I assume the test works if you split the tests up? would be interesting to see what is going on... \r\nMy head is telling me that maybe it could be caching, but probably not. I'll have to look a bit deeper into how controller tests are set up in Rspec", "created_at": "2018-01-06 10:36:57", "user": 3327152, "id": 355738431}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355755630", "text": "Yes that is correct. The tests would pass if they weren't within the same `it` block. ", "created_at": "2018-01-06 15:53:37", "user": 955108, "id": 355755630}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355781823", "text": "Okay, just ran a test. If I used `post` then it would mimic the behaviour that you have outlined. However, the route that is generated when you run `rails g controller Test index` produces a route in **routes.rb** - `get 'test/index'`\r\n\r\nSo if I run your tests changing `post` to `get`, then the tests work fine.\r\n\r\nCould you verify what is in your **routes.rb** file?", "created_at": "2018-01-06 22:12:05", "user": 3327152, "id": 355781823}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355787850", "text": "Yes I noticed that too, the problem only seems to affect `post`, `put`, and `patch`. \r\n  ", "created_at": "2018-01-07 00:05:06", "user": 955108, "id": 355787850}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355826061", "text": "This is probably more to do with rspec. See [here](https://stackoverflow.com/questions/7850650/making-two-requests-to-the-same-controller-in-rails-integrations-specs) for a Stack Overflow post regarding a similar issue.", "created_at": "2018-01-07 14:23:28", "user": 3327152, "id": 355826061}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356003700", "text": "Thanks for your comments. I'll investigate if the problems happens with TestUnit and report it over at Rspec if appropriate. ", "created_at": "2018-01-08 15:46:47", "user": 955108, "id": 356003700}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "", "labels": [], "number": 31642, "updated_at": "2018-01-24 22:02:40", "user": 5657035, "closed_at": "2018-01-24 21:57:35", "id": 286336680, "title": "Remove code duplication for `ActionController::Metal.action`", "url": "https://api.github.com/repos/rails/rails/issues/31642", "created_at": "2018-01-05 16:26:47", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360169130", "text": "r? @matthewd ", "created_at": "2018-01-24 15:22:57", "user": 5657035, "id": 360169130}], "assignees": [1034, 1034], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Otherwise, at least using JRuby, the replacements in `convert_database_option_for_jruby` won't work. Thus a call to\r\n\r\n    bundle exec rails app:update\r\n\r\nfails. Simply replacing those replace statements doesn't seem to work either, since the options hash seems to be frozen, too.", "labels": [], "number": 31641, "updated_at": "2018-01-20 09:53:25", "user": 209300, "closed_at": "2018-01-20 09:53:10", "id": 286317644, "title": "Use dup'ed options hash", "url": "https://api.github.com/repos/rails/rails/issues/31641", "created_at": "2018-01-05 15:21:18", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355580284", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @georgeclaghorn (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-05 15:21:21", "user": 7468109, "id": 355580284}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355791268", "text": "We want to keep `frozen_string_literal`. \r\nHow about to dup options instead of removing `frozen_string_literal`? \r\n\r\n```diff \r\ndiff --git a/railties/lib/rails/generators/app_base.rb b/railties/lib/rails/generators/app_base.rb\r\nindex 400f954..4176bb4 100644\r\n--- a/railties/lib/rails/generators/app_base.rb\r\n+++ b/railties/lib/rails/generators/app_base.rb\r\n@@ -315,11 +315,14 @@ def gem_for_database\r\n \r\n       def convert_database_option_for_jruby\r\n         if defined?(JRUBY_VERSION)\r\n-          case options[:database]\r\n-          when \"postgresql\" then options[:database].replace \"jdbcpostgresql\"\r\n-          when \"mysql\"      then options[:database].replace \"jdbcmysql\"\r\n-          when \"sqlite3\"    then options[:database].replace \"jdbcsqlite3\"\r\n+          opt = options.dup\r\n+          case opt[:database]\r\n+          when \"postgresql\" then opt[:database] = \"jdbcpostgresql\"\r\n+          when \"mysql\"      then opt[:database] = \"jdbcmysql\"\r\n+          when \"sqlite3\"    then opt[:database] = \"jdbcsqlite3\"\r\n           end\r\n+\r\n+          self.options = opt\r\n         end \r\n```\r\n", "created_at": "2018-01-07 01:10:28", "user": 987638, "id": 355791268}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355793452", "text": "I don't think it even needs to duplicate options; seems that it can safely update the existing `options` directly, just switching from `replace` to `=`.", "created_at": "2018-01-07 02:08:54", "user": 1034, "id": 355793452}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355793738", "text": "`options` is a frozen object. \r\nSo without dup, will raise `RuntimeError`(`can't modify frozen Thor::CoreExt::HashWithIndifferentAccess`).  \r\nRef: https://github.com/erikhuda/thor/pull/446\r\n", "created_at": "2018-01-07 02:16:38", "user": 987638, "id": 355793738}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355793845", "text": "Ah, right :+1:", "created_at": "2018-01-07 02:20:01", "user": 1034, "id": 355793845}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355914386", "text": "I changed my PR based on @y-yagi's proposal. Only difference is, that I'm freezing the `options` again.", "created_at": "2018-01-08 09:13:21", "user": 209300, "id": 355914386}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356112880", "text": "LGTM. Please squash your commits into a single commit?", "created_at": "2018-01-08 22:10:34", "user": 987638, "id": 356112880}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359159896", "text": "@ckoenig Thanks!", "created_at": "2018-01-20 09:53:25", "user": 987638, "id": 359159896}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\n* removed reference to GET requests where it applies also to other HTTP verbs\r\n* clarified language about what Rails does rather than slightly more generic \r\n   statements about what protection should be in place.\r\n* updated documentation to try and better explain how CSRF protection\r\n   works with XHR, and the potential exposure with CORS\r\n", "labels": [], "number": 31640, "updated_at": "2018-01-05 13:48:58", "user": 524274, "closed_at": "None", "id": 286293523, "title": "fixes #27157 CSRF protection documentation", "url": "https://api.github.com/repos/rails/rails/issues/31640", "created_at": "2018-01-05 13:48:54", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355558714", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-05 13:48:57", "user": 7468109, "id": 355558714}], "assignees": [12642, 12642], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nCurrently, unless a value for `disposition` is passed to `ActiveStorage::Blob#service_url` we use `inline` for everything. However, some content types shouldn't be rendered inline by default. For example:\r\n- Sending `.ai` files as application/postscript to Safari opens them in a blank, grey screen, and downloading `.ai` as `application/postscript` files in Safari appends `.ps` to the extension.\r\n- Sending HTML, SVG, XML and SWF files as binary closes XSS vulnerabilities. Even if these are mitigated by serving the blobs from a different domain from your application, having an HTML file rendered by the browser instead of downloaded opens the door for more realistic phishing attacks.\r\n- Sending JS files as binary avoids `InvalidCrossOriginRequest` without compromising security.\r\n\r\nThis pull request modifies this behaviour to force `:attachment` as disposition for specific content types like the above, configured in `config.active_storage.content_types_to_serve_as_binary`.\r\n\r\n### Other Information\r\n\r\nI have included a default list of content types for this new config option, but it could be left empty if you think that makes more sense, and let users decide what they want to be treated as attachments. I think the default list makes sense, though. \r\n\r\nr? @georgeclaghorn\r\n  ", "labels": [], "number": 31639, "updated_at": "2018-01-05 16:55:41", "user": 813033, "closed_at": "2018-01-05 16:55:41", "id": 286259935, "title": "Force :attachment as content disposition for some content types", "url": "https://api.github.com/repos/rails/rails/issues/31639", "created_at": "2018-01-05 11:13:10", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355531012", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @georgeclaghorn (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-05 11:13:21", "user": 7468109, "id": 355531012}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355561809", "text": "@georgeclaghorn, thanks a lot for your review! I have made the changes you suggested, and also, as you very correctly pointed out, I changed the code to _force_ the content disposition to `attachment` instead of defaulting to it. Otherwise this wouldn't solve the security concerns, as an attacker could simply add `disposition=inline` to the URL to get the same effect as now. I have also updated the pull request description to match this new behaviour.\r\n\r\nI was thinking... should this be included in the `CHANGELOG`? ", "created_at": "2018-01-05 14:03:35", "user": 813033, "id": 355561809}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355562476", "text": "> I was thinking... should this be included in the CHANGELOG?\r\n\r\nYes please!", "created_at": "2018-01-05 14:06:32", "user": 94129, "id": 355562476}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355583014", "text": "Of course!", "created_at": "2018-01-05 15:32:05", "user": 813033, "id": 355583014}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n(Guidelines for creating a bug report are [available\r\nhere](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report))\r\n\r\n### Expected behavior\r\nTell us what should happen\r\n\r\n### Actual behavior\r\nTell us what happens instead\r\n\r\n### System configuration\r\n**Rails version**:\r\n\r\n**Ruby version**:\r\n", "labels": [], "number": 31638, "updated_at": "2018-01-05 08:53:40", "user": 18100361, "closed_at": "2018-01-05 08:53:40", "id": 286227504, "title": "dddddddddddddddd socket io", "url": "https://api.github.com/repos/rails/rails/issues/31638", "created_at": "2018-01-05 08:53:20", "comments": [], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "In some cases, it was possible to load request_forgery_protection without\r\nthe `strip_heredoc` helper being loaded, which caused an exception.\r\nExplicitly require the helper as done in other file.\r\n", "labels": [], "number": 31637, "updated_at": "2018-01-05 17:42:07", "user": 9835, "closed_at": "2018-01-05 00:54:13", "id": 286150111, "title": "Add missing require for `strip_heredoc`", "url": "https://api.github.com/repos/rails/rails/issues/31637", "created_at": "2018-01-04 23:51:58", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355433048", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @rafaelfranca (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-04 23:52:00", "user": 7468109, "id": 355433048}, {"reactions": {"heart": [9835]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355443474", "text": "Thanks!", "created_at": "2018-01-05 00:54:23", "user": 94129, "id": 355443474}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [150670]}, "text": "Hello! When I last released a new \"major\" version of the mysql2 gem, there was some widespread grumbling as users were able to update their gems locally without constraints, but at runtime received errors because the gem version is specific in the mysql2 adapter https://github.com/rails/rails/blob/master/activerecord/lib/active_record/connection_adapters/mysql2_adapter.rb#L6 \r\n\r\nI am planning a mysql2 0.5 release this quarter. It will be fully compatible with 0.4.x. Is there something I can do to help avoid the user pain this time around? Would calling the new version 1.0.0 help by allowing you to drop the requirement from within the adapter and instead put it into a gemspec, as seen at https://github.com/rails/rails/blob/master/Gemfile#L131 ?\r\n\r\nOr is this simply an understood-enough situation that is common to all of the connection adapters, as seen by the gem versioning in many of https://github.com/rails/rails/tree/master/activerecord/lib/active_record/connection_adapters and I shouldn't worry about it.\r\n\r\nCould I nudge Rails 5.2.0 to ship with `gem \"mysql2\", \"~> 0.5.0\"` at the appropriate time?", "labels": [], "number": 31636, "updated_at": "2018-03-21 17:58:58", "user": 39406, "closed_at": "2018-03-21 17:58:58", "id": 286103731, "title": "Upcoming release: mysql2 gem 0.5.0", "url": "https://api.github.com/repos/rails/rails/issues/31636", "created_at": "2018-01-04 20:27:20", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355445356", "text": "As you note, 0.x versions are generally considered to be major, so we default to a more restrictive upper version. I'd say we're happy to accept your guidance on what the upper should be, based on which future versions you're happy to commit to not changing things we use in.\r\n\r\nGiven the gem's maturity and widespread use, bumping to 1.0.0 does seem like a potentially good idea, just because most people would then assume the API's going to be stable until 2.0. Granted, there's some irony in making a Very Major bump just to assert that nothing's changing :sweat_smile:. Alternatively, just declaring in the README that the API is stable as of 0.4, and any future incompatible change will be 1.0, would give the same result: we (and others) could use `>= 0.4.4, < 1.0`.\r\n\r\nIf you're not ready to make that sort of commitment, though, we'll gladly merge and backport a PR that expands the constraint to `>= 0.4.4, < 0.6`, say. (Right now, if you like; if done early enough before a 0.5 release, it might at least reduce the burden to \"you need to bump AR too\" -- at least for people running a supported release series.)\r\n\r\nThe adapters do all need an explicit requirement, because they each expect a given API version -- older versions are known not to work, and future versions [beyond any API commitments from maintainers] are unknowable. We *could* switch to a purely `>=` constraint, only excluding the known-bad old versions... but that just inverts the problem to one where your future release breaks applications because of an API change, and that's potentially a much more subtle breakage.\r\n\r\n(We can't use a real gemspec requirement, because that'd mean everyone had to install libraries for all three of our supported adapters. Unfortunately Rubygems doesn't support a \"it doesn't have to be here, but if it is, it needs to be this version\" constraint, which, while imperfect, would give us a better approximation of desirable behaviour.)", "created_at": "2018-01-05 01:06:53", "user": 1034, "id": 355445356}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"+1": [7491628]}, "text": "I have upgraded an application to Rails 5.2 from 5.1 and all of my tests pass, but caching is not working. I believe there is something wrong with recyclable cache keys. I didn't see anything in the documentation for configuring cache versioning, but maybe I've missed something?\r\n\r\n### Steps to reproduce\r\nWith Rails 5.2.0.beta2 and caching configured:\r\n```\r\n    config.load_defaults 5.2\r\n    config.cache_store = :dalli_store\r\n```\r\nview:\r\n```\r\n<% cache product do %>\r\n  ...\r\n<% end %>\r\n```\r\n### Expected behavior\r\nThe cache should automatically bust when the product is updated.\r\n\r\n### Actual behavior\r\nThe cache never busts. From looking at the logs, the cache helper doesn't appear to pass version information in to the cache get request:\r\n\r\n`Cache read: views/admin/productss/index:f6730463a833fc7265c145e311fd4ea9/products/391526183/\r\n`\r\n", "labels": [], "number": 31635, "updated_at": "2018-01-08 14:19:19", "user": 64581, "closed_at": "2018-01-06 17:09:51", "id": 286005812, "title": "Russian Doll Caching with Rails 5.2", "url": "https://api.github.com/repos/rails/rails/issues/31635", "created_at": "2018-01-04 14:40:41", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355728275", "text": "In development env need run once `rails dev:cache` task\r\n\r\n```cmd\r\n$ bin/rails dev:cache\r\nDevelopment mode is now being cached.\r\n\r\n$ bin/rails dev:cache\r\nDevelopment mode is no longer being cached.\r\n```\r\nhttp://guides.rubyonrails.org/caching_with_rails.html#caching-in-development\r\n  ", "created_at": "2018-01-06 06:56:06", "user": 4083992, "id": 355728275}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355758730", "text": "Caching is working, but the cache is not busting. This is related to the change for recyclable keys.", "created_at": "2018-01-06 16:40:32", "user": 64581, "id": 355758730}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355760752", "text": "The third-party Dalli store is incompatible with recyclable cache keys. Disable that feature or use the built-in Memcached store.\r\n  ", "created_at": "2018-01-06 17:09:51", "user": 94129, "id": 355760752}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355976524", "text": "@georgeclaghorn thanks for the reply! If I try to use `config.cache_store = :mem_cache_store`, I get the error `Could not find cache store adapter for mem_cache_store (cannot load such file -- dalli)`. The [edge documentation](http://edgeguides.rubyonrails.org/caching_with_rails.html#activesupport-cache-memcachestore) still says it uses Dalli. How do I disable it to use the built-in store?\r\n", "created_at": "2018-01-08 14:11:33", "user": 64581, "id": 355976524}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355977310", "text": "The built-in store does use Dalli, so you’ll need to have Dalli installed. (There’s nothing wrong with Dalli itself, just the `DalliStore` that comes with it.)", "created_at": "2018-01-08 14:14:22", "user": 94129, "id": 355977310}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355978566", "text": "Perfect! I understand now, thanks again!", "created_at": "2018-01-08 14:19:19", "user": 64581, "id": 355978566}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"+1": [197928, 5428510]}, "text": "### Summary\r\n\r\nEach time a missing route is hit a trace with 32 lines of rails internals are written to the log. This is overly verbose and doesn't offer any actionable information to the user.\r\n\r\nWith this change we'll still write an error message showing the route error but the trace will be omitted.\r\n\r\n### Other Information\r\n\r\nExample trace in a new rails app:\r\n\r\n```\r\nStarted GET \"/asjdhaskda\" for 127.0.0.1 at 2018-01-04 11:00:07 +0000\r\n  \r\nActionController::RoutingError (No route matches [GET] \"/asjdhaskda\"):\r\n  \r\nactionpack (5.0.6) lib/action_dispatch/middleware/debug_exceptions.rb:53:in `call'\r\nweb-console (3.5.1) lib/web_console/middleware.rb:135:in `call_app'\r\nweb-console (3.5.1) lib/web_console/middleware.rb:28:in `block in call'\r\nweb-console (3.5.1) lib/web_console/middleware.rb:18:in `catch'\r\nweb-console (3.5.1) lib/web_console/middleware.rb:18:in `call'\r\nactionpack (5.0.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'\r\nrailties (5.0.6) lib/rails/rack/logger.rb:36:in `call_app'\r\nrailties (5.0.6) lib/rails/rack/logger.rb:24:in `block in call'\r\nactivesupport (5.0.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'\r\nactivesupport (5.0.6) lib/active_support/tagged_logging.rb:26:in `tagged'\r\nactivesupport (5.0.6) lib/active_support/tagged_logging.rb:69:in `tagged'\r\nrailties (5.0.6) lib/rails/rack/logger.rb:24:in `call'\r\nsprockets-rails (3.2.1) lib/sprockets/rails/quiet_assets.rb:13:in `call'\r\nactionpack (5.0.6) lib/action_dispatch/middleware/request_id.rb:24:in `call'\r\nrack (2.0.3) lib/rack/method_override.rb:22:in `call'\r\nrack (2.0.3) lib/rack/runtime.rb:22:in `call'\r\nactivesupport (5.0.6) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'\r\nactionpack (5.0.6) lib/action_dispatch/middleware/executor.rb:12:in `call'\r\nactionpack (5.0.6) lib/action_dispatch/middleware/static.rb:136:in `call'\r\nrack (2.0.3) lib/rack/sendfile.rb:111:in `call'\r\nrailties (5.0.6) lib/rails/engine.rb:522:in `call'\r\npuma (3.11.0) lib/puma/configuration.rb:225:in `call'\r\npuma (3.11.0) lib/puma/server.rb:624:in `handle_request'\r\npuma (3.11.0) lib/puma/server.rb:438:in `process_client'\r\npuma (3.11.0) lib/puma/server.rb:302:in `block in run'\r\npuma (3.11.0) lib/puma/thread_pool.rb:120:in `block in spawn_thread'\r\n  Rendering /Users/afcapel/.rbenv/versions/2.3.5/lib/ruby/gems/2.3.0/gems/actionpack-5.0.6/lib/action_dispatch/middleware/templates/rescues/routing_error.html.erb within rescues/layout\r\n  Rendering /Users/afcapel/.rbenv/versions/2.3.5/lib/ruby/gems/2.3.0/gems/actionpack-5.0.6/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb\r\n  Rendered /Users/afcapel/.rbenv/versions/2.3.5/lib/ruby/gems/2.3.0/gems/actionpack-5.0.6/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (1.3ms)\r\n  Rendered /Users/afcapel/.rbenv/versions/2.3.5/lib/ruby/gems/2.3.0/gems/actionpack-5.0.6/lib/action_dispatch/middleware/templates/routes/_table.html.erb (7.8ms)\r\n  Rendering /Users/afcapel/.rbenv/versions/2.3.5/lib/ruby/gems/2.3.0/gems/actionpack-5.0.6/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb\r\n  Rendered /Users/afcapel/.rbenv/versions/2.3.5/lib/ruby/gems/2.3.0/gems/actionpack-5.0.6/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (7.8ms)\r\n  Rendered /Users/afcapel/.rbenv/versions/2.3.5/lib/ruby/gems/2.3.0/gems/actionpack-5.0.6/lib/action_dispatch/middleware/templates/rescues/routing_error.html.erb within rescues/layout (118.8ms)\r\n```\r\n\r\nWith the change:\r\n\r\n```\r\nStarted GET \"/asjdhaskda\" for 127.0.0.1 at 2018-01-04 10:47:23 +0000\r\n  \r\nActionController::RoutingError (No route matches [GET] \"/asjdhaskda\"):\r\n```\r\n", "labels": [], "number": 31634, "updated_at": "2018-01-09 10:30:02", "user": 150107, "closed_at": "None", "id": 285958004, "title": "Reduce log noise handling ActionController::RoutingErrors", "url": "https://api.github.com/repos/rails/rails/issues/31634", "created_at": "2018-01-04 11:39:45", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355261728", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @pixeltrix (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-04 11:39:48", "user": 7468109, "id": 355261728}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355566038", "text": "@eileencodes squashed. Thanks for the review!", "created_at": "2018-01-05 14:23:13", "user": 150107, "id": 355566038}], "assignees": [6321, 6321], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n    $ irb\r\n    > require 'active_support/duration'\r\n    true\r\n    > seconds = 3155695199\r\n    > Active::Support.build(seconds)\r\n    99 years, 11 months, 4 weeks, 2 days, 10 hours, 29 minutes, and 5.0 seconds\r\n    > Active::Support.build(seconds + 1)\r\n    100 years\r\n\r\n### Expected behavior\r\nThe first line should either be\r\n`99 years 11 months 4 weeks 2 days 23 hours 59 minutes 59.0 seconds`\r\nor the second line should be \r\n`99 years, 11 months, 4 weeks, 2 days, 10 hours, 29 minutes, and 6.0 seconds`\r\n\r\n### Actual behavior\r\nRemoving one second from 100.years removes ~14 hours\r\n\r\n### System configuration\r\n**Rails version**:\r\n5.1.4 and master\r\n**Ruby version**:\r\n2.3.1", "labels": [], "number": 31633, "updated_at": "2018-01-04 15:47:39", "user": 3709726, "closed_at": "None", "id": 285897250, "title": "ActiveSupport::Duration bug regarding granularity with higher numbers", "url": "https://api.github.com/repos/rails/rails/issues/31633", "created_at": "2018-01-04 07:01:05", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355293003", "text": "Hello,\r\nThe exact no of seconds in a gregorian calendar is 31556952 because a year consists of \r\n 365.2425 days to be exact - https://en.wikipedia.org/wiki/Gregorian_calendar\r\nSo 3155695199 + 1 ( 3155695200) should in fact equal 100 years. \r\n\r\nSo - \r\n```ruby\r\n> seconds = 31556951\r\n31556951\r\n> ActiveSupport::Duration.build(seconds)\r\n11 months, 4 weeks, 2 days, 10 hours, 29 minutes, and 5.0 seconds\r\n> ActiveSupport::Duration.build(seconds + 1)\r\n1 year\r\n```\r\nHence you don't get the output you expect because the value of a year isn't derived from the rounded 365 days but the actual 365.2425 days.\r\n  \r\n  So I guess this cant really be classified as a bug.\r\n  ", "created_at": "2018-01-04 14:18:01", "user": 16438034, "id": 355293003}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355312190", "text": "I know that. Thanks to your example, I realized just know that what is displayed in the output equals to a whole 365 days + 10 hours etc. Why doesn't it say \"12 months 10 hours 29 minutes 5.0 seconds\"?\r\n\r\nOkay, I realized now that the months are fragmented as well and `1.month != 30.days`. So the when I display \"1 month\" to my end user, what I am actually saying is 30 days, 10 hours, 29, 6 seconds? Seems off, but I guess there was a reason for this choice.\r\n  ", "created_at": "2018-01-04 15:31:54", "user": 3709726, "id": 355312190}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355316615", "text": "Exactly.\r\n( 1.year == 12.months == 365.2425.days ) != 365.days \r\n  ", "created_at": "2018-01-04 15:47:29", "user": 16438034, "id": 355316615}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "", "labels": [], "number": 31632, "updated_at": "2018-01-03 19:02:40", "user": 5657035, "closed_at": "2018-01-03 19:02:40", "id": 285761129, "title": "Move `config.action_view.cache_template_loading` to proper section in configuring.md [ci skip]", "url": "https://api.github.com/repos/rails/rails/issues/31632", "created_at": "2018-01-03 17:52:42", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355078990", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @schneems (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-03 17:52:44", "user": 7468109, "id": 355078990}], "assignees": [59744, 59744], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nManually declare a POST route to (example) an AuthController, and post JSON parameters:\r\n\r\nRoute:\r\n```\r\npost :auth, to: \"auth#create\"\r\n```\r\n\r\nPOST to it with a body:\r\n```\r\n{\r\n  \"email\": \"email@email.com\",\r\n  \"password\": \"password\"\r\n}\r\n```\r\n\r\n### Expected behavior\r\nIt should POST with only the supplied parameters.\r\n\r\n`params` should be:\r\n```\r\nParameters: {\"email\"=>\"email@email.com\", \"password\"=>\"[FILTERED]\"}\r\n```\r\n\r\n### Actual behavior\r\nInstead, the supplied parameters are added to the root of the `params` hash, as well as being listed a second time, nested under a key matching the controller name:\r\n```\r\nParameters: {\"email\"=>\"email@email.com\", \"password\"=>\"[FILTERED]\", \"auth\"=>{\"email\"=>\"email@email.com\", \"password\"=>\"[FILTERED]\"}}\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.3.1p112\r\n\r\n  \r\n  \r\n  ", "labels": [], "number": 31631, "updated_at": "2018-01-03 19:44:31", "user": 1079481, "closed_at": "2018-01-03 19:44:31", "id": 285717943, "title": "POSTing doubles up on parameters", "url": "https://api.github.com/repos/rails/rails/issues/31631", "created_at": "2018-01-03 15:23:51", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355096046", "text": "This is actual behaviour of rails. It helps during creation where you can just say params[:auth] or during the require.permit check for attr_accessible. \r\n\r\nRefer following for more details\r\nhttps://stackoverflow.com/questions/9133652/rails-3-params-unwanted-wrapping\r\nhttp://borgs.cybrilla.com/tils/wrap-parameters-rails/\r\n\r\nAlso please close the Issue.", "created_at": "2018-01-03 18:58:34", "user": 8338207, "id": 355096046}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355107496", "text": "Got it. Thanks!", "created_at": "2018-01-03 19:44:31", "user": 1079481, "id": 355107496}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"+1": [703563, 10350, 1955930, 959128]}, "text": "I have found myself a lot in situations where it could be great to have ability to run migrations to report what changes they would have made rather than making them.\r\n\r\nOf course, this can be done by running `rake db:migrate:status` to find targeted migrations, inspect their code for changes and mentally assemble those pieces in one flow. But this is tedious, slightly time consuming and error prone even for 3 migrations. And can be automated.\r\n\r\n`DRY_RUN` option was added to `db:migrate`, `db:rollback`, `db:migrate:up` and `db:migrate:down`. For `db:migrate:up` and `db:migrate:down` it is not very much needed, but was added for consistency and to avoid possible surprises.\r\n\r\nThe **output** in check mode looks like this:\r\n```\r\n▶ rake db:migrate DRY_RUN=true\r\n== 20171231134346 CreateActiveStorageTables: migrating ========================\r\n-- create_table(:active_storage_blobs)\r\n-- create_table(:active_storage_attachments)\r\n== 20171231134346 CreateActiveStorageTables: migrated =========================\r\n\r\n== 20180103151354 CreateUsers: migrating ======================================\r\n-- create_table(:users)\r\n== 20180103151354 CreateUsers: migrated =======================================\r\n\r\n== 20180103151422 CreatePosts: migrating ======================================\r\n-- create_table(:posts)\r\n== 20180103151422 CreatePosts: migrated =======================================\r\n\r\n== 20180103151456 AddEmailToUsers: migrating ==================================\r\n-- add_column(:users, :email, :string)\r\n== 20180103151456 AddEmailToUsers: migrated ===================================\r\n```\r\n\r\nIf this feature will be ok for core members, I'll finish this PR by adding tests, documentation, etc.\r\nFeedback would be greatly appreciated.", "labels": [], "number": 31630, "updated_at": "2018-01-18 20:44:26", "user": 5657035, "closed_at": "2018-01-18 20:44:26", "id": 285717446, "title": "Allow to run migrations in check mode (dry run)", "url": "https://api.github.com/repos/rails/rails/issues/31630", "created_at": "2018-01-03 15:22:15", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357373196", "text": "Damn, just saw this line\r\n> If this feature will be ok for core members, I'll finish this PR by adding tests, documentation, etc.\r\nFeedback would be greatly appreciated.\r\n\r\nBTW, deleted my two small code comments as they are in line with the way the rails codebase is written.", "created_at": "2018-01-12 22:34:21", "user": 959128, "id": 357373196}, {"reactions": {"+1": [959128, 5657035, 94129]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358670026", "text": "It seems dangerous to offer a dry-run mode when we're executing arbitrary user-supplied code: we can neuter the standard migration methods, but who knows what else someone might be doing inside their migrations. At best, it'll likely fail because preceding migrations haven't put the DB into the expected state; at worst, it could make real changes to data. :confused:", "created_at": "2018-01-18 14:53:39", "user": 1034, "id": 358670026}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358676844", "text": "@matthewd yes, very reasonable comment!\r\nLooks like we can't neuter all possible code user would like to execute inside his migrations (at least not directly related for db migrations).\r\nWdyt, should this be closed or maybe there is a possible solution to that problem that I'm missing?", "created_at": "2018-01-18 15:14:21", "user": 5657035, "id": 358676844}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358679486", "text": "I think the only semi-safe way would be parsing those migration files and checking that its AST only has calls to ActiveRecord's migrations methods. This would probably not play well with other ways of running migrations that could be legit, so wouldn't work 100%, unfortunately.", "created_at": "2018-01-18 15:22:37", "user": 959128, "id": 358679486}, {"reactions": {"+1": [959128]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358775907", "text": "Given the already pointed problems and the fact the need for this is only for debug proposes I prefer to not add this complexity to the framework. Thank you so much for the pull request.", "created_at": "2018-01-18 20:44:25", "user": 47848, "id": 358775907}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nRemove the `cache_key_with_version` method\r\n\r\nActiveSupport::Cache now use 2 conventional methods:\r\n`cache_key` and `cache_version` (instead of 3)\r\n\r\nThe concatenation of key with version is now performed inside\r\n`AS::Cache.expand_cache_key` instead of `cache_key_with_version`\r\n\r\nr? @georgeclaghorn\r\n\r\n  \r\n  ", "labels": [], "number": 31629, "updated_at": "2018-01-04 11:15:18", "user": 122436, "closed_at": "2018-01-04 11:13:51", "id": 285701034, "title": "Remove the cache_key_with_version method", "url": "https://api.github.com/repos/rails/rails/issues/31629", "created_at": "2018-01-03 14:24:00", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355025300", "text": "Does this mean ETags [generated by Action Controller](https://github.com/rails/rails/blob/dbff1cee55a13ec7b0f135618555c3714bfd597b/actionpack/lib/action_dispatch/http/cache.rb#L136) won’t include the version? Are we missing a test for that?", "created_at": "2018-01-03 14:31:03", "user": 94129, "id": 355025300}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355029041", "text": "Yes, are right. That thing is probably not covered. We should add one first.\r\nI reviewed this whole new cache versioning structure once again.\r\n\r\nSomething tells me that `cache_key_with_version` is a bad idea.\r\nIt makes it confusing when to use `cache_key` and `cache_version` and when `cache_key_with_version`. And what should be the priority if both of them defined.\r\n\r\nI think the concept of merging the `cache_key` with `cache_version` should be hold inside `Cache.expand_cache_key`.\r\n\r\nI would propose the following changes:\r\n\r\n* Make method accept version option `def expand_cache_key(object, namespace = nil, version: false)`\r\n* Implement the `[cache_key, cache_version].join(\"-\")` inside this method.\r\n* Remove `cache_key_with_version`\r\n\r\nIn this way, we hold the concept of version and key separately and merge them only when explicitly specified.\r\n", "created_at": "2018-01-03 14:46:12", "user": 122436, "id": 355029041}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355034548", "text": "Adding a flag to `expand_cache_key` sounds like a good idea. I think it should be `true` by default to avoid a breaking change to the method’s default behavior—`normalize_key` can just set it to `false`.\r\n\r\nI don’t think `cache_key_with_version` needs to go away, though. At the very least, it doesn’t need to go away in order to resolve the duplication here, so we can consider it separately.", "created_at": "2018-01-03 15:07:38", "user": 94129, "id": 355034548}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355254468", "text": "@georgeclaghorn I've updated the PR with the removal of `cache_key_with_version` method. I think this is the best thing we can do before rails release: cleanups can wait.", "created_at": "2018-01-04 10:58:46", "user": 122436, "id": 355254468}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355257275", "text": "Sorry, but this isn’t an improvement. A record is in the best position to determine whether it has a version and combine the version with its key.\r\n\r\nI don’t find the distinction between `cache_key`, `cache_version`,  and `cache_key_with_version` particularly confusing—certainly not to the degree that it can’t be clarified with documentation.\r\n\r\nI’m still willing to accept a PR that implements the `version` flag for `expand_cache_key`.", "created_at": "2018-01-04 11:13:51", "user": 94129, "id": 355257275}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "30176f2 introduced a bulk: true option to MySQL adapter's change_table,\r\nwhich aggregates multiple column changes into a single complex ALTER TABLE\r\nstatement. This change extends the feature to the sqlite3 adapter.\r\n\r\nThe sqlite3 alter_table mechanism creates a new table with desired changes\r\nand then copies contents over. This change aggregates combinable operations\r\nso that only one new table is created and the old table only gets copied once.\r\n  ", "labels": [], "number": 31628, "updated_at": "2018-01-26 18:20:54", "user": 5495713, "closed_at": "None", "id": 285688401, "title": "Add bulk alter support for sqlite3", "url": "https://api.github.com/repos/rails/rails/issues/31628", "created_at": "2018-01-03 13:33:47", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355012629", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kaspth (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-03 13:33:58", "user": 7468109, "id": 355012629}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355015305", "text": "cc @matthewd ", "created_at": "2018-01-03 13:46:44", "user": 5495713, "id": 355015305}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/360863391", "text": "r? @matthewd ", "created_at": "2018-01-26 18:20:54", "user": 47848, "id": 360863391}], "assignees": [1034, 1034], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\nWhen using Aparment or pg bouncer it is common to have multiple identical structure postgres schemas. These can be migrated in parallel separately without any conflict (they are separate namespaces). With rails current implementation of advisory locks this does not work since a lock is generated only on the database name and not on schema + database name.\r\n\r\n### Expected behavior\r\nExpect that parallel migrations work with advisory locks\r\n\r\n### Actual behavior\r\n\r\n```\r\nActiveRecord::ConcurrentMigrationError:\r\n\r\nCannot run migrations because another migration process is currently running.\r\n\r\nTasks: TOP => apartment:migrate\r\n(See full trace by running task with --trace)\r\n```\r\n\r\n### System configuration\r\n**Rails version**: master\r\n**Ruby version**: 2.4.3\r\n\r\nReference: https://github.com/influitive/apartment/issues/506\r\n\r\nI'm open for making a PR request as I think it would be fairly easy. I think `generate_migrator_advisory_lock_id` (https://github.com/rails/rails/blob/master/activerecord/lib/active_record/migration.rb#L1350) needs to be moved to `abstract_adapter` so PostgresAdapter can overwrite the method and implement the following\r\n\r\n```ruby\r\n      MIGRATOR_SALT = 2053462845\r\n      def generate_migrator_advisory_lock_id\r\n        db_name_hash = Zlib.crc32(Base.connection.current_schema + Base.connection.current_database)\r\n        MIGRATOR_SALT * db_name_hash\r\n      end\r\n```\r\n\r\nOr every adapter has a `current_session_name` method that returns by default the `current_database` but for Postgres `current_schema + current_database`. If anyone can point me in the direction we want to go I can make a PR for it.", "labels": [], "number": 31627, "updated_at": "2018-01-03 11:02:52", "user": 1540483, "closed_at": "None", "id": 285655634, "title": "Postgres Advisory Lock should include schema name", "url": "https://api.github.com/repos/rails/rails/issues/31627", "created_at": "2018-01-03 11:02:52", "comments": [], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {"+1": [7999019]}, "text": "### Steps to reproduce\r\nI'm not exactly sure how I achieved this...somehow I have a user referencing a blob that no longer exists.  I apologize that I'm not able to contribute more towards a solution to this...I'm still wrapping my brain around how ActiveStorage works.  But, I thought this scenario worthy of sharing.\r\n\r\n     user = User.find 155\r\n     user.avatar.attached? ---- returns true\r\n     user.avatar.purge ---- returns NoMethodError: undefined method `purge' for nil:NilClass\r\n  \r\n      ActiveStorage::Blob Load (0.3ms)  SELECT \"active_storage_blobs\".* FROM \"active_storage_blobs\" WHERE \"active_storage_blobs\".\"id\" = $1  [[\"id\", 739]]\r\n\r\n      ActiveStorage::Blob.find(739) ---- Couldn't find\r\n      ActiveStorage::Attachment.where(record_type: 'User', record_id: 155) --- returns one record also associated with blob 739\r\n\r\n     user.avatar = nil  ---- Failed to save the new associated avatar_attachment\r\n\r\n     ActiveStorage::Attachment.where(record_type: 'User', record_id: 155).take.destroy --- back in action\r\n\r\n### Expected behavior\r\nIt seems that purge should destroy associated ActiveStorage::Blob and ActiveStorage::Attachment...even in the scenario I encountered.\r\n\r\n### Actual behavior\r\npurge fails because ActiveStorage::Blob no longer exists....somehow.\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 5.2.0.beta2\r\n\r\n**Ruby version**:\r\nruby 2.4.3p205 (2017-12-14 revision 61247) [x86_64-darwin17]\r\n", "labels": ["activestorage"], "number": 31626, "updated_at": "2018-03-06 21:23:45", "user": 536711, "closed_at": "2018-03-06 21:23:44", "id": 285570387, "title": "undefined method `purge' for nil:NilClass", "url": "https://api.github.com/repos/rails/rails/issues/31626", "created_at": "2018-01-03 00:05:04", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357943697", "text": "I have encountered the same behavior. Somehow there are blobs going missing.\r\n\r\nUsing Ruby 2.4.2, Rails 5.2.0.beta2,active_storage.service = :local and Sidekiq 5.0.5", "created_at": "2018-01-16 12:21:24", "user": 185284, "id": 357943697}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357987902", "text": "Same pain here. Development goes smooth, but fails on production.", "created_at": "2018-01-16 15:03:34", "user": 4023526, "id": 357987902}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358032591", "text": "@georgeclaghorn have you experienced this in production at all? Any insight as to what the problem may be?", "created_at": "2018-01-16 17:07:45", "user": 1080678, "id": 358032591}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358035107", "text": "We see a variation of this occasionally, where a record that should have a blob appears not to:\r\n\r\n```\r\nNoMethodError: undefined method `representation' for #<Upload:0x00000000024b4db0>\r\n```\r\n\r\nWhen I check in a console, the record does have an associated blob. I haven’t had time to dig deeper yet.", "created_at": "2018-01-16 17:15:57", "user": 94129, "id": 358035107}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361096238", "text": "On further review, I can attribute the production issue I mentioned to replication lag, so it’s not related. Can you search your app’s logs to determine whether any of the missing blobs were deleted independently of their attachments?\r\n\r\nI’m removing this from the 5.2.0 milestone pending evidence of an Active Storage bug.", "created_at": "2018-01-28 21:09:42", "user": 94129, "id": 361096238}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361184673", "text": "I have tested a lot to try to reproduce the behaviour but I can't. The only reason I can think of was that I had two rails 5.2 test apps running on the same host sharing one redis db through sidekiq. I didn't configure anything on the redis part which led me to think this was the problem. Both used db 0. The issue I saw was that I suddenly had fewer blobs then attachments. So when I tried to destroy the record associated with these attachments/blobs I got errors due to the blob missing.", "created_at": "2018-01-29 09:19:08", "user": 185284, "id": 361184673}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361623623", "text": "I had the same issue due to a misunderstanding of the edgeguides. A silly mistake, but maybe it will help.\r\n\r\nAssuming a model, with a file attachment,\r\n```\r\ndef create\r\n  @model = Model.new(model_strong_params)\r\n  if @model.save\r\n    @model.file.attach(params[:file]) // Reattaches file to the model\r\n   //other code\r\n  else\r\n    //other code\r\n  end\r\nend\r\n\r\ndef model_strong_params\r\n  params.require(:model).permit(:file)\r\nend\r\n```\r\n\r\nI believe what happens is that it tries to reattach the file attachment, while purging the previous one, deleting the blob. The attachment still works, but the blob is no longer there.\r\n", "created_at": "2018-01-30 15:12:40", "user": 7776614, "id": 361623623}, {"reactions": {"+1": [5657035, 7999019]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361938604", "text": "I had the same issue in production and I was able to reproduce the issue in development.\r\nMy case is the following.\r\n1. An instance of user model has one attachment.\r\n2. The instance saves changes but a validation error happens.\r\n3. At that time, new blob is created and existing blob is destroyed by **ActiveStorage::PurgeJob**, but new attachment is not created because of validation error.\r\n4. Existing attachment has association with the existing blob but there is no existing blob, so the problem happens.\r\n\r\nThis is my user model.\r\n```\r\nclass User < ApplicationRecord\r\n  has_one_attached :avatar\r\n\r\n  validates :username, presence: true, length: { in: 1..20 }\r\nend\r\n```\r\n\r\nThis is the application log when reproducing the problem.\r\n```\r\nStarted POST \"/rails/active_storage/direct_uploads\" for 127.0.0.1 at 2018-01-31 21:59:26 +0900\r\n[...]\r\n   (0.3ms)  BEGIN\r\n  ActiveStorage::Blob Create (0.5ms)  INSERT INTO \"active_storage_blobs\" (\"key\", \"filename\", \"content_type\", \"byte_size\", \"checksum\", \"created_at\") VALUES ($1, $2, $3, $4, $5, $6) RETURNING \"id\"  [[\"key\", \"eub75YWHrKKPKTu834JfaGeG\"], [\"filename\", \"second_image.jpg\"], [\"content_type\", \"image/jpeg\"], [\"byte_size\", 5757627], [\"checksum\", \"rQ+ElHSCqJ1I6YBnUJvl4g==\"], [\"created_at\", \"2018-01-31 12:59:26.460639\"]]\r\n   (2.3ms)  COMMIT\r\n[...]\r\n\r\nStarted PUT \"/users\" for 127.0.0.1 at 2018-01-31 21:59:26 +0900\r\n[...]\r\n   (0.4ms)  BEGIN\r\n  ActiveStorage::Attachment Load (0.6ms)  SELECT  \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = $1 AND \"active_storage_attachments\".\"record_type\" = $2 AND \"active_storage_attachments\".\"name\" = $3 LIMIT $4  [[\"record_id\", 1], [\"record_type\", \"User\"], [\"name\", \"avatar\"], [\"LIMIT\", 1]]\r\n  ActiveStorage::Blob Load (0.5ms)  SELECT  \"active_storage_blobs\".* FROM \"active_storage_blobs\" WHERE \"active_storage_blobs\".\"id\" = $1 LIMIT $2  [[\"id\", 12], [\"LIMIT\", 1]]\r\n  ActiveStorage::Attachment Destroy (0.5ms)  DELETE FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"id\" = $1  [[\"id\", 12]]\r\n  User Load (0.4ms)  SELECT  \"users\".* FROM \"users\" WHERE \"users\".\"id\" = $1 LIMIT $2  [[\"id\", 1], [\"LIMIT\", 1]]\r\n  ActiveStorage::Blob Load (0.4ms)  SELECT  \"active_storage_blobs\".* FROM \"active_storage_blobs\" WHERE \"active_storage_blobs\".\"id\" = $1 LIMIT $2  [[\"id\", 13], [\"LIMIT\", 1]]\r\n  ActiveStorage::Attachment Create (0.5ms)  INSERT INTO \"active_storage_attachments\" (\"name\", \"record_type\", \"record_id\", \"blob_id\", \"created_at\") VALUES ($1, $2, $3, $4, $5) RETURNING \"id\"  [[\"name\", \"avatar\"], [\"record_type\", \"User\"], [\"record_id\", 1], [\"blob_id\", 13], [\"created_at\", \"2018-01-31 12:59:26.881881\"]]\r\n[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: f2790361-5edf-46f7-a918-6672710a788e) to Sidekiq(default) with arguments: #<GlobalID:0x00007fc79d8e8a70 @uri=#<URI::GID gid://jinro-rails/ActiveStorage::Blob/12>>\r\n  User Exists (0.7ms)  SELECT  1 AS one FROM \"users\" WHERE \"users\".\"username\" = $1 AND \"users\".\"id\" != $2 LIMIT $3  [[\"username\", \"veeeeeeeeeeeeeeeeeeeeeeeeeeeeerylongusername\"], [\"id\", 1], [\"LIMIT\", 1]]\r\n   (0.2ms)  ROLLBACK\r\n[...]\r\nCompleted 401 Unauthorized in 247ms (ActiveRecord: 6.0ms)\r\n```", "created_at": "2018-01-31 13:54:05", "user": 22585210, "id": 361938604}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/362253290", "text": "For me user.avatar.purge not destroy the actual resource files on local (Mac). Do you know a reason for that?", "created_at": "2018-02-01 12:36:27", "user": 22920591, "id": 362253290}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/370933239", "text": "There are a few issues here.\r\n\r\n@NoNonsense126, I’m not sure why that wouldn’t work, ignoring that it’s not ideal. A blob should be created and attached to the model, then purged and replaced with a new blob. Please open a new issue and share a minimal app that reproduces the problem if you’re still experiencing it.\r\n\r\n@fshin1988, I suspect you’re doing something like `user.update!(avatar: params[:avatar])`, which is undocumented and unsupported. Use the `attach` API (e.g. `user.avatar.attach(params[:avatar])`) for existing records.", "created_at": "2018-03-06 21:23:44", "user": 94129, "id": 370933239}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps/Actual Behaviour\r\n\r\nExample app demonstrating the issue [here](https://github.com/jarednorman/rails_bug_bad_id) with instructions in the README. Here's the full steps:\r\n\r\n- Create a new Rails 5.1 app (I used Rails 5.1.4, Ruby 2.4.1) and postgres as the db (I'm running 9.6).\r\n- Create a table with a really long name (long enough that it will get truncated when generating the name for the seq for the primary key)\r\n- Examine the schema.rb, you'll see that rather than `id: :serial`, you'll have something like that looks like:\r\n\r\n  ```ruby\r\n  create_table \"sorry_i_didnt_name_the_table_that_caused_this_problem_for_me\", id: :bigint, default: -> { \"nextval('sorry_i_didnt_name_the_table_that_caused_this_problem_fo_id_seq'::regclass)\" }, force: :cascade do |t|\r\n    # ...\r\n  end\r\n  ```\r\n\r\n  That's technically the correct default (that's the correct seq) but it seems ActiveRecord has forgotten that fact, and is treating like it's a custom default.\r\n- Drop the database and run `bundle exec rake db:setup`. It will error out with this message (full trace is [here](https://github.com/jarednorman/rails_bug_bad_id#how-to-reproduce)):\r\n\r\n  ```\r\n  ActiveRecord::StatementInvalid: PG::UndefinedTable: ERROR:  relation \"sorry_i_didnt_name_the_table_that_caused_this_problem_fo_id_seq\" does not exist\r\n  ```\r\n\r\n### Expected behavior\r\n\r\nThe schema.rb should reflect that the we're using normal serial ID's here:\r\n\r\n```ruby\r\n  create_table \"sorry_i_didnt_name_the_table_that_caused_this_problem_for_me\", id: :serial, force: :cascade do |t|\r\n    # ...\r\n  end\r\n```\r\n\r\nThis would fix the issue that the schema produced cannot be loaded. I consider the `UndefinedTable` error to be expected given what was in the schema.\r\n\r\n### System configuration\r\n**Rails version**: `5.1.4`\r\n**Ruby version**: `2.4.1`\r\n**Postgresql version**: `9.6.6`\r\n", "labels": [], "number": 31625, "updated_at": "2018-01-02 23:26:08", "user": 471667, "closed_at": "2018-01-02 23:23:04", "id": 285563317, "title": "Primary key issues with really long table names", "url": "https://api.github.com/repos/rails/rails/issues/31625", "created_at": "2018-01-02 23:17:01", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354902138", "text": "This has been fixed in #28339 and backported in af9c1707ad49eb421cf76c1367da3efbf3c39aea.", "created_at": "2018-01-02 23:23:04", "user": 12642, "id": 354902138}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354902582", "text": "Thanks! Sorry I failed to find the original GH issue.", "created_at": "2018-01-02 23:25:55", "user": 471667, "id": 354902582}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"+1": [510835, 72418, 201360, 15371677, 98728]}, "text": "", "labels": [], "number": 31624, "updated_at": "2018-02-13 10:58:08", "user": 987638, "closed_at": "2018-01-10 23:46:30", "id": 285561521, "title": "Add support for Minitest 5.11", "url": "https://api.github.com/repos/rails/rails/issues/31624", "created_at": "2018-01-02 23:06:15", "comments": [{"reactions": {"+1": [987638]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355412695", "text": "Also see my proposed changes in https://github.com/seattlerb/minitest/issues/730", "created_at": "2018-01-04 22:06:52", "user": 9832, "id": 355412695}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356775525", "text": "Bump. I'd like to see this merged so I don't have to add a nasty monkeypatch on `method` to minitest.", "created_at": "2018-01-10 23:42:54", "user": 9832, "id": 356775525}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357748596", "text": "Any ETA for a new minor Rails release including this fix for the Minitest exception-on-failing-test? My understanding is that anyone running the current Rails with updated gems will hit this bug, right?\r\n\r\nI get that I could switch to Edge Rails for the fix but not sure if I'm ready for that. Looks like the last release was back in November; consider this comment an encouragement bump and a raised hand to help test, if that's useful :)", "created_at": "2018-01-15 17:41:41", "user": 12213, "id": 357748596}, {"reactions": {"+1": [103486, 12213, 1686739, 5133050]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357749708", "text": "You can point to the 5-1-stable branch and get this commit without going to edge.", "created_at": "2018-01-15 17:47:04", "user": 47848, "id": 357749708}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357818312", "text": "@rafaelfranca Ah, great idea — thanks, done!", "created_at": "2018-01-16 00:19:10", "user": 12213, "id": 357818312}, {"reactions": {"+1": [56541]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/365229679", "text": "Please add this fix to Rails 5.0 also.", "created_at": "2018-02-13 10:58:08", "user": 283004, "id": 365229679}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "I'm trying to hide a date select tag in rails 5 on document ready with jquey, the tag looks like this:\r\n`<%= date_select :search_input, params[:search_input], class:\"form-control mr-sm-2 \" ,id:\"date_select\"%>`\r\nand the jquery code:\r\n`$( document ).on('turbolinks:load', function\r\n  $(\"#date_select\").hide();\r\n})`\r\n### Expected behavior\r\nThe element should hide\r\n\r\n### Actual behavior\r\nThe element doesnt hide, but with other tags the element does hide\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 5.1.4\r\n\r\n**Ruby version**:\r\nruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-linux]", "labels": [], "number": 31623, "updated_at": "2018-01-18 19:30:07", "user": 18706283, "closed_at": "2018-01-03 06:26:54", "id": 285516700, "title": "Hide date_select tag rails 5 with jquey not working", "url": "https://api.github.com/repos/rails/rails/issues/31623", "created_at": "2018-01-02 19:31:44", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354907049", "text": "Your JavaScript code is broken - the function definition is incorrect.\r\n\r\n```\r\n$(document).on('turbolinks:load', function () {\r\n  $(\"#date_select\").hide(); \r\n});\r\n```\r\n\r\nThis is not an issue with Rails.", "created_at": "2018-01-02 23:55:42", "user": 1100408, "id": 354907049}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354944528", "text": "@dwightwatson is right. Please fix your code. \r\n\r\nAlso, please use the [mailing list](https://groups.google.com/forum/#!forum/rubyonrails-talk) or StackOverflow for questions/help, where a wider community will be able to help you. We reserve the issues tracker for issues only.\r\n", "created_at": "2018-01-03 06:26:54", "user": 987638, "id": 354944528}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358753883", "text": "@dwightwatson i fixed the code but still doesnt work", "created_at": "2018-01-18 19:22:38", "user": 18706283, "id": 358753883}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/358755922", "text": "I open an issue because i tried many ways to hide the tag but i didn't accomplished, i even opened a question on stackOverflow but got no answer, thats why this was my last option", "created_at": "2018-01-18 19:30:07", "user": 18706283, "id": 358755922}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n(Guidelines for creating a bug report are [available\r\nhere](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report))\r\n\r\n### Expected behavior\r\nTell us what should happen\r\n\r\n### Actual behavior\r\nTell us what happens instead\r\n\r\n### System configuration\r\n**Rails version**:\r\n\r\n**Ruby version**:\r\n", "labels": [], "number": 31622, "updated_at": "2018-01-02 18:28:30", "user": 18403756, "closed_at": "2018-01-02 18:28:30", "id": 285444399, "title": "DEPRECATION WARNING: Passing a class to the `class_name` is deprecated and will raise an ArgumentError in Rails 5.2. It eagerloads more classes than necessary and potentially creates circular dependencies. Please pass the class name as a string: `has_many :transactions, class_name: 'BitcoinPayable::BitcoinPaymentTransaction'` (called from <class:BitcoinPayment> at /home/Ammad/.rvm/gems/ruby-2.3.1/bundler/gems/bitcoin_payable-7af6f7d51d69/lib/bitcoin_payable/bitcoin_payment.rb:9)", "url": "https://api.github.com/repos/rails/rails/issues/31622", "created_at": "2018-01-02 14:37:20", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354835969", "text": "No problems here, the warning is self explanatory.", "created_at": "2018-01-02 18:12:28", "user": 1113178, "id": 354835969}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Fixes https://github.com/rails/rails/issues/31406.", "labels": [], "number": 31621, "updated_at": "2018-03-16 05:19:41", "user": 5657035, "closed_at": "2018-03-16 05:19:41", "id": 285432885, "title": "Fix multiline expression indexes for postgresql", "url": "https://api.github.com/repos/rails/rails/issues/31621", "created_at": "2018-01-02 13:45:22", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354769308", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @georgeclaghorn (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-02 13:45:25", "user": 7468109, "id": 354769308}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366941792", "text": "Could this cause problems if an expression contains a string literal with a newline?\r\n\r\nPerhaps we want to add a `/m` flag to the regexp instead?", "created_at": "2018-02-20 10:59:04", "user": 1034, "id": 366941792}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366958737", "text": "@matthewd Sure! Updated.", "created_at": "2018-02-20 12:12:20", "user": 5657035, "id": 366958737}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/366997904", "text": "r? @matthewd", "created_at": "2018-02-20 14:40:05", "user": 94129, "id": 366997904}], "assignees": [1034, 1034], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "I've fixed casing for Rails, Bundler and Thor in documentation.\r\n\r\nThis is my reasoning:\r\n* Rails as in *the framework* should be capitalized\r\n* rails as in the *CLI tool* should be uncapitalized\r\n* Bundler should be capitalized since it's a gem name\r\n* Thor should be capitalized since it's a gem name\r\n\r\nLet me know what you think!", "labels": [], "number": 31620, "updated_at": "2018-01-23 09:08:17", "user": 703563, "closed_at": "2018-01-23 09:08:17", "id": 285417322, "title": "Fix casing in documentation, task descriptions and error messages", "url": "https://api.github.com/repos/rails/rails/issues/31620", "created_at": "2018-01-02 12:21:55", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354755871", "text": "r? @rafaelfranca\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2018-01-02 12:21:57", "user": 7468109, "id": 354755871}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359725830", "text": "Closing this since it's not a valuable contribution. Sorry folks.", "created_at": "2018-01-23 09:08:17", "user": 703563, "id": 359725830}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\nSome links to images has expired in [association_basics.md](https://github.com/rails/rails/blob/master/guides/source/association_basics.md), so I updated them so that the page shows the images correctly.\r\n", "labels": [], "number": 31619, "updated_at": "2018-01-02 06:46:15", "user": 7028383, "closed_at": "2018-01-02 06:46:15", "id": 285360737, "title": "[ci skip]  Updated the links to images in association_basics.md", "url": "https://api.github.com/repos/rails/rails/issues/31619", "created_at": "2018-01-02 06:05:04", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354707438", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-02 06:05:06", "user": 7468109, "id": 354707438}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354710333", "text": "Guides are supposed to be read in http://guides.rubyonrails.org. The .md file in the repo is source code.\r\n\r\n", "created_at": "2018-01-02 06:46:15", "user": 987638, "id": 354710333}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "This is an updated and combined version of https://github.com/rails/rails/pull/9620 and https://github.com/rails/rails/pull/9640.\r\n\r\nFor details and reasoning of this useful feature, please read [first PR's description](https://github.com/rails/rails/pull/9620) and for why `priority_unique` option is should be useful please read [discussion](https://github.com/rails/rails/pull/9620#discussion-diff-3307962).", "labels": [], "number": 31618, "updated_at": "2018-01-03 22:39:03", "user": 5657035, "closed_at": "None", "id": 285350807, "title": "Add priority options for form.select, options_for_select and options_from_collection_for_select", "url": "https://api.github.com/repos/rails/rails/issues/31618", "created_at": "2018-01-02 03:39:15", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354699086", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kaspth (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-02 03:39:18", "user": 7468109, "id": 354699086}], "assignees": [350807, 350807], "state": "open", "is-pull-request": true}
{"reactions": {"+1": [5352, 877224]}, "text": "An empty string is an invalid value in Ruby's range class. So need to handle `Float::INFINITY` as it is and cast it in `encode_range`.\r\n\r\nFixes #31612", "labels": [], "number": 31617, "updated_at": "2018-01-03 21:45:01", "user": 987638, "closed_at": "2018-01-03 21:44:55", "id": 285348552, "title": "Correctly handle infinity value in PostgreSQL range type", "url": "https://api.github.com/repos/rails/rails/issues/31617", "created_at": "2018-01-02 03:05:42", "comments": [], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce not having :coffee:\r\n\r\nInstall Rails as new. I followed [this particular guide](https://bendyworks.com/blog/installing-ruby-on-rails-edge-with-bundler) because I wanted to [track master](https://github.com/rails/rails) and also install Rails via Bundler but I'm presuming that makes no difference to the outcome, please correct me if I'm wrong. Choose the ```--skip-coffee``` parameter. I think my whole command line was ```bundle exec rails new . --dev --skip-coffee --skip-turbolinks --skip-spring```.\r\n\r\n### Expected behavior\r\nRails as normal. I'd be happy to find out I've done something stupid and that the fault lies with me and not Rails.\r\n\r\n### Actual behavior\r\nAfter creating a dummy scaffold and navigating to the correct page Rails (Sprockets autoloader) complains that it can't find file ```coffee_script``` from the line ```<%= stylesheet_link_tag    'application', media: 'all' %>``` in file ```app/views/layouts/application.html.erb```\r\n\r\n### System configuration\r\n**Rails version**: 5.2.0.beta2 \r\n\r\n**Ruby version**: ruby 2.5.0-p0\r\n", "labels": [], "number": 31616, "updated_at": "2018-01-03 20:49:33", "user": 109220, "closed_at": "2018-01-02 00:35:51", "id": 285339285, "title": "Don't want :coffee:", "url": "https://api.github.com/repos/rails/rails/issues/31616", "created_at": "2018-01-02 00:27:12", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354688317", "text": "Master requires coffeescript, because [we have code written in coffeescript](https://github.com/rails/rails/search?l=CoffeeScript). (It gets precompiled to JS during the release process.)", "created_at": "2018-01-02 00:35:51", "user": 1034, "id": 354688317}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354754961", "text": "Is this always going to be the case? Shouldn't the ```--skip-coffee``` command line option be removed in that case?\r\n\r\nI think having a hard requirement on CoffeeScript is a bad idea for a number of reasons.\r\n\r\n- you'll get more users of Rails if you _support_ CoffeeScript but don't _require_ it\r\n- you'll get more contributors to Rails if the client-side internals are written in JavaScript, not CoffeeScript\r\n- Even though Rails is batteries included and convention over configuration you could always choose to opt out of the stuff you didn't want – for instance Turbolinks, or Spring, or whatever …\r\n- Being able to remove what you don't want allows you to slim down your install, this is kind of powerful psychologically", "created_at": "2018-01-02 12:15:36", "user": 109220, "id": 354754961}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354759512", "text": "As I said, the option works fine when using the released gems; it's just incompatible with using `--dev` to work directly against master.\r\n\r\nThanks for your concern, but I think we do okay with getting users.", "created_at": "2018-01-02 12:46:35", "user": 1034, "id": 354759512}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354760638", "text": "No need for the snark @matthewd .\r\n\r\nI didn't understand that you meant that if I target master using ```--dev``` that this disables ```--skip-coffee``` and that releases work differently. Are there any other things that ```--dev``` does that I need to know about? This needs to be documented somewhere! What I thought you meant was that from now on I wouldn't be able to disable CoffeeScript.\r\n\r\nAnd every user counts. And I'm one of them.", "created_at": "2018-01-02 12:54:01", "user": 109220, "id": 354760638}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354780476", "text": "This got defensive quickly due to a simple misunderstanding of where the 'hard requirement' lies.\r\n\r\n@igravious This has been closed as Not A Bug, but you're welcome to open a pull request to make a small note of this behavior; perhaps in the contributing guides, [here](https://github.com/rails/rails/blob/921b877c2fd51cc0abdcf0ef6ca3528808047056/guides/source/contributing_to_ruby_on_rails.md#running-an-application-against-your-local-branch)? Seems like that should be a happy path for everyone.", "created_at": "2018-01-02 14:42:38", "user": 2430490, "id": 354780476}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355123123", "text": "Thanks for your calm words @chrisarcand . I've been chatting with a couple of people in the RubyOnRails IRC channel in my attempt to get to the bottom of the exact behaviour so that it can be documented. A small note in the appropriate guide should, as you say, make everyone happy.", "created_at": "2018-01-03 20:49:33", "user": 109220, "id": 355123123}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Allow `type_for_attribute(:column_name)` to work same as `type_for_attribute(\"column_name\")`.\r\nCloses #31611 — previously for symbols it behaved same as for non-existent column name, returned an identity type that did no casting, which was easy to miss when calling as it doesn't fail loudly.\r\nSimilar to `column_for_attribute` that already accepts both string and symbol.\r\n\r\n[first-time I'm touching Rails code, please review carefully :-)]\r\n", "labels": [], "number": 31615, "updated_at": "2018-01-29 01:46:36", "user": 273688, "closed_at": "2018-01-29 01:46:36", "id": 285331458, "title": "Allow type_for_attribute(:symbol)", "url": "https://api.github.com/repos/rails/rails/issues/31615", "created_at": "2018-01-01 21:50:14", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354728874", "text": "Close-cycling to rerun Travis, hope it's fixed after 13afd2cfdc8c83037b0739ca8a072ac4badb8afd passed.", "created_at": "2018-01-02 09:33:38", "user": 273688, "id": 354728874}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354750559", "text": "Travis mostly passes, except 3 builds failed with `Package 'ffmpeg' has no installation candidate\r\n`, all due to errors accessing `ppa:mc3man/trusty-media`.  There are many more ppa errors, so I assume this is just network/ubuntu server flakiness...\r\n\r\nruby 2.3.5 GEM=ap,ac https://travis-ci.org/rails/rails/jobs/324062028#L506\r\nruby 2.4.2 GEM=ar:mysql2 https://travis-ci.org/rails/rails/jobs/324062041#L505\r\nruby 2.3.5 GEM=aj:integration https://travis-ci.org/rails/rails/jobs/324062060#L457", "created_at": "2018-01-02 11:46:30", "user": 273688, "id": 354750559}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361112158", "text": "I agree the method should accept either a string or symbol. \r\n\r\n> OK, but who reads that when writing code? I strongly expect any API taking column names to either support both strings and symbols, OR raise an exception.\r\n> The current behavior is really bug-prone because (like for any non-existent attribute) it seems to succeed but doesn't actually cast values.\r\n\r\nThis exact scenario has happened: 796d8599f384c7da41318695028d60e62738beb0\r\nFixing that bug was actually my first rails contribution 😄 . Looking back, I probably should have fixed it by changing `type_for_attribute`. Can you remove the now superfluous calls to `to_s` from my previous commit.", "created_at": "2018-01-29 00:42:40", "user": 13696143, "id": 361112158}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361112249", "text": "r? @kamipo \r\nHm, rails-bot doesn't seem to want to add a reviewer.", "created_at": "2018-01-29 00:43:41", "user": 13696143, "id": 361112249}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/361118395", "text": "Looks fine to me since most public APIs (`column_for_attribute`, `read_attribute`, `write_attribute`, `has_attribute?`, `attribute_method?`, `table_name=`, `primary_key=`, `inheritance_column=`, `ignored_columns`, and more) allow both strings and symbols, and the `type_for_attribute` has already been public API since 12cd2c494d9c6cbec0594b8e63228fda9741e10d.", "created_at": "2018-01-29 01:46:05", "user": 12642, "id": 361118395}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n1. Install ruby 2.4.1 via rbenv. Install rails 5.4.1. Running them in Fedora 25 is a plus.\r\n2. Download/clone this source code: https://github.com/enatividad/sen_sys_public/tree/development\r\n3. Note that `/config/initializers/0_custom_config.rb` says `Rails.application.config.active_record.schema_format = :sql`.\r\n4. Run `bin/setup` (which runs `bin/rails db:setup').\r\n\r\n(Guidelines for creating a bug report are [available\r\nhere](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report))\r\n\r\n### Expected behavior\r\nThe database loads `structure.sql'.\r\n\r\n### Actual behavior\r\nI get a runtime error instead.\r\n```\r\n/home/enatividad/workspace/sen_sys/db/schema.rb doesn't exist yet. Run `rails db:migrate` to create it, then try again. If you do not intend to use a database, you should instead alter /home/enatividad/workspace/sen_sys/config/application.rb to limit the frameworks that will be loaded.\r\n```\r\n\r\nThis didn't happen until a few commits were made.\r\n\r\n### System configuration\r\n**Operating System**: Fedora 25\r\n\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.4.1\r\n", "labels": [], "number": 31614, "updated_at": "2018-01-03 14:05:07", "user": 9736478, "closed_at": "2018-01-02 01:18:56", "id": 285324440, "title": "bin/rails db:setup ignores application configuration (Rails.application.config.active_record.schema_format = :sql)", "url": "https://api.github.com/repos/rails/rails/issues/31614", "created_at": "2018-01-01 19:28:33", "comments": [{"reactions": {"+1": [9736478]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354672589", "text": "I can confirm this acts as reported, _however_, could you try putting `config.active_record.schema_format = :sql` into your `config/environments/development.rb` and then running `bin/setup` and report back? I got different behavior once I did so.", "created_at": "2018-01-01 19:50:25", "user": 2028176, "id": 354672589}, {"reactions": {"+1": [9736478]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354690629", "text": "This because `db:setup` task set config before load environment files. \r\nBut that behavior changed to load environment files before set config with #31135. So this issue will not happen on Rails 5.2. \r\nIn Rails 5.1.4, please set `schema_format` in `config/application.rb`. Like following. \r\n\r\n```diff \r\ndiff --git a/config/application.rb b/config/application.rb\r\nindex bef7884..9a9563b 100644\r\n--- a/config/application.rb\r\n+++ b/config/application.rb\r\n@@ -24,5 +24,7 @@ module SenSys\r\n     # Settings in config/environments/* take precedence over those specified here.\r\n     # Application configuration should go into files in config/initializers\r\n     # -- all .rb files in that directory are automatically loaded.\r\n+\r\n+    config.active_record.schema_format = :sql\r\n   end\r\n end \r\n``` \r\n\r\nThanks!\r\n", "created_at": "2018-01-02 01:18:55", "user": 987638, "id": 354690629}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355019124", "text": "Placing the `active_record.schema_format` configuration in development.rb or application.rb seems to fix the problem. Thank you for your hard work!\r\n  ", "created_at": "2018-01-03 14:04:48", "user": 9736478, "id": 355019124}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Related to https://github.com/rails/rails/issues/31576", "labels": [], "number": 31613, "updated_at": "2018-01-01 18:09:28", "user": 17269118, "closed_at": "2018-01-01 18:00:44", "id": 285317831, "title": "Correction of api documentation", "url": "https://api.github.com/repos/rails/rails/issues/31613", "created_at": "2018-01-01 17:07:44", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354664109", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @rafaelfranca (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2018-01-01 17:07:57", "user": 7468109, "id": 354664109}, {"reactions": {"+1": [2041827]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354666601", "text": "Per https://github.com/rails/rails/pull/31579#issuecomment-354233411, we prefer the original form because it’s equivalent and easier to read.", "created_at": "2018-01-01 18:00:44", "user": 94129, "id": 354666601}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "With changes within PR #30725 , I can't store a `Range` object with `Float::INFINITY` (e.g. `1..Float::INFINITY`) into PostgreSQL Range type column.\r\n\r\n### Steps to reproduce\r\n\r\n1. Start PostgreSQL server\r\n1. Create `test_ar_range` database\r\n   - `$ createdb test_ar_range`\r\n1. Run https://gist.github.com/juno/630dc277dc3dae1d69101d059e3ee14e\r\n   - `$ ruby test.rb`\r\n\r\n### Expected behavior\r\n\r\nI can set and store a `Range` object with `Float::INFINITY` to PostgreSQL Range type column.\r\n\r\n<details>\r\n<summary>Test results with activerecord 5.1.4</summary>\r\n\r\n```\r\n$ ruby -v\r\nruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-darwin17]\r\n\r\n$ ruby test.rb\r\nFetching gem metadata from https://rubygems.org/...............\r\nResolving dependencies...\r\nUsing concurrent-ruby 1.0.5\r\nUsing i18n 0.9.1\r\nUsing minitest 5.10.3\r\nUsing thread_safe 0.3.6\r\nUsing tzinfo 1.2.4\r\nUsing activesupport 5.1.4\r\nUsing activemodel 5.1.4\r\nUsing arel 8.0.0\r\nUsing activerecord 5.1.4\r\nUsing bundler 1.16.1\r\nUsing pg 0.21.0\r\n-- create_table(:posts, {:force=>true})\r\nD, [2018-01-01T23:19:07.853022 #13828] DEBUG -- :    (10.5ms)  DROP TABLE IF EXISTS \"posts\"\r\nD, [2018-01-01T23:19:07.863835 #13828] DEBUG -- :    (10.3ms)  CREATE TABLE \"posts\" (\"id\" bigserial primary key, \"range\" int4range)\r\n   -> 0.0543s\r\nD, [2018-01-01T23:19:07.954145 #13828] DEBUG -- :   ActiveRecord::InternalMetadata Load (0.7ms)  SELECT  \"ar_internal_metadata\".* FROM \"ar_internal_metadata\" WHERE \"ar_internal_metadata\".\"key\" = $1 LIMIT $2  [[\"key\", \"environment\"], [\"LIMIT\", 1]]\r\nD, [2018-01-01T23:19:07.967169 #13828] DEBUG -- :    (0.3ms)  BEGIN\r\nD, [2018-01-01T23:19:07.969003 #13828] DEBUG -- :    (0.3ms)  COMMIT\r\nRun options: --seed 42739\r\n\r\n# Running:\r\n\r\nD, [2018-01-01T23:19:08.012591 #13828] DEBUG -- :    (0.8ms)  BEGIN\r\nD, [2018-01-01T23:19:08.018551 #13828] DEBUG -- :   SQL (2.7ms)  INSERT INTO \"posts\" (\"range\") VALUES ($1) RETURNING \"id\"  [[\"range\", \"[1,]\"]]\r\nD, [2018-01-01T23:19:08.020607 #13828] DEBUG -- :    (1.2ms)  COMMIT\r\n.\r\n\r\nFinished in 0.031658s, 31.5876 runs/s, 31.5876 assertions/s.\r\n\r\n1 runs, 1 assertions, 0 failures, 0 errors, 0 skips\r\n```\r\n</details>\r\n\r\n\r\n### Actual behavior\r\n\r\nWhen set and store a `Range` object with `Float::INFINITY` to PostgreSQL Range type column, `ArgumentError: bad value for range` will raise.\r\n\r\n<details>\r\n<summary>Test results with activerecord 5.2.0.beta2</summary>\r\n\r\n```\r\n$ ruby -v\r\nruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-darwin17]\r\n\r\n$ ruby test.rb\r\nFetching gem metadata from https://rubygems.org/...............\r\nResolving dependencies...\r\nUsing concurrent-ruby 1.0.5\r\nUsing i18n 0.9.1\r\nUsing minitest 5.10.3\r\nUsing thread_safe 0.3.6\r\nUsing tzinfo 1.2.4\r\nUsing activesupport 5.2.0.beta2\r\nUsing activemodel 5.2.0.beta2\r\nUsing arel 9.0.0\r\nUsing activerecord 5.2.0.beta2\r\nUsing bundler 1.16.1\r\nUsing pg 0.21.0\r\n-- create_table(:posts, {:force=>true})\r\nD, [2018-01-01T23:19:42.313546 #13902] DEBUG -- :    (6.5ms)  DROP TABLE IF EXISTS \"posts\"\r\nD, [2018-01-01T23:19:42.326049 #13902] DEBUG -- :    (12.1ms)  CREATE TABLE \"posts\" (\"id\" bigserial primary key, \"range\" int4range)\r\n   -> 0.0610s\r\nD, [2018-01-01T23:19:42.408356 #13902] DEBUG -- :   ActiveRecord::InternalMetadata Load (0.8ms)  SELECT  \"ar_internal_metadata\".* FROM \"ar_internal_metadata\" WHERE \"ar_internal_metadata\".\"key\" = $1 LIMIT $2  [[\"key\", \"environment\"], [\"LIMIT\", 1]]\r\nD, [2018-01-01T23:19:42.417462 #13902] DEBUG -- :    (0.2ms)  BEGIN\r\nD, [2018-01-01T23:19:42.418690 #13902] DEBUG -- :    (0.2ms)  COMMIT\r\nRun options: --seed 24015\r\n\r\n# Running:\r\n\r\nD, [2018-01-01T23:19:42.451155 #13902] DEBUG -- :    (0.2ms)  BEGIN\r\nD, [2018-01-01T23:19:42.452297 #13902] DEBUG -- :    (0.3ms)  ROLLBACK\r\nE\r\n\r\nFinished in 0.019950s, 50.1253 runs/s, 0.0000 assertions/s.\r\n\r\n  1) Error:\r\nBugTest#test_association_stuff:\r\nArgumentError: bad value for range\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/connection_adapters/postgresql/oid/range.rb:38:in `initialize'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/connection_adapters/postgresql/oid/range.rb:38:in `new'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/connection_adapters/postgresql/oid/range.rb:38:in `serialize'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activemodel-5.2.0.beta2/lib/active_model/attribute.rb:55:in `value_for_database'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/relation/query_attribute.rb:13:in `value_for_database'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/connection_adapters/abstract/quoting.rb:144:in `block in type_casted_binds'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/connection_adapters/abstract/quoting.rb:144:in `map'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/connection_adapters/abstract/quoting.rb:144:in `type_casted_binds'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/connection_adapters/postgresql_adapter.rb:590:in `exec_no_cache'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/connection_adapters/postgresql_adapter.rb:580:in `execute_and_clear'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/connection_adapters/postgresql/database_statements.rb:81:in `exec_query'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/connection_adapters/abstract/database_statements.rb:117:in `exec_insert'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/connection_adapters/postgresql/database_statements.rb:115:in `exec_insert'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/connection_adapters/abstract/database_statements.rb:149:in `insert'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/connection_adapters/abstract/query_cache.rb:21:in `insert'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/persistence.rb:188:in `_insert_record'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/persistence.rb:727:in `_create_record'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/counter_cache.rb:180:in `_create_record'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/locking/optimistic.rb:77:in `_create_record'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/attribute_methods/dirty.rb:137:in `_create_record'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/callbacks.rb:342:in `block in _create_record'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:132:in `run_callbacks'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:816:in `_run_create_callbacks'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/callbacks.rb:342:in `_create_record'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/timestamp.rb:95:in `_create_record'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/persistence.rb:701:in `create_or_update'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/callbacks.rb:338:in `block in create_or_update'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:98:in `run_callbacks'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activesupport-5.2.0.beta2/lib/active_support/callbacks.rb:816:in `_run_save_callbacks'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/callbacks.rb:338:in `create_or_update'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/persistence.rb:297:in `save!'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/validations.rb:52:in `save!'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/transactions.rb:315:in `block in save!'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/transactions.rb:386:in `block in with_transaction_returning_status'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/connection_adapters/abstract/database_statements.rb:254:in `block in transaction'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/connection_adapters/abstract/transaction.rb:230:in `block in within_new_transaction'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/2.5.0/monitor.rb:226:in `mon_synchronize'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/connection_adapters/abstract/transaction.rb:227:in `within_new_transaction'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/connection_adapters/abstract/database_statements.rb:254:in `transaction'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/transactions.rb:212:in `transaction'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/transactions.rb:383:in `with_transaction_returning_status'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/transactions.rb:315:in `save!'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/suppressor.rb:48:in `save!'\r\n    /Users/juno/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/activerecord-5.2.0.beta2/lib/active_record/persistence.rb:53:in `create!'\r\n    test.rb:49:in `test_association_stuff'\r\n\r\n1 runs, 0 assertions, 0 failures, 1 errors, 0 skips\r\n```\r\n</details>\r\n\r\n\r\n### System configuration\r\n**Rails version**: 5.2.0.beta2\r\n\r\n**Ruby version**: 2.5.0\r\n\r\n**PostgreSQL version**: 9.6.6\r\n", "labels": ["activerecord", "attached PR"], "number": 31612, "updated_at": "2018-01-03 21:44:55", "user": 5352, "closed_at": "2018-01-03 21:44:55", "id": 285311086, "title": "ActiveRecord 5.2.0.beta2: Float::INFINITY not serialized correctly with PostgreSQL Range type", "url": "https://api.github.com/repos/rails/rails/issues/31612", "created_at": "2018-01-01 14:48:08", "comments": [], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nI have a float column \"quota_desired\".  (I'm using postgres, but from code this seems adapter-independent.)\r\nCalling `type_for_attribute(\"quota_desired\")` works well, but on a symbol `type_for_attribute(:quota_desired)` returns a do-nothing Type::Value.\r\n\r\nI'm working on a PR to add tests & support symbols too, let me know if something else is desired.\r\n\r\n### Expected behavior\r\nCurrent docstring says:\r\n> +attr_name+ The name of the attribute to retrieve the type for. Must be a string.\r\n\r\nOK, but who reads that when writing code?  I strongly expect any API taking column names to either support both strings and symbols, OR raise an exception.\r\nThe current behavior is really bug-prone because (like for any non-existent attribute) it seems to succeed but doesn't actually cast values.\r\n\r\n(I know very little about the attributes/types API, don't know why silently returning a do-nothing type for non-existent attributes is good, but that has explicit code & tests.)\r\n\r\n=> On grounds of \"least surprise\", and given that `column_for_attribute` already works on both strings and symbols (it does `name = name.to_s`), I propose `type_for_attribute` should support symbols too.\r\n\r\n### Actual behavior\r\n```\r\n(byebug) model.type_for_attribute(\"quota_desired\")\r\n#<ActiveModel::Type::Float:0x00562f7d4a63e0 @precision=nil, @scale=nil, @limit=nil>\r\n(byebug) model.type_for_attribute(:quota_desired)\r\n#<ActiveModel::Type::Value:0x00562f97895a40 @precision=nil, @scale=nil, @limit=nil>\r\n(byebug) model.type_for_attribute(\"quota_desired\").type\r\n:float\r\n(byebug) model.type_for_attribute(:quota_desired).type\r\nnil\r\n(byebug) model.type_for_attribute(\"no_such_attribute\").type\r\nnil\r\n\r\n(byebug) model.type_for_attribute(\"quota_desired\").cast(4)\r\n4.0\r\n(byebug) model.type_for_attribute(:quota_desired).cast(4)\r\n4\r\n\r\n(byebug)  model.column_for_attribute(\"quota_desired\").type\r\n:float\r\n(byebug) model.column_for_attribute(:quota_desired).type\r\n:float\r\n```\r\n\r\n(This case was extra nasty to me because 4 == 4.0 but 4.hash != 4.0.hash.  But that's a ruby complaint, not rails.  We had code that builds a hash of records by some columns, type-cast, except it didn't cast because we used symbols.  At least now I know it didn't work :-)\r\n\r\n### System configuration\r\n**Rails version**: 5.0.2\r\n**Ruby version**: ruby 2.3.4p301\r\n", "labels": [], "number": 31611, "updated_at": "2018-01-29 01:46:36", "user": 273688, "closed_at": "2018-01-29 01:46:36", "id": 285308225, "title": "type_for_attribute(a_symbol) returns identity type", "url": "https://api.github.com/repos/rails/rails/issues/31611", "created_at": "2018-01-01 13:47:27", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354680326", "text": "Missed the ActiveRecord-specific issue template, here goes:\r\n\r\n```\r\n# frozen_string_literal: true\r\n\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_type_for_attribute_symbol\r\n    post = Post.create!\r\n\r\n    assert_equal :integer, post.type_for_attribute(:id).type\r\n    assert_equal 1, post.type_for_attribute(:id).cast(\"1\")\r\n    assert_equal :integer, Post.type_for_attribute(:id).type\r\n    assert_equal 1, Post.type_for_attribute(:id).cast(\"1\")\r\n  end\r\nend\r\n```", "created_at": "2018-01-01 22:00:43", "user": 273688, "id": 354680326}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "\r\n\r\n", "labels": [], "number": 31610, "updated_at": "2018-01-07 16:16:44", "user": 621238, "closed_at": "2018-01-07 16:03:54", "id": 285273765, "title": "Improve the deprecation message for using subclass of Rails::Application to start the Rails server", "url": "https://api.github.com/repos/rails/rails/issues/31610", "created_at": "2017-12-31 19:49:11", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355281361", "text": "I don't know what is going on with CI here and even though I don't think this is related to your change it's too red to merge. Can you rebase with master and force push? ", "created_at": "2018-01-04 13:25:44", "user": 1080678, "id": 355281361}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355830153", "text": "Rebased with latest master. The failure might be related to https://github.com/travis-ci/travis-ci/labels/2017-Q4-trusty-env-update", "created_at": "2018-01-07 15:24:54", "user": 621238, "id": 355830153}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355832713", "text": "Tests are passing now", "created_at": "2018-01-07 16:03:12", "user": 621238, "id": 355832713}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nLooks at this snapshot from my terminal.\r\n\r\nhttps://gist.github.com/sebastiandeutsch/d7e021198b36cab54ecb9370a6aaf519\r\n\r\n### Expected behavior\r\nIt should delete all the records including the attached documents.\r\n\r\n### Actual behavior\r\nIt blocks and when I hit CTRL+D it might leave the database in an inconsistent state.\r\n\r\n### System configuration\r\nRails 5.2.0.beta2\r\nRuby 2.4.0\r\n\r\n", "labels": [], "number": 31609, "updated_at": "2017-12-31 18:42:52", "user": 25593, "closed_at": "None", "id": 285269976, "title": "destroy_all blocks the pry with ActiveStorage purge job", "url": "https://api.github.com/repos/rails/rails/issues/31609", "created_at": "2017-12-31 18:01:41", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354618538", "text": "Maybe related to https://github.com/rails/rails/issues/30937", "created_at": "2017-12-31 18:41:03", "user": 78363, "id": 354618538}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354618612", "text": "I'm using Postgres so maybe it's not limited to SQLite.", "created_at": "2017-12-31 18:42:52", "user": 25593, "id": 354618612}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n1. Fragement cache some pages using any caching engine\r\n2. Restart your server\r\n3. Cache is cold\r\n\r\n### Expected behavior\r\n\r\nI'd like the ability to keep my cache warm between server restarts\r\n\r\n### Actual behavior\r\n\r\nCache is not warm between restarts.\r\n\r\n### System configuration\r\n**Rails version**:\r\n\r\n4.2.10\r\n\r\n**Ruby version**:\r\n2.2.1p85", "labels": [], "number": 31608, "updated_at": "2017-12-31 17:24:44", "user": 339763, "closed_at": "2017-12-31 17:24:44", "id": 285267454, "title": "Fragment Cache - always cold on server restart/reload?", "url": "https://api.github.com/repos/rails/rails/issues/31608", "created_at": "2017-12-31 17:00:00", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354614740", "text": "Are you using the memory store? If not, which cache store are you using?", "created_at": "2017-12-31 17:08:12", "user": 94129, "id": 354614740}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354614853", "text": "This happens for me when using both file & dalli (memcached).", "created_at": "2017-12-31 17:10:19", "user": 339763, "id": 354614853}, {"reactions": {"+1": [94129]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354615486", "text": "Actually @georgeclaghorn this looks like it might be an issue with [jsonapi-resources](https://github.com/cerebris/jsonapi-resources).\r\n\r\nI'm opening an issue there instead.  I'll re-open if it turns out not to be the culprit.", "created_at": "2017-12-31 17:24:44", "user": 339763, "id": 354615486}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Fixes https://github.com/rails/rails/issues/31603.", "labels": [], "number": 31607, "updated_at": "2017-12-31 18:13:06", "user": 5657035, "closed_at": "2017-12-31 15:34:54", "id": 285261470, "title": "Fix recreating partial indexes after alter table for sqlite", "url": "https://api.github.com/repos/rails/rails/issues/31607", "created_at": "2017-12-31 14:56:08", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354608080", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @rafaelfranca (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-31 14:56:11", "user": 7468109, "id": 354608080}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\n- Bump license years for 2018", "labels": [], "number": 31606, "updated_at": "2018-01-01 11:33:39", "user": 15371677, "closed_at": "2017-12-31 18:25:46", "id": 285257902, "title": "Bump license years for 2018", "url": "https://api.github.com/repos/rails/rails/issues/31606", "created_at": "2017-12-31 13:38:03", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354604269", "text": "r? @georgeclaghorn\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2017-12-31 13:38:13", "user": 7468109, "id": 354604269}, {"reactions": {"hooray": [15371677]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354617961", "text": "thanks :-) \r\n\r\nHappy new year! ", "created_at": "2017-12-31 18:25:49", "user": 3948, "id": 354617961}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354638112", "text": "https://github.com/rails/rails/blob/master/activerecord/lib/active_record.rb missing here", "created_at": "2018-01-01 06:02:06", "user": 22680876, "id": 354638112}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354640151", "text": "Fixed 5e4b70461dfd869c7d96b2528e666a9dd8e29183. Thanks!", "created_at": "2018-01-01 07:18:33", "user": 12642, "id": 354640151}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354648769", "text": "How about putting it to `2004-present` like how Facebook does it? [Here](https://github.com/facebook/react/blob/master/LICENSE#L3) is an example.", "created_at": "2018-01-01 11:33:39", "user": 703563, "id": 354648769}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "In #27425 I added channel prefix support to the redis & evented_redis ActionCable connection adapters. The decision to abstract channel prefixes to it's own module was due to there being two redis adapters at the time. After #30945, there is only one redis adapter so the abstraction isn't needed. I see two options and am seeking feedback.\r\n\r\nOption 1: Just leave it alone.\r\n - It *could potentially* be useful for some unknown adapter that's added in the future, but seems to violate the YAGNI principal.\r\n\r\nOption 2: Roll the channel prefix support directly into the redis adapter and drop the abstraction.\r\n- It would clean up the code a bit and hopefully reduce technical debt.\r\n\r\nThoughts?\r\n", "labels": [], "number": 31605, "updated_at": "2018-01-01 18:26:25", "user": 23177703, "closed_at": "2018-01-01 18:26:25", "id": 285243008, "title": "Should channel prefix support be rolled into the ActionCable Redis adapter?", "url": "https://api.github.com/repos/rails/rails/issues/31605", "created_at": "2017-12-31 06:37:32", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354667888", "text": "Please use the [rubyonrails-core](https://groups.google.com/forum/#!forum/rubyonrails-core) mailing list to discuss this. We reserve the issue tracker for bug reports.\r\n\r\nMy two cents: fold it back into `RedisAdapter`. Feel free to open a PR.", "created_at": "2018-01-01 18:26:25", "user": 94129, "id": 354667888}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Commands than run inside a `transaction` block in a reverted migration ran uninverted, as is. \r\nSo, e.g. reverting this a bit contrived migration will fail:\r\n```\r\nclass CreateComments < ActiveRecord::Migration[5.2]\r\n  def change\r\n    transaction do\r\n      create_table :posts do |t|\r\n        t.string :title\r\n        t.text :body\r\n\r\n        t.timestamps\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\nBut, intuitively, it should be reverted and table should be removed.\r\n\r\nThis change fixes that problems with uninverted `transaction` blocks.\r\n\r\nOriginates from outdated https://github.com/rails/rails/pull/22141 and addresses only new migrations.", "labels": [], "number": 31604, "updated_at": "2018-01-20 00:25:37", "user": 5657035, "closed_at": "None", "id": 285238207, "title": "Fix `transaction` reverting for migrations", "url": "https://api.github.com/repos/rails/rails/issues/31604", "created_at": "2017-12-31 03:48:18", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354583623", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @eileencodes (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-31 03:48:21", "user": 7468109, "id": 354583623}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357813550", "text": "@eileencodes thank you for review. Fixed your notes.\r\nIs there anything that I should do?", "created_at": "2018-01-15 23:42:03", "user": 5657035, "id": 357813550}], "assignees": [1080678, 1080678], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nI created an executable test case for this bug: https://gist.github.com/celsworth/d3a2fe16d23f57a514655662b1d12cb7\r\n\r\n### Expected behavior\r\n\r\nThe test case schema creates a table with a partial unique index, on the `test1` column for rows where `test1=t`. This works as expected. Multiple rows with `test1=f` can be inserted at this point as the index ignores them.\r\n\r\nThe migration then performs any operation that requires the table to be dropped and recreated - which is pretty much anything other than adding a column or renaming the table in SQLite. So removing a column is sufficient. When the table is recreated, the partial aspect of the index should be retained as was originally specified.\r\n\r\n### Actual behavior\r\n\r\nWhen the table is recreated as part of a migration that has to recreate the table, the partial aspect of the index is lost:\r\n\r\n```\r\nD, [2017-12-31T00:25:58.775204 #69138] DEBUG -- :    (0.1ms)  DROP TABLE \"tests\"\r\nD, [2017-12-31T00:25:58.775675 #69138] DEBUG -- :    (0.1ms)  CREATE TABLE \"tests\" (\"id\" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, \"test1\" boolean DEFAULT NULL)\r\n...\r\nD, [2017-12-31T00:25:58.776285 #69138] DEBUG -- :    (0.1ms)  CREATE UNIQUE INDEX \"index_tests_on_test1\" ON \"tests\" (\"test1\")\r\n```\r\n\r\nAccordingly, the tests I provided fail because now the unique index covers rows where `test1=f` as well, so only one can be inserted and the tests fail with a unique index violation.\r\n\r\n### System configuration\r\n**Rails version**: 5.1.0\r\n\r\n**Ruby version**: 2.4.2p198\r\n", "labels": [], "number": 31603, "updated_at": "2017-12-31 15:34:54", "user": 2658891, "closed_at": "2017-12-31 15:34:54", "id": 285232296, "title": "Partial indexes not recreated correctly after migrations on SQLite", "url": "https://api.github.com/repos/rails/rails/issues/31603", "created_at": "2017-12-31 00:33:02", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354577673", "text": "Providing test case as an upload as well so it survives longer than the gist will\r\n\r\n[active_record_migrations_gem.rb.txt](https://github.com/rails/rails/files/1594896/active_record_migrations_gem.rb.txt)", "created_at": "2017-12-31 00:39:39", "user": 2658891, "id": 354577673}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354584320", "text": "I can confirm also on master. I'm working on fix.", "created_at": "2017-12-31 04:13:43", "user": 5657035, "id": 354584320}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Before Rails 4.0, `config.cache_classes` determined whether application code was eager loaded. The `config.eager_load` option was introduced in https://github.com/rails/rails/pull/7225 to allow the two behaviours to be configured independently, but this documentation was never updated to reflect that change.", "labels": [], "number": 31602, "updated_at": "2017-12-31 06:07:58", "user": 432189, "closed_at": "2017-12-31 06:07:58", "id": 285229377, "title": "Clarify that config.eager_load controls eager loading [ci skip]", "url": "https://api.github.com/repos/rails/rails/issues/31602", "created_at": "2017-12-30 23:13:43", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354573928", "text": "r? @rafaelfranca\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2017-12-30 23:13:55", "user": 7468109, "id": 354573928}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [1859806]}, "text": "It seems the development environment is defaulting to :local storage service, regardless of what is set in development.rb.  I have chosen to use S3 in development (or, at least use it temporarily to make sure things are working)...but storage is still using localhost.\r\n\r\n### Steps to reproduce\r\n* create a dev bucket on S3\r\n* add the following to storage.yml\r\n\r\n      amazon_dev:\r\n          service: S3\r\n          access_key_id: <%= Rails.application.credentials.dig(:aws, :access_key_id) %>\r\n          secret_access_key: <%= Rails.application.credentials.dig(:aws, :secret_access_key) %>\r\n          region: us-east-1\r\n         bucket: development-bucket\r\n\r\n* add the following to development.rb\r\n\r\n      config.active_storage.service = :amazon_dev\r\n\r\n* restart server\r\n* refresh form page that includes form_with the following:\r\n\r\n      <%= f.file_field :avatar, direct_upload: true %>\r\n\r\n* inspect html on that form element\r\n\r\n### Expected behavior\r\nI would expect, since :amazon_dev, is set as the service in development.rb...that, files would be uploaded to S3.  I would expect to see the file field \"direct-upload-url\" to be an S3 url.\r\n\r\n### Actual behavior\r\nThe file field is still pointing to localhost storage, even though :amazon_dev set as storage service in development.rb\r\n\r\n      <input data-direct-upload-url=\"http://localhost:3000/rails/active_storage/direct_uploads\" type=\"file\" name=\"user[avatar]\" id=\"user_avatar\">\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 5.2.0.beta2\r\n\r\n**Ruby version**:\r\nruby 2.4.3p205 (2017-12-14 revision 61247) [x86_64-darwin17]\r\n", "labels": [], "number": 31601, "updated_at": "2017-12-30 23:21:31", "user": 536711, "closed_at": "2017-12-30 22:23:56", "id": 285226525, "title": "ActiveStorage using local direct-upload-url even when set to :amazon", "url": "https://api.github.com/repos/rails/rails/issues/31601", "created_at": "2017-12-30 22:04:54", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354571669", "text": "I only specified that I was inspecting the page HTML....however, I did submit the form and render the image successfully.  Inspecting the image path also indicates localhost.  It seems there may be some rails magic happening with the url in the BLOB.  But, after the image renders, should I not be seeing an S3 url?  I'm second guessing this as a bug, but I'll leave it open for now.", "created_at": "2017-12-30 22:21:37", "user": 536711, "id": 354571669}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354571773", "text": "This is the expected behavior. Active Storage’s JS library hits a stable app URL to request a signed, short-lived direct upload URL.", "created_at": "2017-12-30 22:23:55", "user": 94129, "id": 354571773}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354572203", "text": "Thanks @georgeclaghorn!  Sorry for a fake-bug :|", "created_at": "2017-12-30 22:31:08", "user": 536711, "id": 354572203}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354574245", "text": "No worries! This could probably be better documented.", "created_at": "2017-12-30 23:21:31", "user": 94129, "id": 354574245}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"heart": [6443532], "+1": [890117]}, "text": "### Summary\r\n`assert_difference` already supports multiple expressions but only when the expected difference is the same for all of them (`assert_difference [ 'Article.count', 'Post.count' ], 2`).\r\n\r\nThis pull-request allows to specify multiple numeric differences in the same assertion which is also very convenient to avoid deep block nesting.\r\n\r\n```ruby\r\nassert_difference 'Article.count' => 1, 'Notification.count' => 2 do\r\n  # post :create, params: { article: {...} }\r\nend\r\n```\r\n\r\n### Other Information\r\n\r\nImplementation: I also removed the `each_with_index`which seemed redundant with the usage of the `zip` method.\r\n", "labels": [], "number": 31600, "updated_at": "2018-01-18 20:20:35", "user": 4965921, "closed_at": "2018-01-18 20:20:35", "id": 285224974, "title": "Support hash as first argument in `assert_difference`.", "url": "https://api.github.com/repos/rails/rails/issues/31600", "created_at": "2017-12-30 21:32:07", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354569484", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @sgrif (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-30 21:32:19", "user": 7468109, "id": 354569484}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357367349", "text": "/cc @rafaelfranca @dhh I like this change, but I think this needs sign-off from a core team member\r\n\r\nr? @rafaelfranca ", "created_at": "2018-01-12 22:05:04", "user": 1529387, "id": 357367349}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357418556", "text": "I like the option to be able to declare multiple tests, but I’m not so keen on encouraging the string-eval approach further. I’d say that’s a deprecated form. If we have a way of letting the expression take multiple procs, then that’s probably the way to go instead.", "created_at": "2018-01-13 08:26:36", "user": 2741, "id": 357418556}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357425082", "text": "> I like the option to be able to declare multiple tests, but I’m not so keen on encouraging the string-eval approach further. I’d say that’s a deprecated form. If we have a way of letting the expression take multiple procs, then that’s probably the way to go instead.\r\n\r\nIt also works with multiple procs (I just pushed a testcase). \r\n\r\n@dhh Regarding the deprecation of the string-eval approach, I couldn't agree more and I was planning on submitting a third approach in a future pull-request which would be `ActiveRecord_Relation`.\r\n\r\n99% of the time when I'm using `assert_difference` it's on models, why should I bother with string-eval and procs when I could just write this:\r\n\r\n```ruby\r\n# Array\r\nassert_difference [Article, Post.published], 2 do\r\nend\r\n# Hash\r\nassert_difference Article => 1, Post.published => 2, Notification.sent => 4 do\r\nend\r\n```\r\n\r\nAnyway, I'm going off-topic, just wanted to know if you guys like this idea.\r\n", "created_at": "2018-01-13 10:40:53", "user": 4965921, "id": 357425082}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357431537", "text": "Looks good with the Proc approach. Let’s highlight that in the change log and the docs. Not loving the straight scope approach. Too much has to be inferred from that re: count. Thanks for working on this!", "created_at": "2018-01-13 12:30:11", "user": 2741, "id": 357431537}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357466895", "text": "Passing a custom error message seems to be broken here - I would expect this to work:\r\n\r\n```ruby\r\nassert_difference({ ->{ Article.count } => 1, ->{ Post.count } => 2 }, \"an article and two posts should be created\") do\r\n  # ...\r\nend", "created_at": "2018-01-13 21:00:04", "user": 432189, "id": 357466895}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357699713", "text": "@eugeneius Thanks, done !", "created_at": "2018-01-15 14:35:49", "user": 4965921, "id": 357699713}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357775782", "text": "Nice one 👍 ", "created_at": "2018-01-15 19:58:11", "user": 432189, "id": 357775782}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Hey Rails Devs,\r\n\r\nA bit of a newbie here, but it seems that following https://github.com/rails/rails/commit/e76c38ef1047ad3ffb25c1c639c38432a9228796 the ActionMailer documentation is messed up.\r\n\r\nFurther this change seems to be ill-documented in changelogs as I couldn't find any breaking change notifications?\r\n\r\nThere's a bunch of code floating around using new with constructions like\r\n\r\n    @obj ||= @mailer.send(:new, @mail_method, *@args).message\r\n\r\nfrom http://codelikeshit.com/tricky-action-mailer/\r\n\r\nwhich should now be broken.\r\n\r\nCheers,\r\n\r\nJeremy", "labels": [], "number": 31599, "updated_at": "2017-12-30 20:05:52", "user": 886523, "closed_at": "2017-12-30 20:05:52", "id": 285220083, "title": "Improving ActionMailer::new Documentation", "url": "https://api.github.com/repos/rails/rails/issues/31599", "created_at": "2017-12-30 19:39:31", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354564827", "text": "> the ActionMailer documentation is messed up\r\n\r\nCan you elaborate? The API docs look fine at a glance.\r\n\r\n> I couldn't find any breaking change notifications\r\n\r\n`ActionMailer::Base.new` was private before e76c38e, so the modification to its signature didn’t warrant a CHANGELOG entry. The blog post to which you linked explains Rails internals prior to that change; it doesn’t demonstrate a valid or emulable use of Action Mailer in a Rails app.", "created_at": "2017-12-30 19:49:01", "user": 94129, "id": 354564827}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354565322", "text": "> Can you elaborate? The API docs look fine at a glance.\r\n\r\nThe documentation says\r\n\r\n    # Instantiate a new mailer object. If +method_name+ is not +nil+, the mailer\r\n    # will be initialized according to the named method. If not, the mailer will\r\n    # remain uninitialized (useful when you only need to invoke the \"receive\"\r\n    # method, for instance).\r\n\r\nbut new no longer has a method_name parameter", "created_at": "2017-12-30 19:59:56", "user": 886523, "id": 354565322}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354565599", "text": "That comment was removed in d33bdef. The API docs will be updated when Rails 5.2 is released. (See [edgeapi.rubyonrails.org](http://edgeapi.rubyonrails.org) for a preview.)", "created_at": "2017-12-30 20:05:52", "user": 94129, "id": 354565599}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"hooray": [8575811]}, "text": "In profiling our application, I've found that `ActiveRecord::QueryMethods#get_value` and `ActiveRecord::QueryMethods#default_value_for` keep showing up near the top of the list. `#get_value` is called for every component of a relation whenever the arel AST needs to be generated and `#default_value_for` fetches the default value for a specific component whenever it wasn't provided by the user. \r\n\r\nWe can speed these up by putting the code for each individual method into their own definitions instead of centralizing into `#get_value`. Here's a gist with the proposed solution: https://gist.github.com/kddeisz/b05d4ad11e846db04b9c1ca471554f51. Basically every component gets its own instance variable and we use those to track the provided values instead of the `@values` hash. \r\n\r\nUsing this code I'm getting about a 20-35% speed increase on generating SQL, depending heavily on the query. I suspect we could get further gains by using an `attr_writer` for each of the components, as those methods are further optimized by ruby itself.\r\n\r\nI haven't been able to think of too many downsides for this, but I'd love someone with more intimate knowledge of the inner workings of AR to take a look and make sure I'm not crazy. If it's accepted, I'll be happy to put up a PR with the new code. For easier comparison with the existing code, here's the meat of what's changing: https://gist.github.com/kddeisz/b05d4ad11e846db04b9c1ca471554f51 versus https://github.com/rails/rails/blob/v5.2.0.beta2/activerecord/lib/active_record/relation/query_methods.rb#L61-L77.", "labels": [], "number": 31598, "updated_at": "2018-01-01 21:29:29", "user": 5093358, "closed_at": "2018-01-01 18:30:25", "id": 285218816, "title": "Performance: speeding up relation values", "url": "https://api.github.com/repos/rails/rails/issues/31598", "created_at": "2017-12-30 19:12:08", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354668137", "text": "Please open a PR. Substantial code changes like this are easier to review from a diff with CI test results than from a gist.", "created_at": "2018-01-01 18:30:25", "user": 94129, "id": 354668137}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nCreate a simple app, with a simple controller and view.\r\n\r\n$ rails _5.1.4_ new my_app\r\n$ cd my_app/\r\n$ bundle install && bundle update\r\n$ rails generate controller StaticPages index\r\n\r\nIn the StaticPages controller, change the `index` according to:\r\n\r\n```\r\ndef index\r\n    if cookies['_ga'].nil?\r\n        random_id = (0...9).map { ('0'..'9').to_a[rand(10)] }.join\r\n        timestamp = (Time.new().to_i*1000).to_s\r\n        cookies['_ga'] = {\r\n            value: \"1.2.#{random_id}.#{timestamp}\",\r\n            expires: 2.year.from_now,\r\n            domain: \"yourdomain.com\"\r\n        }\r\n    end\r\nend\r\n```\r\n\r\nAlso, please set you `routes.rb` according to:\r\n\r\n```\r\nRails.application.routes.draw do\r\n  root to: 'static_pages#index'\r\n  get 'static_pages/index'\r\nend\r\n```\r\n\r\nThen just launch the app:\r\n\r\n$ rails server -p 8080\r\n\r\n### Expected behavior\r\n\r\nI expected:\r\n\r\n1. the first request to bring back a response with a new cookie with a new value **OK**\r\n2. the second request sends the cookie value **OK**\r\n3. the second request brings back a response with the same cookie already created in the step 1 **NOK**.\r\n\r\n### Actual behavior\r\n\r\nIt is always generating a new cookie for the response, since it is not finding the cookie in the `request.cookies` or in the `cookies`. Actually, they are both `nil` (`request.cookies` and `cookies`)\r\n\r\nIf I just remove the \"_\" in the front of the cookie's name, it works as expected.\r\n\r\n### System configuration\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.4.0p0\r\n", "labels": [], "number": 31597, "updated_at": "2018-01-08 03:53:24", "user": 3641516, "closed_at": "2018-01-08 03:53:24", "id": 285204949, "title": "Cookies with names starting in underscore are ignored in the http request", "url": "https://api.github.com/repos/rails/rails/issues/31597", "created_at": "2017-12-30 14:18:51", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354576582", "text": "I could not reproduce your issue. I can get cookies that include underscoring in a name. \r\nCan you please provide a sample application that reproduces the issue?\r\n", "created_at": "2017-12-31 00:11:55", "user": 987638, "id": 354576582}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355235587", "text": "I also couldn't reproduce it with that configuration. Need more details on how to do so. Failing test would be ideal.", "created_at": "2018-01-04 09:26:07", "user": 703563, "id": 355235587}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355868528", "text": "@y-yagi and @shime \r\n\r\nI am really sorry for wasting your time. I tried it again and it worked as it should.\r\n \r\nI have an app where it does not work, but the issue is probably another thing.\r\n\r\nIf you guys think it would worth to investigate:\r\nhttps://github.com/thiagolcmelo/underscore-cookie-error", "created_at": "2018-01-08 01:10:18", "user": 3641516, "id": 355868528}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355880244", "text": "Thanks for providing sample application. \r\nAs you are aware, your sample application seems work as expected.  \r\nSo the issue is not Rails, and I will close this. \r\nIf you will find the cause, and it's issue of Rails, feel free reopen issue. Thanks!\r\n", "created_at": "2018-01-08 03:53:24", "user": 987638, "id": 355880244}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"+1": [163168, 1477268, 72726]}, "text": "### Summary\r\n\r\nThis Pull Request make it possible to select location on ActionMailer Preview. Just like below.\r\n\r\n![actionmailer-preview-locale-selection](https://user-images.githubusercontent.com/106567/34454066-f8bf06ec-eda5-11e7-82ba-1c2a0961b6b8.gif)\r\n\r\nThis is a rework of https://github.com/rails/rails/pull/19923. #19923 was almost done, but had not been merged and now it gets conflict against master.\r\n\r\nWhat I did:\r\n\r\n- Add set_locale to detect suitable locale ( #19923's author @plus3x's work)\r\n- Fix conflicts.\r\n- Append query parameter `?locale=<locale_name>` if locale were changed.\r\n- Update JavaScript function to refresh format and locale of mail preview.\r\n- Add test case for the feature.", "labels": ["actionmailer"], "number": 31596, "updated_at": "2018-01-19 08:52:18", "user": 106567, "closed_at": "2018-01-18 20:22:10", "id": 285200180, "title": "Add locale selector to email preview", "url": "https://api.github.com/repos/rails/rails/issues/31596", "created_at": "2017-12-30 12:23:57", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354543508", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-30 12:24:10", "user": 7468109, "id": 354543508}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {"heart": [7923681, 248174], "+1": [558581]}, "text": "It should be great to see mailer previews from engines. This PR allows to do this.\r\n\r\nOriginated from a bit outdated https://github.com/rails/rails/pull/16836.\r\nNotable changes compared to that PR:\r\n- `config.action_mailer.preview_path` deprecating\r\n- Engine initializer to automatically add mailer preview paths to the lookup path for mailer previews for the application\r\n\r\nThanks in advance.", "labels": [], "number": 31595, "updated_at": "2018-03-22 04:08:30", "user": 5657035, "closed_at": "None", "id": 285164211, "title": "Support multiple preview paths for mailers", "url": "https://api.github.com/repos/rails/rails/issues/31595", "created_at": "2017-12-29 22:32:11", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354508111", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-29 22:32:13", "user": 7468109, "id": 354508111}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357813848", "text": "@georgeclaghorn, thanks for review. Fixed your notes, squashed and rebased.\r\nAnything else?", "created_at": "2018-01-15 23:44:27", "user": 5657035, "id": 357813848}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/375173510", "text": "Friendly ping to revive 👋 \r\n\r\nWe have a use case for this to support some GitLab Enterprise Edition specific email previews which are namespaced under the `ee/` directory.\r\n\r\n```rb\r\nconfig.action_mailer.preview_paths = [\r\n  'spec/mailers/previews',\r\n  'ee/spec/mailers/previews'\r\n]\r\n```\r\n\r\n---\r\n\r\nHere is the current config, https://gitlab.com/gitlab-org/gitlab-ce/blob/b17457a7f7fb390c829ff5feed7e4635bf2b4521/config/environments/development.rb#L42", "created_at": "2018-03-22 04:08:30", "user": 558581, "id": 375173510}], "assignees": [12642, 12642], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "While I was looking into https://github.com/rails/rails/issues/29947 I noticed that some tests were out of date, so I thought I should refactor them before actually fixing the bug.\r\n\r\nThese assertions did matter due to the inconsistent behavior of [the #parameters method][1]. Today it behaves consistently and they could be removed. Also, one of the methods was stubbed somewhat incorrectly, so it is better not to stub, and instead, make them close to more realistic use cases.\r\n\r\n[1]: https://github.com/rails/rails/pull/13999#issuecomment-34601746", "labels": [], "number": 31594, "updated_at": "2018-01-04 16:19:39", "user": 386234, "closed_at": "2018-01-04 13:23:26", "id": 285150287, "title": "Refactor tests for request parameters to use more realistic setup", "url": "https://api.github.com/repos/rails/rails/issues/31594", "created_at": "2017-12-29 20:20:23", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354495852", "text": "r? @kaspth\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2017-12-29 20:20:25", "user": 7468109, "id": 354495852}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355280924", "text": "I ❤️  more consistent tests and less stubbing. Thank you @yuki24", "created_at": "2018-01-04 13:23:43", "user": 1080678, "id": 355280924}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355326010", "text": "Thanks @eileencodes!", "created_at": "2018-01-04 16:19:38", "user": 386234, "id": 355326010}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\nCreate new project. Go in. Run generator.\r\n```\r\n➜  contactbook ruby -v\r\nruby 2.4.0p0 (2016-12-24 revision 57164) [x86_64-darwin15]\r\n➜  contactbook rails -v\r\nRails 4.2.10\r\n➜  contactbook rails g scaffold Contact name:string\r\n```\r\n### System configuration\r\n- rails 4.2.10\r\n- ruby 2.4.0\r\n\r\n![screen shot 2017-12-30 at 2 21 53 am](https://user-images.githubusercontent.com/16382165/34445767-83f4abd4-ed08-11e7-970b-d2023e6c5632.jpg)\r\n## The Bug\r\nRunning the following code results in a hang. \r\n`rails g scaffold Contact name:string address:string city:string phone:string email:string`\r\n\r\n## Here's the hang \r\nWhen I hit **ctrl+c** this is the log. \r\n```\r\ncontactbook rails g scaffold Contact name:string address:string city:string phone:string email:string\r\n^[[1;9C^C/Users/Lois/.rvm/gems/ruby-2.4.0/gems/spring-2.0.2/lib/spring/client/run.rb:117:in `gets': Interrupt\r\n\tfrom /Users/Lois/.rvm/gems/ruby-2.4.0/gems/spring-2.0.2/lib/spring/client/run.rb:117:in `verify_server_version'\r\n\tfrom /Users/Lois/.rvm/gems/ruby-2.4.0/gems/spring-2.0.2/lib/spring/client/run.rb:62:in `run'\r\n\tfrom /Users/Lois/.rvm/gems/ruby-2.4.0/gems/spring-2.0.2/lib/spring/client/run.rb:42:in `warm_run'\r\n\tfrom /Users/Lois/.rvm/gems/ruby-2.4.0/gems/spring-2.0.2/lib/spring/client/run.rb:35:in `call'\r\n\tfrom /Users/Lois/.rvm/gems/ruby-2.4.0/gems/spring-2.0.2/lib/spring/client/command.rb:7:in `call'\r\n\tfrom /Users/Lois/.rvm/gems/ruby-2.4.0/gems/spring-2.0.2/lib/spring/client/rails.rb:24:in `call'\r\n\tfrom /Users/Lois/.rvm/gems/ruby-2.4.0/gems/spring-2.0.2/lib/spring/client/command.rb:7:in `call'\r\n\tfrom /Users/Lois/.rvm/gems/ruby-2.4.0/gems/spring-2.0.2/lib/spring/client.rb:30:in `run'\r\n\tfrom /Users/Lois/.rvm/gems/ruby-2.4.0/gems/spring-2.0.2/bin/spring:49:in `<top (required)>'\r\n\tfrom /Users/Lois/.rvm/gems/ruby-2.4.0/gems/spring-2.0.2/lib/spring/binstub.rb:31:in `load'\r\n\tfrom /Users/Lois/.rvm/gems/ruby-2.4.0/gems/spring-2.0.2/lib/spring/binstub.rb:31:in `<top (required)>'\r\n\tfrom /Users/Lois/Desktop/projects/contactbook/bin/spring:15:in `require'\r\n\tfrom /Users/Lois/Desktop/projects/contactbook/bin/spring:15:in `<top (required)>'\r\n\tfrom bin/rails:3:in `load'\r\n\tfrom bin/rails:3:in `<main>'\r\n\r\n➜  contactbook\r\n```\r\n![screen shot 2017-12-30 at 2 21 53 am](https://user-images.githubusercontent.com/16382165/34445830-007dba60-ed09-11e7-89ee-a800ac637ab2.jpg)\r\n\r\n\r\n[Possible Duplicate of this issue](https://github.com/rails/rails/issues/27310)? \r\n#27310 \r\nRails 5.1.4 though. Probably not? \r\n\r\n### Expected behavior\r\nGenerator should complete creating scaffold. \r\n\r\n### Actual behavior\r\nIt hangs for several minutes. I've restarted both machine & terminal session. ", "labels": [], "number": 31593, "updated_at": "2017-12-29 23:45:18", "user": 16382165, "closed_at": "2017-12-29 23:45:18", "id": 285144444, "title": "Scaffold Hang: Rails 4.2.10 & Ruby 2.4.0", "url": "https://api.github.com/repos/rails/rails/issues/31593", "created_at": "2017-12-29 19:37:18", "comments": [{"reactions": {"+1": [16382165]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354513445", "text": "Rails 4.2 is not supported anymore for anything besides security fixes.\r\nPlease check whether your issue can reproduce with latest Rails. Thanks!", "created_at": "2017-12-29 23:45:18", "user": 987638, "id": 354513445}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Hi,\r\nI have developed a rails application on my PC and now I try to get it running on a raspberry pi. On the pi is a fresh Raspbian and RVM (`curl -L get.rvm.io | bash -s stable --rails`) installed. But I'm unable to start the application, so I tried to create a new one. This results in the same error...\r\n\r\nRuby applications are working fine.\r\n\r\n### Steps to reproduce\r\nCreating a new project with rails `rails new abcdef` on raspberry pi\r\n\r\n### Expected behavior\r\nA new project\r\n\r\n### Actual behavior\r\n```\r\n/opt ➜ rails new abcdef\r\n      create  \r\n      create  README.md\r\n      create  Rakefile\r\n      create  .ruby-version\r\n      create  config.ru\r\n      create  .gitignore\r\n      create  Gemfile\r\n         run  git init from \".\"\r\nInitialized empty Git repository in /opt/abcdef/.git/\r\n      create  package.json\r\n      create  app\r\n      create  app/assets/config/manifest.js\r\n      create  app/assets/javascripts/application.js\r\n      create  app/assets/javascripts/cable.js\r\n      create  app/assets/stylesheets/application.css\r\n      create  app/channels/application_cable/channel.rb\r\n      create  app/channels/application_cable/connection.rb\r\n      create  app/controllers/application_controller.rb\r\n      create  app/helpers/application_helper.rb\r\n      create  app/jobs/application_job.rb\r\n      create  app/mailers/application_mailer.rb\r\n      create  app/models/application_record.rb\r\n      create  app/views/layouts/application.html.erb\r\n      create  app/views/layouts/mailer.html.erb\r\n      create  app/views/layouts/mailer.text.erb\r\n      create  app/assets/images/.keep\r\n      create  app/assets/javascripts/channels\r\n      create  app/assets/javascripts/channels/.keep\r\n      create  app/controllers/concerns/.keep\r\n      create  app/models/concerns/.keep\r\n      create  bin\r\n      create  bin/bundle\r\n      create  bin/rails\r\n      create  bin/rake\r\n      create  bin/setup\r\n      create  bin/update\r\n      create  bin/yarn\r\n      create  config\r\n      create  config/routes.rb\r\n      create  config/application.rb\r\n      create  config/environment.rb\r\n      create  config/cable.yml\r\n      create  config/puma.rb\r\n      create  config/spring.rb\r\n      create  config/storage.yml\r\n      create  config/environments\r\n      create  config/environments/development.rb\r\n      create  config/environments/production.rb\r\n      create  config/environments/test.rb\r\n      create  config/initializers\r\n      create  config/initializers/application_controller_renderer.rb\r\n      create  config/initializers/assets.rb\r\n      create  config/initializers/backtrace_silencers.rb\r\n      create  config/initializers/content_security_policy.rb\r\n      create  config/initializers/cookies_serializer.rb\r\n      create  config/initializers/cors.rb\r\n      create  config/initializers/filter_parameter_logging.rb\r\n      create  config/initializers/inflections.rb\r\n      create  config/initializers/mime_types.rb\r\n      create  config/initializers/new_framework_defaults_5_2.rb\r\n      create  config/initializers/wrap_parameters.rb\r\n      create  config/locales\r\n      create  config/locales/en.yml\r\n      create  config/master.key\r\n      append  .gitignore\r\n      create  config/boot.rb\r\n      create  config/database.yml\r\n      create  db\r\n      create  db/seeds.rb\r\n      create  lib\r\n      create  lib/tasks\r\n      create  lib/tasks/.keep\r\n      create  lib/assets\r\n      create  lib/assets/.keep\r\n      create  log\r\n      create  log/.keep\r\n      create  public\r\n      create  public/404.html\r\n      create  public/422.html\r\n      create  public/500.html\r\n      create  public/apple-touch-icon-precomposed.png\r\n      create  public/apple-touch-icon.png\r\n      create  public/favicon.ico\r\n      create  public/robots.txt\r\n      create  test/fixtures\r\n      create  test/fixtures/.keep\r\n      create  test/fixtures/files\r\n      create  test/fixtures/files/.keep\r\n      create  test/controllers\r\n      create  test/controllers/.keep\r\n      create  test/mailers\r\n      create  test/mailers/.keep\r\n      create  test/models\r\n      create  test/models/.keep\r\n      create  test/helpers\r\n      create  test/helpers/.keep\r\n      create  test/integration\r\n      create  test/integration/.keep\r\n      create  test/test_helper.rb\r\n      create  test/system\r\n      create  test/system/.keep\r\n      create  test/application_system_test_case.rb\r\n      create  storage\r\n      create  storage/.keep\r\n      create  tmp/storage\r\n      create  tmp/storage/.keep\r\n       exist  tmp\r\n      create  tmp/.keep\r\n      create  tmp/cache\r\n      create  tmp/cache/assets\r\n      create  vendor\r\n      create  vendor/.keep\r\n      remove  config/initializers/cors.rb\r\n      remove  config/initializers/new_framework_defaults_5_2.rb\r\n         run  bundle install\r\nThe dependency tzinfo-data (>= 0) will be unused by any of the platforms Bundler is installing for. Bundler is installing for ruby but the dependency is only for x86-mingw32, x86-mswin32, x64-mingw32, java. To add those platforms to the bundle, run `bundle lock --add-platform x86-mingw32 x86-mswin32 x64-mingw32 java`.\r\nFetching gem metadata from https://rubygems.org/.........\r\nFetching gem metadata from https://rubygems.org/.\r\nResolving dependencies................................\r\nUsing rake 12.3.0\r\nUsing concurrent-ruby 1.0.5\r\nUsing i18n 0.9.1\r\nUsing minitest 5.10.3\r\nUsing thread_safe 0.3.6\r\nUsing tzinfo 1.2.4\r\nUsing activesupport 5.2.0.beta2\r\nUsing builder 3.2.3\r\nUsing erubi 1.7.0\r\nUsing mini_portile2 2.3.0\r\nUsing nokogiri 1.8.1\r\nUsing rails-dom-testing 2.0.3\r\nUsing crass 1.0.3\r\nUsing loofah 2.1.1\r\nUsing rails-html-sanitizer 1.0.3\r\nUsing actionview 5.2.0.beta2\r\nUsing rack 2.0.3\r\nUsing rack-test 0.8.2\r\nUsing actionpack 5.2.0.beta2\r\nUsing nio4r 2.2.0\r\nUsing websocket-extensions 0.1.3\r\nUsing websocket-driver 0.6.5\r\nUsing actioncable 5.2.0.beta2\r\nUsing globalid 0.4.1\r\nUsing activejob 5.2.0.beta2\r\nUsing mini_mime 1.0.0\r\nUsing mail 2.7.0\r\nUsing actionmailer 5.2.0.beta2\r\nUsing activemodel 5.2.0.beta2\r\nUsing arel 9.0.0\r\nUsing activerecord 5.2.0.beta2\r\nUsing activestorage 5.2.0.beta2\r\nUsing public_suffix 3.0.1\r\nUsing addressable 2.5.2\r\nUsing io-like 0.3.0\r\nUsing archive-zip 0.7.0\r\nUsing bindex 0.5.0\r\nUsing msgpack 1.2.0\r\nUsing bootsnap 1.1.7\r\nUsing bundler 1.16.1\r\nUsing byebug 9.1.0\r\nUsing xpath 2.1.0\r\nUsing capybara 2.16.1\r\nUsing ffi 1.9.18\r\nUsing childprocess 0.8.0\r\nUsing chromedriver-helper 1.1.0\r\nUsing coffee-script-source 1.12.2\r\nUsing execjs 2.7.0\r\nUsing coffee-script 2.4.1\r\nUsing method_source 0.9.0\r\nUsing thor 0.20.0\r\nUsing railties 5.2.0.beta2\r\nUsing coffee-rails 4.2.2\r\nUsing multi_json 1.12.2\r\nUsing jbuilder 2.7.0\r\nUsing rb-fsevent 0.10.2\r\nUsing rb-inotify 0.9.10\r\nUsing ruby_dep 1.5.0\r\nUsing listen 3.1.5\r\nUsing puma 3.11.0\r\nUsing sprockets 3.7.1\r\nUsing sprockets-rails 3.2.1\r\nUsing rails 5.2.0.beta2\r\nUsing rubyzip 1.2.1\r\nUsing sass-listen 4.0.0\r\nUsing sass 3.5.4\r\nUsing tilt 2.0.8\r\nUsing sass-rails 5.0.7\r\nUsing selenium-webdriver 3.8.0\r\nUsing spring 2.0.2\r\nUsing spring-watcher-listen 2.0.1\r\nFetching sqlite3 1.3.13\r\nInstalling sqlite3 1.3.13 with native extensions\r\nUsing turbolinks-source 5.0.3\r\nUsing turbolinks 5.0.1\r\nFetching uglifier 4.1.1\r\nInstalling uglifier 4.1.1\r\nUsing web-console 3.5.1\r\nBundle complete! 18 Gemfile dependencies, 76 gems now installed.\r\nUse `bundle info [gemname]` to see where a bundled gem is installed.\r\n         run  bundle exec spring binstub --all\r\n* bin/rake: spring inserted\r\n* bin/rails: spring inserted\r\n       rails  active_storage:install\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/compile_cache/iseq.rb:18: [BUG] Bus Error at 0x14e63fd\r\nruby 2.4.1p111 (2017-03-22 revision 58053) [armv7l-linux-eabihf]\r\n\r\n-- Control frame information -----------------------------------------------\r\nc:0094 p:---- s:0464 e:000463 CFUNC  :load_from_binary\r\nc:0093 p:0018 s:0459 e:000458 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/compile_cache/iseq.rb:18 [FINISH]\r\nc:0092 p:---- s:0453 e:000452 CFUNC  :fetch\r\nc:0091 p:0082 s:0446 e:000445 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/compile_cache/iseq.rb:37 [FINISH]\r\nc:0090 p:---- s:0440 e:000439 CFUNC  :require\r\nc:0089 p:0034 s:0435 e:000434 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17\r\nc:0088 p:0012 s:0429 e:000428 BLOCK  /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0087 p:0057 s:0426 e:000425 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249\r\nc:0086 p:0017 s:0420 e:000419 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0085 p:0008 s:0414 e:000413 TOP    /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/concern/logging.rb:1 [FINISH]\r\nc:0084 p:---- s:0411 e:000410 CFUNC  :require\r\nc:0083 p:0034 s:0406 e:000405 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17\r\nc:0082 p:0012 s:0400 e:000399 BLOCK  /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0081 p:0057 s:0397 e:000396 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249\r\nc:0080 p:0017 s:0391 e:000390 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0079 p:0008 s:0385 e:000384 TOP    /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/executor/executor_service.rb:1 [FINISH]\r\nc:0078 p:---- s:0382 e:000381 CFUNC  :require\r\nc:0077 p:0034 s:0377 e:000376 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17\r\nc:0076 p:0012 s:0371 e:000370 BLOCK  /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0075 p:0057 s:0368 e:000367 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249\r\nc:0074 p:0017 s:0362 e:000361 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0073 p:0017 s:0356 e:000355 TOP    /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/executor/abstract_executor_service.rb:2 [FINISH]\r\nc:0072 p:---- s:0353 e:000352 CFUNC  :require\r\nc:0071 p:0034 s:0348 e:000347 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17\r\nc:0070 p:0012 s:0342 e:000341 BLOCK  /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0069 p:0057 s:0339 e:000338 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249\r\nc:0068 p:0017 s:0333 e:000332 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0067 p:0017 s:0327 e:000326 TOP    /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/executor/immediate_executor.rb:2 [FINISH]\r\nc:0066 p:---- s:0324 e:000323 CFUNC  :require\r\nc:0065 p:0034 s:0319 e:000318 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17\r\nc:0064 p:0012 s:0313 e:000312 BLOCK  /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0063 p:0057 s:0310 e:000309 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249\r\nc:0062 p:0017 s:0304 e:000303 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0061 p:0026 s:0298 e:000297 TOP    /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/delay.rb:3 [FINISH]\r\nc:0060 p:---- s:0295 e:000294 CFUNC  :require\r\nc:0059 p:0034 s:0290 e:000289 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17\r\nc:0058 p:0012 s:0284 e:000283 BLOCK  /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0057 p:0057 s:0281 e:000280 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249\r\nc:0056 p:0017 s:0275 e:000274 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0055 p:0017 s:0269 e:000268 TOP    /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/configuration.rb:2 [FINISH]\r\nc:0054 p:---- s:0266 e:000265 CFUNC  :require\r\nc:0053 p:0034 s:0261 e:000260 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17\r\nc:0052 p:0012 s:0255 e:000254 BLOCK  /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0051 p:0057 s:0252 e:000251 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249\r\nc:0050 p:0017 s:0246 e:000245 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0049 p:0035 s:0240 e:000239 TOP    /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent.rb:4 [FINISH]\r\nc:0048 p:---- s:0237 e:000236 CFUNC  :require\r\nc:0047 p:0034 s:0232 e:000231 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17\r\nc:0046 p:0012 s:0226 e:000225 BLOCK  /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0045 p:0057 s:0223 e:000222 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249\r\nc:0044 p:0017 s:0217 e:000216 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0043 p:0026 s:0211 e:000210 TOP    /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/logger_silence.rb:5 [FINISH]\r\nc:0042 p:---- s:0208 e:000207 CFUNC  :require\r\nc:0041 p:0034 s:0203 e:000202 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17\r\nc:0040 p:0012 s:0197 e:000196 BLOCK  /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0039 p:0057 s:0194 e:000193 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249\r\nc:0038 p:0017 s:0188 e:000187 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0037 p:0008 s:0182 e:000181 TOP    /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/logger.rb:3 [FINISH]\r\nc:0036 p:---- s:0179 e:000178 CFUNC  :require\r\nc:0035 p:0034 s:0174 e:000173 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17\r\nc:0034 p:0012 s:0168 e:000167 BLOCK  /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0033 p:0057 s:0165 e:000164 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249\r\nc:0032 p:0017 s:0159 e:000158 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0031 p:0035 s:0153 e:000152 TOP    /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support.rb:29 [FINISH]\r\nc:0030 p:---- s:0150 e:000149 CFUNC  :require\r\nc:0029 p:0034 s:0145 e:000144 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17\r\nc:0028 p:0012 s:0139 e:000138 BLOCK  /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0027 p:0057 s:0136 e:000135 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249\r\nc:0026 p:0017 s:0130 e:000129 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0025 p:0008 s:0124 e:000123 TOP    /home/pi/.rvm/gems/ruby-2.4.1/gems/railties-5.2.0.beta2/lib/rails/command.rb:3 [FINISH]\r\nc:0024 p:---- s:0121 e:000120 CFUNC  :require\r\nc:0023 p:0034 s:0116 e:000115 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17\r\nc:0022 p:0012 s:0110 e:000109 BLOCK  /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0021 p:0057 s:0107 e:000106 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249\r\nc:0020 p:0017 s:0101 e:000100 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0019 p:0008 s:0095 e:000094 TOP    /home/pi/.rvm/gems/ruby-2.4.1/gems/railties-5.2.0.beta2/lib/rails/commands.rb:3 [FINISH]\r\nc:0018 p:---- s:0090 e:000089 CFUNC  :require\r\nc:0017 p:0034 s:0085 e:000084 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17\r\nc:0016 p:0012 s:0079 e:000078 BLOCK  /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0015 p:0057 s:0076 e:000075 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249\r\nc:0014 p:0017 s:0070 e:000069 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283\r\nc:0013 p:0063 s:0064 e:000063 TOP    /opt/abcdef/bin/rails:9 [FINISH]\r\nc:0012 p:---- s:0060 e:000059 CFUNC  :load\r\nc:0011 p:0141 s:0055 e:000054 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/client/rails.rb:28\r\nc:0010 p:0013 s:0050 e:000049 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/client/command.rb:7\r\nc:0009 p:0018 s:0045 e:000044 METHOD /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/client.rb:30\r\nc:0008 p:0337 s:0039 e:000038 TOP    /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/bin/spring:49 [FINISH]\r\nc:0007 p:---- s:0033 e:000032 CFUNC  :load\r\nc:0006 p:0185 s:0028 e:000027 TOP    /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/binstub.rb:31 [FINISH]\r\nc:0005 p:---- s:0022 e:000021 CFUNC  :require\r\nc:0004 p:0150 s:0017 e:000016 TOP    /opt/abcdef/bin/spring:15 [FINISH]\r\nc:0003 p:---- s:0012 e:000011 CFUNC  :load\r\nc:0002 p:0022 s:0007 E:001184 EVAL   bin/rails:3 [FINISH]\r\nc:0001 p:0000 s:0003 E:001540 (none) [FINISH]\r\n\r\n-- Ruby level backtrace information ----------------------------------------\r\nbin/rails:3:in `<main>'\r\nbin/rails:3:in `load'\r\n/opt/abcdef/bin/spring:15:in `<top (required)>'\r\n/opt/abcdef/bin/spring:15:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/binstub.rb:31:in `<top (required)>'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/binstub.rb:31:in `load'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/bin/spring:49:in `<top (required)>'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/client.rb:30:in `run'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/client/command.rb:7:in `call'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/client/rails.rb:28:in `call'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/client/rails.rb:28:in `load'\r\n/opt/abcdef/bin/rails:9:in `<top (required)>'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `block in require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/railties-5.2.0.beta2/lib/rails/commands.rb:3:in `<main>'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `block in require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/railties-5.2.0.beta2/lib/rails/command.rb:3:in `<main>'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `block in require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support.rb:29:in `<main>'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `block in require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/logger.rb:3:in `<main>'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `block in require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/logger_silence.rb:5:in `<main>'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `block in require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent.rb:4:in `<main>'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `block in require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/configuration.rb:2:in `<main>'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `block in require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/delay.rb:3:in `<main>'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `block in require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/executor/immediate_executor.rb:2:in `<main>'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `block in require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/executor/abstract_executor_service.rb:2:in `<main>'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `block in require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/executor/executor_service.rb:1:in `<main>'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `block in require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/concern/logging.rb:1:in `<main>'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `block in require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/compile_cache/iseq.rb:37:in `load_iseq'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/compile_cache/iseq.rb:37:in `fetch'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/compile_cache/iseq.rb:18:in `storage_to_output'\r\n/home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/compile_cache/iseq.rb:18:in `load_from_binary'\r\n\r\n-- Other runtime information -----------------------------------------------\r\n\r\n* Loaded script: bin/rails\r\n\r\n* Loaded features:\r\n\r\n    0 enumerator.so\r\n    1 thread.rb\r\n    2 rational.so\r\n    3 complex.so\r\n    4 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/enc/encdb.so\r\n    5 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/enc/trans/transdb.so\r\n    6 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/unicode_normalize.rb\r\n    7 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/rbconfig.rb\r\n    8 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/compatibility.rb\r\n    9 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/defaults.rb\r\n   10 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/deprecate.rb\r\n   11 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/errors.rb\r\n   12 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/version.rb\r\n   13 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/requirement.rb\r\n   14 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/platform.rb\r\n   15 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/basic_specification.rb\r\n   16 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/stub_specification.rb\r\n   17 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/util/list.rb\r\n   18 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/stringio.so\r\n   19 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/specification.rb\r\n   20 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/exceptions.rb\r\n   21 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/dependency.rb\r\n   22 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/core_ext/kernel_gem.rb\r\n   23 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/monitor.rb\r\n   24 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/core_ext/kernel_require.rb\r\n   25 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems.rb\r\n   26 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/path_support.rb\r\n   27 /home/pi/.rvm/gems/ruby-2.4.1@global/gems/did_you_mean-1.1.0/lib/did_you_mean/version.rb\r\n   28 /home/pi/.rvm/gems/ruby-2.4.1@global/gems/did_you_mean-1.1.0/lib/did_you_mean/core_ext/name_error.rb\r\n   29 /home/pi/.rvm/gems/ruby-2.4.1@global/gems/did_you_mean-1.1.0/lib/did_you_mean/levenshtein.rb\r\n   30 /home/pi/.rvm/gems/ruby-2.4.1@global/gems/did_you_mean-1.1.0/lib/did_you_mean/jaro_winkler.rb\r\n   31 /home/pi/.rvm/gems/ruby-2.4.1@global/gems/did_you_mean-1.1.0/lib/did_you_mean/spell_checker.rb\r\n   32 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/delegate.rb\r\n   33 /home/pi/.rvm/gems/ruby-2.4.1@global/gems/did_you_mean-1.1.0/lib/did_you_mean/spell_checkers/name_error_checkers/class_name_checker.rb\r\n   34 /home/pi/.rvm/gems/ruby-2.4.1@global/gems/did_you_mean-1.1.0/lib/did_you_mean/spell_checkers/name_error_checkers/variable_name_checker.rb\r\n   35 /home/pi/.rvm/gems/ruby-2.4.1@global/gems/did_you_mean-1.1.0/lib/did_you_mean/spell_checkers/name_error_checkers.rb\r\n   36 /home/pi/.rvm/gems/ruby-2.4.1@global/gems/did_you_mean-1.1.0/lib/did_you_mean/spell_checkers/method_name_checker.rb\r\n   37 /home/pi/.rvm/gems/ruby-2.4.1@global/gems/did_you_mean-1.1.0/lib/did_you_mean/spell_checkers/null_checker.rb\r\n   38 /home/pi/.rvm/gems/ruby-2.4.1@global/gems/did_you_mean-1.1.0/lib/did_you_mean/formatter.rb\r\n   39 /home/pi/.rvm/gems/ruby-2.4.1@global/gems/did_you_mean-1.1.0/lib/did_you_mean.rb\r\n   40 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/version.rb\r\n   41 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/compatibility_guard.rb\r\n   42 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/pathname.so\r\n   43 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/pathname.rb\r\n   44 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/constants.rb\r\n   45 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/util.rb\r\n   46 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/io/console.so\r\n   47 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/user_interaction.rb\r\n   48 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/etc.so\r\n   49 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/config_file.rb\r\n   50 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/rubygems_integration.rb\r\n   51 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/current_ruby.rb\r\n   52 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/shared_helpers.rb\r\n   53 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/fileutils/lib/fileutils.rb\r\n   54 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendored_fileutils.rb\r\n   55 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/errors.rb\r\n   56 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/environment_preserver.rb\r\n   57 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/plugin/api.rb\r\n   58 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/plugin.rb\r\n   59 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/uri/rfc2396_parser.rb\r\n   60 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/uri/rfc3986_parser.rb\r\n   61 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/uri/common.rb\r\n   62 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/uri/generic.rb\r\n   63 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/uri/ftp.rb\r\n   64 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/uri/http.rb\r\n   65 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/uri/https.rb\r\n   66 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/uri/ldap.rb\r\n   67 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/uri/ldaps.rb\r\n   68 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/uri/mailto.rb\r\n   69 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/uri.rb\r\n   70 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/fileutils.rb\r\n   71 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/digest.so\r\n   72 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/digest.rb\r\n   73 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/source/git.rb\r\n   74 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/source/installed.rb\r\n   75 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/source/specific_file.rb\r\n   76 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/source/local.rb\r\n   77 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/source/lock.rb\r\n   78 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/source/vendor.rb\r\n   79 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/source.rb\r\n   80 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/gem_helpers.rb\r\n   81 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/match_platform.rb\r\n   82 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/rubygems_ext.rb\r\n   83 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/build_metadata.rb\r\n   84 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler.rb\r\n   85 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/settings.rb\r\n   86 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/ext/builder.rb\r\n   87 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/feature_flag.rb\r\n   88 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/source.rb\r\n   89 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/source/path.rb\r\n   90 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/source/git.rb\r\n   91 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/source/rubygems.rb\r\n   92 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/lockfile_parser.rb\r\n   93 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/set.rb\r\n   94 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/definition.rb\r\n   95 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/dependency.rb\r\n   96 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/ruby_dsl.rb\r\n   97 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/dsl.rb\r\n   98 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/source_list.rb\r\n   99 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/source/metadata.rb\r\n  100 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/ruby_version.rb\r\n  101 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/lazy_specification.rb\r\n  102 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/index.rb\r\n  103 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/tsort.rb\r\n  104 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/forwardable/impl.rb\r\n  105 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/forwardable.rb\r\n  106 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/spec_set.rb\r\n  107 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo/compatibility.rb\r\n  108 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo/gem_metadata.rb\r\n  109 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo/delegates/specification_provider.rb\r\n  110 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo/errors.rb\r\n  111 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo/dependency_graph/action.rb\r\n  112 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo/dependency_graph/add_edge_no_circular.rb\r\n  113 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo/dependency_graph/add_vertex.rb\r\n  114 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo/dependency_graph/delete_edge.rb\r\n  115 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo/dependency_graph/detach_vertex_named.rb\r\n  116 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo/dependency_graph/set_payload.rb\r\n  117 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo/dependency_graph/tag.rb\r\n  118 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo/dependency_graph/log.rb\r\n  119 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo/dependency_graph/vertex.rb\r\n  120 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo/dependency_graph.rb\r\n  121 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo/state.rb\r\n  122 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo/modules/specification_provider.rb\r\n  123 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo/delegates/resolution_state.rb\r\n  124 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo/resolution.rb\r\n  125 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo/resolver.rb\r\n  126 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo/modules/ui.rb\r\n  127 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendor/molinillo/lib/molinillo.rb\r\n  128 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/vendored_molinillo.rb\r\n  129 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/resolver/spec_group.rb\r\n  130 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/resolver.rb\r\n  131 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/gem_version_promoter.rb\r\n  132 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/source/gemspec.rb\r\n  133 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/runtime.rb\r\n  134 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/dep_proxy.rb\r\n  135 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/ui.rb\r\n  136 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/ui/silent.rb\r\n  137 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/ui/rg_proxy.rb\r\n  138 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/remote_specification.rb\r\n  139 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/stub_specification.rb\r\n  140 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/endpoint_specification.rb\r\n  141 /home/pi/.rvm/gems/ruby-2.4.1/gems/bundler-1.16.1/lib/bundler/setup.rb\r\n  142 /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/errors.rb\r\n  143 /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/json.rb\r\n  144 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/digest/md5.so\r\n  145 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/tmpdir.rb\r\n  146 /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/version.rb\r\n  147 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/fiddle.so\r\n  148 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/fiddle/function.rb\r\n  149 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/fiddle/closure.rb\r\n  150 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/fiddle.rb\r\n  151 /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/sid.rb\r\n  152 /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/configuration.rb\r\n  153 /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/env.rb\r\n  154 /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/client/command.rb\r\n  155 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/socket.so\r\n  156 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/io/wait.so\r\n  157 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/socket.rb\r\n  158 /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/client/run.rb\r\n  159 /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/client/help.rb\r\n  160 /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/client/binstub.rb\r\n  161 /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/client/stop.rb\r\n  162 /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/client/status.rb\r\n  163 /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/client/rails.rb\r\n  164 /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/client/version.rb\r\n  165 /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/client/server.rb\r\n  166 /home/pi/.rvm/gems/ruby-2.4.1/gems/spring-2.0.2/lib/spring/client.rb\r\n  167 /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/version.rb\r\n  168 /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/bundler.rb\r\n  169 /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/explicit_require.rb\r\n  170 /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/path_scanner.rb\r\n  171 /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/path.rb\r\n  172 /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/cache.rb\r\n  173 /home/pi/.rvm/gems/ruby-2.4.1/gems/msgpack-1.2.0/lib/msgpack/version.rb\r\n  174 /home/pi/.rvm/gems/ruby-2.4.1/gems/msgpack-1.2.0/lib/msgpack/msgpack.so\r\n  175 /home/pi/.rvm/gems/ruby-2.4.1/gems/msgpack-1.2.0/lib/msgpack/packer.rb\r\n  176 /home/pi/.rvm/gems/ruby-2.4.1/gems/msgpack-1.2.0/lib/msgpack/unpacker.rb\r\n  177 /home/pi/.rvm/gems/ruby-2.4.1/gems/msgpack-1.2.0/lib/msgpack/factory.rb\r\n  178 /home/pi/.rvm/gems/ruby-2.4.1/gems/msgpack-1.2.0/lib/msgpack/symbol.rb\r\n  179 /home/pi/.rvm/gems/ruby-2.4.1/gems/msgpack-1.2.0/lib/msgpack/core_ext.rb\r\n  180 /home/pi/.rvm/gems/ruby-2.4.1/gems/msgpack-1.2.0/lib/msgpack.rb\r\n  181 /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/store.rb\r\n  182 /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/change_observer.rb\r\n  183 /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache.rb\r\n  184 /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/compile_cache.rb\r\n  185 /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap.rb\r\n  186 /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb\r\n  187 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/constants.rb\r\n  188 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/utility/engine.rb\r\n  189 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/synchronization/abstract_object.rb\r\n  190 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/utility/native_extension_loader.rb\r\n  191 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/synchronization/mri_object.rb\r\n  192 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/synchronization/jruby_object.rb\r\n  193 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/synchronization/rbx_object.rb\r\n  194 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/synchronization/truffle_object.rb\r\n  195 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/synchronization/object.rb\r\n  196 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/synchronization/volatile.rb\r\n  197 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/synchronization/abstract_lockable_object.rb\r\n  198 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/synchronization/mri_lockable_object.rb\r\n  199 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/synchronization/jruby_lockable_object.rb\r\n  200 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/synchronization/rbx_lockable_object.rb\r\n  201 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/synchronization/truffle_lockable_object.rb\r\n  202 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/synchronization/lockable_object.rb\r\n  203 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/synchronization/condition.rb\r\n  204 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/synchronization/lock.rb\r\n  205 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/synchronization.rb\r\n  206 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/collection/map/non_concurrent_map_backend.rb\r\n  207 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/collection/map/mri_map_backend.rb\r\n  208 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/map.rb\r\n  209 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/module/aliasing.rb\r\n  210 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/array/extract_options.rb\r\n  211 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/regexp.rb\r\n  212 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/module/attribute_accessors.rb\r\n  213 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/array/prepend_and_append.rb\r\n  214 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/hash/deep_merge.rb\r\n  215 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/hash/except.rb\r\n  216 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/hash/slice.rb\r\n  217 /home/pi/.rvm/gems/ruby-2.4.1/gems/i18n-0.9.1/lib/i18n/version.rb\r\n  218 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/cgi/core.rb\r\n  219 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/cgi/escape.so\r\n  220 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/cgi/util.rb\r\n  221 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/cgi/cookie.rb\r\n  222 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/cgi.rb\r\n  223 /home/pi/.rvm/gems/ruby-2.4.1/gems/i18n-0.9.1/lib/i18n/exceptions.rb\r\n  224 /home/pi/.rvm/gems/ruby-2.4.1/gems/i18n-0.9.1/lib/i18n/interpolate/ruby.rb\r\n  225 /home/pi/.rvm/gems/ruby-2.4.1/gems/i18n-0.9.1/lib/i18n.rb\r\n  226 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/lazy_load_hooks.rb\r\n  227 /home/pi/.rvm/gems/ruby-2.4.1/gems/i18n-0.9.1/lib/i18n/config.rb\r\n  228 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/i18n.rb\r\n  229 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/singleton.rb\r\n  230 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/kernel/singleton_class.rb\r\n  231 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/module/delegation.rb\r\n  232 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/deprecation/instance_delegator.rb\r\n  233 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/openssl.so\r\n  234 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/openssl/bn.rb\r\n  235 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/openssl/pkey.rb\r\n  236 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/openssl/cipher.rb\r\n  237 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/openssl/config.rb\r\n  238 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/openssl/digest.rb\r\n  239 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/openssl/x509.rb\r\n  240 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/openssl/buffering.rb\r\n  241 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/io/nonblock.so\r\n  242 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/openssl/ssl.rb\r\n  243 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/openssl.rb\r\n  244 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/securerandom.rb\r\n  245 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/notifications/instrumenter.rb\r\n  246 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/mutex_m.rb\r\n  247 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/notifications/fanout.rb\r\n  248 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/per_thread_registry.rb\r\n  249 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/notifications.rb\r\n  250 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/deprecation/behaviors.rb\r\n  251 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/deprecation/reporting.rb\r\n  252 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/deprecation/constant_accessor.rb\r\n  253 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/deprecation/method_wrappers.rb\r\n  254 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/deprecation/proxy_wrappers.rb\r\n  255 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/module/deprecation.rb\r\n  256 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/deprecation.rb\r\n  257 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/inflector/inflections.rb\r\n  258 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/multibyte.rb\r\n  259 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/string/multibyte.rb\r\n  260 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/inflector/transliterate.rb\r\n  261 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/inflections.rb\r\n  262 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/inflector/methods.rb\r\n  263 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/string/inflections.rb\r\n  264 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/inflector.rb\r\n  265 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/module/introspection.rb\r\n  266 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/module/anonymous.rb\r\n  267 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/object/blank.rb\r\n  268 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/kernel/reporting.rb\r\n  269 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/load_error.rb\r\n  270 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/name_error.rb\r\n  271 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/string/starts_ends_with.rb\r\n  272 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/concurrency/share_lock.rb\r\n  273 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies/interlock.rb\r\n  274 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb\r\n  275 /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/active_support.rb\r\n  276 /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/bootsnap.so\r\n  277 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/zlib.so\r\n  278 /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/compile_cache/iseq.rb\r\n  279 /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/compile_cache/yaml.rb\r\n  280 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/versions.rb\r\n  281 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/exception.rb\r\n  282 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/syntax_error.rb\r\n  283 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/psych.so\r\n  284 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/omap.rb\r\n  285 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/set.rb\r\n  286 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/class_loader.rb\r\n  287 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/strscan.so\r\n  288 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/scalar_scanner.rb\r\n  289 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/nodes/node.rb\r\n  290 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/nodes/stream.rb\r\n  291 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/nodes/document.rb\r\n  292 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/nodes/sequence.rb\r\n  293 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/nodes/scalar.rb\r\n  294 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/nodes/mapping.rb\r\n  295 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/nodes/alias.rb\r\n  296 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/nodes.rb\r\n  297 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/streaming.rb\r\n  298 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/visitors/visitor.rb\r\n  299 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/visitors/to_ruby.rb\r\n  300 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/visitors/emitter.rb\r\n  301 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/handler.rb\r\n  302 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/tree_builder.rb\r\n  303 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/visitors/yaml_tree.rb\r\n  304 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/json/ruby_events.rb\r\n  305 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/visitors/json_tree.rb\r\n  306 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/visitors/depth_first.rb\r\n  307 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/visitors.rb\r\n  308 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/parser.rb\r\n  309 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/coder.rb\r\n  310 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/core_ext.rb\r\n  311 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/date_core.so\r\n  312 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/date.rb\r\n  313 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/deprecated.rb\r\n  314 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/stream.rb\r\n  315 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/json/yaml_events.rb\r\n  316 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/json/tree_builder.rb\r\n  317 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/json/stream.rb\r\n  318 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych/handlers/document_stream.rb\r\n  319 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/psych.rb\r\n  320 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/yaml.rb\r\n  321 /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/setup.rb\r\n  322 /opt/abcdef/config/boot.rb\r\n  323 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies/autoload.rb\r\n  324 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/gem_version.rb\r\n  325 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/version.rb\r\n  326 /home/pi/.rvm/gems/ruby-2.4.1/gems/activesupport-5.2.0.beta2/lib/active_support/concern.rb\r\n  327 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/version.rb\r\n  328 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/errors.rb\r\n  329 /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/timeout.rb\r\n  330 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/atomic/event.rb\r\n  331 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/concern/dereferenceable.rb\r\n  332 /home/pi/.rvm/gems/ruby-2.4.1/gems/concurrent-ruby-1.0.5/lib/concurrent/concern/obligation.rb\r\n\r\n* Process memory map:\r\n\r\n00010000-00011000 r-xp 00000000 b3:02 131834     /home/pi/.rvm/rubies/ruby-2.4.1/bin/ruby\r\n00020000-00021000 r--p 00000000 b3:02 131834     /home/pi/.rvm/rubies/ruby-2.4.1/bin/ruby\r\n00021000-00022000 rw-p 00001000 b3:02 131834     /home/pi/.rvm/rubies/ruby-2.4.1/bin/ruby\r\n00ad9000-0157c000 rw-p 00000000 00:00 0          [heap]\r\n76179000-761a6000 r-xp 00000000 b3:02 132172     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/date_core.so\r\n761a6000-761b5000 ---p 0002d000 b3:02 132172     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/date_core.so\r\n761b5000-761b6000 r--p 0002c000 b3:02 132172     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/date_core.so\r\n761b6000-761b7000 rw-p 0002d000 b3:02 132172     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/date_core.so\r\n761b7000-761bc000 r-xp 00000000 b3:02 132163     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/strscan.so\r\n761bc000-761cb000 ---p 00005000 b3:02 132163     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/strscan.so\r\n761cb000-761cc000 r--p 00004000 b3:02 132163     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/strscan.so\r\n761cc000-761cd000 rw-p 00005000 b3:02 132163     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/strscan.so\r\n761cd000-761e6000 r-xp 00000000 b3:02 43138      /usr/lib/arm-linux-gnueabihf/libyaml-0.so.2.0.5\r\n761e6000-761f5000 ---p 00019000 b3:02 43138      /usr/lib/arm-linux-gnueabihf/libyaml-0.so.2.0.5\r\n761f5000-761f6000 r--p 00018000 b3:02 43138      /usr/lib/arm-linux-gnueabihf/libyaml-0.so.2.0.5\r\n761f6000-761f7000 rw-p 00019000 b3:02 43138      /usr/lib/arm-linux-gnueabihf/libyaml-0.so.2.0.5\r\n761f7000-761fc000 r-xp 00000000 b3:02 132176     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/psych.so\r\n761fc000-7620b000 ---p 00005000 b3:02 132176     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/psych.so\r\n7620b000-7620c000 r--p 00004000 b3:02 132176     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/psych.so\r\n7620c000-7620d000 rw-p 00005000 b3:02 132176     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/psych.so\r\n7620d000-76223000 r-xp 00000000 b3:02 1971       /lib/arm-linux-gnueabihf/libz.so.1.2.8\r\n76223000-76232000 ---p 00016000 b3:02 1971       /lib/arm-linux-gnueabihf/libz.so.1.2.8\r\n76232000-76233000 r--p 00015000 b3:02 1971       /lib/arm-linux-gnueabihf/libz.so.1.2.8\r\n76233000-76234000 rw-p 00016000 b3:02 1971       /lib/arm-linux-gnueabihf/libz.so.1.2.8\r\n76234000-76242000 r-xp 00000000 b3:02 132159     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/zlib.so\r\n76242000-76251000 ---p 0000e000 b3:02 132159     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/zlib.so\r\n76251000-76252000 r--p 0000d000 b3:02 132159     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/zlib.so\r\n76252000-76253000 rw-p 0000e000 b3:02 132159     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/zlib.so\r\n76253000-76284000 rw-p 00000000 00:00 0 \r\n76284000-762cc000 r-xp 00000000 b3:02 132181     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/openssl.so\r\n762cc000-762db000 ---p 00048000 b3:02 132181     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/openssl.so\r\n762db000-762dc000 r--p 00047000 b3:02 132181     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/openssl.so\r\n762dc000-762de000 rw-p 00048000 b3:02 132181     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/openssl.so\r\n762de000-762e0000 r-xp 00000000 b3:02 259567     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/cgi/escape.so\r\n762e0000-762ef000 ---p 00002000 b3:02 259567     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/cgi/escape.so\r\n762ef000-762f0000 r--p 00001000 b3:02 259567     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/cgi/escape.so\r\n762f0000-762f1000 rw-p 00002000 b3:02 259567     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/cgi/escape.so\r\n762f1000-762f4000 r-xp 00000000 b3:02 638449     /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/bootsnap.so\r\n762f4000-76303000 ---p 00003000 b3:02 638449     /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/bootsnap.so\r\n76303000-76304000 r--p 00002000 b3:02 638449     /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/bootsnap.so\r\n76304000-76305000 rw-p 00003000 b3:02 638449     /home/pi/.rvm/gems/ruby-2.4.1/gems/bootsnap-1.1.7/lib/bootsnap/bootsnap.so\r\n76305000-76306000 r-xp 00000000 b3:02 259573     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/io/nonblock.so\r\n76306000-76315000 ---p 00001000 b3:02 259573     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/io/nonblock.so\r\n76315000-76316000 r--p 00000000 b3:02 259573     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/io/nonblock.so\r\n76316000-76317000 rw-p 00001000 b3:02 259573     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/io/nonblock.so\r\n76317000-7637a000 rw-p 00000000 00:00 0 \r\n7637a000-76389000 r-xp 00000000 b3:02 512705     /home/pi/.rvm/gems/ruby-2.4.1/gems/msgpack-1.2.0/lib/msgpack/msgpack.so\r\n76389000-76398000 ---p 0000f000 b3:02 512705     /home/pi/.rvm/gems/ruby-2.4.1/gems/msgpack-1.2.0/lib/msgpack/msgpack.so\r\n76398000-76399000 r--p 0000e000 b3:02 512705     /home/pi/.rvm/gems/ruby-2.4.1/gems/msgpack-1.2.0/lib/msgpack/msgpack.so\r\n76399000-7639a000 rw-p 0000f000 b3:02 512705     /home/pi/.rvm/gems/ruby-2.4.1/gems/msgpack-1.2.0/lib/msgpack/msgpack.so\r\n7639a000-7639c000 r-xp 00000000 b3:02 259572     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/io/wait.so\r\n7639c000-763ab000 ---p 00002000 b3:02 259572     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/io/wait.so\r\n763ab000-763ac000 r--p 00001000 b3:02 259572     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/io/wait.so\r\n763ac000-763ad000 rw-p 00002000 b3:02 259572     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/io/wait.so\r\n763ad000-763d3000 r-xp 00000000 b3:02 132174     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/socket.so\r\n763d3000-763e3000 ---p 00026000 b3:02 132174     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/socket.so\r\n763e3000-763e4000 r--p 00026000 b3:02 132174     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/socket.so\r\n763e4000-763e5000 rw-p 00027000 b3:02 132174     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/socket.so\r\n763e5000-76401000 r-xp 00000000 b3:02 1902       /lib/arm-linux-gnueabihf/libgcc_s.so.1\r\n76401000-76410000 ---p 0001c000 b3:02 1902       /lib/arm-linux-gnueabihf/libgcc_s.so.1\r\n76410000-76411000 r--p 0001b000 b3:02 1902       /lib/arm-linux-gnueabihf/libgcc_s.so.1\r\n76411000-76412000 rw-p 0001c000 b3:02 1902       /lib/arm-linux-gnueabihf/libgcc_s.so.1\r\n76412000-76419000 r-xp 00000000 b3:02 10592      /usr/lib/arm-linux-gnueabihf/libffi.so.6.0.4\r\n76419000-76428000 ---p 00007000 b3:02 10592      /usr/lib/arm-linux-gnueabihf/libffi.so.6.0.4\r\n76428000-76429000 r--p 00006000 b3:02 10592      /usr/lib/arm-linux-gnueabihf/libffi.so.6.0.4\r\n76429000-7642a000 rw-p 00007000 b3:02 10592      /usr/lib/arm-linux-gnueabihf/libffi.so.6.0.4\r\n7642a000-76431000 r-xp 00000000 b3:02 132165     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/fiddle.so\r\n76431000-76440000 ---p 00007000 b3:02 132165     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/fiddle.so\r\n76440000-76441000 r--p 00006000 b3:02 132165     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/fiddle.so\r\n76441000-76442000 rw-p 00007000 b3:02 132165     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/fiddle.so\r\n76442000-7648c000 r-xp 00000000 b3:02 10686      /usr/lib/arm-linux-gnueabihf/libssl.so.1.1\r\n7648c000-7649b000 ---p 0004a000 b3:02 10686      /usr/lib/arm-linux-gnueabihf/libssl.so.1.1\r\n7649b000-7649e000 r--p 00049000 b3:02 10686      /usr/lib/arm-linux-gnueabihf/libssl.so.1.1\r\n7649e000-764a2000 rw-p 0004c000 b3:02 10686      /usr/lib/arm-linux-gnueabihf/libssl.so.1.1\r\n764a2000-7664b000 r-xp 00000000 b3:02 10574      /usr/lib/arm-linux-gnueabihf/libcrypto.so.1.1\r\n7664b000-7665a000 ---p 001a9000 b3:02 10574      /usr/lib/arm-linux-gnueabihf/libcrypto.so.1.1\r\n7665a000-76669000 r--p 001a8000 b3:02 10574      /usr/lib/arm-linux-gnueabihf/libcrypto.so.1.1\r\n76669000-76670000 rw-p 001b7000 b3:02 10574      /usr/lib/arm-linux-gnueabihf/libcrypto.so.1.1\r\n76670000-76673000 rw-p 00000000 00:00 0 \r\n7667c000-7667d000 r-xp 00000000 b3:02 259580     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/digest/md5.so\r\n7667d000-7668c000 ---p 00001000 b3:02 259580     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/digest/md5.so\r\n7668c000-7668d000 r--p 00000000 b3:02 259580     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/digest/md5.so\r\n7668d000-7668e000 rw-p 00001000 b3:02 259580     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/digest/md5.so\r\n7668e000-766bf000 rw-p 00000000 00:00 0 \r\n766bf000-766c2000 r-xp 00000000 b3:02 132178     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/digest.so\r\n766c2000-766d1000 ---p 00003000 b3:02 132178     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/digest.so\r\n766d1000-766d2000 r--p 00002000 b3:02 132178     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/digest.so\r\n766d2000-766d3000 rw-p 00003000 b3:02 132178     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/digest.so\r\n766d3000-766d9000 r-xp 00000000 b3:02 132161     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/etc.so\r\n766d9000-766e8000 ---p 00006000 b3:02 132161     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/etc.so\r\n766e8000-766e9000 r--p 00005000 b3:02 132161     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/etc.so\r\n766e9000-766ea000 rw-p 00006000 b3:02 132161     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/etc.so\r\n766ea000-766ee000 r-xp 00000000 b3:02 259574     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/io/console.so\r\n766ee000-766fd000 ---p 00004000 b3:02 259574     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/io/console.so\r\n766fd000-766fe000 r--p 00003000 b3:02 259574     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/io/console.so\r\n766fe000-766ff000 rw-p 00004000 b3:02 259574     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/io/console.so\r\n766ff000-76706000 r-xp 00000000 b3:02 132167     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/pathname.so\r\n76706000-76715000 ---p 00007000 b3:02 132167     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/pathname.so\r\n76715000-76716000 r--p 00006000 b3:02 132167     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/pathname.so\r\n76716000-76717000 rw-p 00007000 b3:02 132167     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/pathname.so\r\n76717000-7671e000 r-xp 00000000 b3:02 132166     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/stringio.so\r\n7671e000-7672d000 ---p 00007000 b3:02 132166     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/stringio.so\r\n7672d000-7672e000 r--p 00006000 b3:02 132166     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/stringio.so\r\n7672e000-7672f000 rw-p 00007000 b3:02 132166     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/stringio.so\r\n7672f000-76731000 r-xp 00000000 b3:02 259542     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/enc/trans/transdb.so\r\n76731000-76740000 ---p 00002000 b3:02 259542     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/enc/trans/transdb.so\r\n76740000-76741000 r--p 00001000 b3:02 259542     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/enc/trans/transdb.so\r\n76741000-76742000 rw-p 00002000 b3:02 259542     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/enc/trans/transdb.so\r\n76742000-76744000 r-xp 00000000 b3:02 259516     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/enc/encdb.so\r\n76744000-76753000 ---p 00002000 b3:02 259516     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/enc/encdb.so\r\n76753000-76754000 r--p 00001000 b3:02 259516     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/enc/encdb.so\r\n76754000-76755000 rw-p 00002000 b3:02 259516     /home/pi/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/armv7l-linux-eabihf/enc/encdb.so\r\n76755000-7675c000 r--s 00000000 b3:02 11047      /usr/lib/arm-linux-gnueabihf/gconv/gconv-modules.cache\r\n7675c000-767dd000 rw-p 00000000 00:00 0 \r\n767dd000-76978000 r--p 00000000 b3:02 12831      /usr/lib/locale/locale-archive\r\n76978000-76aa2000 r-xp 00000000 b3:02 1887       /lib/arm-linux-gnueabihf/libc-2.24.so\r\n76aa2000-76ab1000 ---p 0012a000 b3:02 1887       /lib/arm-linux-gnueabihf/libc-2.24.so\r\n76ab1000-76ab3000 r--p 00129000 b3:02 1887       /lib/arm-linux-gnueabihf/libc-2.24.so\r\n76ab3000-76ab4000 rw-p 0012b000 b3:02 1887       /lib/arm-linux-gnueabihf/libc-2.24.so\r\n76ab4000-76ab7000 rw-p 00000000 00:00 0 \r\n76ab7000-76b24000 r-xp 00000000 b3:02 1914       /lib/arm-linux-gnueabihf/libm-2.24.so\r\n76b24000-76b34000 ---p 0006d000 b3:02 1914       /lib/arm-linux-gnueabihf/libm-2.24.so\r\n76b34000-76b35000 r--p 0006d000 b3:02 1914       /lib/arm-linux-gnueabihf/libm-2.24.so\r\n76b35000-76b36000 rw-p 0006e000 b3:02 1914       /lib/arm-linux-gnueabihf/libm-2.24.so\r\n76b36000-76b3d000 r-xp 00000000 b3:02 1892       /lib/arm-linux-gnueabihf/libcrypt-2.24.so\r\n76b3d000-76b4c000 ---p 00007000 b3:02 1892       /lib/arm-linux-gnueabihf/libcrypt-2.24.so\r\n76b4c000-76b4d000 r--p 00006000 b3:02 1892       /lib/arm-linux-gnueabihf/libcrypt-2.24.so\r\n76b4d000-76b4e000 rw-p 00007000 b3:02 1892       /lib/arm-linux-gnueabihf/libcrypt-2.24.so\r\n76b4e000-76b75000 rw-p 00000000 00:00 0 \r\n76b75000-76b77000 r-xp 00000000 b3:02 1896       /lib/arm-linux-gnueabihf/libdl-2.24.so\r\n76b77000-76b86000 ---p 00002000 b3:02 1896       /lib/arm-linux-gnueabihf/libdl-2.24.so\r\n76b86000-76b87000 r--p 00001000 b3:02 1896       /lib/arm-linux-gnueabihf/libdl-2.24.so\r\n76b87000-76b88000 rw-p 00002000 b3:02 1896       /lib/arm-linux-gnueabihf/libdl-2.24.so\r\n76b88000-76bea000 r-xp 00000000 b3:02 10606      /usr/lib/arm-linux-gnueabihf/libgmp.so.10.3.2\r\n76bea000-76bf9000 ---p 00062000 b3:02 10606      /usr/lib/arm-linux-gnueabihf/libgmp.so.10.3.2\r\n76bf9000-76bfa000 r--p 00061000 b3:02 10606      /usr/lib/arm-linux-gnueabihf/libgmp.so.10.3.2\r\n76bfa000-76bfb000 rw-p 00062000 b3:02 10606      /usr/lib/arm-linux-gnueabihf/libgmp.so.10.3.2\r\n76bfb000-76c11000 r-xp 00000000 b3:02 1948       /lib/arm-linux-gnueabihf/libpthread-2.24.so\r\n76c11000-76c20000 ---p 00016000 b3:02 1948       /lib/arm-linux-gnueabihf/libpthread-2.24.so\r\n76c20000-76c21000 r--p 00015000 b3:02 1948       /lib/arm-linux-gnueabihf/libpthread-2.24.so\r\n76c21000-76c22000 rw-p 00016000 b3:02 1948       /lib/arm-linux-gnueabihf/libpthread-2.24.so\r\n76c22000-76c24000 rw-p 00000000 00:00 0 \r\n76c24000-76ea2000 r-xp 00000000 b3:02 131836     /home/pi/.rvm/rubies/ruby-2.4.1/lib/libruby.so.2.4.1\r\n76ea2000-76eb1000 ---p 0027e000 b3:02 131836     /home/pi/.rvm/rubies/ruby-2.4.1/lib/libruby.so.2.4.1\r\n76eb1000-76eb4000 r--p 0027d000 b3:02 131836     /home/pi/.rvm/rubies/ruby-2.4.1/lib/libruby.so.2.4.1\r\n76eb4000-76eb6000 rw-p 00280000 b3:02 131836     /home/pi/.rvm/rubies/ruby-2.4.1/lib/libruby.so.2.4.1\r\n76eb6000-76ebc000 rw-p 00000000 00:00 0 \r\n76ebc000-76ec1000 r-xp 00000000 b3:02 10548      /usr/lib/arm-linux-gnueabihf/libarmmem.so\r\n76ec1000-76ed0000 ---p 00005000 b3:02 10548      /usr/lib/arm-linux-gnueabihf/libarmmem.so\r\n76ed0000-76ed1000 r--p 00004000 b3:02 10548      /usr/lib/arm-linux-gnueabihf/libarmmem.so\r\n76ed1000-76ed2000 rw-p 00005000 b3:02 10548      /usr/lib/arm-linux-gnueabihf/libarmmem.so\r\n76ed2000-76ef3000 r-xp 00000000 b3:02 1840       /lib/arm-linux-gnueabihf/ld-2.24.so\r\n76ef4000-76ef6000 rw-p 00000000 00:00 0 \r\n76efb000-76efc000 ---p 00000000 00:00 0 \r\n76efc000-76f02000 rw-p 00000000 00:00 0 \r\n76f02000-76f03000 r--p 00020000 b3:02 1840       /lib/arm-linux-gnueabihf/ld-2.24.so\r\n76f03000-76f04000 rw-p 00021000 b3:02 1840       /lib/arm-linux-gnueabihf/ld-2.24.so\r\n7e633000-7ee32000 rw-p 00000000 00:00 0          [stack]\r\n7efc9000-7efca000 r-xp 00000000 00:00 0          [sigpage]\r\n7efca000-7efcb000 r--p 00000000 00:00 0          [vvar]\r\n7efcb000-7efcc000 r-xp 00000000 00:00 0          [vdso]\r\nffff0000-ffff1000 r-xp 00000000 00:00 0          [vectors]\r\n\r\n\r\n[NOTE]\r\nYou may have encountered a bug in the Ruby interpreter or extension libraries.\r\nBug reports are welcome.\r\nFor details: http://www.ruby-lang.org/bugreport.html\r\n```\r\n\r\n### System configuration\r\n**Rails version**: Rails 5.2.0.beta2\r\n\r\n**Ruby version**: ruby 2.4.1p111 (2017-03-22 revision 58053) [armv7l-linux-eabihf]\r\n", "labels": [], "number": 31592, "updated_at": "2017-12-29 23:44:10", "user": 23654118, "closed_at": "2017-12-29 23:44:10", "id": 285130807, "title": "Unable to create new rails projects on Raspberry Pi", "url": "https://api.github.com/repos/rails/rails/issues/31592", "created_at": "2017-12-29 17:49:31", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354513379", "text": "Looks like the error raised inside `bootsnap`.  Can you try to use without `bootsnap`? \r\nIf the error does not reproduce, it's a `bootsnap` issue. Please create an issue to [bootsnap](https://github.com/Shopify/bootsnap) repository. Thanks!\r\n", "created_at": "2017-12-29 23:44:10", "user": 987638, "id": 354513379}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\n cc0d272 does not guarantee uniqueness.\r\nIt's the wrong usage that is the reason `make_tmpname` has been removed.\r\n\r\n### Other Information\r\n\r\nIf there's anything else that's important and relevant to your pull\r\nrequest, mention that information here. This could include\r\nbenchmarks, or other information.\r\n\r\nIf you are updating any of the CHANGELOG files or are asked to update the\r\nCHANGELOG files by reviewers, please add the CHANGELOG entry at the top of the file.\r\n\r\nFinally, if your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails!\r\n", "labels": [], "number": 31591, "updated_at": "2017-12-29 23:30:33", "user": 16700, "closed_at": "2017-12-29 23:30:25", "id": 285107199, "title": "let drb make temprary server", "url": "https://api.github.com/repos/rails/rails/issues/31591", "created_at": "2017-12-29 15:04:04", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354456840", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @pixeltrix (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-29 15:04:07", "user": 7468109, "id": 354456840}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354512554", "text": "Thanks!", "created_at": "2017-12-29 23:30:33", "user": 987638, "id": 354512554}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "References #31523\r\n\r\n### Summary\r\n\r\nModified README.md to include suggestions on configuring CORS on remote (in this case, GCS) to allow direct uploads with ActiveStorage\r\n", "labels": [], "number": 31590, "updated_at": "2017-12-29 14:28:29", "user": 137305, "closed_at": "2017-12-29 14:28:29", "id": 285083693, "title": "Add suggestions for configuring CORS on direct uploads with ActiveStorage", "url": "https://api.github.com/repos/rails/rails/issues/31590", "created_at": "2017-12-29 12:14:21", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354438701", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kaspth (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-29 12:14:33", "user": 7468109, "id": 354438701}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354452667", "text": "Sorry I didn't realize a rails guide for ActiveStorage exists. My suggestion clearly belongs there rather than in the README.", "created_at": "2017-12-29 14:28:28", "user": 137305, "id": 354452667}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "I have \r\n\r\nC:\\rubytest\\blah2>ruby --version\r\nruby 2.4.2p198 (2017-09-14 revision 59899) [x64-mingw32]\r\n\r\nC:\\rubytest\\blah2>rails --version\r\nRails 5.1.4\r\n\r\nC:\\rubytest\\blah2>\r\n\r\nMy OS is Windows 7.\r\n\r\nThe error I get is when I do  rails db:drop  or rails db:reset\r\n\r\nI get Permission denied @ unlink_internal - C:/rubytest/blah2/db/development.sqlite3\r\n\r\nI get this even from an administrative cmd prompt(which is  a bit like root in linux), and I can see that file is not locked, as I can delete it with the del command from cmd.exe.  But I still get the error. \r\n\r\nC:\\rubytest>rails --version\r\nRails 5.1.4\r\n\r\nC:\\rubytest>\r\n\r\nC:\\rubytest>rails new blah2\r\n..\r\n\r\nC:\\rubytest\\blah2>bundle update\r\n...\r\n\r\n\r\nC:\\rubytest\\blah2>rails db:reset\r\nPermission denied @ unlink_internal - C:/rubytest/blah2/db/development.sqlite3\r\nCouldn't drop database 'db/development.sqlite3'\r\nrails aborted!\r\nErrno::EACCES: Permission denied @ unlink_internal - C:/rubytest/blah2/db/development.sqlite3\r\nbin/rails:4:in `require'\r\nbin/rails:4:in `<main>'\r\nTasks: TOP => db:drop:_unsafe\r\n(See full trace by running task with --trace)\r\n\r\nI heard that maybe in *nix it might mention about setting an environment variable or something that would give the developer permission.  But perhaps the error in windows doesn't state that info.    If I try adding --trace then it doesn't give me any ideas as to a solution.\r\n\r\nC:\\rubytest\\blah2>rails db:reset --trace\r\n** Invoke db:reset (first_time)\r\n** Invoke db:drop (first_time)\r\n** Invoke db:load_config (first_time)\r\n** Execute db:load_config\r\n** Invoke db:check_protected_environments (first_time)\r\n** Invoke environment (first_time)\r\n** Execute environment\r\n** Invoke db:load_config\r\n** Execute db:check_protected_environments\r\n** Execute db:drop\r\n** Invoke db:drop:_unsafe (first_time)\r\n** Invoke db:load_config\r\n** Execute db:drop:_unsafe\r\nPermission denied @ unlink_internal - C:/rubytest/blah2/db/development.sqlite3\r\nCouldn't drop database 'db/development.sqlite3'\r\nrails aborted!\r\nErrno::EACCES: Permission denied @ unlink_internal - C:/rubytest/blah2/db/develo\r\npment.sqlite3\r\nC:/Ruby24-x64/lib/ruby/2.4.0/fileutils.rb:1341:in `unlink'\r\nC:/Ruby24-x64/lib/ruby/2.4.0/fileutils.rb:1341:in `block in remove_file'\r\nC:/Ruby24-x64/lib/ruby/2.4.0/fileutils.rb:1349:in `platform_support'\r\nC:/Ruby24-x64/lib/ruby/2.4.0/fileutils.rb:1340:in `remove_file'\r\nC:/Ruby24-x64/lib/ruby/2.4.0/fileutils.rb:704:in `remove_file'\r\nC:/Ruby24-x64/lib/ruby/2.4.0/fileutils.rb:507:in `block in rm'\r\nC:/Ruby24-x64/lib/ruby/2.4.0/fileutils.rb:506:in `each'\r\nC:/Ruby24-x64/lib/ruby/2.4.0/fileutils.rb:506:in `rm'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/activerecord-5.1.4/lib/active_record/task\r\ns/sqlite_database_tasks.rb:22:in `drop'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/activerecord-5.1.4/lib/active_record/task\r\ns/database_tasks.rb:144:in `drop'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/activerecord-5.1.4/lib/active_record/task\r\ns/database_tasks.rb:160:in `block in drop_current'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/activerecord-5.1.4/lib/active_record/task\r\ns/database_tasks.rb:304:in `block in each_current_configuration'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/activerecord-5.1.4/lib/active_record/task\r\ns/database_tasks.rb:303:in `each'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/activerecord-5.1.4/lib/active_record/task\r\ns/database_tasks.rb:303:in `each_current_configuration'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/activerecord-5.1.4/lib/active_record/task\r\ns/database_tasks.rb:159:in `drop_current'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/activerecord-5.1.4/lib/active_record/rail\r\nties/databases.rake:42:in `block (2 levels) in <top (required)>'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/task.rb:251:in `bloc\r\nk in execute'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/task.rb:251:in `each\r\n'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/task.rb:251:in `exec\r\nute'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/task.rb:195:in `bloc\r\nk in invoke_with_call_chain'\r\nC:/Ruby24-x64/lib/ruby/2.4.0/monitor.rb:214:in `mon_synchronize'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/task.rb:188:in `invo\r\nke_with_call_chain'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/task.rb:181:in `invo\r\nke'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/activerecord-5.1.4/lib/active_record/rail\r\nties/databases.rake:38:in `block (2 levels) in <top (required)>'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/task.rb:251:in `bloc\r\nk in execute'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/task.rb:251:in `each\r\n'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/task.rb:251:in `exec\r\nute'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/task.rb:195:in `bloc\r\nk in invoke_with_call_chain'\r\nC:/Ruby24-x64/lib/ruby/2.4.0/monitor.rb:214:in `mon_synchronize'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/task.rb:188:in `invo\r\nke_with_call_chain'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/task.rb:217:in `bloc\r\nk in invoke_prerequisites'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/task.rb:215:in `each\r\n'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/task.rb:215:in `invo\r\nke_prerequisites'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/task.rb:194:in `bloc\r\nk in invoke_with_call_chain'\r\nC:/Ruby24-x64/lib/ruby/2.4.0/monitor.rb:214:in `mon_synchronize'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/task.rb:188:in `invo\r\nke_with_call_chain'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/task.rb:181:in `invo\r\nke'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/application.rb:160:i\r\nn `invoke_task'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/application.rb:116:i\r\nn `block (2 levels) in top_level'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/application.rb:116:i\r\nn `each'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/application.rb:116:i\r\nn `block in top_level'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/application.rb:125:i\r\nn `run_with_threads'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/application.rb:110:i\r\nn `top_level'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/railties-5.1.4/lib/rails/commands/rake/ra\r\nke_command.rb:21:in `block in perform'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/rake-12.3.0/lib/rake/application.rb:186:i\r\nn `standard_exception_handling'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/railties-5.1.4/lib/rails/commands/rake/ra\r\nke_command.rb:18:in `perform'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/railties-5.1.4/lib/rails/command.rb:46:in\r\n `invoke'\r\nC:/Ruby24-x64/lib/ruby/gems/2.4.0/gems/railties-5.1.4/lib/rails/commands.rb:16:i\r\nn `<top (required)>'\r\nbin/rails:4:in `require'\r\nbin/rails:4:in `<main>'\r\nTasks: TOP => db:drop:_unsafe\r\n\r\nC:\\rubytest\\blah2>\r\n\r\n\r\n\r\n\r\n", "labels": [], "number": 31589, "updated_at": "2018-01-02 02:17:54", "user": 12636021, "closed_at": "None", "id": 285037078, "title": "in windows rails implementation, db:reset or db:drop gives permissions error", "url": "https://api.github.com/repos/rails/rails/issues/31589", "created_at": "2017-12-29 05:41:35", "comments": [], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "I implemented new Project in Ruby on Rails\r\n\r\nIn my project I Created page \"Announcement\" with Topic tittle field,text message field,Attachment field and save button\r\n\r\nWhenever I try to create new Announcement,\r\n\r\nI enter something in topic title,text message,attached image in Attachment feild,and finally click the save button,its works properly then it automatically moves to next page\r\n\r\nBut My Issue is\r\n\r\nBy clicking the save button with out attaching any image in attachment feild,I Got the error in console tab - \"POST XHR http://(mydomain)/api/v1/courses/1016/discussion_topics\" along with \"401(unauthorised)\"\r\n\r\nAnd In network tab-{\"status\":\"unauthorized\",\"message\":\"Invalid access token.\"}\r\n\r\nBut it work properly few day before.now I'm getting issue.I dont know How to solve??\r\n\r\nThanks.\r\n", "labels": [], "number": 31588, "updated_at": "2017-12-29 06:59:09", "user": 34051669, "closed_at": "2017-12-29 06:59:09", "id": 285035786, "title": "How to fix issue “POST xhr with 401 unauthorised error”,When i create a new announcement in canvas lms", "url": "https://api.github.com/repos/rails/rails/issues/31588", "created_at": "2017-12-29 05:22:55", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354406960", "text": "Please use the [mailing list](https://groups.google.com/forum/#!forum/rubyonrails-talk) or StackOverflow for questions/help, where a wider community will be able to help you. We reserve the issues tracker for issues only. Thanks.", "created_at": "2017-12-29 06:59:09", "user": 987638, "id": 354406960}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n```\r\nmail = Mail.new do\r\n  to '<a>'\r\nend\r\nmail.to # => [nil]\r\n```\r\n\r\n### Expected behavior\r\nReturn an empty array \r\n\r\n### Actual behavior\r\nReturn an array with nil\r\n\r\n### System configuration\r\nRails: 5.1.3\r\nRuby: 2.4.1", "labels": [], "number": 31587, "updated_at": "2017-12-29 03:51:25", "user": 4147492, "closed_at": "2017-12-29 03:51:25", "id": 285026505, "title": "mail.to return [nil] if invalid mail address", "url": "https://api.github.com/repos/rails/rails/issues/31587", "created_at": "2017-12-29 03:10:22", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354394312", "text": "This isn’t a Rails issue. `Mail` is provided by the [mail](https://github.com/mikel/mail) gem.", "created_at": "2017-12-29 03:51:25", "user": 94129, "id": 354394312}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nFile `storage.yml` contains example configurations for S3 and GCS:\r\n```\r\n# Use rails credentials:edit to set the AWS secrets (as aws:access_key_id|secret_access_key)\r\n# amazon:\r\n#   service: S3\r\n#   access_key_id: <%= Rails.application.credentials.dig(:aws, :access_key_id) %>\r\n#   secret_access_key: <%= Rails.application.credentials.dig(:aws, :secret_access_key) %>\r\n#   region: us-east-1\r\n#   bucket: your_own_bucket\r\n\r\n# Remember not to checkin your GCS keyfile to a repository\r\n# google:\r\n#   service: GCS\r\n#   project: your_project\r\n#   keyfile: <%= Rails.root.join(\"path/to/gcs.keyfile\") %>\r\n#   bucket: your_own_bucket\r\n```\r\nTo configure S3 you just need to fill values in yaml and you can do it conveniently via `Rails.application.credentials`. GCS configuration is more troublesome as it requires a path to *file* in `keyfile` and this file needs to be uploaded without the usage of VCS. It creates a problem in services like Heroku, where all files come only from VCS. \r\n\r\n### Expected behaviour\r\n\r\nThat would be great if there was a key for the *value* of `gcs.keyfile`, for example `keyfile_json` instead of `keyfile` which requires *path* of `gcs.keyfile`.\r\n\r\n### System configuration\r\n**Rails version**: 5.2.0.beta2\r\n\r\n**Ruby version**: 2.4.2\r\n", "labels": [], "number": 31586, "updated_at": "2018-01-02 13:22:00", "user": 13520543, "closed_at": "2017-12-28 21:49:50", "id": 284984999, "title": "GCS config for ActiveStorage requires presence of file gcs.keyfile", "url": "https://api.github.com/repos/rails/rails/issues/31586", "created_at": "2017-12-28 20:29:48", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354363273", "text": "You can provide a Hash of keyfile data:\r\n\r\n```yaml\r\ngcs:\r\n  service: GCS\r\n  credentials:\r\n    type: \"service_account\"\r\n    project_id: \"\"\r\n    private_key_id: \"\"\r\n    private_key: \"\"\r\n    client_email: \"\"\r\n    client_id: \"\"\r\n    auth_uri: \"https://accounts.google.com/o/oauth2/auth\"\r\n    token_uri: \"https://accounts.google.com/o/oauth2/token\"\r\n    auth_provider_x509_cert_url: \"https://www.googleapis.com/oauth2/v1/certs\"\r\n    client_x509_cert_url: \"\"\r\n  project: \"\"\r\n  bucket: \"\"\r\n```", "created_at": "2017-12-28 21:49:50", "user": 94129, "id": 354363273}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354765206", "text": "`Google::Cloud::PermissionDeniedError: forbidden: <client_email> does not have storage.buckets.get access to <bucket_name>.`\r\nWhy does it require permission to list all buckets if I only need to manage files in one bucket?", "created_at": "2018-01-02 13:22:00", "user": 13520543, "id": 354765206}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\nMinor english change ActiveStorage overview\r\n\r\n", "labels": [], "number": 31585, "updated_at": "2017-12-28 18:52:08", "user": 190479, "closed_at": "2017-12-28 18:52:08", "id": 284963564, "title": "Fix english: minor change ActiveStorage overview", "url": "https://api.github.com/repos/rails/rails/issues/31585", "created_at": "2017-12-28 18:07:33", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354329995", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @rafaelfranca (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-28 18:07:45", "user": 7468109, "id": 354329995}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354336381", "text": "Thanks, but the original is fine.", "created_at": "2017-12-28 18:52:08", "user": 94129, "id": 354336381}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\nWhen using the relation `merge` functionality in ActiveRecord, we noticed that in the rare case that we used merge with two models that coincidentally happened to have an identically named column, those bind values were getting blown out, irrespective of which table was being merged from/to. Unit test to reproduce in merging_test.rb:\r\n\r\n```ruby\r\nrequire 'models/essay'\r\n\r\n  def test_relation_merging_with_subquery\r\n    left = Developer.where(name: 'test_value1').where(id: Essay.where(name: 'test_value2'))\r\n    right = Developer.where(name: 'test_value3')\r\n    developer_name_column = Developer.columns_hash['name']\r\n    essay_name_column = Essay.columns_hash['name']\r\n    binds = [[developer_name_column, 'test_value3'], [essay_name_column, 'test_value2']]\r\n    assert_equal left.merge(right).bind_values, binds\r\n  end\r\n```\r\n\r\n### Expected behavior\r\n\r\nBind values for Essay model 'test_value2' should remain\r\n\r\n### Actual behavior\r\n\r\nThe bind value for Essay ('test_value2') is blown away\r\n\r\n### System configuration\r\n**Rails version**: Rails 4.2.10\r\n\r\n**Ruby version**: ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-darwin16]\r\n", "labels": [], "number": 31584, "updated_at": "2017-12-29 00:42:46", "user": 2496931, "closed_at": "2017-12-29 00:42:46", "id": 284954270, "title": "ActiveRecord relation 'merge' merges bind values only by column name only", "url": "https://api.github.com/repos/rails/rails/issues/31584", "created_at": "2017-12-28 17:07:25", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354380935", "text": "Rails 4.2 is not supported anymore for anything besides security fixes.\r\nPlease check whether your issue can reproduce with latest Rails. Thanks!", "created_at": "2017-12-29 00:42:46", "user": 987638, "id": 354380935}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Spelling fix\r\n", "labels": [], "number": 31583, "updated_at": "2018-01-12 22:05:35", "user": 2158281, "closed_at": "2018-01-12 22:05:34", "id": 284884988, "title": "Update working_with_javascript_in_rails.md", "url": "https://api.github.com/repos/rails/rails/issues/31583", "created_at": "2017-12-28 10:19:57", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354265494", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @sgrif (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-28 10:20:00", "user": 7468109, "id": 354265494}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354265495", "text": "<img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20> **Warning** <img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20>\n\n* Pull requests are usually filed against the master branch for this repo, but this one is against 5.1.3. Please double check that you specified the right target!", "created_at": "2017-12-28 10:20:00", "user": 7468109, "id": 354265495}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354552068", "text": "good", "created_at": "2017-12-30 15:32:59", "user": 33692299, "id": 354552068}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357367452", "text": "Can you re-open this against the master branch?", "created_at": "2018-01-12 22:05:34", "user": 1529387, "id": 357367452}], "assignees": [1529387, 1529387], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "```\r\n<%=link_to root_path do%>\r\n   Hi\r\n  <%=link_to 'Man', root_path%>\r\n<%end%>\r\n```\r\nThis should produces :\r\n\r\n```\r\n<a href=\"/\">\r\n Hi \r\n<a href=\"/\">Man</a>\r\n</a>\r\n```\r\nBut instead produces\r\n\r\n```\r\n<a href=\"/\"> Hi </a>\r\n<a href=\"/\">Man</a>\r\n```\r\n\r\nRails 5.1.4\r\n\r\nIn Rails console it works. But, when we try the same in erb it fails\r\n\r\n```\r\n2.4.2 :001 > helper.link_to \"http://example.com\" do\r\n2.4.2 :002 >     helper.link_to \"aaa\", \"http://example.com\"\r\n2.4.2 :003?>   end\r\n => \"<a href=\\\"http://example.com\\\"><a href=\\\"http://example.com\\\">aaa</a></a>\" \r\n```\r\n", "labels": [], "number": 31582, "updated_at": "2017-12-28 12:12:19", "user": 18180795, "closed_at": "2017-12-28 12:12:19", "id": 284883896, "title": "Nested link_to do block", "url": "https://api.github.com/repos/rails/rails/issues/31582", "created_at": "2017-12-28 10:14:06", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354279198", "text": "Rails generate tag you expected. But nested links are illegal in the W3C definition. \r\nSo browser maybe adjusts the HTML automatically. \r\nRef: https://stackoverflow.com/questions/9882916/are-you-allowed-to-nest-a-link-inside-of-a-link\r\n", "created_at": "2017-12-28 12:12:19", "user": 987638, "id": 354279198}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "I have a simple worker. I need an image url from ActiveStorage attachment. I use Google Cloud Storage for upload images.\r\n\r\n[I have read this docs.](http://edgeguides.rubyonrails.org/active_storage_overview.html#link-to-attachments)\r\n\r\n### Expected behavior\r\nI expect to get link to image on GCS.\r\n\r\n### Actual behavior\r\nI can get link in controller via image_tag or rails_blob_path(user.avatar, disposition: \"attachment\"), but I don't know how to do it from a worker.\r\n\r\n### System configuration\r\n**Rails version**:\r\n5.2.0.beta2\r\n\r\n**Ruby version**:\r\n2.5.0", "labels": [], "number": 31581, "updated_at": "2017-12-29 04:54:48", "user": 8033090, "closed_at": "2017-12-28 13:13:17", "id": 284883104, "title": "How can I get image url from an ActiveStorage attachment in a worker?", "url": "https://api.github.com/repos/rails/rails/issues/31581", "created_at": "2017-12-28 10:09:28", "comments": [{"reactions": {"hooray": [8033090], "+1": [8033090]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354286466", "text": "You will need to include the URL helpers in the worker and then you can call any URL helper, rails_blob(path/url) are URL helpers.\r\n\r\n``` ruby\r\nclass MyWorker\r\n  include Rails.application.routes.url_helpers\r\n  \r\n  def my_url\r\n    rails_blob_path(user.avatar, disposition: \"attachment\")\r\n  end\r\nend\r\n```", "created_at": "2017-12-28 13:13:17", "user": 621238, "id": 354286466}, {"reactions": {"+1": [536711]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354397873", "text": "@prathamesh-sonpatki Thanks! \r\n\r\nIt works. \r\n\r\nAlso I added an option `only_path: true`\r\n\r\n```ruby\r\nrails_blob_path(user.avatar, disposition: \"attachment\", only_path: true)\r\n```", "created_at": "2017-12-29 04:54:48", "user": 8033090, "id": 354397873}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "\r\n\r\n### System configuration\r\n**Rails 4.1.11**:\r\n\r\n**ruby 2.2.3p173**:\r\n\r\nI am trying to convert mysql2 to postgres. When i run rake db:create I am getting the following error.\r\n\r\nrake aborted!\r\nGem::LoadError: You have already activated rake 12.3.0, but your Gemfile requires rake 10.4.2. Prepending bundle exec to your command may solve this.\r\n/home/supranimbus12/.rvm/gems/ruby-2.2.3@global/gems/bundler-1.16.1/lib/bundler/runtime.rb:313:in check_for_activated_spec!' /home/supranimbus12/.rvm/gems/ruby-2.2.3@global/gems/bundler-1.16.1/lib/bundler/runtime.rb:31:inblock in setup'\r\n/home/supranimbus12/.rvm/gems/ruby-2.2.3@global/gems/bundler-1.16.1/lib/bundler/runtime.rb:26:in map' /home/supranimbus12/.rvm/gems/ruby-2.2.3@global/gems/bundler-1.16.1/lib/bundler/runtime.rb:26:insetup'\r\n/home/supranimbus12/.rvm/gems/ruby-2.2.3@global/gems/bundler-1.16.1/lib/bundler.rb:107:in setup' /home/supranimbus12/.rvm/gems/ruby-2.2.3@global/gems/bundler-1.16.1/lib/bundler/setup.rb:10:in<top (required)>'\r\n/home/supranimbus12/tracks-2.3.0/config/boot.rb:4:in <top (required)>' /home/supranimbus12/tracks-2.3.0/config/application.rb:1:in<top (required)>'\r\n/home/supranimbus12/tracks-2.3.0/Rakefile:4:in <top (required)>' /home/supranimbus12/.rvm/gems/ruby-2.2.3@global/gems/rake-12.3.0/exe/rake:27:in<top (required)>'\r\n(See full trace by running task with --trace)\r\n", "labels": [], "number": 31580, "updated_at": "2017-12-28 06:45:38", "user": 31646622, "closed_at": "2017-12-28 06:45:38", "id": 284851489, "title": "How to convert mysql2 to psql in cucumber rails", "url": "https://api.github.com/repos/rails/rails/issues/31580", "created_at": "2017-12-28 06:37:40", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354238589", "text": " Please use the mailing list or StackOverflow for questions/help, where a wider community will be able to help you. We reserve the issues tracker for issues only.", "created_at": "2017-12-28 06:45:38", "user": 1034, "id": 354238589}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nFrom #31576, seems more consistent this way.", "labels": [], "number": 31579, "updated_at": "2017-12-28 16:07:42", "user": 129149, "closed_at": "2017-12-28 16:07:39", "id": 284806380, "title": "More consistent formatting of numbers in documentation", "url": "https://api.github.com/repos/rails/rails/issues/31579", "created_at": "2017-12-27 22:26:33", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354186780", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @eileencodes (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-27 22:26:45", "user": 7468109, "id": 354186780}, {"reactions": {"+1": [22680876, 621238, 13375749]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354233411", "text": "I think this is over-stretching our scope for creative interpretation/presentation.\r\n\r\nThe actual result is `2097152`. In Ruby, that value can also be spelled as `2_097_152`: it will evaluate to the same thing. We've preferred that form because it's comparatively easier to read.\r\n\r\n`2 097 152` looks nice, but isn't a Ruby value.", "created_at": "2017-12-28 05:53:12", "user": 1034, "id": 354233411}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "The `option_groups_from_collection_for_select` helper could only take method names as `group_method` and `group_label_method` parameters. This wasn't consistent with `option_from_collection_for_select` which could take either method names or callable objects.\r\n\r\nThis PR replaces the uses of `group.send(...)` in the helper by calls to `value_for_collection(group, ...)`, allowing the use of procs, lambdas and other callable objects as parameters.", "labels": [], "number": 31578, "updated_at": "2017-12-30 15:23:27", "user": 2871879, "closed_at": "2017-12-30 01:15:27", "id": 284759965, "title": "Allow the use of callable objects as group methods for grouped selects.", "url": "https://api.github.com/repos/rails/rails/issues/31578", "created_at": "2017-12-27 17:00:02", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354143022", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kaspth (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-27 17:00:06", "user": 7468109, "id": 354143022}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354519514", "text": "Seems legit. Thanks!", "created_at": "2017-12-30 01:15:22", "user": 94129, "id": 354519514}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354551595", "text": "My pleasure 😄", "created_at": "2017-12-30 15:23:17", "user": 2871879, "id": 354551595}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "r? @rafaelfranca \r\n", "labels": [], "number": 31577, "updated_at": "2018-01-19 17:10:51", "user": 621238, "closed_at": "2018-01-18 20:02:03", "id": 284753590, "title": "Added a note about bootsnap in the Rails 5.2 upgrade guide [ci skip]", "url": "https://api.github.com/repos/rails/rails/issues/31577", "created_at": "2017-12-27 16:22:42", "comments": [], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "I was reading through [you documentation](http://api.rubyonrails.org) and realised the return of `Numeric` -> `in_milliseconds()` isn't accurate.\r\n\r\nIt says \r\n\r\n```\r\n2.in_milliseconds # => 2_000\r\n```\r\n\r\nBut it should be \r\n\r\n```\r\n2.in_milliseconds # => 2000\r\n```\r\n\r\nIt's peanuts but I figure I will inform you of it.\r\n\r\nEdit: actually you have the same on `megabytes()` and so on. It might be a visibility think I just realise...", "labels": [], "number": 31576, "updated_at": "2018-01-01 18:00:28", "user": 10674268, "closed_at": "2018-01-01 18:00:28", "id": 284739751, "title": "Documentation text mistake", "url": "https://api.github.com/repos/rails/rails/issues/31576", "created_at": "2017-12-27 15:05:07", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354126965", "text": "`2.in_milliseconds` is fixed in https://github.com/rails/rails/commit/08a177ee63c\r\n\r\nFeel free to open PR to fix the other one.", "created_at": "2017-12-27 15:09:35", "user": 621238, "id": 354126965}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354134138", "text": "I’m not allowed to creating branches.\n\n> On 27 Dec 2017, at 5.10 PM, प्रथमेश Sonpatki <notifications@github.com> wrote:\n> \n> 2.in_milliseconds is fixed in 08a177e <https://github.com/rails/rails/commit/08a177ee63c>\n> Feel free to open PR to fix the other one.\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub <https://github.com/rails/rails/issues/31576#issuecomment-354126965>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AKLgXK_iV4P5FzZ-9LzF08B3jCMW0oT7ks5tEl3jgaJpZM4RNkPP>.\n> \n\n", "created_at": "2017-12-27 15:59:37", "user": 10674268, "id": 354134138}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354144161", "text": "You can fork the rails repo on your account and then open a pull request. Please check https://help.github.com/articles/creating-a-pull-request-from-a-fork/", "created_at": "2017-12-27 17:07:49", "user": 621238, "id": 354144161}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354664464", "text": "Here: https://github.com/rails/rails/pull/31613\r\n", "created_at": "2018-01-01 17:15:39", "user": 2041827, "id": 354664464}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354666572", "text": "Per https://github.com/rails/rails/pull/31579#issuecomment-354233411, we prefer this form because it’s equivalent and easier to read.", "created_at": "2018-01-01 18:00:28", "user": 94129, "id": 354666572}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "when model is added to collection association\r\n\r\n### Summary\r\n\r\nThe foreign key is not updated while the associated model is updated in the following scenario:\r\n\r\n``` ruby\r\n    bulb = Bulb.create!(car: Car.create!)\r\n    Car.new.bulbs << bulb\r\n    assert_nil bulb.car_id\r\n```", "labels": [], "number": 31575, "updated_at": "2017-12-31 20:51:45", "user": 122436, "closed_at": "2017-12-31 16:40:24", "id": 284728636, "title": "Bugfix foreign key replacement in inverse association", "url": "https://api.github.com/repos/rails/rails/issues/31575", "created_at": "2017-12-27 13:58:29", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354117715", "text": "r? @georgeclaghorn\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2017-12-27 13:58:31", "user": 7468109, "id": 354117715}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354613417", "text": "`replace_keys` will be worked in `set_inverse_instance` as well by this fix. Looks fine to me.\r\n\r\nhttps://github.com/rails/rails/blob/540c60ff4723670bf106c2ae46e3a6723cbf42a4/activerecord/lib/active_record/associations/association.rb#L103", "created_at": "2017-12-31 16:39:55", "user": 12642, "id": 354613417}], "assignees": [94129, 94129], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "IE10/11 does not set `defaultPrevented` when `preventDefault()` is called on CustomEvents\r\n\r\nSame issue in Turbolinks\r\nhttps://github.com/turbolinks/turbolinks/issues/233\r\n", "labels": [], "number": 31574, "updated_at": "2018-01-01 18:04:45", "user": 4083992, "closed_at": "2017-12-28 05:01:42", "id": 284726885, "title": "Fix IE 10 and IE 11's broken `preventDefault` for rails-ujs", "url": "https://api.github.com/repos/rails/rails/issues/31574", "created_at": "2017-12-27 13:47:56", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354116410", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @schneems (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-27 13:48:10", "user": 7468109, "id": 354116410}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354666838", "text": "Touched up in https://github.com/rails/rails/commit/41e3bbdee1a33bd4a8f5c54a808b31ebb598898c", "created_at": "2018-01-01 18:04:45", "user": 5355, "id": 354666838}], "assignees": [59744, 59744], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Rails with **Ruby 2.3.6**, **Ruby 2.4.3**, **Ruby 2.5.0** fail to run with Apache + Passenger\r\nApache/2.4.10 (Debian)\r\nPassenger 5.1.12\r\n\r\nALL applications out:\r\n**Incomplete response received from application**\r\n\r\nBefore versions of Ruby ALL works fine!\r\n\r\nIn log-file:\r\n```\r\nApp 31519 stderr: /home/ruby/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/therubyracer-0.12.3/lib/v8/context.rb:99: [BUG] Segmentation fau\r\nlt at 0x0000000000000000\r\nApp 31519 stderr: ruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-linux]\r\nApp 31519 stderr:\r\nApp 31519 stderr: -- Control frame information -----------------------------------------------\r\nApp 31519 stderr: c:0161 p:---- s:1007 e:001006 CFUNC  :Run\r\nApp 31519 stderr: c:0160 p:0006 s:1003 e:001002 BLOCK  /home/ruby/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/therubyracer-0.12.3/lib/v8/\r\ncontext.rb:99\r\n```\r\n\r\n_But!!! **therubyracer** is a PART of Ruby on Rails._\r\nHowever, it seems that this gem (**therubyracer**) has long since died and is no longer supported (Latest commit 466a1f0 on 5 Jan).\r\n\r\nWithout ```gem 'therubyracer', platforms: :ruby``` in Gemfile no one application not working (even in development mode - without Apache+Passenger - ```rails -s```)!\r\n\r\nPLEASE HELP!!!\r\n\r\n[passenger.level7.log.therubyracer.bug.log](https://github.com/rails/rails/files/1588551/passenger.level7.log.therubyracer.bug.log)\r\n\r\n", "labels": [], "number": 31573, "updated_at": "2017-12-27 11:04:02", "user": 584144, "closed_at": "2017-12-27 10:17:10", "id": 284666428, "title": "Rails with Ruby 2.3.6, Ruby 2.4.3, Ruby 2.5.0 fail to run with Apache + Passenger", "url": "https://api.github.com/repos/rails/rails/issues/31573", "created_at": "2017-12-27 07:33:48", "comments": [{"reactions": {"+1": [1153188]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354090959", "text": "This is not a Rails issue.", "created_at": "2017-12-27 10:17:10", "user": 12642, "id": 354090959}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354097144", "text": "@kamipo \r\n\r\nOk. Because ```therubyracer``` is a PART of Ruby on Rails, and ```therubyracer``` is died (Latest commit 466a1f0 on 5 Jan) then **Ruby on Rails also will die with newest version of Ruby 2.3.6, 2.4.3, 2.5.0**.\r\n\r\nOr any one may correct the gem ```therubyracer```?", "created_at": "2017-12-27 11:04:02", "user": 584144, "id": 354097144}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "refs #27920, closes #27920\r\n\r\nCurrently the comment says application configuration should go into files in `config/initializers`.\r\nHowever some configuration couldn't initialize correctly because of the initializing process(e.g. `config.time_zone`).\r\n\r\nIt should be changed by framework but this is large change and it may occur malfunction to some applications which depends on current initializing process.\r\n\r\nSo I think this comment should be changed to adapt to the fact.\r\n\r\ncc @matthewd ", "labels": [], "number": 31572, "updated_at": "2018-01-13 05:50:53", "user": 4456532, "closed_at": "2018-01-13 05:50:44", "id": 284649251, "title": "Fix comment about initializers to adapt to the fact", "url": "https://api.github.com/repos/rails/rails/issues/31572", "created_at": "2017-12-27 04:59:46", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354052505", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kamipo (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-27 04:59:59", "user": 7468109, "id": 354052505}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356517650", "text": "@matthewd what do you think about this PR?", "created_at": "2018-01-10 07:04:04", "user": 4456532, "id": 356517650}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357412258", "text": "I think this is good for telling the user the current behaviour. So I will merge this. If there is any objection, please feel free to revert.\r\n", "created_at": "2018-01-13 05:50:41", "user": 987638, "id": 357412258}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357412266", "text": "@kami-zh Thanks!", "created_at": "2018-01-13 05:50:53", "user": 987638, "id": 357412266}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {"heart": [671550], "+1": [26460]}, "text": "This PR generalizes `raise_on_missing_translations` config option from `action_view` scope into `i18n` so it can be used for controllers too.\r\n\r\nExisting applications should receive deprecation warnings and continue to use old `config.action_view. raise_on_missing_translations` to affect only view's `#translate` method until they decide to switch to new option. And then it should affect both controllers and views.\r\n\r\nFixes https://github.com/rails/rails/issues/24138.\r\nFixes https://github.com/rails/rails/issues/25116.\r\nBrief discussion [here](https://groups.google.com/forum/?fromgroups#!topic/rubyonrails-core/nNrgPhWUl-c).", "labels": [], "number": 31571, "updated_at": "2018-01-10 13:14:15", "user": 5657035, "closed_at": "None", "id": 284633270, "title": "Unify raise_on_missing_translations for views and controllers", "url": "https://api.github.com/repos/rails/rails/issues/31571", "created_at": "2017-12-27 01:59:41", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354036761", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @rafaelfranca (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-27 01:59:44", "user": 7468109, "id": 354036761}], "assignees": [47848, 47848], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "", "labels": [], "number": 31570, "updated_at": "2017-12-27 08:58:23", "user": 987638, "closed_at": "2017-12-27 05:27:14", "id": 284631832, "title": "CI against ruby 2.5.0", "url": "https://api.github.com/repos/rails/rails/issues/31570", "created_at": "2017-12-27 01:43:24", "comments": [], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "if I need multi sql statements in mysql , I need add flag `MULTI_STATEMENTS` in `database.yml`\r\nlike\r\n\r\n    default: &default\r\n      adapter: mysql2\r\n      {SKIP}\r\n      flags:\r\n        - MULTI_STATEMENTS\r\n\r\nthen when I use\r\n\r\n    ActiveRecord::Base.connection.execute(\"select 1;\" * 10)\r\n      #=> only 1 result\r\n    ActiveRecord::Base.connection.execute(\"select 1;\" * 10)\r\n      #=> ActiveRecord::StatementInvalid: Mysql2::Error: Commands out of sync; you can't run this command now\r\n    ActiveRecord::Base.connection.execute(\"select 1;\" * 10)\r\n      #=> ActiveRecord::StatementInvalid: Mysql2::Error: MySQL client is not connected\r\n\r\nthen I found it not pull back all result in multi sql statements , and second execute will be fail ... so I try to patch like this (just demo code)\r\n\r\n    class ActiveRecord::Base\r\n      def self.multi_sql(safe_raw_sql)\r\n        db_client = ActiveRecord::Base.connection.raw_connection\r\n        datas = []\r\n        begin\r\n          db_client.query(\"BEGIN\")\r\n          db_client.query(safe_raw_sql)\r\n          while data = db_client.next_result\r\n            datas << db_client.store_result\r\n          end\r\n          db_client.query(\"COMMIT\")\r\n        rescue\r\n          db_client.query(\"ROLLBACK\")\r\n        end\r\n        return datas\r\n      end\r\n    end\r\n\r\nthen same demo code will be work but return ugly result obj ...... so ... has any another way to do it ? or just help me fix to ActiveRecord and help another people? becourse it didn't need to reset/clear any connection or something else ...\r\n\r\n### System configuration\r\nRails 5.1.4 , Ruby 2.4.1p111", "labels": [], "number": 31569, "updated_at": "2018-03-22 21:16:19", "user": 70926, "closed_at": "2018-03-22 21:16:19", "id": 284601504, "title": "mysql2 MULTI_STATEMENTS + ActiveRecord error and patch ...", "url": "https://api.github.com/repos/rails/rails/issues/31569", "created_at": "2017-12-26 19:44:06", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/375454361", "text": "Hello! I maintain the mysql2 gem. Subscribing to this ticket to keep up with any updates. I don't have any specific advice here for what ActiveRecord should do to handle multiple statements, but I'm interested in participating in the conversation if/when.", "created_at": "2018-03-22 20:55:01", "user": 39406, "id": 375454361}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/375460202", "text": "For security reason Active Record don't support multiple statements in the same string. It is possible to use it and we even use internally, but we don't officially support it.", "created_at": "2018-03-22 21:16:19", "user": 47848, "id": 375460202}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"+1": [15371677]}, "text": "  - Provide full / Fix generated HTML by `form_for` in the example.\r\n  - Provide full params in the example.\r\n  - Express params[:person] in the sentence.", "labels": [], "number": 31568, "updated_at": "2017-12-27 10:23:34", "user": 6443532, "closed_at": "2017-12-27 10:22:05", "id": 284543430, "title": "Update \"Action View Overview\" guide [ci skip]", "url": "https://api.github.com/repos/rails/rails/issues/31568", "created_at": "2017-12-26 11:46:02", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353959563", "text": "r? @pixeltrix\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2017-12-26 11:46:11", "user": 7468109, "id": 353959563}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nAdd CRuby 2.5.0 to CI build matrix", "labels": [], "number": 31567, "updated_at": "2017-12-27 02:09:17", "user": 2079110, "closed_at": "2017-12-26 09:45:18", "id": 284523709, "title": "Add CRuby 2.5.0 to CI", "url": "https://api.github.com/repos/rails/rails/issues/31567", "created_at": "2017-12-26 09:20:55", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353944265", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @sgrif (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-26 09:21:07", "user": 7468109, "id": 353944265}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353947182", "text": "Didn't know that RVM nowadays lags quite substantially behind CRuby releases 😒 \r\n\r\nWill close for the moment and watch for https://github.com/rvm/rvm/releases", "created_at": "2017-12-26 09:45:18", "user": 2079110, "id": 353947182}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354037670", "text": "@aleksandrs-ledovskis Thank you for your patch. I think Travis now depends on `master` branch of RVM, which had a definition for 2.5.0 just a few hours after Ruby 2.5.0 was announced. However, the problem could be that the prebuilt binaries wasn't ready yet on http://rubies.travis-ci.org when you submitted the PR, so it picked up 2.5.0 preview instead.", "created_at": "2017-12-27 02:09:17", "user": 4912, "id": 354037670}], "assignees": [1529387, 1529387], "state": "closed", "is-pull-request": true}
{"reactions": {"-1": [6442492]}, "text": "With install **Ruby 2.5.0** and **Passenger 5.1.12** ALL sites will fail to open\r\n\r\napplication out:\r\nIncomplete response received from application\r\n\r\nSame problems with **Ruby 2.4.3**, **Ruby 2.3.6**\r\n\r\nDebian 8 Jessie, Apache 2.4\r\n\r\n[passenger.log](https://github.com/rails/rails/files/1586912/passenger.log)\r\n", "labels": [], "number": 31566, "updated_at": "2017-12-27 05:05:34", "user": 584144, "closed_at": "2017-12-26 22:01:48", "id": 284511972, "title": "With install Ruby 2.5.0 and Passenger 5.1.12 ALL sites will fail to open", "url": "https://api.github.com/repos/rails/rails/issues/31566", "created_at": "2017-12-26 07:53:45", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353934443", "text": "passenger reports:\r\nhttps://github.com/phusion/passenger/issues/2010\r\nhttps://github.com/phusion/passenger/issues/2012", "created_at": "2017-12-26 07:55:09", "user": 584144, "id": 353934443}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353935508", "text": "more debug log-file\r\n[passenger.log.debug-7.log](https://github.com/rails/rails/files/1586929/passenger.log.debug-7.log)\r\n", "created_at": "2017-12-26 08:04:27", "user": 584144, "id": 353935508}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353992819", "text": "Commands of Phusion Passenger say - problem in ```therubyracer```\r\nhttps://github.com/cowboyd/therubyracer/issues/444\r\n\r\nbut command of developers of ```therubyracer``` do NOTHING.", "created_at": "2017-12-26 17:32:17", "user": 584144, "id": 353992819}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354017746", "text": "I checked log. But that error seems unrelated to Rails. Thanks.", "created_at": "2017-12-26 22:01:48", "user": 987638, "id": 354017746}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354052970", "text": "@y-yagi \r\nMay be one of components of RoR ?\r\nOr I must use older versions of Ruby?", "created_at": "2017-12-27 05:05:34", "user": 584144, "id": 354052970}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "", "labels": [], "number": 31565, "updated_at": "2017-12-26 00:17:55", "user": 987638, "closed_at": "2017-12-26 00:17:52", "id": 284472341, "title": "Relax bundler version in 5-1-stable", "url": "https://api.github.com/repos/rails/rails/issues/31565", "created_at": "2017-12-25 22:48:14", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353894188", "text": "<img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20> **Warning** <img src=\"http://www.joshmatthews.net/warning.svg\" alt=\"warning\" height=20>\n\n* Pull requests are usually filed against the master branch for this repo, but this one is against 5-1-stable. Please double check that you specified the right target!", "created_at": "2017-12-25 22:48:16", "user": 7468109, "id": 353894188}], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "`invoke_all` cause `bundle install`. This will install gems actually defined in `Gemfile`. To avoid this, stubbed `bundle_command`.\r\n\r\nFixes #31557\r\n\r\n", "labels": [], "number": 31564, "updated_at": "2017-12-25 23:23:56", "user": 987638, "closed_at": "2017-12-25 23:23:34", "id": 284471967, "title": "Prevent to install gems when run test", "url": "https://api.github.com/repos/rails/rails/issues/31564", "created_at": "2017-12-25 22:37:14", "comments": [], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nIt's shadowing two local variables (`method` and `argument`), this renames the variables to prevent the shadowing, e.g. no more warnings:\r\n\r\n```ruby\r\n/Users/d/src/clones/rails/activestorage/app/models/active_storage/variation.rb:52: warning: shadowing outer local variable - method\r\n/Users/d/src/clones/rails/activestorage/app/models/active_storage/variation.rb:52: warning: shadowing outer local variable - argument\r\n```", "labels": [], "number": 31563, "updated_at": "2017-12-25 23:55:43", "user": 129149, "closed_at": "2017-12-25 23:05:45", "id": 284470511, "title": "Prevent shadowing outer variables", "url": "https://api.github.com/repos/rails/rails/issues/31563", "created_at": "2017-12-25 21:50:20", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353892322", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kaspth (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-25 21:50:22", "user": 7468109, "id": 353892322}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353894855", "text": "Thanks!", "created_at": "2017-12-25 23:05:51", "user": 987638, "id": 353894855}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [1434927]}, "text": "Fixes https://github.com/rails/rails/issues/31553.", "labels": [], "number": 31562, "updated_at": "2017-12-26 12:20:04", "user": 5657035, "closed_at": "2017-12-26 01:43:19", "id": 284470323, "title": "Fix `add_column` with :primary_key type compatibility for SQLite", "url": "https://api.github.com/repos/rails/rails/issues/31562", "created_at": "2017-12-25 21:43:47", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353892082", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kaspth (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-25 21:43:49", "user": 7468109, "id": 353892082}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nI was trying to run the travis tests locally and noticed it was not very user-friendly so this should help newcomers execute this script.\r\n\r\n### Other Information\r\n\r\n- Tell the user that the `GEM` env is required\r\n- Tell the user is the `GEM` env they entered is invalid (e.g. typos)", "labels": [], "number": 31561, "updated_at": "2017-12-26 19:21:43", "user": 129149, "closed_at": "None", "id": 284470266, "title": "Help run ci/travis.rb locally", "url": "https://api.github.com/repos/rails/rails/issues/31561", "created_at": "2017-12-25 21:41:40", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353892012", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @schneems (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-25 21:41:44", "user": 7468109, "id": 353892012}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354003508", "text": "@sikachu Thanks, and oops for the `dump.rdb`, I just removed it.", "created_at": "2017-12-26 19:21:43", "user": 129149, "id": 354003508}], "assignees": [59744, 59744], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"5.1.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# Ensure backward compatibility with Minitest 4\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :events, force: true do |t|\r\n    t.string   :title\r\n    t.datetime :starts_at\r\n    t.datetime :ends_at\r\n  end\r\nend\r\n\r\nclass Event < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    event = Event.create!(\r\n      title: \"Mom's birthday\",\r\n      starts_at: DateTime.now.beginning_of_day,\r\n      ends_at: DateTime.now.end_of_day\r\n    )\r\n    \r\n    # Event object is still in memory and both assertions will succeed\r\n    assert_equal event.starts_at, DateTime.now.beginning_of_day\r\n    assert_equal event.ends_at, DateTime.now.end_of_day\r\n\r\n    # Load the object from the database\r\n    event = Event.last\r\n\r\n    assert_equal event.starts_at, DateTime.now.beginning_of_day\r\n    # This assertion fails\r\n    assert_equal event.ends_at, DateTime.now.end_of_day\r\n  end\r\nend\r\n```\r\n### Expected behavior\r\nPersisting a DateTime object which represents the end of the day (23:59:59) should show consistent behaviour:\r\n\r\n```ruby\r\nevent = Event.create!(\r\n  title: \"Mom's birthday\",\r\n  starts_at: DateTime.now.beginning_of_day,\r\n  ends_at: DateTime.now.end_of_day\r\n)\r\n# Object is still in memory and the comaparison works as expected\r\nevent.ends_at == DateTime.now.end_of_day # returns true\r\n# Now load the object from the database\r\nevent = Event.last\r\n# The comparison still should yield true as before\r\nevent.ends_at == DateTime.now.end_of_day # returns true\r\n```\r\n\r\n### Actual behavior\r\nWhile comparing the beginning of the day will work\r\n```ruby\r\nevent = Event.last\r\nevent.starts_at == DateTime.now.beginning_of_day # returns true\r\n```\r\ncomparing the end of the day will fail\r\n```ruby\r\nevent = Event.last\r\nevent.ends_at == DateTime.now.end_of_day # returns false\r\nevent.ends_at.to_i == DateTime.now.end_of_day.to_i # returns true\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 5.1.0\r\n\r\n**Ruby version**: 2.4.2p198\r\n", "labels": [], "number": 31560, "updated_at": "2018-03-15 10:54:43", "user": 1565041, "closed_at": "None", "id": 284462977, "title": "DateTime objects representing the end of the day won't persist consistently", "url": "https://api.github.com/repos/rails/rails/issues/31560", "created_at": "2017-12-25 18:09:50", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353889431", "text": "Confirmed on Rails 5.2.0.beta2 / Ruby 2.5.0. Minimal version to reproduce the bug: https://gist.github.com/Dorian/9881da28dcd5e65f332bd954ed610909\r\n\r\n```ruby\r\n> Time.now.end_of_day.to_f\r\n1514242800.0\r\n> event.ends_at.to_f\r\n1514242799.999999\r\n```\r\n\r\nSame on Postgres.", "created_at": "2017-12-25 20:27:30", "user": 129149, "id": 353889431}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353891545", "text": "This is pretty much the expected behavior. `end_of_day` returns an object with higher subsecond precision than your database is capable of storing. That said, we should be doing this conversion earlier (e.g. `foo.starts_at == DateTime.now.end_of_day` should *never* return `true`.", "created_at": "2017-12-25 21:30:02", "user": 1529387, "id": 353891545}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353897037", "text": "As @Dorian already pointed out this happens with SQLite as well as PostgreSQL.\r\nWhy should `foo.starts_at == DateTime.now.end_of_day` never return true?", "created_at": "2017-12-26 00:11:12", "user": 1565041, "id": 353897037}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353899731", "text": "As I stated in my last comment\r\n\r\n> `end_of_day` returns an object with higher subsecond precision than your database is capable of storing.\r\n\r\nThat includes PostgreSQL", "created_at": "2017-12-26 01:06:17", "user": 1529387, "id": 353899731}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354007678", "text": "Is there any database that is able to store the proper precision? Shouldn't ActiveRecord take care of the precision that the underlying database is able to store?", "created_at": "2017-12-26 20:04:11", "user": 1565041, "id": 354007678}, {"reactions": {"+1": [1565041]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359141046", "text": "@wynksaiddestroy Adding `precision` to the datetime column definition might help, as described here https://github.com/rails/rails/issues/30301#issuecomment-323531885.", "created_at": "2018-01-20 03:16:32", "user": 21238, "id": 359141046}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359377976", "text": "@htanata Thank's for the hint! ", "created_at": "2018-01-22 10:08:17", "user": 1565041, "id": 359377976}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/367767471", "text": "@htanata Adding precision doesn't solve the problem. At least on my machine. (macOS 10.12.6, Postgres 10.1, Ruby 2.5.0 and Rails 5.1.5)", "created_at": "2018-02-22 18:02:19", "user": 1565041, "id": 367767471}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/373336104", "text": "@wynksaiddestroy what adding the precision to the column does is trigger the change in #20317, i.e. the precision is truncated on assignment so that assigning the end of the day to an attribute never returns true in a later comparison - it won't make that equal to `Time.current.end_of_day`. \r\n\r\nThe only thing extra we could possibly do here is round to the maximum precision supported by the database on assignment when we don't have a specified precision - however not sure whether this is something we want to do. WDYT @sgrif ?\r\n\r\n", "created_at": "2018-03-15 10:51:53", "user": 6321, "id": 373336104}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n```ruby\r\ngem \"bundler\"\r\n\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts do |t|\r\n    t.integer :comments_count, default: 0\r\n    t.integer :lock_version\r\n    t.timestamps\r\n  end\r\n\r\n  create_table :comments do |t|\r\n    t.belongs_to :post\r\n  end\r\n\r\n  create_table :likes do |t|\r\n    t.belongs_to :post\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  after_touch :touched\r\n\r\n  def touched\r\n    raise 'Post touched!'\r\n  end\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post, touch: true, counter_cache: true\r\nend\r\n\r\nclass Like < ActiveRecord::Base\r\n  belongs_to :post, touch: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_with_counter_cache\r\n    post = Post.create\r\n    Comment.create(post: post) # after_touch not called.\r\n  end\r\n\r\n  def test_without_counter_cache\r\n    post = Post.create\r\n    Like.create(post: post) # after_touch called.\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n`after_touch` calls while `Comment.create`.\r\n\r\n### Actual behavior\r\n`after_touch` not called while `Comment.create`.\r\n\r\n### System configuration\r\n**Rails version**: master@732aa34\r\n\r\n**Ruby version**: 2.4.2\r\n", "labels": [], "number": 31559, "updated_at": "2018-03-15 18:23:12", "user": 378625, "closed_at": "None", "id": 284421762, "title": "Association's after_touch not called with counter cache", "url": "https://api.github.com/repos/rails/rails/issues/31559", "created_at": "2017-12-25 08:22:32", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/367759471", "text": "I'm seeing this as well, both with and without optimistic locking. It seems that combining touching with updating of the counter cache, as introduced in #31405, does not trigger the `after_touch` callback.", "created_at": "2018-02-22 17:36:18", "user": 170163, "id": 367759471}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/373476290", "text": "Bumping this up as I just ran into this as well. My Rails version is `5.2.0.rc1` and my Ruby version is `2.5.0`", "created_at": "2018-03-15 18:23:12", "user": 5093358, "id": 373476290}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {"+1": [13203, 15371677]}, "text": "### Summary\r\n\r\nRubyGems 2.7.3 broke Travis environment with Bundler-1.16.1. ref https://travis-ci.org/rails/rails/builds/319911098\r\n\r\nI will release RubyGems 2.7.4 after this pull request was a success status. (https://github.com/rails/rails/pull/31558/commits/5938472816740166b8185064dc094a434c8e177e uses pre-release version of RubyGems)\r\n\r\n### Other Information\r\n\r\nMy investigation is here: https://github.com/rubygems/rubygems/issues/2123", "labels": [], "number": 31558, "updated_at": "2017-12-27 03:34:51", "user": 12301, "closed_at": "2017-12-25 12:11:04", "id": 284420870, "title": "Try to update rubygems 2.7.4", "url": "https://api.github.com/repos/rails/rails/issues/31558", "created_at": "2017-12-25 08:15:06", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353846843", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @rafaelfranca (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-25 08:15:15", "user": 7468109, "id": 353846843}, {"reactions": {"heart": [12642, 2655]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353857701", "text": "@kamipo done. \r\n\r\nIf rails/rails project has an issue with RubyGems/Bundler on Travis CI, Please ping me. I try to fix them.", "created_at": "2017-12-25 10:14:54", "user": 12301, "id": 353857701}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "While investigating #31531 There are 4 tests which install railties (Rails) to the gem path,\r\nwhich trigger #31531 not reproduced.\r\n\r\n#31531 itself has been addressed, however, these 4 tests should not install Rails to the gem path.\r\n\r\n### Steps to reproduce\r\n\r\n```ruby\r\n$ rbenv install 2.4.3 ; rbenv global 2.4.3 (or whatever way installing Ruby)\r\n$ gem install bunlder\r\n$ gem env\r\n... snip \r\n  - GEM PATHS:\r\n     - /home/yahonda/.rbenv/versions/2.4.3/lib/ruby/gems/2.4.0\r\n     - /home/yahonda/.gem/ruby/2.4.0\r\n... snip \r\n$ git clone https://github.com/rails/rails.git\r\n$ cd rails/railties\r\n$ bundle install\r\n```\r\n\r\n* Execute one of these 4 tests. Once any of them executed, ruby environment `gem path` needs clean up to remove Rails installed to the gem path.\r\n\r\n```ruby\r\n$ bundle exec ruby -Itest test/generators/app_generator_test.rb -n test_active_storage_install\r\n$ bundle exec ruby -Itest test/generators/app_generator_test.rb -n test_webpack_option_with_js_framework\r\n$ bundle exec ruby -Itest test/generators/app_generator_test.rb -n test_template_is_executed_when_supplied_an_https_path\r\n$ bundle exec ruby -Itest test/generators/app_generator_test.rb -n test_webpack_option\r\n```\r\n\r\n### Expected behavior\r\nAll of them should use Rails environment tested.\r\n\r\n### Actual behavior\r\nThese tests successfully finished, however they are using Rails installed to the gem path.\r\n\r\n### System configuration\r\n**Rails version**:master branch\r\n\r\n**Ruby version**:ruby 2.4.3p205 (2017-12-14 revision 61247) [x86_64-linux]\r\n", "labels": [], "number": 31557, "updated_at": "2017-12-25 23:26:11", "user": 73684, "closed_at": "2017-12-25 23:23:34", "id": 284388171, "title": "Railties tests using `generator.invoke_all` install Rails to gem path", "url": "https://api.github.com/repos/rails/rails/issues/31557", "created_at": "2017-12-25 00:26:50", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353895457", "text": "Fixed by #31564", "created_at": "2017-12-25 23:24:20", "user": 987638, "id": 353895457}, {"reactions": {"heart": [987638]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353895516", "text": "Thanks. I have validated #31564 has been addressed.", "created_at": "2017-12-25 23:26:11", "user": 73684, "id": 353895516}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "For PostgreSQL:\r\n```\r\ncreate table users(\r\n\tid serial primary key,\r\n\tposition  integer not null\r\n);\r\n\r\ninsert into users (position) values (generate_series(1, 1000000));\r\nanalyze;\r\n```\r\n\r\n**Without BETWEEN**\r\n```\r\nexplain analyze SELECT * FROM users WHERE position = 100000\r\n\r\nSeq Scan on users  (cost=0.00..16925.00 rows=1 width=8) (actual time=8.640..86.703 rows=1 loops=1)\r\n  Filter: (\"position\" = 100000)\r\n  Rows Removed by Filter: 999999\r\nPlanning time: 0.040 ms\r\nExecution time: 86.718 ms\r\n```\r\n\r\n**With BETWEEN**\r\n```\r\nexplain analyze SELECT * FROM users WHERE position between 100000 and 100000;\r\n\r\nSeq Scan on users  (cost=0.00..19425.00 rows=1 width=8) (actual time=8.511..105.254 rows=1 loops=1)\r\n  Filter: ((\"position\" >= 100000) AND (\"position\" <= 100000))\r\n  Rows Removed by Filter: 999999\r\nPlanning time: 0.051 ms\r\nExecution time: 105.268 ms\r\n```\r\n\r\nApproximately the same time differences are present for other values too.", "labels": [], "number": 31556, "updated_at": "2017-12-26 02:47:10", "user": 5657035, "closed_at": "None", "id": 284380931, "title": "Optimize `where` when range's begin/end are equal", "url": "https://api.github.com/repos/rails/rails/issues/31556", "created_at": "2017-12-24 20:28:39", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353801851", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @rafaelfranca (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-24 20:28:51", "user": 7468109, "id": 353801851}], "assignees": [47848, 47848], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "While trying to fix #16433, we made the middleware deletions always\r\nhappen at the end. While this works for the case of deleting `Rack::Runtime`,\\\r\nbut it makes operations like the following misbehave:\r\n\r\n```ruby\r\ngem \"bundler\", \"< 1.16\"\r\n\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\"\r\nend\r\n\r\nrequire \"action_controller/railtie\"\r\n\r\nclass TestApp < Rails::Application\r\n  config.root = __dir__\r\n  secrets.secret_key_base = \"secret_key_base\"\r\n\r\n  config.logger = Logger.new($stdout)\r\n  Rails.logger  = config.logger\r\n\r\n  middleware.insert_after ActionDispatch::Session::CookieStore, ::Rails::Rack::Logger, config.log_tags\r\n  middleware.delete ::Rails::Rack::Logger\r\nend\r\n\r\nrequire \"minitest/autorun\"\r\nrequire \"rack/test\"\r\n\r\nclass BugTest < Minitest::Test\r\n  include Rack::Test::Methods\r\n\r\n  def test_returns_success\r\n    get \"/\"\r\n    assert last_response.ok?\r\n  end\r\n\r\n  private\r\n    def app\r\n      Rails.application\r\n    end\r\nend\r\n```\r\n\r\nIn the case ☝️  the `::Rails::Rack::Logger` would be deleted instead of\r\nmoved, because the order of middleware stack building execution will be:\r\n\r\n```ruby\r\n[:insert, ActionDispatch::Session::CookieStore, [::Rails::Rack::Logger]]\r\n[:delete, ::Rails::Rack::Logger, [config.log_tags]]\r\n```\r\n\r\nThis is pretty surprising and hard to reason about behavior unless you\r\ngo spelunking into the Rails configuration code.\r\n\r\nI have a few solutions in mind and all of them have their drawbacks.\r\n\r\n1. Introduce a `Rails::Configuration::MiddlewareStackProxy#delete!` that\r\ndelays the deleted operations. This will make `#delete` to be executed\r\nin order. The drawback here is backward incompatible behavior and a new\r\npublic method.\r\n\r\n2. Just revert to the old operations. This won't allow people to delete\r\nthe `Rack::Runtime` middleware.\r\n\r\n3. Legitimize the middleware moving with the new `#move_after` and\r\n`#move_before` methods. This does not break any backward\r\ncompatibility but includes 2 new methods for the middleware stack.\r\n\r\nI have implemented `3.` in this pull request.\r\n\r\nHappy holidays! 🎄", "labels": [], "number": 31555, "updated_at": "2018-01-15 21:29:45", "user": 604618, "closed_at": "None", "id": 284371533, "title": "Delayed middleware delete does not allow move operations", "url": "https://api.github.com/repos/rails/rails/issues/31555", "created_at": "2017-12-24 16:25:14", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357767032", "text": "We are also affected by this. A `move` operation would be great :)", "created_at": "2018-01-15 19:14:05", "user": 575280, "id": 357767032}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357775778", "text": "Would https://github.com/rails/rails/pull/27936 fix your problem?", "created_at": "2018-01-15 19:58:10", "user": 47848, "id": 357775778}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/357793366", "text": "@rafaelfranca yes, that would fix the issue for us. Personally I would prefer a `move` method however - seems like it would be simpler to implement and understand.", "created_at": "2018-01-15 21:29:45", "user": 575280, "id": 357793366}], "assignees": [], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "No `users_controller_controller.rb` anymore in rails projects! 😄 \r\n\r\n<details>\r\n  <summary>Before</summary>\r\n\r\n  ```\r\n$ rails g controller users_controller index create\r\nRunning via Spring preloader in process 63441\r\n      create  app/controllers/users_controller_controller.rb\r\n       route  get 'users_controller/index'\r\nget 'users_controller/create'\r\n      invoke  erb\r\n      create    app/views/users_controller\r\n      create    app/views/users_controller/index.html.erb\r\n      create    app/views/users_controller/create.html.erb\r\n      invoke  test_unit\r\n      create    test/controllers/users_controller_controller_test.rb\r\n      invoke  helper\r\n      create    app/helpers/users_controller_helper.rb\r\n      invoke    test_unit\r\n      invoke  assets\r\n      invoke    coffee\r\n      create      app/assets/javascripts/users_controller.coffee\r\n      invoke    scss\r\n      create      app/assets/stylesheets/users_controller.scss\r\n```\r\n</details>\r\n\r\n<details>\r\n  <summary>After</summary>\r\n\r\n```\r\n$ rails g controller users_controller index create\r\nRunning via Spring preloader in process 63932\r\n      create  app/controllers/users_controller.rb\r\n       route  get 'users/index'\r\nget 'users/create'\r\n      invoke  erb\r\n      create    app/views/users\r\n      create    app/views/users/index.html.erb\r\n      create    app/views/users/create.html.erb\r\n      invoke  test_unit\r\n      create    test/controllers/users_controller_test.rb\r\n      invoke  helper\r\n      create    app/helpers/users_helper.rb\r\n      invoke    test_unit\r\n      invoke  assets\r\n      invoke    coffee\r\n      create      app/assets/javascripts/users.coffee\r\n      invoke    scss\r\n      create      app/assets/stylesheets/users.scss\r\n```\r\n</details>\r\n\r\nFixes https://github.com/rails/rails/issues/10699.", "labels": [], "number": 31554, "updated_at": "2017-12-24 02:37:28", "user": 5657035, "closed_at": "None", "id": 284338619, "title": "Gracefully handle extra \"controller\" when generating controller", "url": "https://api.github.com/repos/rails/rails/issues/31554", "created_at": "2017-12-24 02:37:28", "comments": [], "assignees": [], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "https://github.com/theforeman/foreman/blob/develop/db/migrate/20110712070522_create_host_class.rb\r\nis working fine with Rails 5.1.4. When using the current master, I'm seeing the following:\r\n```\r\n== 20110712070522 CreateHostClass: migrating ==================================\r\n-- rename_table(:hosts_puppetclasses, :host_classes)\r\n   -> 0.0007s\r\n-- add_column(:host_classes, :id, :integer, {:primary_key=>true})\r\nrake aborted!\r\nStandardError: An error has occurred, this and all later migrations canceled:\r\nSQLite3::SQLException: Cannot add a PRIMARY KEY column: ALTER TABLE \"host_classes\" ADD \"id\" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL\r\n/home/travis/.rvm/gems/ruby-2.4.3/gems/sqlite3-1.3.13/lib/sqlite3/database.rb:91:in `initialize'\r\n/home/travis/.rvm/gems/ruby-2.4.3/gems/sqlite3-1.3.13/lib/sqlite3/database.rb:91:in `new'\r\n/home/travis/.rvm/gems/ruby-2.4.3/gems/sqlite3-1.3.13/lib/sqlite3/database.rb:91:in `prepare'\r\n/home/travis/.rvm/gems/ruby-2.4.3/gems/sqlite3-1.3.13/lib/sqlite3/database.rb:137:in `execute'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:255:in `block (2 levels) in execute'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activesupport/lib/active_support/dependencies/interlock.rb:48:in `block in permit_concurrent_loads'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activesupport/lib/active_support/concurrency/share_lock.rb:187:in `yield_shares'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activesupport/lib/active_support/dependencies/interlock.rb:47:in `permit_concurrent_loads'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:254:in `block in execute'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:571:in `block (2 levels) in log'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:570:in `block in log'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activesupport/lib/active_support/notifications/instrumenter.rb:23:in `instrument'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:561:in `log'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:253:in `execute'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/connection_adapters/abstract/schema_statements.rb:581:in `add_column'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:301:in `add_column'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/migration.rb:870:in `block in method_missing'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/migration.rb:839:in `block in say_with_time'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/migration.rb:839:in `say_with_time'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/migration.rb:859:in `method_missing'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/migration/compatibility.rb:110:in `add_column'\r\n/home/travis/build/mmoll/foreman/db/migrate/20110712070522_create_host_class.rb:4:in `up'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/migration.rb:816:in `exec_migration'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/migration.rb:797:in `block (2 levels) in migrate'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/migration.rb:796:in `block in migrate'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:414:in `with_connection'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/migration.rb:795:in `migrate'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/migration.rb:976:in `migrate'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/migration.rb:1257:in `block in execute_migration_in_transaction'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/migration.rb:1325:in `block in ddl_transaction'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:254:in `block in transaction'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:230:in `block in within_new_transaction'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:227:in `within_new_transaction'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:254:in `transaction'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/transactions.rb:212:in `transaction'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/migration.rb:1325:in `ddl_transaction'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/migration.rb:1256:in `execute_migration_in_transaction'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/migration.rb:1228:in `block in migrate_without_lock'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/migration.rb:1227:in `each'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/migration.rb:1227:in `migrate_without_lock'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/migration.rb:1177:in `migrate'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/migration.rb:1030:in `up'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/migration.rb:1008:in `migrate'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/tasks/database_tasks.rb:172:in `migrate'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bundler/gems/rails-1a5bf01fe024/activerecord/lib/active_record/railties/databases.rake:60:in `block (2 levels) in <top (required)>'\r\n/home/travis/.rvm/gems/ruby-2.4.3/gems/rake-12.3.0/exe/rake:27:in `<top (required)>'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bin/ruby_executable_hooks:15:in `eval'\r\n/home/travis/.rvm/gems/ruby-2.4.3/bin/ruby_executable_hooks:15:in `<main>'\r\n```\r\nfull output, if needed, in https://travis-ci.org/mmoll/foreman/builds/320780649", "labels": ["activerecord"], "number": 31553, "updated_at": "2017-12-26 01:43:19", "user": 1434927, "closed_at": "2017-12-26 01:43:19", "id": 284329835, "title": "handling of add_column with :primary_key in migrations", "url": "https://api.github.com/repos/rails/rails/issues/31553", "created_at": "2017-12-23 22:21:23", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353758663", "text": "`:primary_key` type handles as `:integer` type since 202d6578f44ab03ee89ed57b73a97d513fc5a008.  \r\n\r\nBut `valid_alter_table_type` method check only whether `type` is `:primary_key`.\r\nhttps://github.com/rails/rails/blob/1a5bf01fe024eb1d91903094327d937f7abcb24d/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb#L295..L307 \r\n\r\nFor that reason, `alter_table` does not execute and error.\r\n\r\n\r\ncc @kamipo ", "created_at": "2017-12-24 01:08:47", "user": 987638, "id": 353758663}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\nTranslate to Vietnamese Association basics V1 (NOT COMPLETE)\r\n\r\n### Other Information\r\n\r\nNothing\r\n", "labels": [], "number": 31552, "updated_at": "2017-12-23 12:54:44", "user": 24265399, "closed_at": "2017-12-23 12:52:04", "id": 284305055, "title": "Translate to Vietnamese Association basics V1", "url": "https://api.github.com/repos/rails/rails/issues/31552", "created_at": "2017-12-23 12:51:36", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353724636", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @schneems (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-23 12:51:39", "user": 7468109, "id": 353724636}], "assignees": [59744, 59744], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "For pass Active Job integration tests with Ruby 2.5.\r\nRef: https://github.com/collectiveidea/delayed_job/pull/996", "labels": [], "number": 31551, "updated_at": "2017-12-23 13:18:34", "user": 987638, "closed_at": "2017-12-23 13:18:30", "id": 284303407, "title": "Use `delayed_job` master", "url": "https://api.github.com/repos/rails/rails/issues/31551", "created_at": "2017-12-23 12:11:45", "comments": [], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "[The section in question](https://github.com/rails/rails/blob/master/actioncable/README.md#notes)\r\n\r\nWhy I'm questioning this:\r\n\r\n> We'll get all this abstracted properly when the framework is integrated into Rails.\r\n\r\nAny updates? ActionCable was integrated into Rails over 2 years ago.", "labels": [], "number": 31550, "updated_at": "2017-12-23 05:27:04", "user": 3161395, "closed_at": "2017-12-23 05:23:59", "id": 284287108, "title": "Status of this ActionCable section", "url": "https://api.github.com/repos/rails/rails/issues/31550", "created_at": "2017-12-23 05:19:07", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353708074", "text": "Oops.. yeah, that and the paragraph preceding it should be deleted; reloads happen automatically.\r\n\r\nUp for an easy PR? :smile:", "created_at": "2017-12-23 05:23:59", "user": 1034, "id": 353708074}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353708164", "text": "Haha, feel free. Was just looking into ActionCable and was thrown off by that bit. Good to know it reloads automatically as well.", "created_at": "2017-12-23 05:27:04", "user": 3161395, "id": 353708164}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "The change is pretty minimal, the query used in `#table_exists?`/`#tables` has been expanded to include foreign tables in the kinds of relations it includes in its search.\r\n\r\nRelated https://github.com/rails/rails/issues/28886.", "labels": ["activerecord"], "number": 31549, "updated_at": "2018-01-22 20:47:13", "user": 5657035, "closed_at": "2018-01-22 20:44:17", "id": 284275465, "title": "Support for PostgreSQL foreign tables", "url": "https://api.github.com/repos/rails/rails/issues/31549", "created_at": "2017-12-23 00:49:45", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353696571", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @kaspth (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-23 00:49:48", "user": 7468109, "id": 353696571}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359171699", "text": "r? @kamipo\r\n\r\nI’m a little out of my element here, thanks 😊", "created_at": "2018-01-20 13:31:06", "user": 350807, "id": 359171699}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359311534", "text": "Looks fine that finding foreign tables in `data_source_exists?`/`data_sources` because it is used for `SchemaCache`.\r\n\r\nhttps://github.com/rails/rails/blob/a19e91f0fab13cca61acdb1f33e27be2323b9786/activerecord/lib/active_record/connection_adapters/schema_cache.rb#L47-L52\r\n\r\nBut I'd not like to find that in `table_exists?`/`tables` because `connection.tables` is used in `SchemaDumper` and `SchemaDumper` does not have the ability to dump foreign tables properly.\r\n\r\nhttps://github.com/rails/rails/blob/a19e91f0fab13cca61acdb1f33e27be2323b9786/activerecord/lib/active_record/schema_dumper.rb#L89-L94\r\n\r\n", "created_at": "2018-01-22 02:53:51", "user": 12642, "id": 359311534}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359436837", "text": "@kamipo Thanks for review! Updated according to your comments.", "created_at": "2018-01-22 14:21:30", "user": 5657035, "id": 359436837}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359448393", "text": "Hmm.. instead of hiding it completely, maybe we should treat it as a special type of a view? Our definition of view is pretty much \"table-like thing that you can query etc, but isn't really a table\". \r\n\r\nOTOH, `data_sources` is clear that it *can* return things that are neither a table nor a view. So this is also quite reasonable as is.\r\n\r\nJust a thought; I'll defer to @kamipo.", "created_at": "2018-01-22 14:59:32", "user": 1034, "id": 359448393}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359506520", "text": "Treating foreign tables as a view may break `scenic` gem.\r\nAt least we have one method to work that gem.\r\n\r\nhttps://github.com/rails/rails/blob/a19e91f0fab13cca61acdb1f33e27be2323b9786/activerecord/lib/active_record/schema_dumper.rb#L159-L170\r\n\r\nProbably we should add `foreign_table_exists?`/`foreign_tables` to not break any other functionality.\r\n\r\n```diff\r\ndiff --git a/activerecord/lib/active_record/connection_adapters/postgresql/schema_statements.rb b/activerecord/lib/active_record/connection_adapters/postgresql/schema_statements.rb\r\nindex c6e5122daf..bdccd53ff0 100644\r\n--- a/activerecord/lib/active_record/connection_adapters/postgresql/schema_statements.rb\r\n+++ b/activerecord/lib/active_record/connection_adapters/postgresql/schema_statements.rb\r\n@@ -527,6 +527,14 @@ def foreign_keys(table_name)\r\n           end\r\n         end\r\n \r\n+      def foreign_tables\r\n+        query_values(data_source_sql(type: \"FOREIGN TABLE\"), \"SCHEMA\")\r\n+      end\r\n+\r\n+      def foreign_table_exists?(table_name)\r\n+        query_values(data_source_sql(table_name, type: \"FOREIGN TABLE\"), \"SCHEMA\").any? if table_name.present?\r\n+      end\r\n+\r\n         # Maps logical Rails types to PostgreSQL-specific data types.\r\n         def type_to_sql(type, limit: nil, precision: nil, scale: nil, array: nil, **) # :nodoc:\r\n           sql = \\\r\n@@ -756,6 +764,8 @@ def quoted_scope(name = nil, type: nil)\r\n                 \"'r'\"\r\n               when \"VIEW\"\r\n                 \"'v','m'\"\r\n+              when \"FOREIGN TABLE\"\r\n+                \"'f'\"\r\n               end\r\n             scope = {}\r\n             scope[:schema] = schema ? quote(schema) : \"ANY (current_schemas(false))\"\r\n```", "created_at": "2018-01-22 17:47:27", "user": 12642, "id": 359506520}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359531589", "text": "@kamipo fixed your notes.", "created_at": "2018-01-22 19:10:30", "user": 5657035, "id": 359531589}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/359541983", "text": "Fixed last comment, squashed and rebased.", "created_at": "2018-01-22 19:44:30", "user": 5657035, "id": 359541983}], "assignees": [12642, 12642], "state": "closed", "is-pull-request": true}
{"reactions": {"+1": [170034]}, "text": "### Steps to reproduce\r\nI installed Rails and Ruby on a new system (Mac OS High Sierra), cloned my old project in Rails 5.2.0.beta2, but could not get it to work on the new system. \r\n\r\nRails is supposed to run normally as before but instead got a strange behavior, started commenting out gems in Gemfile, based on my understanding of the error log.\r\n\r\nHere's what the log looks like:\r\n```\r\nconectar (master) $ bundle exec rails server\r\n=> Booting Puma\r\n=> Rails 5.2.0.beta2 application starting in development\r\n=> Run `rails server -h` for more startup options\r\nExiting\r\n/Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/activesupport-5.2.0.beta2/lib/active_support/concern.rb:128:in `included': Cannot define multiple 'included' blocks for a Concern (ActiveSupport::Concern::MultipleIncludedBlocks)\r\n\tfrom /Users/Mayor/.rvm/rubies/ruby-2.4.2/lib/ruby/gems/2.4.0/gems/actionview-5.2.0.beta2/lib/action_view/view_paths.rb:7:in `<module:ViewPaths>'\r\n\tfrom /Users/Mayor/.rvm/rubies/ruby-2.4.2/lib/ruby/gems/2.4.0/gems/actionview-5.2.0.beta2/lib/action_view/view_paths.rb:4:in `<module:ActionView>'\r\n\tfrom /Users/Mayor/.rvm/rubies/ruby-2.4.2/lib/ruby/gems/2.4.0/gems/actionview-5.2.0.beta2/lib/action_view/view_paths.rb:3:in `<main>'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `block in require'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `require'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/actionview-5.2.0.beta2/lib/action_view/rendering.rb:3:in `<main>'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `block in require'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `require'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2/gems/jbuilder-2.7.0/lib/jbuilder/railtie.rb:15:in `<module:ApiRendering>'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2/gems/jbuilder-2.7.0/lib/jbuilder/railtie.rb:14:in `<module:ActionController>'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2/gems/jbuilder-2.7.0/lib/jbuilder/railtie.rb:13:in `block in <class:Railtie>'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/railties-5.2.0.beta2/lib/rails/initializable.rb:32:in `instance_exec'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/railties-5.2.0.beta2/lib/rails/initializable.rb:32:in `run'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/railties-5.2.0.beta2/lib/rails/initializable.rb:61:in `block in run_initializers'\r\n\tfrom /Users/Mayor/.rvm/rubies/ruby-2.4.2/lib/ruby/2.4.0/tsort.rb:228:in `block in tsort_each'\r\n\tfrom /Users/Mayor/.rvm/rubies/ruby-2.4.2/lib/ruby/2.4.0/tsort.rb:350:in `block (2 levels) in each_strongly_connected_component'\r\n\tfrom /Users/Mayor/.rvm/rubies/ruby-2.4.2/lib/ruby/2.4.0/tsort.rb:431:in `each_strongly_connected_component_from'\r\n\tfrom /Users/Mayor/.rvm/rubies/ruby-2.4.2/lib/ruby/2.4.0/tsort.rb:349:in `block in each_strongly_connected_component'\r\n\tfrom /Users/Mayor/.rvm/rubies/ruby-2.4.2/lib/ruby/2.4.0/tsort.rb:347:in `each'\r\n\tfrom /Users/Mayor/.rvm/rubies/ruby-2.4.2/lib/ruby/2.4.0/tsort.rb:347:in `call'\r\n\tfrom /Users/Mayor/.rvm/rubies/ruby-2.4.2/lib/ruby/2.4.0/tsort.rb:347:in `each_strongly_connected_component'\r\n\tfrom /Users/Mayor/.rvm/rubies/ruby-2.4.2/lib/ruby/2.4.0/tsort.rb:226:in `tsort_each'\r\n\tfrom /Users/Mayor/.rvm/rubies/ruby-2.4.2/lib/ruby/2.4.0/tsort.rb:205:in `tsort_each'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/railties-5.2.0.beta2/lib/rails/initializable.rb:60:in `run_initializers'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/railties-5.2.0.beta2/lib/rails/application.rb:360:in `initialize!'\r\n\tfrom /Users/Mayor/Workspace/conectar/config/environment.rb:5:in `<main>'\r\n\tfrom config.ru:3:in `require_relative'\r\n\tfrom config.ru:3:in `block in <main>'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/rack-2.0.3/lib/rack/builder.rb:55:in `instance_eval'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/rack-2.0.3/lib/rack/builder.rb:55:in `initialize'\r\n\tfrom config.ru:in `new'\r\n\tfrom config.ru:in `<main>'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/rack-2.0.3/lib/rack/builder.rb:49:in `eval'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/rack-2.0.3/lib/rack/builder.rb:49:in `new_from_string'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/rack-2.0.3/lib/rack/builder.rb:40:in `parse_file'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/rack-2.0.3/lib/rack/server.rb:319:in `build_app_and_options_from_config'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/rack-2.0.3/lib/rack/server.rb:219:in `app'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/railties-5.2.0.beta2/lib/rails/commands/server/server_command.rb:27:in `app'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/rack-2.0.3/lib/rack/server.rb:354:in `wrapped_app'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/railties-5.2.0.beta2/lib/rails/commands/server/server_command.rb:89:in `log_to_stdout'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/railties-5.2.0.beta2/lib/rails/commands/server/server_command.rb:51:in `start'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/railties-5.2.0.beta2/lib/rails/commands/server/server_command.rb:147:in `block in perform'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/railties-5.2.0.beta2/lib/rails/commands/server/server_command.rb:142:in `tap'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/railties-5.2.0.beta2/lib/rails/commands/server/server_command.rb:142:in `perform'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/thor-0.20.0/lib/thor/command.rb:27:in `run'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/thor-0.20.0/lib/thor/invocation.rb:126:in `invoke_command'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/thor-0.20.0/lib/thor.rb:387:in `dispatch'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/railties-5.2.0.beta2/lib/rails/command/base.rb:65:in `perform'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/railties-5.2.0.beta2/lib/rails/command.rb:46:in `invoke'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/railties-5.2.0.beta2/lib/rails/commands.rb:18:in `<main>'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2/gems/bootsnap-1.1.7/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:17:in `require'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `block in require'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:249:in `load_dependency'\r\n\tfrom /Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/activesupport-5.2.0.beta2/lib/active_support/dependencies.rb:283:in `require'\r\n\tfrom bin/rails:4:in `<main>'\r\n```\r\nThe code didn't run until I commented out jbuilder. But even after that, I still get this.\r\n```\r\nconectar (master) $ bundle exec rails server\r\n=> Booting Puma\r\n=> Rails 5.2.0.beta2 application starting in development\r\n=> Run `rails server -h` for more startup options\r\n/Users/Mayor/.rvm/rubies/ruby-2.4.2/lib/ruby/gems/2.4.0/gems/actionview-5.2.0.beta2/lib/action_view.rb:33: warning: already initialized constant ActionView::ENCODING_FLAG\r\n/Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/actionview-5.2.0.beta2/lib/action_view.rb:33: warning: previous definition of ENCODING_FLAG was here\r\n/Users/Mayor/.rvm/rubies/ruby-2.4.2/lib/ruby/gems/2.4.0/gems/activemodel-5.2.0.beta2/lib/active_model/validations/clusivity.rb:8: warning: already initialized constant ActiveModel::Validations::Clusivity::ERROR_MESSAGE\r\n/Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/activemodel-5.2.0.beta2/lib/active_model/validations/clusivity.rb:8: warning: previous definition of ERROR_MESSAGE was here\r\n/Users/Mayor/.rvm/gems/ruby-2.4.2@global/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/securerandom.rb:6: warning: already initialized constant SecureRandom::BASE58_ALPHABET\r\n/Users/Mayor/.rvm/rubies/ruby-2.4.2/lib/ruby/gems/2.4.0/gems/activesupport-5.2.0.beta2/lib/active_support/core_ext/securerandom.rb:6: warning: previous definition of BASE58_ALPHABET was here\r\nPuma starting in single mode...\r\n* Version 3.11.0 (ruby 2.4.2-p198), codename: Love Song\r\n* Min threads: 5, max threads: 5\r\n* Environment: development\r\n* Listening on tcp://0.0.0.0:3000\r\nUse Ctrl-C to stop\r\n```\r\nAny suggestions and help to remove this error log will be appreciated. Thanks.\r\n### System configuration\r\n**Rails version**: 5.2.0.beta2\r\n\r\n**Ruby version**: 2.4.2\r\n", "labels": ["needs work"], "number": 31548, "updated_at": "2018-03-09 13:25:57", "user": 1370340, "closed_at": "2017-12-24 10:10:04", "id": 284274072, "title": "Could not run my Rails project on a new PC until I removed jbuilder from gem file.", "url": "https://api.github.com/repos/rails/rails/issues/31548", "created_at": "2017-12-23 00:28:39", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353762691", "text": "Can you please provide a sample application that reproduces the error?", "created_at": "2017-12-24 03:14:15", "user": 987638, "id": 353762691}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353766668", "text": "@y-yagi Please find a link for a new rails app here - https://github.com/mayordwells/calculator-math", "created_at": "2017-12-24 05:41:38", "user": 1370340, "id": 353766668}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353767793", "text": "Hi @y-yagi Thanks for your interest in helping out with the error, but thought you should know. The error disappeared after removing rvm, all gemsets and the ruby version on my system and then started a whole new installation afresh. \r\nSo my belief is that if the installation of rvm and ruby is correct on your system, you might not be able to reproduce the error. \r\nI got the idea of doing this while I was creating the new app above. I got even a longer error, so I thought there must be something wrong with my installation. So I was right.\r\nAnd thank God it worked. ", "created_at": "2017-12-24 06:18:37", "user": 1370340, "id": 353767793}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353776243", "text": "Thanks for providing sample application and details explanation. \r\nI could not reproduce your error with the provided application. I think your guess is correct.  \r\nSo I close this. Thanks!\r\n", "created_at": "2017-12-24 10:10:04", "user": 987638, "id": 353776243}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356078830", "text": "@y-yagi FWIW, I ran into this error as well with a completely fresh project of Rails 5.2 beta 2 and ruby version 2.5. I ended up just creating the project with 5.1.4 with no error.", "created_at": "2018-01-08 19:59:45", "user": 2329397, "id": 356078830}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/371810109", "text": "I got same problem with Rails 5.2.0.rc1, ruby 2.4.3 - on a new project on OS X 10.13.3 (High Sierra)\r\n\r\nAgain with a working solution, to just comment out the gem 'jbuilder'", "created_at": "2018-03-09 13:20:36", "user": 2368, "id": 371810109}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "Followup to https://github.com/rails/rails/pull/29263.\r\n\r\nEnabling this option in `new_framework_defaults_5_2.rb` didn't work before, as railtie initializers run before application initializers.\r\n\r\nUsing `respond_to?` to decide whether to set the option wasn't working either, as `ActiveSupport::OrderedOptions` responds to any message.\r\n\r\nr? @kaspth ", "labels": [], "number": 31547, "updated_at": "2018-01-08 03:17:06", "user": 432189, "closed_at": "2018-01-08 03:16:53", "id": 284270136, "title": "Allow use_authenticated_message_encryption to be set in new_framework_defaults_5_2.rb", "url": "https://api.github.com/repos/rails/rails/issues/31547", "created_at": "2017-12-22 23:40:46", "comments": [{"reactions": {"heart": [432189]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/355877551", "text": "@eugeneius Thanks!", "created_at": "2018-01-08 03:17:06", "user": 987638, "id": 355877551}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "## Meta -\r\nOS:  Ubuntu\r\nSelenium-webdriver Version:  3.8.0\r\nRails Version: 5.2.beta\r\n\r\n## Expected Behavior -\r\nBeing able to run tests\r\n\r\n## Actual Behavior -\r\n```\r\nSelenium::WebDriver::Error::WebDriverError: unable to connect to chromedriver 127.0.0.1:9515\r\n    selenium-webdriver (3.8.0) lib/selenium/webdriver/common/service.rb:142:in `connect_until_stable'\r\n    selenium-webdriver (3.8.0) lib/selenium/webdriver/common/service.rb:72:in `block in start'\r\n    selenium-webdriver (3.8.0) lib/selenium/webdriver/common/socket_lock.rb:39:in `locked'\r\n    selenium-webdriver (3.8.0) lib/selenium/webdriver/common/service.rb:69:in `start'\r\n    selenium-webdriver (3.8.0) lib/selenium/webdriver/chrome/driver.rb:41:in `initialize'\r\n    selenium-webdriver (3.8.0) lib/selenium/webdriver/common/driver.rb:44:in `new'\r\n    selenium-webdriver (3.8.0) lib/selenium/webdriver/common/driver.rb:44:in `for'\r\n    selenium-webdriver (3.8.0) lib/selenium/webdriver.rb:84:in `for'\r\n    capybara (2.16.1) lib/capybara/selenium/driver.rb:23:in `browser'\r\n    actionpack (5.2.0.beta2) lib/action_dispatch/system_testing/driver.rb:52:in `block in register_selenium'\r\n    actionpack (5.2.0.beta2) lib/action_dispatch/system_testing/driver.rb:51:in `tap'\r\n    actionpack (5.2.0.beta2) lib/action_dispatch/system_testing/driver.rb:51:in `register_selenium'\r\n    actionpack (5.2.0.beta2) lib/action_dispatch/system_testing/driver.rb:27:in `block in register'\r\n```\r\n\r\n## Steps to reproduce\r\n\r\nA completely fresh vanilla Rails app with a simple generated system test.\r\n\r\nNot sure what I need to do. Chromedriver is installed and can be ran:\r\n\r\n```\r\n$ which chromedriver\r\n/home/oleg/.rbenv/shims/chromedriver\r\n\r\n$ chromedriver -v\r\nChromeDriver 2.34.522913 (36222509aa6e819815938cbf2709b4849735537c)\r\n```\r\n\r\nAny clues what I might be missing here? Thanks.", "labels": [], "number": 31546, "updated_at": "2017-12-23 18:59:46", "user": 78363, "closed_at": "2017-12-22 23:47:21", "id": 284255812, "title": "selenium-webdriver in Rails 5.2 system tests: \"unable to connect to chromedriver 127.0.0.1:9515\"", "url": "https://api.github.com/repos/rails/rails/issues/31546", "created_at": "2017-12-22 21:34:04", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353691656", "text": "I confirmed with a newly generated application. But not reproduced. \r\n\r\nEnv: \r\n\r\n```\r\n$ ./bin/rails -v\r\nRails 5.2.0.beta2\r\n$ ruby -v\r\nruby 2.5.0rc1 (2017-12-14 trunk 61243) [x86_64-linux]\r\n$ bundle exec chromedriver -v \r\nChromeDriver 2.34.522913 (36222509aa6e819815938cbf2709b4849735537c)\r\n$ google-chrome --version\r\nGoogle Chrome 63.0.3239.108  \r\n$ uname -a\r\nLinux y-yagi 4.4.0-71-generic #92-Ubuntu SMP Fri Mar 24 12:59:01 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n``` \r\n\r\nI assume that your environments' problem.  Please check your environment(e.g. version of chrome). Thanks!\r\n", "created_at": "2017-12-22 23:47:21", "user": 987638, "id": 353691656}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353694450", "text": "Any suggestion on how to figure out what the problem might be? Chrome is the latest version.", "created_at": "2017-12-23 00:21:57", "user": 78363, "id": 353694450}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353702072", "text": "I’ve run into this before. Do you have the `chromedriver-helper` gem installed? If so, could you try uninstalling it?", "created_at": "2017-12-23 02:35:18", "user": 94129, "id": 353702072}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353742568", "text": "@georgeclaghorn It's working! Removed the gem, removed chromedriver from rbenv shims, installed it directly into bin/ and it works now. Thanks.", "created_at": "2017-12-23 18:59:46", "user": 78363, "id": 353742568}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {}, "text": "[ci skip]\r\n\r\nAddresses #31512", "labels": [], "number": 31545, "updated_at": "2017-12-23 14:24:19", "user": 6445917, "closed_at": "2017-12-23 14:23:31", "id": 284252825, "title": "[docs] Add mention of removal of HWIA interface from `AC:Parameters`", "url": "https://api.github.com/repos/rails/rails/issues/31545", "created_at": "2017-12-22 21:11:55", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353675249", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @eileencodes (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-22 21:11:59", "user": 7468109, "id": 353675249}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353728618", "text": "Thanks!", "created_at": "2017-12-23 14:24:19", "user": 12642, "id": 353728618}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nThis adds support for MiniMagick's `combine_options`. It's needed when transformations\r\ncan't be applied sequentially, but need to be applied in the same step, e.g. center-weighted\r\ncropping.\r\n\r\nBelongs to #31518.", "labels": ["activestorage"], "number": 31544, "updated_at": "2017-12-22 20:26:38", "user": 3011, "closed_at": "2017-12-22 20:26:30", "id": 284193532, "title": "Add support for combined MiniMagick transformations", "url": "https://api.github.com/repos/rails/rails/issues/31544", "created_at": "2017-12-22 15:47:56", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353623145", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @eileencodes (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-22 15:47:58", "user": 7468109, "id": 353623145}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353669495", "text": "Thanks for the PR!", "created_at": "2017-12-22 20:26:38", "user": 1080678, "id": 353669495}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Bundler 1.16.1 fixed https://github.com/bundler/bundler/issues/6072.\r\n\r\nI believe RubyGems 2.6 and Bundler 1.16.1 works fine with Rails master.", "labels": [], "number": 31543, "updated_at": "2017-12-22 14:56:09", "user": 12301, "closed_at": "2017-12-22 14:56:09", "id": 284162812, "title": "Relax bundler version on Travis CI", "url": "https://api.github.com/repos/rails/rails/issues/31543", "created_at": "2017-12-22 13:24:50", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353597937", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @pixeltrix (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-22 13:25:02", "user": 7468109, "id": 353597937}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353598063", "text": "/cc @rafaelfranca This branch is same as https://github.com/rails/rails/commit/24ece037b8abbd77accf6c4d766d1dcc231388af", "created_at": "2017-12-22 13:25:51", "user": 12301, "id": 353598063}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353600829", "text": "#31039 should be reverted to using Bundler 1.16.1.\r\nOtherwise testing https://github.com/rails/rails/tree/master/guides/bug_report_templates still be failed.\r\nhttps://travis-ci.org/rails/rails/jobs/320218683#L1132", "created_at": "2017-12-22 13:43:16", "user": 12642, "id": 353600829}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353604805", "text": "@kamipo Thanks for your point. I revert it and push now.", "created_at": "2017-12-22 14:07:57", "user": 12301, "id": 353604805}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\n\r\n```ruby\r\nclass User < ActiveRecord::Base\r\n  has_one_attached :avatar\r\nend\r\n\r\nuser_params = { \r\n  avatar: ActionDispatch::Http::UploadedFile.new(tempfile: Tempfile.new, filename: 'a.txt'),\r\n  updated_at: Time.now,\r\n}\r\n\r\nuser = User.first\r\nuser.attributes = user_params\r\nuser.save # => ActiveRecord::StaleObjectError: Attempted to touch a stale object: User.\r\n```\r\n\r\n### System configuration\r\n\r\n**Rails version**: 5.2.0.beta2@0901755\r\n\r\n**Ruby version**: 2.5.0rc1\r\n", "labels": ["activestorage"], "number": 31542, "updated_at": "2018-01-09 06:17:12", "user": 378625, "closed_at": "2018-01-08 19:37:40", "id": 284134163, "title": "ActiveStorage attribute conflicts with `save` by optimistic locking", "url": "https://api.github.com/repos/rails/rails/issues/31542", "created_at": "2017-12-22 10:56:18", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354679790", "text": "I can’t reproduce in a fresh application running latest master. Can you build a small sample application that reproduces the error?", "created_at": "2018-01-01 21:50:51", "user": 94129, "id": 354679790}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/354713733", "text": "Sure. Check out https://github.com/swordray/demo. It is a rails master project with User model and controller. While I send a users#update request from browser, I got following logs.\r\n\r\n```\r\nStarted PATCH \"/users/1.json\" for 127.0.0.1 at 2018-01-02 15:24:51 +0800\r\nProcessing by UsersController#update as JSON\r\n  Parameters: {\"user\"=>{\"avatar\"=>#<ActionDispatch::Http::UploadedFile:0x00007ffa45ddcc68 @tempfile=#<Tempfile:/var/folders/_n/d6lznfcd4jq_xtj4dcrdv0_c0000gn/T/RackMultipart20180102-84816-1itylp3.txt>, @original_filename=\"a.txt\", @content_type=\"text/plain\", @headers=\"Content-Disposition: form-data; name=\\\"user[avatar]\\\"; filename=\\\"a.txt\\\"\\r\\nContent-Type: text/plain\\r\\n\">, \"updated_at\"=>\"2018-01-01\"}, \"id\"=>\"1\"}\r\n  User Load (0.2ms)  SELECT  \"users\".* FROM \"users\" ORDER BY \"users\".\"id\" ASC LIMIT ?  [[\"LIMIT\", 1]]\r\n  ActiveStorage::Attachment Load (0.1ms)  SELECT  \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?  [[\"record_id\", 1], [\"record_type\", \"User\"], [\"name\", \"avatar\"], [\"LIMIT\", 1]]\r\n  ActiveStorage::Blob Load (0.1ms)  SELECT  \"active_storage_blobs\".* FROM \"active_storage_blobs\" WHERE \"active_storage_blobs\".\"id\" = ? LIMIT ?  [[\"id\", 2], [\"LIMIT\", 1]]\r\n   (0.0ms)  begin transaction\r\n  ActiveStorage::Attachment Destroy (0.4ms)  DELETE FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"id\" = ?  [[\"id\", 2]]\r\n  User Load (0.1ms)  SELECT  \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?  [[\"id\", 1], [\"LIMIT\", 1]]\r\n  Disk Storage (1.0ms) Uploaded file to key: eKSnxxW7UqvYsYicgMsSZLXg (checksum: 1B2M2Y8AsgTpgAmY7PhCfg==)\r\n  ActiveStorage::Blob Create (0.2ms)  INSERT INTO \"active_storage_blobs\" (\"key\", \"filename\", \"content_type\", \"byte_size\", \"checksum\", \"created_at\") VALUES (?, ?, ?, ?, ?, ?)  [[\"key\", \"eKSnxxW7UqvYsYicgMsSZLXg\"], [\"filename\", \"a.txt\"], [\"content_type\", \"text/plain\"], [\"byte_size\", 0], [\"checksum\", \"1B2M2Y8AsgTpgAmY7PhCfg==\"], [\"created_at\", \"2018-01-02 07:24:51.499106\"]]\r\n  ActiveStorage::Attachment Create (0.1ms)  INSERT INTO \"active_storage_attachments\" (\"name\", \"record_type\", \"record_id\", \"blob_id\", \"created_at\") VALUES (?, ?, ?, ?, ?)  [[\"name\", \"avatar\"], [\"record_type\", \"User\"], [\"record_id\", 1], [\"blob_id\", 3], [\"created_at\", \"2018-01-02 07:24:51.500812\"]]\r\n  User Update All (0.1ms)  UPDATE \"users\" SET \"updated_at\" = '2018-01-02 07:24:51.497410', \"lock_version\" = 4 WHERE \"users\".\"id\" = ? AND \"users\".\"lock_version\" = ?  [[\"id\", 1], [\"lock_version\", 3]]\r\n   (6.5ms)  commit transaction\r\n[ActiveJob] Enqueued ActiveStorage::AnalyzeJob (Job ID: 389fe784-c349-4c22-9e24-deb1d316706c) to Async(default) with arguments: #<GlobalID:0x00007ffa43e683a0 @uri=#<URI::GID gid://demo/ActiveStorage::Blob/3>>\r\n[ActiveJob] Enqueued ActiveStorage::PurgeJob (Job ID: 1597eda4-3868-437a-afa1-261ff9ee3c23) to Async(default) with arguments: #<GlobalID:0x00007ffa44c17f78 @uri=#<URI::GID gid://demo/ActiveStorage::Blob/2>>\r\n   (0.1ms)  begin transaction\r\n  ActiveStorage::Blob Load (0.2ms)  SELECT  \"active_storage_blobs\".* FROM \"active_storage_blobs\" WHERE \"active_storage_blobs\".\"id\" = ? LIMIT ?  [[\"id\", 3], [\"LIMIT\", 1]]\r\n  User Update All (0.1ms)  UPDATE \"users\" SET \"updated_at\" = '2018-01-01 00:00:00', \"lock_version\" = 4 WHERE \"users\".\"id\" = ? AND \"users\".\"lock_version\" = ?  [[\"id\", 1], [\"lock_version\", 3]]\r\n   (0.1ms)  rollback transaction\r\n  ActiveStorage::Blob Load (0.1ms)  SELECT  \"active_storage_blobs\".* FROM \"active_storage_blobs\" WHERE \"active_storage_blobs\".\"id\" = ? LIMIT ?  [[\"id\", 2], [\"LIMIT\", 1]]\r\nCompleted 409 Conflict in 22ms (ActiveRecord: 8.1ms)\r\n\r\n\r\n\r\n[ActiveJob] [ActiveStorage::AnalyzeJob] [389fe784-c349-4c22-9e24-deb1d316706c] Performing ActiveStorage::AnalyzeJob (Job ID: 389fe784-c349-4c22-9e24-deb1d316706c) from Async(default) with arguments: #<GlobalID:0x00007ffa43ea2b18 @uri=#<URI::GID gid://demo/ActiveStorage::Blob/3>>\r\n[ActiveJob] [ActiveStorage::AnalyzeJob] [389fe784-c349-4c22-9e24-deb1d316706c]    (0.1ms)  begin transaction\r\n[ActiveJob] [ActiveStorage::AnalyzeJob] [389fe784-c349-4c22-9e24-deb1d316706c]   ActiveStorage::Blob Update (0.3ms)  UPDATE \"active_storage_blobs\" SET \"metadata\" = ? WHERE \"active_storage_blobs\".\"id\" = ?  [[\"metadata\", \"{\\\"analyzed\\\":true}\"], [\"id\", 3]]\r\n[ActiveJob] [ActiveStorage::PurgeJob] [1597eda4-3868-437a-afa1-261ff9ee3c23] Performing ActiveStorage::PurgeJob (Job ID: 1597eda4-3868-437a-afa1-261ff9ee3c23) from Async(default) with arguments: #<GlobalID:0x00007ffa4a8c1670 @uri=#<URI::GID gid://demo/ActiveStorage::Blob/2>>\r\nActiveRecord::StaleObjectError (Attempted to update a stale object: User.):\r\n[ActiveJob] [ActiveStorage::AnalyzeJob] [389fe784-c349-4c22-9e24-deb1d316706c]    (1.0ms)  commit transaction\r\n\r\n[ActiveJob] [ActiveStorage::AnalyzeJob] [389fe784-c349-4c22-9e24-deb1d316706c] Performed ActiveStorage::AnalyzeJob (Job ID: 389fe784-c349-4c22-9e24-deb1d316706c) from Async(default) in 9.41ms\r\napp/controllers/users_controller.rb:7:in `update'\r\n[ActiveJob] [ActiveStorage::PurgeJob] [1597eda4-3868-437a-afa1-261ff9ee3c23]   Disk Storage (0.3ms) Deleted file from key: g6V6KsDUYVDTEDWiYvysyBFo\r\n[ActiveJob] [ActiveStorage::PurgeJob] [1597eda4-3868-437a-afa1-261ff9ee3c23]    (0.1ms)  begin transaction\r\n[ActiveJob] [ActiveStorage::PurgeJob] [1597eda4-3868-437a-afa1-261ff9ee3c23]   ActiveStorage::Attachment Load (0.2ms)  SELECT  \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?  [[\"record_id\", 2], [\"record_type\", \"ActiveStorage::Blob\"], [\"name\", \"preview_image\"], [\"LIMIT\", 1]]\r\n[ActiveJob] [ActiveStorage::PurgeJob] [1597eda4-3868-437a-afa1-261ff9ee3c23]   ActiveStorage::Blob Destroy (0.5ms)  DELETE FROM \"active_storage_blobs\" WHERE \"active_storage_blobs\".\"id\" = ?  [[\"id\", 2]]\r\n[ActiveJob] [ActiveStorage::PurgeJob] [1597eda4-3868-437a-afa1-261ff9ee3c23]    (2.6ms)  commit transaction\r\n[ActiveJob] [ActiveStorage::PurgeJob] [1597eda4-3868-437a-afa1-261ff9ee3c23] Performed ActiveStorage::PurgeJob (Job ID: 1597eda4-3868-437a-afa1-261ff9ee3c23) from Async(default) in 43.43ms\r\n```", "created_at": "2018-01-02 07:27:21", "user": 378625, "id": 354713733}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356072999", "text": "@swordray, can you confirm that 93e6a0e fixes your issue?", "created_at": "2018-01-08 19:38:32", "user": 94129, "id": 356072999}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356191022", "text": "@georgeclaghorn Yes. Thank you.", "created_at": "2018-01-09 06:17:12", "user": 378625, "id": 356191022}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"+1": [13203]}, "text": "### Summary\r\n\r\nRubyGems 2.7 promote bundler-1.16 to default gems. It conflicts Travis environment and user installed bundler.\r\n\r\nI'm investigating RubyGems updater and bundler both. (I also maintain them.)\r\n\r\n### Other Information\r\n\r\nThis pr fixes https://travis-ci.org/rails/rails/builds/319911098\r\n\r\n/cc @rafaelfranca ", "labels": [], "number": 31541, "updated_at": "2017-12-22 10:05:16", "user": 12301, "closed_at": "2017-12-22 10:02:31", "id": 284108259, "title": "Temporary disabled using rubygems 2.7.", "url": "https://api.github.com/repos/rails/rails/issues/31541", "created_at": "2017-12-22 08:57:06", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353553214", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @rafaelfranca (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-22 08:57:08", "user": 7468109, "id": 353553214}, {"reactions": {"heart": [12642]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353559465", "text": "@kamipo done!\r\n\r\nI'll try to resolve this issue on RubyGems.", "created_at": "2017-12-22 09:32:13", "user": 12301, "id": 353559465}], "assignees": [47848, 47848], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Direct upload on ie11 is not working because the response of the XMLHttpRequest is a string when `xhr.responseType` is set to `\"json\"` (see https://connect.microsoft.com/IE/feedback/details/794808).\r\nParsing the response using `JSON.parse` when the response is a string solves the issue.\r\n\r\nMy javascript skills are a bit \"rusty\", let me know if you see a better way to implement this fix. \r\n\r\nCloses #31531 \r\n\r\n\r\n", "labels": [], "number": 31540, "updated_at": "2017-12-25 16:08:02", "user": 337347, "closed_at": "2017-12-23 16:24:08", "id": 284101544, "title": "Fix activestorage direct upload on ie11", "url": "https://api.github.com/repos/rails/rails/issues/31540", "created_at": "2017-12-22 08:22:15", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353547459", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @pixeltrix (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-22 08:22:25", "user": 7468109, "id": 353547459}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353675186", "text": "cc @javan", "created_at": "2017-12-22 21:11:19", "user": 94129, "id": 353675186}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353736919", "text": "Thank you! I went with a slightly different implementation ", "created_at": "2017-12-23 17:00:23", "user": 5355, "id": 353736919}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353877949", "text": "@javan Yep, I saw that. It's much cleaner :+1:", "created_at": "2017-12-25 16:08:01", "user": 337347, "id": 353877949}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "This references the following RAILS issue that has a sample application and\r\nfurther expands upon the content of this pull request:\r\nhttps://github.com/rails/rails/issues/31476\r\n\r\nThis fix is a bit hacky as the way subdirectories are handled needs to be\r\ncleaned up. Essentially the issue boils down to the following:\r\n\r\n* In order to support multiple engine mount points, a function is run to strip\r\naway the last \"/\" of an engine's path. Without a subdirectory, this would be\r\nthe engine name (ie. \"/myengine\") if a value existed there.\r\n\r\n* However, with a subdirectory configured there, that last value isn't always\r\nthe engine name. Rather, it can be the subdirectory itself if the engine is\r\nmounted to the root path. An example of this would be something like\r\n\"/subdirectory\" that then causes that method to incorrectly remove\r\nthe \"subdirectory\" value. (NOTE: This did not effect non-root engines as the\r\nlogic would still work for them, ie: \"/subdirectory/myengine\" would correctly\r\nremove the \"myengine\" mount point).\r\n\r\n* This fix checks the setting \"relative_url_root\" and prevents that value from\r\nbeing stripped out if the engine reports itself to be mounted at \"/\". This could\r\npotentially break an engine mounted at \"/\" and \"/myengine\" but I don't believe\r\nit would.\r\n\r\n* I added a Unit Test based on one that already existed for this use case. I\r\nfurther added a note about what they are testing as they only return the paths\r\ncorrectly rather than resolve them correctly. I'm unsure how to correct that\r\nexisting limitation of the test as I'm not familiar with Rails routing logic\r\nbeyond this debugging.\r\n\r\nThanks!\r\n\r\n### Summary\r\n\r\nProvide a general description of the code changes in your pull\r\nrequest... were there any bugs you had fixed? If so, mention them. If\r\nthese bugs have open GitHub issues, be sure to tag them here as well,\r\nto keep the conversation linked together.\r\n\r\n### Other Information\r\n\r\nIf there's anything else that's important and relevant to your pull\r\nrequest, mention that information here. This could include\r\nbenchmarks, or other information.\r\n\r\nIf you are updating any of the CHANGELOG files or are asked to update the\r\nCHANGELOG files by reviewers, please add the CHANGELOG entry at the top of the file.\r\n\r\nFinally, if your pull request affects documentation or any non-code\r\nchanges, guidelines for those changes are [available\r\nhere](http://guides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)\r\n\r\nThanks for contributing to Rails!\r\n", "labels": [], "number": 31539, "updated_at": "2017-12-22 16:48:30", "user": 786466, "closed_at": "None", "id": 284028947, "title": "Fix root engine URL helpers not generating with a subdirectory", "url": "https://api.github.com/repos/rails/rails/issues/31539", "created_at": "2017-12-21 23:02:43", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353479535", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @schneems (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-21 23:02:46", "user": 7468109, "id": 353479535}], "assignees": [59744, 59744], "state": "open", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\n* I've added cloud service's links to README of Active Storage (For people who don't have enough knowledge about each cloud service.)\r\n* If you feel commercial, please reject this request.", "labels": [], "number": 31538, "updated_at": "2017-12-22 20:39:49", "user": 15371677, "closed_at": "2017-12-22 20:26:58", "id": 284013268, "title": "Add cloud service's links to README of Active Storage [ci skip]", "url": "https://api.github.com/repos/rails/rails/issues/31538", "created_at": "2017-12-21 21:45:13", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353465431", "text": "r? @pixeltrix\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2017-12-21 21:45:15", "user": 7468109, "id": 353465431}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\n*  I found that `options` is not passed to inside method. So I've fixed it.", "labels": [], "number": 31537, "updated_at": "2017-12-21 21:04:28", "user": 15371677, "closed_at": "2017-12-21 21:00:11", "id": 283996982, "title": "Pass options to rails_blob_url", "url": "https://api.github.com/repos/rails/rails/issues/31537", "created_at": "2017-12-21 20:34:27", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353451372", "text": "r? @kaspth\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2017-12-21 20:34:29", "user": 7468109, "id": 353451372}], "assignees": [350807, 350807], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\n* The url for `ActiveStorage::Variant` is resolved on [routing](https://github.com/rails/rails/blob/master/activestorage/config/routes.rb#L24). So I've removed `url_for` from a document of `ActiveStorage::Variant`.\r\n* On the [example codes](https://github.com/rails/rails/blob/master/activestorage/README.md#examples) in README, `url_for` is not used.", "labels": [], "number": 31536, "updated_at": "2017-12-21 20:34:59", "user": 15371677, "closed_at": "2017-12-21 20:32:33", "id": 283993963, "title": "[ci skip] Remove needless  from doc for ActiveStorage::Variant", "url": "https://api.github.com/repos/rails/rails/issues/31536", "created_at": "2017-12-21 20:22:37", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353448917", "text": "r? @sgrif\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2017-12-21 20:22:40", "user": 7468109, "id": 353448917}], "assignees": [1529387, 1529387], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Add a method for deselecting a specific column from a relation, for the instance where you don't need a particularly large column but don't want to list each individual column that should be selected besides that one. Additionally provide the ability to select each column name individually through `relation.select`, which grants speed improvements on certain backends.\r\n\r\nNoticed that this also gives particularly good memory gains (in addition to speed) when there's a blob column that takes up a lot of space. ", "labels": [], "number": 31535, "updated_at": "2017-12-21 20:24:17", "user": 5093358, "closed_at": "2017-12-21 20:00:21", "id": 283983881, "title": "relation.select.not", "url": "https://api.github.com/repos/rails/rails/issues/31535", "created_at": "2017-12-21 19:40:12", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353439660", "text": "r? @sgrif\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2017-12-21 19:40:15", "user": 7468109, "id": 353439660}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353444396", "text": "Thank you for the pull request but I don't think this needs a new method in Rails with a complex API and implementation like this one. `User.select(User.columns_name - [name])` should work.", "created_at": "2017-12-21 20:00:21", "user": 47848, "id": 353444396}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353445686", "text": "I appreciate the quick response, just to defend a little bit to see if I can convince you:\r\n\r\nThe purpose of this is common enough if people are paying attention to memory bloat or unnecessarily selected columns. It seems like a natural extension of `#accessed_fields` to then be able to go back in and deselect the ones you don't want.\r\n\r\nAlso as to the complexity of the API, I pretty much copied the exact style of `WhereChain`, in order to make it feel like a natural extension of the already existing toolset in AR.", "created_at": "2017-12-21 20:06:47", "user": 5093358, "id": 353445686}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353446631", "text": "`select` is the natural extension of `#accessed_fields`. Since `#accessed_fields` will give you something like `[:title, :age]` you can select only then instead of inverting the result of `#accessed_fields` and using in a `select.not(:name)` clause.", "created_at": "2017-12-21 20:11:42", "user": 47848, "id": 353446631}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353447777", "text": "I agree with that, but it's very difficult to read if you accessed more than 3 or 4 columns, as in `User.select(:id, :first_name, :last_name, :created_at, :updated_at)` when really you just want `User.select.not(:serialized_blob)`", "created_at": "2017-12-21 20:17:25", "user": 5093358, "id": 353447777}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353448846", "text": "That also has the risk of selecting a new column that is not being accessed in that action, decreasing the memory gain.\r\n\r\nLike I said, if you want that blacklist instead of whitelist, you can do `User.select(User.column_names - ['serialized_blob'])`. There is no need for a new API.", "created_at": "2017-12-21 20:22:21", "user": 47848, "id": 353448846}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353449226", "text": "Okay - thanks for the feedback.", "created_at": "2017-12-21 20:24:15", "user": 5093358, "id": 353449226}], "assignees": [1529387, 1529387], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "For the complete discussion see https://github.com/rails/rails/pull/31315\r\nCloses #31315\r\n\r\nThis is an alternative implementation as suggested by @kaspth in \r\nhttps://github.com/rails/rails/pull/31315#issuecomment-352527652\r\n\r\n@kaspth -- Is this what you intended? Am I missing anything? What kind of tests should I add?\r\n\r\n\r\nFor the template files, I have copied/pasted https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/middleware/templates/rescues/diagnostics.html.erb and then added the `if` statement.", "labels": ["activestorage"], "number": 31534, "updated_at": "2018-01-09 19:59:30", "user": 10076, "closed_at": "2018-01-09 19:59:05", "id": 283982256, "title": "Don't include Active Storage migrations in new apps", "url": "https://api.github.com/repos/rails/rails/issues/31534", "created_at": "2017-12-21 19:33:29", "comments": [], "assignees": [], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Summary\r\n\r\nIn the Lumosity.com codebase, our sign up form renders a birthdate field using the `date_select` helper. We purposely exclude the year field because we prefer a free-form text field instead of a dropdown list. Our code looks something like this:\r\n\r\n```ruby\r\ndate_select @user, :date_of_birth, { order: [:month, :day] }\r\n```\r\n\r\nWe then render the year field by hand and give it the expected ID, i.e. `user_date_of_birth_1i`. This has worked as intended for quite some time even though two input elements with the same ID are getting rendered to the page. This happens because `date_select` will render \"discarded\" elements as hidden input tags instead of omitting them (the year is marked as discarded because it does not appear in the `:order` array).\r\n\r\nIt came as a surprise to all of us when we saw this error message in Chrome yesterday:\r\n\r\n![34233468-75b01a38-e59a-11e7-944c-9ecdf30b73f2](https://user-images.githubusercontent.com/575280/34271184-11f3aa86-e640-11e7-909f-2bbf2bd0d9e9.png)\r\n\r\n### The Fix\r\n\r\nThis PR adds the `render_discarded` option to `date_select`. You can set it to false to skip rendering discarded fields altogether. This seemed easier to support than an option to render the year field as a text input type. The default behavior is also maintained - omitting the `render_discarded` option will cause discarded fields to be rendered as hidden inputs as they are now.\r\n\r\n### Other Information\r\n\r\nWe're using Rails 4.2 and Ruby 2.4.3 (currently working on the upgrade to Rails 5.0). We have monkeypatched in the `render_discarded` option for now with the following code:\r\n\r\n```ruby\r\nmodule ActionView\r\n  # ActionView's date_select helper provides the option to \"discard\" certain fields. Discarded\r\n  # fields are (confusingly) still rendered to the page using hidden inputs, i.e.\r\n  # <input type=\"hidden\" />. This patch adds an additional option to the date_select helper\r\n  # that allows the caller to skip rendering the chosen fields altogether. For example, to\r\n  # render all but the year field, you might have this in one of your views:\r\n  #\r\n  # date_select(:date_of_birth, order: [:month, :day])\r\n  #\r\n  # or, equivalently:\r\n  #\r\n  # date_select(:date_of_birth, discard_year: true)\r\n  #\r\n  # To avoid rendering the year field altogether, set :render_discarded to false:\r\n  #\r\n  # date_select(:date_of_birth, discard_year: true, render_discarded: false)\r\n  #\r\n  # Since this is a monkeypatch messing around inside Rails' internals, there's a chance it\r\n  # could fail to work in future versions of the framework. Measures have been taken to bail\r\n  # out if the right conditions aren't met.\r\n  #\r\n  module RenderDiscarded\r\n    def self.apply_patch\r\n      # make sure the class we want to patch exists\r\n      const = begin\r\n        Kernel.const_get('ActionView::Helpers::DateTimeSelector')\r\n      rescue NameError\r\n      end\r\n\r\n      # make sure the method we want to overwrite actually exists\r\n      mtd = if const\r\n        begin\r\n          const.instance_method(:build_hidden)\r\n        rescue NameError\r\n        end\r\n      end\r\n\r\n      # method should have an arity of 2 (i.e. accept 2 arguments)\r\n      # avoid patching more than once by checking the ancestor chain\r\n      if const && mtd && mtd.arity == 2 && !const.ancestors.include?(RenderDiscarded)\r\n        # actually patch the helper class\r\n        const.prepend(RenderDiscarded)\r\n      else\r\n        puts \"WARNING: Something went wrong patching actionview's date_select helper. \"\\\r\n          \"Please investigate #{__FILE__}:#{__LINE__}. Falling back to original behavior.\"\r\n      end\r\n    end\r\n\r\n    private\r\n\r\n    def build_hidden(type, value)\r\n      # :render_discarded is an additional option you can pass to the date_select helper in\r\n      # your views. Use it to avoid rendering \"discarded\" fields, i.e. fields marked as discarded\r\n      # or simply not included in date_select's :order array. For example, specifying\r\n      # order: [:day, :month] will cause the helper to \"discard\" the :year field. Discarding a\r\n      # field renders it as a hidden input. Set :render_discarded to false to avoid rendering\r\n      # it altogether.\r\n      if @options.fetch(:render_discarded, true)\r\n        super\r\n      else\r\n        ''\r\n      end\r\n    end\r\n  end\r\n\r\n  RenderDiscarded.apply_patch\r\nend\r\n```", "labels": [], "number": 31533, "updated_at": "2018-01-09 13:03:30", "user": 575280, "closed_at": "2018-01-08 16:10:16", "id": 283980291, "title": "Add :render_discarded option to date_helper", "url": "https://api.github.com/repos/rails/rails/issues/31533", "created_at": "2017-12-21 19:25:15", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353436317", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @eileencodes (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-21 19:25:18", "user": 7468109, "id": 353436317}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353468027", "text": "Not sure what's going on with the Travis tests...", "created_at": "2017-12-21 21:58:44", "user": 575280, "id": 353468027}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353484906", "text": "Not your fault. Bundler 1.16.1 is breaking our entire CI so we need to deal with that before merging anything 😢", "created_at": "2017-12-21 23:38:13", "user": 1080678, "id": 353484906}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353512576", "text": "I'm not sure this is worth adding an option for.. can't you fix it by just changing the `id` on your field?", "created_at": "2017-12-22 03:16:12", "user": 1034, "id": 353512576}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353656548", "text": "@matthewd I suppose this would make a little more sense if Rails did anything to help you assemble a `Date` from the form params, but even considering that I think there are some benefits to the `render_discarded` approach. The biggest one is consistency. Choosing a different ID for the field is certainly doable but leaves you with inconsistently named fields and form params. Since the discarded fields are simply hidden inputs, they will be sent along with the request, meaning you'll have something like `date_of_birth(1i)`, `date_of_birth(2i)`, `date_of_birth(3i)`, and `date_of_birth_year` (or whatever) in your post body. As a programmer coming to the code base later, I would expect `date_of_birth(1i)` to contain the year and would be surprised at the existence of `date_of_birth_year`. It was surprising to me that rails renders hidden inputs for discarded fields in the first place.", "created_at": "2017-12-22 18:57:27", "user": 575280, "id": 353656548}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356011177", "text": "Thanks for taking the time to open a PR @camertron \r\n\r\nI'm not sure this is a feature we want and I'm having a hard time parsing the use case. Why are you discarding the `year` field and then re-displaying it in a new field with the ID Rails would generate? I this this isn't a common case and it makes sense to me that Rails is hiding the date field and you can't reuse the ID that Rails would use here. If you want to display a separate `year` field then the ID you choose for it shouldn't be the one Rails would generate. \r\n\r\nI'm going to close for now but please correct me if I'm wrong in my understanding of your problem.", "created_at": "2018-01-08 16:10:15", "user": 1080678, "id": 356011177}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356183152", "text": "@eileencodes you're right, it's probably not a common use-case. In my opinion the real fix would be to not display a year field at all, hidden or otherwise, since all that does is send (confusing) data back to the server. Another potential fix would be to add an option that would allow the caller to choose what type of field gets rendered, i.e. text or dropdown.\r\n\r\nAnyway, no worries about closing. Just thought I'd contribute back. Thanks for your time and for all you do for Rails!", "created_at": "2018-01-09 05:19:58", "user": 575280, "id": 356183152}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/356277989", "text": "Usually our fields match the database and my guess would be since you have a datetime field in your db we have to send a year. If you don't need a year maybe it makes more sense to have multiple columns in your db (month and day)?\r\n\r\nI hope you feel free to contribute in the future! While I didn't merge this PR I appreciate you taking the time to work on it and talk about it's use case.", "created_at": "2018-01-09 13:03:30", "user": 1080678, "id": 356277989}], "assignees": [1080678, 1080678], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "Conditional callbacks description added to `Active Record Callbacks` guides page.", "labels": [], "number": 31532, "updated_at": "2017-12-21 19:19:17", "user": 9665395, "closed_at": "2017-12-21 19:08:19", "id": 283934462, "title": "Add conditional callbacks description to Active Record Callbacks guides page", "url": "https://api.github.com/repos/rails/rails/issues/31532", "created_at": "2017-12-21 16:26:28", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353394270", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @pixeltrix (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-21 16:26:43", "user": 7468109, "id": 353394270}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353432391", "text": "Not sure this belongs to this guide. This is basically the documentation of `with_options` and that method is useful for a bunch of things not only callbacks. That being said adding this new section in this guide only to talk about the usage of an unrelated method that is already documented in other places seems unnecessary to me.\r\n\r\nThank you for the pull request.", "created_at": "2017-12-21 19:08:19", "user": 47848, "id": 353432391}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353434962", "text": "@rafaelfranca I just saw that there is that kind of documentation in the Validations guides and thought it would be good if it will be inside Callbacks guide too.", "created_at": "2017-12-21 19:19:17", "user": 9665395, "id": 353434962}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "### Steps to reproduce\r\nUsing Active Storage, upload a file directly to a service (tested with local and s3) using Internet Explorer 11.\r\n\r\n### Expected behavior\r\nThe file should be properly uploaded via javascript directly to the service.\r\n\r\n### Actual behavior\r\nA `Unable to get property 'url' of undefined or null reference` is thrown:\r\n<img width=\"511\" alt=\"screen shot 2017-12-21 at 11 06 16\" src=\"https://user-images.githubusercontent.com/337347/34261387-4ce0fbc0-e669-11e7-9f10-25a4c05ec222.png\">\r\n\r\nThis is due to a bug in IE 11: when using a XMLHttpRequest with `xhr.responseType = \"json\"`, IE 11 will not automatically parse the response body (see [here](https://connect.microsoft.com/IE/feedback/details/794808)).\r\n\r\nThe faulty code line is [here](https://github.com/rails/rails/blob/master/activestorage/app/javascript/activestorage/blob_record.js#L33), when the property `direct_upload` is read from the `response`, an `undefined` is returned since `reponse` is a string and not an object.\r\n\r\nI did workaround this by simply checking if the response body is a string and parse it with `JSON.parse`.\r\n\r\nI can submit this fix but I'm not sure if Active Storage should support IE 11 or not. If that's not the case, feel free to close this issue.\r\n\r\n### System configuration\r\n**Rails version**:\r\n5.2.0.alpha 5c7e59a\r\n\r\n**Ruby version**:\r\nruby 2.4.2", "labels": ["activestorage"], "number": 31531, "updated_at": "2017-12-23 16:24:08", "user": 337347, "closed_at": "2017-12-23 16:24:07", "id": 283915878, "title": "Active Storage Direct Upload using IE11", "url": "https://api.github.com/repos/rails/rails/issues/31531", "created_at": "2017-12-21 15:25:23", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353457547", "text": "@10io IE11 is the latest version of IE, right? I'm pretty sure that, in that case, ActiveSupport supports/should-support IE11. (I'm no rails maintainer.)\r\nI'd suggest that you create a PR.", "created_at": "2017-12-21 21:05:24", "user": 67437, "id": 353457547}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"+1": [11358371, 10044143, 807084]}, "text": "### Summary\r\n\r\nRemoves the hardcoded OS specific directory separator.\r\n\r\n### Other Information\r\n\r\nAlthough most OS use `/` as a directory separator, this is not something 100% universal. For that reason, it may be appropriate to delegate the task of building the route to the class `Pathname`.", "labels": [], "number": 31530, "updated_at": "2017-12-21 04:26:20", "user": 5655861, "closed_at": "2017-12-21 03:55:31", "id": 283748821, "title": "Removes OS specific directory separator", "url": "https://api.github.com/repos/rails/rails/issues/31530", "created_at": "2017-12-21 01:48:09", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353234950", "text": "Thanks for the pull request, and welcome! The Rails team is excited to review your changes, and you should hear from @sgrif (or someone else) soon.\n\nIf any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.\n\nThis repository is being automatically checked for code quality issues using <a href=\"https://codeclimate.com\">Code Climate</a>. You can see results for this analysis in the PR status below. Newly introduced issues should be fixed before a Pull Request is considered ready to review.\n\nPlease see [the contribution instructions](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for more information.\n", "created_at": "2017-12-21 01:48:20", "user": 7468109, "id": 353234950}], "assignees": [1529387, 1529387], "state": "closed", "is-pull-request": true}
{"reactions": {}, "text": "I have created a new rails project and I have added a migration to create a table called `blogs`. When I ran `rake db:migrate` it created this table along with other tables I have set in other projects I have in my laptop.\r\nUnder `db/migrate` I have only 1 file with the migration I added, there's no reference in the project of the other tables, for some reason it is pulling the migrations from other projects and adding it to my DB project\r\n\r\n\r\n\r\n### Expected behavior\r\nIt must run migrations that are under `db/migrate` in my current project\r\n### Actual behavior\r\nIt is running migrations under `db/migrate` of my current project and other projects.\r\n\r\n### System configuration\r\n**Rails version**:\r\n5.1.4\r\n**Ruby version**:\r\n2.4.1", "labels": ["needs work"], "number": 31529, "updated_at": "2017-12-23 23:37:41", "user": 17256207, "closed_at": "2017-12-23 23:37:41", "id": 283737191, "title": "rake db:migrate is creating tables from other rails projects in my laptop", "url": "https://api.github.com/repos/rails/rails/issues/31529", "created_at": "2017-12-21 00:31:49", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353269787", "text": "That's strange behavior. Does this behavior also happen after a reboot? My thought is that Spring could be running from one of the apps and things are getting mixed up.\r\n\r\nTry `bin/spring stop` and ensure that all instances are stopped `ps aux | grep spring`.", "created_at": "2017-12-21 06:33:15", "user": 635114, "id": 353269787}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353470628", "text": "Can you please provide a sample application that reproduces the issue?\r\nOr, please give us more information on how to reproduce this issue, otherwise, there is nothing we can do.\r\n\r\n", "created_at": "2017-12-21 22:11:52", "user": 987638, "id": 353470628}, {"reactions": {"+1": [635114]}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353754380", "text": "I fixed by stopping all `spring` instances. Thanks @kobaltz ", "created_at": "2017-12-23 23:37:41", "user": 17256207, "id": 353754380}], "assignees": [], "state": "closed", "is-pull-request": false}
{"reactions": {"+1": [906411, 78363, 703563, 3671088]}, "text": "### Steps to reproduce\r\n\r\n1. Create a Rails app\r\n2. Create an engine with the following route: `get '*path' => 'some#action'`\r\n3. Mount the engine: `mount MyEngine, at: 'myengine'`\r\n4. Visit `http://myapp.domain/myengine123`\r\n\r\n### Expected behavior\r\n\r\nIdeally there should be a way to enforce that only paths such as `/myengine/123` match the globbed route, but because Journey path normalization strips leading/trailing slashes, that's not possible.\r\n\r\n### Actual behavior\r\n\r\nThe route is dispatched to `some#action` when it should 404 (if the engineer desires).\r\n\r\n### System configuration\r\n\r\n**Rails version**: 5.1.4\r\n\r\n**Ruby version**: 2.4.1\r\n", "labels": ["stale"], "number": 31528, "updated_at": "2018-03-21 07:58:47", "user": 15338, "closed_at": "None", "id": 283736804, "title": "Engine with globbed path cannot require slash", "url": "https://api.github.com/repos/rails/rails/issues/31528", "created_at": "2017-12-21 00:29:17", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353226167", "text": "Sad update: It seems to mess up `request.fullpath` too. Given the situation described in the example above, a request to `/myengine123` would return `/myengine/123` for a call to `#fullpath`.", "created_at": "2017-12-21 00:53:22", "user": 15338, "id": 353226167}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/374858056", "text": "This issue has been automatically marked as stale because it has not been commented on for at least three months.\nThe resources of the Rails team are limited, and so we are asking for your help.\nIf you can still reproduce this error on the `5-1-stable` branch or on `master`, please reply with all of the information you have about it in order to keep the issue open.\nThank you for all your contributions.\n", "created_at": "2018-03-21 07:58:47", "user": 28418009, "id": 374858056}], "assignees": [], "state": "open", "is-pull-request": false}
{"reactions": {}, "text": "### Summary\r\n\r\n- Use `yaml_tag` instead of deprecated `yaml_as` pull request\r\nhas been merged to master at delayed_job, but not released yet.\r\nhttps://github.com/collectiveidea/delayed_job/pull/996\r\n\r\n- This fix should address `GEM=aj:integration` failure with `ruby-head`\r\nhttps://travis-ci.org/rails/rails/jobs/319148320\r\n\r\n", "labels": [], "number": 31527, "updated_at": "2017-12-28 18:48:45", "user": 73684, "closed_at": "2017-12-20 19:52:10", "id": 283658385, "title": "Use `delayed_job` master branch to support Ruby 2.5", "url": "https://api.github.com/repos/rails/rails/issues/31527", "created_at": "2017-12-20 18:41:08", "comments": [{"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353147545", "text": "r? @pixeltrix\n\n(@rails-bot has picked a reviewer for you, use r? to override)", "created_at": "2017-12-20 18:41:10", "user": 7468109, "id": 353147545}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353147749", "text": "Related to #30522", "created_at": "2017-12-20 18:41:54", "user": 73684, "id": 353147749}, {"reactions": {}, "url": "https://api.github.com/repos/rails/rails/issues/comments/353165957", "text": "Closing since there are failures reported https://travis-ci.org/rails/rails/jobs/319342694 \r\nI'd like newer version of `delayed_job`  released supporting Ruby 2.5.", "created_at": "2017-12-20 19:54:00", "user": 73684, "id": 353165957}], "assignees": [6321, 6321], "state": "closed", "is-pull-request": true}
